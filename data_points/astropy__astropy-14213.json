{
  "repo": "astropy/astropy",
  "instance_id": "astropy__astropy-14213",
  "base_commit": "a5ccc9522ca139df7a7cf4e2e506ffd288e55620",
  "patch": "diff --git a/astropy/units/quantity_helper/function_helpers.py b/astropy/units/quantity_helper/function_helpers.py\n--- a/astropy/units/quantity_helper/function_helpers.py\n+++ b/astropy/units/quantity_helper/function_helpers.py\n@@ -663,6 +663,12 @@ def _check_bins(bins, unit):\n         return bins\n \n \n+def _check_range(range, unit):\n+    range = _as_quantity(range)\n+    range = range.to_value(unit)\n+    return range\n+\n+\n @function_helper\n def histogram(a, bins=10, range=None, weights=None, density=None):\n     if weights is not None:\n@@ -676,6 +682,9 @@ def histogram(a, bins=10, range=None, weights=None, density=None):\n     if not isinstance(bins, str):\n         bins = _check_bins(bins, a.unit)\n \n+    if range is not None:\n+        range = _check_range(range, a.unit)\n+\n     if density:\n         unit = (unit or 1) / a.unit\n \n@@ -694,6 +703,9 @@ def histogram_bin_edges(a, bins=10, range=None, weights=None):\n     if not isinstance(bins, str):\n         bins = _check_bins(bins, a.unit)\n \n+    if range is not None:\n+        range = _check_range(range, a.unit)\n+\n     return (a.value, bins, range, weights), {}, a.unit, None\n \n \n@@ -725,6 +737,11 @@ def histogram2d(x, y, bins=10, range=None, weights=None, density=None):\n             bins = _check_bins(bins, x.unit)\n             y = y.to(x.unit)\n \n+    if range is not None:\n+        range = tuple(\n+            _check_range(r, unit) for (r, unit) in zip(range, (x.unit, y.unit))\n+        )\n+\n     if density:\n         unit = (unit or 1) / x.unit / y.unit\n \n@@ -773,6 +790,9 @@ def histogramdd(sample, bins=10, range=None, weights=None, density=None):\n             )\n         bins = [_check_bins(b, unit) for (b, unit) in zip(bins, sample_units)]\n \n+    if range is not None:\n+        range = tuple(_check_range(r, unit) for (r, unit) in zip(range, sample_units))\n+\n     if density:\n         unit = functools.reduce(operator.truediv, sample_units, (unit or 1))\n \n",
  "test_patch": "diff --git a/astropy/units/tests/test_quantity_non_ufuncs.py b/astropy/units/tests/test_quantity_non_ufuncs.py\n--- a/astropy/units/tests/test_quantity_non_ufuncs.py\n+++ b/astropy/units/tests/test_quantity_non_ufuncs.py\n@@ -1392,6 +1392,25 @@ def test_histogram(self):\n         with pytest.raises(u.UnitsError):\n             np.histogram(x.value, [125, 200] * u.s)\n \n+    @classmethod\n+    def _range_value(cls, range, unit):\n+        if isinstance(range, u.Quantity):\n+            return range.to_value(unit)\n+        else:\n+            return [cls._range_value(r, unit) for r in range]\n+\n+    @pytest.mark.parametrize(\"range\", [[2 * u.m, 500 * u.cm], [2, 5] * u.m])\n+    @needs_array_function\n+    def test_histogram_range(self, range):\n+        self.check(\n+            np.histogram,\n+            self.x,\n+            range=range,\n+            value_args=[self.x.value],\n+            value_kwargs=dict(range=self._range_value(range, self.x.unit)),\n+            expected_units=(None, self.x.unit),\n+        )\n+\n     @needs_array_function\n     def test_histogram_bin_edges(self):\n         x = np.array([1.1, 1.2, 1.3, 2.1, 5.1]) * u.m\n@@ -1411,6 +1430,15 @@ def test_histogram_bin_edges(self):\n         with pytest.raises(u.UnitsError):\n             np.histogram_bin_edges(x.value, [125, 200] * u.s)\n \n+    @pytest.mark.parametrize(\"range\", [[2 * u.m, 500 * u.cm], [2, 5] * u.m])\n+    @needs_array_function\n+    def test_histogram_bin_edges_range(self, range):\n+        out_b = np.histogram_bin_edges(self.x, range=range)\n+        expected_b = np.histogram_bin_edges(\n+            self.x.value, range=self._range_value(range, self.x.unit)\n+        )\n+        assert np.all(out_b.value == expected_b)\n+\n     @needs_array_function\n     def test_histogram2d(self):\n         x, y = self.x, self.y\n@@ -1481,6 +1509,31 @@ def test_histogram2d(self):\n         with pytest.raises(u.UnitsError):\n             np.histogram2d(x.value, y.value, [125, 200] * u.s)\n \n+    @pytest.mark.parametrize(\n+        argnames=\"range\",\n+        argvalues=[\n+            [[2 * u.m, 500 * u.cm], [1 * u.cm, 40 * u.mm]],\n+            [[200, 500] * u.cm, [10, 40] * u.mm],\n+            [[200, 500], [1, 4]] * u.cm,\n+        ],\n+    )\n+    @needs_array_function\n+    def test_histogram2d_range(self, range):\n+        self.check(\n+            np.histogram2d,\n+            self.x,\n+            self.y,\n+            range=range,\n+            value_args=[self.x.value, self.y.value],\n+            value_kwargs=dict(\n+                range=[\n+                    self._range_value(r, un)\n+                    for (r, un) in zip(range, (self.x.unit, self.y.unit))\n+                ]\n+            ),\n+            expected_units=(None, self.x.unit, self.y.unit),\n+        )\n+\n     @needs_array_function\n     def test_histogramdd(self):\n         # First replicates of the histogram2d tests, but using the\n@@ -1571,6 +1624,30 @@ def test_histogramdd(self):\n         with pytest.raises(u.UnitsError):\n             np.histogramdd(sample_values, ([125, 200] * u.s, [125, 200]))\n \n+    @pytest.mark.parametrize(\n+        argnames=\"range\",\n+        argvalues=[\n+            [[2 * u.m, 500 * u.cm], [1 * u.cm, 40 * u.mm]],\n+            [[200, 500] * u.cm, [10, 40] * u.mm],\n+            [[200, 500], [1, 4]] * u.cm,\n+        ],\n+    )\n+    @needs_array_function\n+    def test_histogramdd_range(self, range):\n+        self.check(\n+            np.histogramdd,\n+            (self.x, self.y),\n+            range=range,\n+            value_args=[(self.x.value, self.y.value)],\n+            value_kwargs=dict(\n+                range=[\n+                    self._range_value(r, un)\n+                    for (r, un) in zip(range, (self.x.unit, self.y.unit))\n+                ]\n+            ),\n+            expected_units=(None, (self.x.unit, self.y.unit)),\n+        )\n+\n     @needs_array_function\n     def test_correlate(self):\n         x1 = [1, 2, 3] * u.m\n",
  "problem_statement": "The `range` argument to `numpy.histogram`-like functions does not accept instances of `astropy.units.Quantity`\n<!-- This comments are hidden when you submit the issue,\r\nso you do not need to remove them! -->\r\n\r\n<!-- Please be sure to check out our contributing guidelines,\r\nhttps://github.com/astropy/astropy/blob/main/CONTRIBUTING.md .\r\nPlease be sure to check out our code of conduct,\r\nhttps://github.com/astropy/astropy/blob/main/CODE_OF_CONDUCT.md . -->\r\n\r\n<!-- Please have a search on our GitHub repository to see if a similar\r\nissue has already been posted.\r\nIf a similar issue is closed, have a quick look to see if you are satisfied\r\nby the resolution.\r\nIf not please go ahead and open an issue! -->\r\n\r\n<!-- Please check that the development version still produces the same bug.\r\nYou can install development version with\r\npip install git+https://github.com/astropy/astropy\r\ncommand. -->\r\n\r\n### Description\r\nWhen using `numpy.histogram()`, `numpy.histogram2d()`, etc. family of functions, with instances of `astropy.units.Quantity`, the `range` argument only accepts instances of `float`.\r\n\r\n### Expected behavior\r\nI would have expected that the `range` argument needs to be an instance of `astropy.units.Quantity` with compatible units.\r\n\r\n### Actual behavior\r\nAn `astropy.units.core.UnitConversionError` is raised if `range` is an instance of `astropy.units.Quantity`.\r\n\r\n### Steps to Reproduce\r\n<!-- Ideally a code example could be provided so we can run it ourselves. -->\r\n<!-- If you are pasting code, use triple backticks (```) around\r\nyour code snippet. -->\r\n<!-- If necessary, sanitize your screen output to be pasted so you do not\r\nreveal secrets like tokens and passwords. -->\r\n\r\n```python\r\n>>> import numpy as np\r\n>>> import astropy.units as u\r\n>>> a = np.random.random(21) * u.m\r\n>>> np.histogram(a, range=[.25, .75] * u.m)\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\royts\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 3378, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-8-4cd3ceb23e75>\", line 1, in <module>\r\n    np.histogram(a, range=[.2, .7] * u.m)\r\n  File \"<__array_function__ internals>\", line 200, in histogram\r\n  File \"C:\\Users\\royts\\Kankelborg-Group\\astropy\\astropy\\units\\quantity.py\", line 1844, in __array_function__\r\n    result = super().__array_function__(function, types, args, kwargs)\r\n  File \"C:\\Users\\royts\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\numpy\\lib\\histograms.py\", line 824, in histogram\r\n    keep = (tmp_a >= first_edge)\r\n  File \"C:\\Users\\royts\\Kankelborg-Group\\astropy\\astropy\\units\\quantity.py\", line 699, in __array_ufunc__\r\n    raise e\r\n  File \"C:\\Users\\royts\\Kankelborg-Group\\astropy\\astropy\\units\\quantity.py\", line 644, in __array_ufunc__\r\n    converters, unit = converters_and_unit(function, method, *inputs)\r\n  File \"C:\\Users\\royts\\Kankelborg-Group\\astropy\\astropy\\units\\quantity_helper\\converters.py\", line 200, in converters_and_unit\r\n    raise UnitConversionError(\r\nastropy.units.core.UnitConversionError: Can only apply 'less_equal' function to dimensionless quantities when other argument is not a quantity (unless the latter is all zero/infinity/nan).\r\n```\r\n\r\n### System Details\r\n<!-- Even if you do not think this is necessary, it is useful information for the maintainers.\r\nPlease run the following snippet and paste the output below:\r\nimport platform; print(platform.platform())\r\nimport sys; print(\"Python\", sys.version)\r\nimport numpy; print(\"Numpy\", numpy.__version__)\r\nimport erfa; print(\"pyerfa\", erfa.__version__)\r\nimport astropy; print(\"astropy\", astropy.__version__)\r\nimport scipy; print(\"Scipy\", scipy.__version__)\r\nimport matplotlib; print(\"Matplotlib\", matplotlib.__version__)\r\n-->\r\n```\r\nWindows-10-10.0.19045-SP0\r\nPython 3.10.8 (tags/v3.10.8:aaaf517, Oct 11 2022, 16:50:30) [MSC v.1933 64 bit (AMD64)]\r\nNumpy 1.24.0\r\npyerfa 2.0.0.1\r\nastropy 5.3.dev128+ge512a6799\r\nScipy 1.9.1\r\nMatplotlib 3.6.0\r\n```\r\n\n",
  "hints_text": "Hmm, definitely an oversight; I do remember being quite fed up by the time I got to `histogram` as it had so many options... Anyway, I guess to fix this one needs to add treatment to https://github.com/astropy/astropy/blob/87963074a50b14626fbd825536f384a6e96835af/astropy/units/quantity_helper/function_helpers.py#L666-L687\r\n\r\nOf course, also need to fix the other ones; maybe a small `_check_range` function would do the trick (in analogy with `_check_bins`).\nOk, thanks for looking into this. I will open a PR shortly with my attempt\nat a fix.\n\nOn Wed, Dec 21, 2022, 12:13 PM Marten van Kerkwijk ***@***.***>\nwrote:\n\n> Hmm, definitely an oversight; I do remember being quite fed up by the time\n> I got to histogram as it had so many options... Anyway, I guess to fix\n> this one needs to add treatment to\n> https://github.com/astropy/astropy/blob/87963074a50b14626fbd825536f384a6e96835af/astropy/units/quantity_helper/function_helpers.py#L666-L687\n>\n> Of course, also need to fix the other ones; maybe a small _check_range\n> function would do the trick (in analogy with _check_bins).\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/astropy/astropy/issues/14209#issuecomment-1361957695>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAUTD5JS33DYNNOMXQ4GCN3WONJF5ANCNFSM6AAAAAATF4BFD4>\n> .\n> You are receiving this because you authored the thread.Message ID:\n> ***@***.***>\n>\n",
  "created_at": "2022-12-22T16:37:17Z",
  "version": "5.1",
  "FAIL_TO_PASS": "[\"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogram_range[range0]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogram_range[range1]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogram_bin_edges_range[range0]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogram2d_range[range0]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogram2d_range[range1]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogram2d_range[range2]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogramdd_range[range0]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogramdd_range[range1]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogramdd_range[range2]\"]",
  "PASS_TO_PASS": "[\"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeInformation::test_shape\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeInformation::test_size\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeInformation::test_ndim\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_reshape\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_ravel\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_moveaxis\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_rollaxis\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_swapaxes\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_transpose\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_atleast_1d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_atleast_2d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_atleast_3d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_expand_dims\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_squeeze\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_flip\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_fliplr\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_flipud\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_rot90\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_broadcast_to\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_broadcast_arrays\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_argmin\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_argmax\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_argsort\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_lexsort\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_searchsorted\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_nonzero\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_argwhere\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_argpartition\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_flatnonzero\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAlongAxis::test_take_along_axis\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAlongAxis::test_put_along_axis\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAlongAxis::test_apply_along_axis[0]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAlongAxis::test_apply_along_axis[1]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAlongAxis::test_apply_over_axes[axes0]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAlongAxis::test_apply_over_axes[axes1]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAlongAxis::test_apply_over_axes[axes2]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestIndicesFrom::test_diag_indices_from\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestIndicesFrom::test_triu_indices_from\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestIndicesFrom::test_tril_indices_from\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRealImag::test_real\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRealImag::test_imag\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestCopyAndCreation::test_copy\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestCopyAndCreation::test_asfarray\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestCopyAndCreation::test_empty_like\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestCopyAndCreation::test_zeros_like\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestCopyAndCreation::test_ones_like\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestCopyAndCreation::test_full_like\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_diag\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_diag_1d_input\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_diagonal\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_diagflat\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_compress\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_extract\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_delete\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_trim_zeros\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_roll\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_take\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSettingParts::test_put\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSettingParts::test_putmask\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSettingParts::test_place\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSettingParts::test_copyto\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSettingParts::test_fill_diagonal\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRepeat::test_tile\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRepeat::test_repeat\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRepeat::test_resize\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_concatenate\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_stack\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_column_stack\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_hstack\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_vstack\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_dstack\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_block\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_append\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_insert\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_pad\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSplit::test_split\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSplit::test_array_split\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSplit::test_hsplit\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSplit::test_vsplit\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSplit::test_dsplit\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncReductions::test_amax\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncReductions::test_amin\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncReductions::test_sum\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncReductions::test_cumsum\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncReductions::test_any\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncReductions::test_all\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncReductions::test_prod\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncReductions::test_cumprod\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_ptp\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_around\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_fix\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_angle\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_i0\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_clip\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_sinc\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_where\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_choose\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_select\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_real_if_close\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_tril\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_triu\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_unwrap\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_nan_to_num\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_nan_to_num_complex\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLikeTests::test_isposinf\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLikeTests::test_isneginf\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLikeTests::test_isreal\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLikeTests::test_iscomplex\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLikeTests::test_isclose\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLikeTests::test_allclose_atol_default_unit\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_average\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_mean\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_std\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_var\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_median\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_quantile\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_percentile\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_trace\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_count_nonzero\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_allclose\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_allclose_atol_default_unit\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_allclose_failures\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_array_equal\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_array_equal_nan[False]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_array_equal_nan[True]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_array_equal_incompatible_units\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_array_equiv\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_array_equiv_incompatible_units\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanmax\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanmin\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanargmin\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanargmax\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanmean\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanmedian\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nansum\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nancumsum\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanstd\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanvar\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanprod\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nancumprod\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanquantile\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanpercentile\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_cross\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_outer\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_inner\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_dot\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_vdot\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_tensordot\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_kron\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_einsum\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_einsum_path\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestIntDiffFunctions::test_trapz\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestIntDiffFunctions::test_diff\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestIntDiffFunctions::test_diff_prepend_append\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestIntDiffFunctions::test_gradient\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestIntDiffFunctions::test_gradient_spacing\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSpaceFunctions::test_linspace\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSpaceFunctions::test_logspace\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSpaceFunctions::test_geomspace\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestInterpolationFunctions::test_interp\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestInterpolationFunctions::test_piecewise\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestBincountDigitize::test_bincount\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestBincountDigitize::test_digitize\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogram\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogram_bin_edges\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogram_bin_edges_range[range1]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogram2d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogramdd\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_correlate\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_convolve\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_cov\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_corrcoef\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSortFunctions::test_sort\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSortFunctions::test_sort_axis\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSortFunctions::test_sort_complex\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSortFunctions::test_partition\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestStringFunctions::test_array2string\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestStringFunctions::test_array_repr\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestStringFunctions::test_array_str\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestBitAndIndexFunctions::test_packbits\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestBitAndIndexFunctions::test_unpackbits\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestBitAndIndexFunctions::test_unravel_index\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestBitAndIndexFunctions::test_ravel_multi_index\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestBitAndIndexFunctions::test_ix_\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDtypeFunctions::test_common_type\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDtypeFunctions::test_result_type\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDtypeFunctions::test_can_cast\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDtypeFunctions::test_min_scalar_type\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDtypeFunctions::test_iscomplexobj\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDtypeFunctions::test_isrealobj\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestMeshGrid::test_meshgrid\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestMemoryFunctions::test_shares_memory\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestMemoryFunctions::test_may_share_memory\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_unique[kwargs0]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_unique[kwargs1]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_unique[kwargs2]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_unique_more_complex[kwargs0]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_unique_more_complex[kwargs1]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_unique_more_complex[kwargs2]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_intersect1d[kwargs0]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_intersect1d[kwargs1]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_setxor1d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_union1d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_setdiff1d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_in1d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_isin\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_ediff1d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDatetimeFunctions::test_busday_count\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDatetimeFunctions::test_busday_offset\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDatetimeFunctions::test_datetime_as_string\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDatetimeFunctions::test_is_busday\", \"astropy/units/tests/test_quantity_non_ufuncs.py::test_fft_frequencies[fftfreq]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::test_fft_frequencies[rfftfreq]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_fft\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_ifft\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_rfft\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_irfft\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_fft2\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_ifft2\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_rfft2\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_irfft2\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_fftn\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_ifftn\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_rfftn\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_irfftn\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_hfft\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_ihfft\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_fftshift\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_ifftshift\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_cond\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_matrix_rank\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_matrix_rank_with_tol\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_matrix_power\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_matrix_inv_power\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_multi_dot\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_inv\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_pinv\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_tensorinv\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_det\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_slogdet\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_solve\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_tensorsolve\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_lstsq\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_norm\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_cholesky\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_eigvals\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_eigvalsh\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_structured_to_unstructured\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_unstructured_to_structured\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_arrays_repeat_dtypes\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_arrays[True]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_arrays[False]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_array_nested_structure\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_arrays_flatten_nested_structure\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_arrays_asrecarray\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_arrays_usemask\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_arrays_str[True]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_arrays_str[False]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFunctionHelpersCompleteness::test_no_duplicates[one0-two0]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFunctionHelpersCompleteness::test_no_duplicates[one1-two1]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFunctionHelpersCompleteness::test_no_duplicates[one2-two2]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFunctionHelpersCompleteness::test_no_duplicates[one3-two3]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFunctionHelpersCompleteness::test_no_duplicates[one4-two4]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFunctionHelpersCompleteness::test_no_duplicates[one5-two5]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFunctionHelpersCompleteness::test_ignored_are_untested\"]",
  "environment_setup_commit": "5f74eacbcc7fff707a44d8eb58adaa514cb7dcb5",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.536862",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}