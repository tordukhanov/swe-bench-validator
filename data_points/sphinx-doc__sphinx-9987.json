{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-9987",
  "base_commit": "5adc109b72ce42f6938191c7ad027a4913eaba1d",
  "patch": "diff --git a/sphinx/pycode/parser.py b/sphinx/pycode/parser.py\n--- a/sphinx/pycode/parser.py\n+++ b/sphinx/pycode/parser.py\n@@ -312,6 +312,10 @@ def get_self(self) -> Optional[ast.arg]:\n         \"\"\"Returns the name of the first argument if in a function.\"\"\"\n         if self.current_function and self.current_function.args.args:\n             return self.current_function.args.args[0]\n+        elif (self.current_function and\n+              getattr(self.current_function.args, 'posonlyargs', None)):\n+            # for py38+\n+            return self.current_function.args.posonlyargs[0]  # type: ignore\n         else:\n             return None\n \n",
  "test_patch": "diff --git a/tests/test_pycode.py b/tests/test_pycode.py\n--- a/tests/test_pycode.py\n+++ b/tests/test_pycode.py\n@@ -191,3 +191,18 @@ def test_ModuleAnalyzer_find_attr_docs():\n                                  'Qux': 15,\n                                  'Qux.attr1': 16,\n                                  'Qux.attr2': 17}\n+\n+\n+@pytest.mark.skipif(sys.version_info < (3, 8),\n+                    reason='posonlyargs are available since python3.8.')\n+def test_ModuleAnalyzer_find_attr_docs_for_posonlyargs_method():\n+    code = ('class Foo(object):\\n'\n+            '    def __init__(self, /):\\n'\n+            '       self.attr = None  #: attribute comment\\n')\n+    analyzer = ModuleAnalyzer.for_string(code, 'module')\n+    docs = analyzer.find_attr_docs()\n+    assert set(docs) == {('Foo', 'attr')}\n+    assert docs[('Foo', 'attr')] == ['attribute comment', '']\n+    assert analyzer.tagorder == {'Foo': 0,\n+                                 'Foo.__init__': 1,\n+                                 'Foo.attr': 2}\n",
  "problem_statement": "Using position-only parameter syntax in `__init__` prevents docstrings for attributes from being parsed\n### Describe the bug\n\nI'm currently using [position-only parameters](https://www.python.org/dev/peps/pep-0570/) in most of my functions, including `__init__`, however this prevents inline, before, and after doc strings from being parsed.\n\n### How to Reproduce\n\n```\r\n$ git clone https://github.com/bryanforbes/sphinx-positional-only-issue\r\n$ cd sphinx-positional-only-issue\r\n$ pip install -r requirements.txt\r\n$ cd docs\r\n$ make html\r\n$ open _build/html/index.html\r\n```\r\n\r\nOnce `index.html` is open, you will see that only `test.WithoutPositional` has the `a` property documented.\n\n### Expected behavior\n\nBoth classes should have the `a` property documented\n\n### Your project\n\nhttps://github.com/bryanforbes/sphinx-positional-only-issue\n\n### Screenshots\n\n<img width=\"636\" alt=\"image\" src=\"https://user-images.githubusercontent.com/204106/145874239-8fca2943-1321-4098-b0d9-7c2ca81e1e18.png\">\n\n### OS\n\nmacOS 11.6.1\n\n### Python version\n\n3.10\n\n### Sphinx version\n\n4.3.1\n\n### Sphinx extensions\n\nsphinx.ext.autodoc, sphinx.ext.napoleon\n\n### Extra tools\n\n_No response_\n\n### Additional context\n\n_No response_\n",
  "hints_text": "",
  "created_at": "2021-12-18T06:25:48Z",
  "version": "4.4",
  "FAIL_TO_PASS": "[\"tests/test_pycode.py::test_ModuleAnalyzer_find_attr_docs_for_posonlyargs_method\"]",
  "PASS_TO_PASS": "[\"tests/test_pycode.py::test_ModuleAnalyzer_get_module_source\", \"tests/test_pycode.py::test_ModuleAnalyzer_for_string\", \"tests/test_pycode.py::test_ModuleAnalyzer_for_file\", \"tests/test_pycode.py::test_ModuleAnalyzer_for_module\", \"tests/test_pycode.py::test_ModuleAnalyzer_for_file_in_egg\", \"tests/test_pycode.py::test_ModuleAnalyzer_for_module_in_egg\", \"tests/test_pycode.py::test_ModuleAnalyzer_find_tags\", \"tests/test_pycode.py::test_ModuleAnalyzer_find_attr_docs\"]",
  "environment_setup_commit": "0938c193ea6f56dbb930bfb323602bc4e2b7b9c6",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.070916",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}