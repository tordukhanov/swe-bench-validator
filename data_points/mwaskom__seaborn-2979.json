{
  "repo": "mwaskom/seaborn",
  "instance_id": "mwaskom__seaborn-2979",
  "base_commit": "ebc4bfe9f8bf5c4ff10b14da8a49c8baa1ba76d0",
  "patch": "diff --git a/seaborn/_core/plot.py b/seaborn/_core/plot.py\n--- a/seaborn/_core/plot.py\n+++ b/seaborn/_core/plot.py\n@@ -943,8 +943,11 @@ def _setup_figure(self, p: Plot, common: PlotData, layers: list[Layer]) -> None:\n                 visible_side = {\"x\": \"bottom\", \"y\": \"left\"}.get(axis)\n                 show_axis_label = (\n                     sub[visible_side]\n-                    or axis in p._pair_spec and bool(p._pair_spec.get(\"wrap\"))\n                     or not p._pair_spec.get(\"cross\", True)\n+                    or (\n+                        axis in p._pair_spec.get(\"structure\", {})\n+                        and bool(p._pair_spec.get(\"wrap\"))\n+                    )\n                 )\n                 axis_obj.get_label().set_visible(show_axis_label)\n                 show_tick_labels = (\n@@ -1149,7 +1152,7 @@ def _setup_scales(\n             # behavior, so we will raise rather than hack together a workaround.\n             if axis is not None and Version(mpl.__version__) < Version(\"3.4.0\"):\n                 from seaborn._core.scales import Nominal\n-                paired_axis = axis in p._pair_spec\n+                paired_axis = axis in p._pair_spec.get(\"structure\", {})\n                 cat_scale = isinstance(scale, Nominal)\n                 ok_dim = {\"x\": \"col\", \"y\": \"row\"}[axis]\n                 shared_axes = share_state not in [False, \"none\", ok_dim]\ndiff --git a/seaborn/_core/subplots.py b/seaborn/_core/subplots.py\n--- a/seaborn/_core/subplots.py\n+++ b/seaborn/_core/subplots.py\n@@ -30,9 +30,8 @@ class Subplots:\n \n     \"\"\"\n     def __init__(\n-        # TODO defined TypedDict types for these specs\n         self,\n-        subplot_spec: dict,\n+        subplot_spec: dict,  # TODO define as TypedDict\n         facet_spec: FacetSpec,\n         pair_spec: PairSpec,\n     ):\n@@ -130,7 +129,7 @@ def _determine_axis_sharing(self, pair_spec: PairSpec) -> None:\n             if key not in self.subplot_spec:\n                 if axis in pair_spec.get(\"structure\", {}):\n                     # Paired axes are shared along one dimension by default\n-                    if self.wrap in [None, 1] and pair_spec.get(\"cross\", True):\n+                    if self.wrap is None and pair_spec.get(\"cross\", True):\n                         val = axis_to_dim[axis]\n                     else:\n                         val = False\n",
  "test_patch": "diff --git a/tests/_core/test_plot.py b/tests/_core/test_plot.py\n--- a/tests/_core/test_plot.py\n+++ b/tests/_core/test_plot.py\n@@ -1538,8 +1538,10 @@ def test_x_wrapping(self, long_df):\n \n         assert_gridspec_shape(p._figure.axes[0], len(x_vars) // wrap + 1, wrap)\n         assert len(p._figure.axes) == len(x_vars)\n-\n-        # TODO test axis labels and visibility\n+        for ax, var in zip(p._figure.axes, x_vars):\n+            label = ax.xaxis.get_label()\n+            assert label.get_visible()\n+            assert label.get_text() == var\n \n     def test_y_wrapping(self, long_df):\n \n@@ -1547,10 +1549,17 @@ def test_y_wrapping(self, long_df):\n         wrap = 3\n         p = Plot(long_df, x=\"x\").pair(y=y_vars, wrap=wrap).plot()\n \n-        assert_gridspec_shape(p._figure.axes[0], wrap, len(y_vars) // wrap + 1)\n+        n_row, n_col = wrap, len(y_vars) // wrap + 1\n+        assert_gridspec_shape(p._figure.axes[0], n_row, n_col)\n         assert len(p._figure.axes) == len(y_vars)\n-\n-        # TODO test axis labels and visibility\n+        label_array = np.empty(n_row * n_col, object)\n+        label_array[:len(y_vars)] = y_vars\n+        label_array = label_array.reshape((n_row, n_col), order=\"F\")\n+        label_array = [y for y in label_array.flat if y is not None]\n+        for i, ax in enumerate(p._figure.axes):\n+            label = ax.yaxis.get_label()\n+            assert label.get_visible()\n+            assert label.get_text() == label_array[i]\n \n     def test_non_cross_wrapping(self, long_df):\n \ndiff --git a/tests/_core/test_subplots.py b/tests/_core/test_subplots.py\n--- a/tests/_core/test_subplots.py\n+++ b/tests/_core/test_subplots.py\n@@ -191,6 +191,18 @@ def test_y_paired_and_wrapped(self):\n         assert s.subplot_spec[\"sharex\"] is True\n         assert s.subplot_spec[\"sharey\"] is False\n \n+    def test_y_paired_and_wrapped_single_row(self):\n+\n+        y = [\"x\", \"y\", \"z\"]\n+        wrap = 1\n+        s = Subplots({}, {}, {\"structure\": {\"y\": y}, \"wrap\": wrap})\n+\n+        assert s.n_subplots == len(y)\n+        assert s.subplot_spec[\"ncols\"] == len(y)\n+        assert s.subplot_spec[\"nrows\"] == 1\n+        assert s.subplot_spec[\"sharex\"] is True\n+        assert s.subplot_spec[\"sharey\"] is False\n+\n     def test_col_faceted_y_paired(self):\n \n         y = [\"x\", \"y\", \"z\"]\n",
  "problem_statement": "Visibility of internal axis labels is wrong with wrapped pair plot\n```python\r\n(\r\n    so.Plot(mpg, y=\"mpg\")\r\n    .pair([\"displacement\", \"weight\", \"horsepower\", \"cylinders\"], wrap=2)\r\n)\r\n```\r\n![image](https://user-images.githubusercontent.com/315810/186793170-dedae71a-2cb9-4f0e-9339-07fc1d13ac59.png)\r\n\r\nThe top two subplots should have distinct x labels.\nVisibility of internal axis labels is wrong with wrapped pair plot\n```python\r\n(\r\n    so.Plot(mpg, y=\"mpg\")\r\n    .pair([\"displacement\", \"weight\", \"horsepower\", \"cylinders\"], wrap=2)\r\n)\r\n```\r\n![image](https://user-images.githubusercontent.com/315810/186793170-dedae71a-2cb9-4f0e-9339-07fc1d13ac59.png)\r\n\r\nThe top two subplots should have distinct x labels.\n",
  "hints_text": "\n",
  "created_at": "2022-08-26T11:07:57Z",
  "version": "0.12",
  "FAIL_TO_PASS": "[\"tests/_core/test_plot.py::TestPairInterface::test_x_wrapping\", \"tests/_core/test_plot.py::TestPairInterface::test_y_wrapping\", \"tests/_core/test_subplots.py::TestSubplotSpec::test_y_paired_and_wrapped_single_row\"]",
  "PASS_TO_PASS": "[\"tests/_core/test_plot.py::TestInit::test_empty\", \"tests/_core/test_plot.py::TestInit::test_data_only\", \"tests/_core/test_plot.py::TestInit::test_df_and_named_variables\", \"tests/_core/test_plot.py::TestInit::test_df_and_mixed_variables\", \"tests/_core/test_plot.py::TestInit::test_vector_variables_only\", \"tests/_core/test_plot.py::TestInit::test_vector_variables_no_index\", \"tests/_core/test_plot.py::TestInit::test_data_only_named\", \"tests/_core/test_plot.py::TestInit::test_positional_and_named_data\", \"tests/_core/test_plot.py::TestInit::test_positional_and_named_xy[x]\", \"tests/_core/test_plot.py::TestInit::test_positional_and_named_xy[y]\", \"tests/_core/test_plot.py::TestInit::test_positional_data_x_y\", \"tests/_core/test_plot.py::TestInit::test_positional_x_y\", \"tests/_core/test_plot.py::TestInit::test_positional_data_x\", \"tests/_core/test_plot.py::TestInit::test_positional_x\", \"tests/_core/test_plot.py::TestInit::test_positional_too_many\", \"tests/_core/test_plot.py::TestInit::test_unknown_keywords\", \"tests/_core/test_plot.py::TestLayerAddition::test_stat_nondefault\", \"tests/_core/test_plot.py::TestLayerAddition::test_variable_list\", \"tests/_core/test_plot.py::TestLayerAddition::test_type_checks\", \"tests/_core/test_plot.py::TestScaling::test_faceted_log_scale\", \"tests/_core/test_plot.py::TestScaling::test_paired_single_log_scale\", \"tests/_core/test_plot.py::TestPlotting::test_matplotlib_object_creation\", \"tests/_core/test_plot.py::TestPlotting::test_empty\", \"tests/_core/test_plot.py::TestPlotting::test_theme_default\", \"tests/_core/test_plot.py::TestPlotting::test_theme_params\", \"tests/_core/test_plot.py::TestPlotting::test_theme_error\", \"tests/_core/test_plot.py::TestPlotting::test_methods_clone\", \"tests/_core/test_plot.py::TestPlotting::test_default_is_no_pyplot\", \"tests/_core/test_plot.py::TestPlotting::test_with_pyplot\", \"tests/_core/test_plot.py::TestPlotting::test_show\", \"tests/_core/test_plot.py::TestPlotting::test_png_repr\", \"tests/_core/test_plot.py::TestPlotting::test_save\", \"tests/_core/test_plot.py::TestPlotting::test_layout_size\", \"tests/_core/test_plot.py::TestPlotting::test_on_type_check\", \"tests/_core/test_plot.py::TestPlotting::test_on_axes_with_subplots_error\", \"tests/_core/test_plot.py::TestPlotting::test_on_disables_layout_algo\", \"tests/_core/test_plot.py::TestPlotting::test_axis_labels_from_constructor\", \"tests/_core/test_plot.py::TestPlotting::test_limits\", \"tests/_core/test_plot.py::TestPlotting::test_labels_axis\", \"tests/_core/test_plot.py::TestPlotting::test_labels_facets\", \"tests/_core/test_plot.py::TestPlotting::test_title_single\", \"tests/_core/test_plot.py::TestPlotting::test_title_facet_function\", \"tests/_core/test_plot.py::TestFacetInterface::test_1d[row]\", \"tests/_core/test_plot.py::TestFacetInterface::test_1d_as_vector[row]\", \"tests/_core/test_plot.py::TestFacetInterface::test_1d_with_order[row-reverse]\", \"tests/_core/test_plot.py::TestFacetInterface::test_1d_with_order[col-reverse]\", \"tests/_core/test_plot.py::TestFacetInterface::test_1d[col]\", \"tests/_core/test_plot.py::TestFacetInterface::test_1d_as_vector[col]\", \"tests/_core/test_plot.py::TestFacetInterface::test_1d_with_order[col-subset]\", \"tests/_core/test_plot.py::TestFacetInterface::test_1d_with_order[row-subset]\", \"tests/_core/test_plot.py::TestFacetInterface::test_2d_with_order[subset]\", \"tests/_core/test_plot.py::TestFacetInterface::test_1d_with_order[col-expand]\", \"tests/_core/test_plot.py::TestFacetInterface::test_1d_with_order[row-expand]\", \"tests/_core/test_plot.py::TestFacetInterface::test_2d_with_order[expand]\", \"tests/_core/test_plot.py::TestFacetInterface::test_2d_with_order[reverse]\", \"tests/_core/test_plot.py::TestFacetInterface::test_2d\", \"tests/_core/test_plot.py::TestFacetInterface::test_layout_algo[tight]\", \"tests/_core/test_plot.py::TestFacetInterface::test_layout_algo[constrained]\", \"tests/_core/test_plot.py::TestFacetInterface::test_axis_sharing\", \"tests/_core/test_plot.py::TestFacetInterface::test_col_wrapping\", \"tests/_core/test_plot.py::TestFacetInterface::test_row_wrapping\", \"tests/_core/test_plot.py::TestPairInterface::test_all_numeric[list]\", \"tests/_core/test_plot.py::TestPairInterface::test_all_numeric[Index]\", \"tests/_core/test_plot.py::TestPairInterface::test_single_variable_key_raises\", \"tests/_core/test_plot.py::TestPairInterface::test_single_dimension[x]\", \"tests/_core/test_plot.py::TestPairInterface::test_single_dimension[y]\", \"tests/_core/test_plot.py::TestPairInterface::test_non_cross\", \"tests/_core/test_plot.py::TestPairInterface::test_list_of_vectors\", \"tests/_core/test_plot.py::TestPairInterface::test_with_no_variables\", \"tests/_core/test_plot.py::TestPairInterface::test_with_facets\", \"tests/_core/test_plot.py::TestPairInterface::test_error_on_facet_overlap[variables0]\", \"tests/_core/test_plot.py::TestPairInterface::test_error_on_facet_overlap[variables1]\", \"tests/_core/test_plot.py::TestPairInterface::test_error_on_wrap_overlap[variables0]\", \"tests/_core/test_plot.py::TestPairInterface::test_error_on_wrap_overlap[variables1]\", \"tests/_core/test_plot.py::TestPairInterface::test_axis_sharing\", \"tests/_core/test_plot.py::TestPairInterface::test_axis_sharing_with_facets\", \"tests/_core/test_plot.py::TestPairInterface::test_non_cross_wrapping\", \"tests/_core/test_plot.py::TestPairInterface::test_cross_mismatched_lengths\", \"tests/_core/test_plot.py::TestPairInterface::test_two_variables_single_order_error\", \"tests/_core/test_plot.py::TestPairInterface::test_limits\", \"tests/_core/test_plot.py::TestPairInterface::test_labels\", \"tests/_core/test_plot.py::TestLabelVisibility::test_single_subplot\", \"tests/_core/test_plot.py::TestLabelVisibility::test_1d_column[facet_kws0-pair_kws0]\", \"tests/_core/test_plot.py::TestLabelVisibility::test_1d_column[facet_kws1-pair_kws1]\", \"tests/_core/test_plot.py::TestLabelVisibility::test_1d_row[facet_kws0-pair_kws0]\", \"tests/_core/test_plot.py::TestLabelVisibility::test_1d_row[facet_kws1-pair_kws1]\", \"tests/_core/test_plot.py::TestLabelVisibility::test_1d_column_wrapped\", \"tests/_core/test_plot.py::TestLabelVisibility::test_1d_row_wrapped\", \"tests/_core/test_plot.py::TestLabelVisibility::test_1d_column_wrapped_non_cross\", \"tests/_core/test_plot.py::TestLabelVisibility::test_2d\", \"tests/_core/test_plot.py::TestLabelVisibility::test_2d_unshared\", \"tests/_core/test_plot.py::TestHelpers::test_default_repr\", \"tests/_core/test_subplots.py::TestSpecificationChecks::test_both_facets_and_wrap\", \"tests/_core/test_subplots.py::TestSpecificationChecks::test_cross_xy_pairing_and_wrap\", \"tests/_core/test_subplots.py::TestSpecificationChecks::test_col_facets_and_x_pairing\", \"tests/_core/test_subplots.py::TestSpecificationChecks::test_wrapped_columns_and_y_pairing\", \"tests/_core/test_subplots.py::TestSpecificationChecks::test_wrapped_x_pairing_and_facetd_rows\", \"tests/_core/test_subplots.py::TestSubplotSpec::test_single_subplot\", \"tests/_core/test_subplots.py::TestSubplotSpec::test_single_facet\", \"tests/_core/test_subplots.py::TestSubplotSpec::test_two_facets\", \"tests/_core/test_subplots.py::TestSubplotSpec::test_col_facet_wrapped\", \"tests/_core/test_subplots.py::TestSubplotSpec::test_row_facet_wrapped\", \"tests/_core/test_subplots.py::TestSubplotSpec::test_col_facet_wrapped_single_row\", \"tests/_core/test_subplots.py::TestSubplotSpec::test_x_and_y_paired\", \"tests/_core/test_subplots.py::TestSubplotSpec::test_x_paired\", \"tests/_core/test_subplots.py::TestSubplotSpec::test_y_paired\", \"tests/_core/test_subplots.py::TestSubplotSpec::test_x_paired_and_wrapped\", \"tests/_core/test_subplots.py::TestSubplotSpec::test_y_paired_and_wrapped\", \"tests/_core/test_subplots.py::TestSubplotSpec::test_col_faceted_y_paired\", \"tests/_core/test_subplots.py::TestSubplotSpec::test_row_faceted_x_paired\", \"tests/_core/test_subplots.py::TestSubplotSpec::test_x_any_y_paired_non_cross\", \"tests/_core/test_subplots.py::TestSubplotSpec::test_x_any_y_paired_non_cross_wrapped\", \"tests/_core/test_subplots.py::TestSubplotSpec::test_forced_unshared_facets\", \"tests/_core/test_subplots.py::TestSubplotElements::test_single_subplot\", \"tests/_core/test_subplots.py::TestSubplotElements::test_single_facet_dim[col]\", \"tests/_core/test_subplots.py::TestSubplotElements::test_single_facet_dim[row]\", \"tests/_core/test_subplots.py::TestSubplotElements::test_single_facet_dim_wrapped[col]\", \"tests/_core/test_subplots.py::TestSubplotElements::test_single_facet_dim_wrapped[row]\", \"tests/_core/test_subplots.py::TestSubplotElements::test_both_facet_dims\", \"tests/_core/test_subplots.py::TestSubplotElements::test_single_paired_var[x]\", \"tests/_core/test_subplots.py::TestSubplotElements::test_single_paired_var[y]\", \"tests/_core/test_subplots.py::TestSubplotElements::test_single_paired_var_wrapped[x]\", \"tests/_core/test_subplots.py::TestSubplotElements::test_single_paired_var_wrapped[y]\", \"tests/_core/test_subplots.py::TestSubplotElements::test_both_paired_variables\", \"tests/_core/test_subplots.py::TestSubplotElements::test_both_paired_non_cross\", \"tests/_core/test_subplots.py::TestSubplotElements::test_one_facet_one_paired[col-y]\", \"tests/_core/test_subplots.py::TestSubplotElements::test_one_facet_one_paired[row-x]\"]",
  "environment_setup_commit": "d25872b0fc99dbf7e666a91f59bd4ed125186aa1",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.836736",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}