{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-11788",
  "base_commit": "e1ce41b95534f80955e3809fdf5ada61ecb5946f",
  "patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1452,7 +1452,7 @@ def _print_DiracDelta(self, expr, exp=None):\n     def _print_SingularityFunction(self, expr):\n         shift = self._print(expr.args[0] - expr.args[1])\n         power = self._print(expr.args[2])\n-        tex = r\"{\\langle %s \\rangle}^ %s\" % (shift, power)\n+        tex = r\"{\\langle %s \\rangle}^{%s}\" % (shift, power)\n         return tex\n \n     def _print_Heaviside(self, expr, exp=None):\n",
  "test_patch": "diff --git a/sympy/printing/tests/test_latex.py b/sympy/printing/tests/test_latex.py\n--- a/sympy/printing/tests/test_latex.py\n+++ b/sympy/printing/tests/test_latex.py\n@@ -138,11 +138,12 @@ def test_latex_builtins():\n \n \n def test_latex_SingularityFunction():\n-    assert latex(SingularityFunction(x, 4, 5)) == r\"{\\langle x - 4 \\rangle}^ 5\"\n-    assert latex(SingularityFunction(x, -3, 4)) == r\"{\\langle x + 3 \\rangle}^ 4\"\n-    assert latex(SingularityFunction(x, 0, 4)) == r\"{\\langle x \\rangle}^ 4\"\n-    assert latex(SingularityFunction(x, a, n)) == r\"{\\langle - a + x \\rangle}^ n\"\n-\n+    assert latex(SingularityFunction(x, 4, 5)) == r\"{\\langle x - 4 \\rangle}^{5}\"\n+    assert latex(SingularityFunction(x, -3, 4)) == r\"{\\langle x + 3 \\rangle}^{4}\"\n+    assert latex(SingularityFunction(x, 0, 4)) == r\"{\\langle x \\rangle}^{4}\"\n+    assert latex(SingularityFunction(x, a, n)) == r\"{\\langle - a + x \\rangle}^{n}\"\n+    assert latex(SingularityFunction(x, 4, -2)) == r\"{\\langle x - 4 \\rangle}^{-2}\"\n+    assert latex(SingularityFunction(x, 4, -1)) == r\"{\\langle x - 4 \\rangle}^{-1}\"\n \n def test_latex_cycle():\n     assert latex(Cycle(1, 2, 4)) == r\"\\left( 1\\; 2\\; 4\\right)\"\n",
  "problem_statement": "Singularity function powers do not print correctly in the qtconsole\n``` python\nfrom sympy import symbols, init_printing\nfrom sympy.physics.continuum_mechanics import Beam\n\ninit_printing()\n\nE, I, w, l = symbols('E, I, w, l')\nRa, Ma = symbols('R_a, M_a')\n\n\nb = Beam(2 * l, E, I)\n\nb.apply_load(Ra, 0, -1)\nb.apply_load(-Ma, 0, -2)\nb.apply_load(-w * l, l, -1)\nb.apply_load(-w / l, l, 1)\nb.apply_load(-w * l**2 / 2, 2 * l, -2)\nb.load\n```\n\n![selection_058](https://cloud.githubusercontent.com/assets/276007/19738592/d9e1e172-9b6c-11e6-916a-b7e96a4f4926.jpg)\n\n@sampadsaha5 \n\n",
  "hints_text": "This is also the case in the notebook:\n![selection_069](https://cloud.githubusercontent.com/assets/276007/19817720/aa91d698-9d01-11e6-9716-4604b1c16cf9.jpg)\n\nThe latex printer simply needs to have curly braces around the exponent.\n",
  "created_at": "2016-10-29T21:33:54Z",
  "version": "1.0",
  "FAIL_TO_PASS": "[\"test_latex_SingularityFunction\"]",
  "PASS_TO_PASS": "[\"test_printmethod\", \"test_latex_basic\", \"test_latex_builtins\", \"test_latex_cycle\", \"test_latex_permutation\", \"test_latex_Float\", \"test_latex_symbols\", \"test_hyper_printing\", \"test_latex_bessel\", \"test_latex_fresnel\", \"test_latex_brackets\", \"test_latex_subs\", \"test_latex_integrals\", \"test_latex_sets\", \"test_latex_Range\", \"test_latex_sequences\", \"test_latex_intervals\", \"test_latex_AccumuBounds\", \"test_latex_emptyset\", \"test_latex_commutator\", \"test_latex_union\", \"test_latex_symmetric_difference\", \"test_latex_Complement\", \"test_latex_Complexes\", \"test_latex_productset\", \"test_latex_Naturals\", \"test_latex_Naturals0\", \"test_latex_Integers\", \"test_latex_ImageSet\", \"test_latex_ConditionSet\", \"test_latex_ComplexRegion\", \"test_latex_Contains\", \"test_latex_sum\", \"test_latex_product\", \"test_latex_limits\", \"test_issue_3568\", \"test_latex\", \"test_latex_dict\", \"test_latex_list\", \"test_latex_rational\", \"test_latex_inverse\", \"test_latex_DiracDelta\", \"test_latex_Heaviside\", \"test_latex_KroneckerDelta\", \"test_latex_LeviCivita\", \"test_mode\", \"test_latex_Piecewise\", \"test_latex_Matrix\", \"test_latex_mul_symbol\", \"test_latex_issue_4381\", \"test_latex_issue_4576\", \"test_latex_pow_fraction\", \"test_noncommutative\", \"test_latex_order\", \"test_latex_Lambda\", \"test_latex_PolyElement\", \"test_latex_FracElement\", \"test_latex_Poly\", \"test_latex_ComplexRootOf\", \"test_latex_RootSum\", \"test_settings\", \"test_latex_numbers\", \"test_lamda\", \"test_custom_symbol_names\", \"test_matAdd\", \"test_matMul\", \"test_latex_MatrixSlice\", \"test_latex_RandomDomain\", \"test_PrettyPoly\", \"test_integral_transforms\", \"test_PolynomialRingBase\", \"test_categories\", \"test_Modules\", \"test_QuotientRing\", \"test_Tr\", \"test_Adjoint\", \"test_Hadamard\", \"test_ZeroMatrix\", \"test_boolean_args_order\", \"test_imaginary\", \"test_builtins_without_args\", \"test_latex_greek_functions\", \"test_translate\", \"test_other_symbols\", \"test_modifiers\", \"test_greek_symbols\", \"test_builtin_no_args\", \"test_issue_6853\", \"test_Mul\", \"test_Pow\", \"test_issue_7180\", \"test_issue_8409\", \"test_issue_7117\", \"test_issue_2934\"]",
  "environment_setup_commit": "50b81f9f6be151014501ffac44e5dc6b2416938f",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.072897",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}