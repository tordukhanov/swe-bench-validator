{
  "repo": "scikit-learn/scikit-learn",
  "instance_id": "scikit-learn__scikit-learn-25570",
  "base_commit": "cd25abee0ad0ac95225d4a9be8948eff69f49690",
  "patch": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -865,7 +865,9 @@ def _hstack(self, Xs):\n                 transformer_names = [\n                     t[0] for t in self._iter(fitted=True, replace_strings=True)\n                 ]\n-                feature_names_outs = [X.columns for X in Xs]\n+                # Selection of columns might be empty.\n+                # Hence feature names are filtered for non-emptiness.\n+                feature_names_outs = [X.columns for X in Xs if X.shape[1] != 0]\n                 names_out = self._add_prefix_for_feature_names_out(\n                     list(zip(transformer_names, feature_names_outs))\n                 )\n",
  "test_patch": "diff --git a/sklearn/compose/tests/test_column_transformer.py b/sklearn/compose/tests/test_column_transformer.py\n--- a/sklearn/compose/tests/test_column_transformer.py\n+++ b/sklearn/compose/tests/test_column_transformer.py\n@@ -2129,3 +2129,32 @@ def test_transformers_with_pandas_out_but_not_feature_names_out(\n     ct.set_params(verbose_feature_names_out=False)\n     X_trans_df1 = ct.fit_transform(X_df)\n     assert_array_equal(X_trans_df1.columns, expected_non_verbose_names)\n+\n+\n+@pytest.mark.parametrize(\n+    \"empty_selection\",\n+    [[], np.array([False, False]), [False, False]],\n+    ids=[\"list\", \"bool\", \"bool_int\"],\n+)\n+def test_empty_selection_pandas_output(empty_selection):\n+    \"\"\"Check that pandas output works when there is an empty selection.\n+\n+    Non-regression test for gh-25487\n+    \"\"\"\n+    pd = pytest.importorskip(\"pandas\")\n+\n+    X = pd.DataFrame([[1.0, 2.2], [3.0, 1.0]], columns=[\"a\", \"b\"])\n+    ct = ColumnTransformer(\n+        [\n+            (\"categorical\", \"passthrough\", empty_selection),\n+            (\"numerical\", StandardScaler(), [\"a\", \"b\"]),\n+        ],\n+        verbose_feature_names_out=True,\n+    )\n+    ct.set_output(transform=\"pandas\")\n+    X_out = ct.fit_transform(X)\n+    assert_array_equal(X_out.columns, [\"numerical__a\", \"numerical__b\"])\n+\n+    ct.set_params(verbose_feature_names_out=False)\n+    X_out = ct.fit_transform(X)\n+    assert_array_equal(X_out.columns, [\"a\", \"b\"])\n",
  "problem_statement": "ColumnTransformer with pandas output can't handle transformers with no features\n### Describe the bug\r\n\r\nHi,\r\n\r\nColumnTransformer doesn't deal well with transformers that apply to 0 features (categorical_features in the example below) when using \"pandas\" as output. It seems steps with 0 features are not fitted, hence don't appear in `self._iter(fitted=True)` (_column_transformer.py l.856) and hence break the input to the `_add_prefix_for_feature_names_out` function (l.859).\r\n\r\n\r\n### Steps/Code to Reproduce\r\n\r\nHere is some code to reproduce the error. If you remove .set_output(transform=\"pandas\") on the line before last, all works fine. If you remove the (\"categorical\", ...) step, it works fine too.\r\n\r\n```python\r\nimport numpy as np\r\nimport pandas as pd\r\nfrom lightgbm import LGBMClassifier\r\nfrom sklearn.compose import ColumnTransformer\r\nfrom sklearn.impute import SimpleImputer\r\nfrom sklearn.pipeline import Pipeline\r\nfrom sklearn.preprocessing import RobustScaler\r\n\r\nX = pd.DataFrame(data=[[1.0, 2.0, 3.0, 4.0], [4, 2, 2, 5]],\r\n                 columns=[\"a\", \"b\", \"c\", \"d\"])\r\ny = np.array([0, 1])\r\ncategorical_features = []\r\nnumerical_features = [\"a\", \"b\", \"c\"]\r\nmodel_preprocessing = (\"preprocessing\",\r\n                       ColumnTransformer([\r\n                           ('categorical', 'passthrough', categorical_features),\r\n                           ('numerical', Pipeline([(\"scaler\", RobustScaler()),\r\n                                                   (\"imputer\", SimpleImputer(strategy=\"median\"))\r\n                                                   ]), numerical_features),\r\n                       ], remainder='drop'))\r\npipeline = Pipeline([model_preprocessing, (\"classifier\", LGBMClassifier())]).set_output(transform=\"pandas\")\r\npipeline.fit(X, y)\r\n```\r\n\r\n### Expected Results\r\n\r\nThe step with no features should be ignored.\r\n\r\n### Actual Results\r\n\r\nHere is the error message:\r\n```pytb\r\nTraceback (most recent call last):\r\n  File \"/home/philippe/workspace/script.py\", line 22, in <module>\r\n    pipeline.fit(X, y)\r\n  File \"/home/philippe/.anaconda3/envs/deleteme/lib/python3.9/site-packages/sklearn/pipeline.py\", line 402, in fit\r\n    Xt = self._fit(X, y, **fit_params_steps)\r\n  File \"/home/philippe/.anaconda3/envs/deleteme/lib/python3.9/site-packages/sklearn/pipeline.py\", line 360, in _fit\r\n    X, fitted_transformer = fit_transform_one_cached(\r\n  File \"/home/philippe/.anaconda3/envs/deleteme/lib/python3.9/site-packages/joblib/memory.py\", line 349, in __call__\r\n    return self.func(*args, **kwargs)\r\n  File \"/home/philippe/.anaconda3/envs/deleteme/lib/python3.9/site-packages/sklearn/pipeline.py\", line 894, in _fit_transform_one\r\n    res = transformer.fit_transform(X, y, **fit_params)\r\n  File \"/home/philippe/.anaconda3/envs/deleteme/lib/python3.9/site-packages/sklearn/utils/_set_output.py\", line 142, in wrapped\r\n    data_to_wrap = f(self, X, *args, **kwargs)\r\n  File \"/home/philippe/.anaconda3/envs/deleteme/lib/python3.9/site-packages/sklearn/compose/_column_transformer.py\", line 750, in fit_transform\r\n    return self._hstack(list(Xs))\r\n  File \"/home/philippe/.anaconda3/envs/deleteme/lib/python3.9/site-packages/sklearn/compose/_column_transformer.py\", line 862, in _hstack\r\n    output.columns = names_out\r\n  File \"/home/philippe/.anaconda3/envs/deleteme/lib/python3.9/site-packages/pandas/core/generic.py\", line 5596, in __setattr__\r\n    return object.__setattr__(self, name, value)\r\n  File \"pandas/_libs/properties.pyx\", line 70, in pandas._libs.properties.AxisProperty.__set__\r\n  File \"/home/philippe/.anaconda3/envs/deleteme/lib/python3.9/site-packages/pandas/core/generic.py\", line 769, in _set_axis\r\n    self._mgr.set_axis(axis, labels)\r\n  File \"/home/philippe/.anaconda3/envs/deleteme/lib/python3.9/site-packages/pandas/core/internals/managers.py\", line 214, in set_axis\r\n    self._validate_set_axis(axis, new_labels)\r\n  File \"/home/philippe/.anaconda3/envs/deleteme/lib/python3.9/site-packages/pandas/core/internals/base.py\", line 69, in _validate_set_axis\r\n    raise ValueError(\r\nValueError: Length mismatch: Expected axis has 3 elements, new values have 0 elements\r\n\r\nProcess finished with exit code 1\r\n```\r\n\r\n### Versions\r\n\r\n```shell\r\nSystem:\r\n    python: 3.9.15 (main, Nov 24 2022, 14:31:59)  [GCC 11.2.0]\r\nexecutable: /home/philippe/.anaconda3/envs/strategy-training/bin/python\r\n   machine: Linux-5.15.0-57-generic-x86_64-with-glibc2.31\r\n\r\nPython dependencies:\r\n      sklearn: 1.2.0\r\n          pip: 22.2.2\r\n   setuptools: 62.3.2\r\n        numpy: 1.23.5\r\n        scipy: 1.9.3\r\n       Cython: None\r\n       pandas: 1.4.1\r\n   matplotlib: 3.6.3\r\n       joblib: 1.2.0\r\nthreadpoolctl: 3.1.0\r\n\r\nBuilt with OpenMP: True\r\n\r\nthreadpoolctl info:\r\n       user_api: openmp\r\n   internal_api: openmp\r\n         prefix: libgomp\r\n       filepath: /home/philippe/.anaconda3/envs/strategy-training/lib/python3.9/site-packages/scikit_learn.libs/libgomp-a34b3233.so.1.0.0\r\n        version: None\r\n    num_threads: 12\r\n\r\n       user_api: blas\r\n   internal_api: openblas\r\n         prefix: libopenblas\r\n       filepath: /home/philippe/.anaconda3/envs/strategy-training/lib/python3.9/site-packages/numpy.libs/libopenblas64_p-r0-742d56dc.3.20.so\r\n        version: 0.3.20\r\nthreading_layer: pthreads\r\n   architecture: Haswell\r\n    num_threads: 12\r\n\r\n       user_api: blas\r\n   internal_api: openblas\r\n         prefix: libopenblas\r\n       filepath: /home/philippe/.anaconda3/envs/strategy-training/lib/python3.9/site-packages/scipy.libs/libopenblasp-r0-41284840.3.18.so\r\n        version: 0.3.18\r\nthreading_layer: pthreads\r\n   architecture: Haswell\r\n    num_threads: 12\r\n```\r\n\n",
  "hints_text": "",
  "created_at": "2023-02-08T18:28:21Z",
  "version": "1.3",
  "FAIL_TO_PASS": "[\"sklearn/compose/tests/test_column_transformer.py::test_empty_selection_pandas_output[list]\", \"sklearn/compose/tests/test_column_transformer.py::test_empty_selection_pandas_output[bool]\", \"sklearn/compose/tests/test_column_transformer.py::test_empty_selection_pandas_output[bool_int]\"]",
  "PASS_TO_PASS": "[\"sklearn/compose/tests/test_column_transformer.py::test_column_transformer\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_tuple_transformers_parameter\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_dataframe\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[False-list-pandas]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[False-list-numpy]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[False-bool-pandas]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[False-bool-numpy]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[False-bool_int-pandas]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[False-bool_int-numpy]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[True-list-pandas]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[True-list-numpy]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[True-bool-pandas]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[True-bool-numpy]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[True-bool_int-pandas]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_empty_columns[True-bool_int-numpy]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_output_indices\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_output_indices_df\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_sparse_array\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_list\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_sparse_stacking\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_mixed_cols_sparse\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_sparse_threshold\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_error_msg_1D\", \"sklearn/compose/tests/test_column_transformer.py::test_2D_transformer_output\", \"sklearn/compose/tests/test_column_transformer.py::test_2D_transformer_output_pandas\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_invalid_columns[drop]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_invalid_columns[passthrough]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_invalid_transformer\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_transformer\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_transformer_pandas\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_transformer_kwargs\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_transformer_remainder_transformer\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_get_set_params\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_named_estimators\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_cloning\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_get_feature_names\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_special_strings\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_numpy[key0]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_numpy[key1]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_numpy[key2]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_numpy[key3]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[key0]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[key1]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[key2]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[key3]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[pd-index]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[key5]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[key6]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[key7]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_pandas[key8]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_transformer[key0]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_transformer[key1]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_transformer[key2]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_remainder_transformer[key3]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_no_remaining_remainder_transformer\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_drops_all_remainder_transformer\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_sparse_remainder_transformer\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_drop_all_sparse_remainder_transformer\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_get_set_params_with_remainder\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_no_estimators\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit-est0-\\\\\\\\[ColumnTransformer\\\\\\\\].*\\\\\\\\(1\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit-est1-\\\\\\\\[ColumnTransformer\\\\\\\\].*\\\\\\\\(1\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit-est2-\\\\\\\\[ColumnTransformer\\\\\\\\].*\\\\\\\\(1\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit-est3-\\\\\\\\[ColumnTransformer\\\\\\\\].*\\\\\\\\(1\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit-est4-\\\\\\\\[ColumnTransformer\\\\\\\\].*\\\\\\\\(1\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit-est5-\\\\\\\\[ColumnTransformer\\\\\\\\].*\\\\\\\\(1\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit-est6-\\\\\\\\[ColumnTransformer\\\\\\\\].*\\\\\\\\(1\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit_transform-est0-\\\\\\\\[ColumnTransformer\\\\\\\\].*\\\\\\\\(1\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit_transform-est1-\\\\\\\\[ColumnTransformer\\\\\\\\].*\\\\\\\\(1\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit_transform-est2-\\\\\\\\[ColumnTransformer\\\\\\\\].*\\\\\\\\(1\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit_transform-est3-\\\\\\\\[ColumnTransformer\\\\\\\\].*\\\\\\\\(1\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit_transform-est4-\\\\\\\\[ColumnTransformer\\\\\\\\].*\\\\\\\\(1\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit_transform-est5-\\\\\\\\[ColumnTransformer\\\\\\\\].*\\\\\\\\(1\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_verbose[fit_transform-est6-\\\\\\\\[ColumnTransformer\\\\\\\\].*\\\\\\\\(1\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_no_estimators_set_params\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_callable_specifier\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_callable_specifier_dataframe\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_negative_column_indexes\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_mask_indexing[asarray]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_mask_indexing[csr_matrix]\", \"sklearn/compose/tests/test_column_transformer.py::test_n_features_in\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols0-None-number-None]\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols1-None-None-object]\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols2-None-include2-None]\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols3-None-include3-None]\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols4-None-object-None]\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols5-None-float-None]\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols6-at$-include6-None]\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols7-None-include7-None]\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols8-^col_int-include8-None]\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols9-float|str-None-None]\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols10-^col_s-None-exclude10]\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols11-str$-float-None]\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_with_select_dtypes[cols12-None-include12-None]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_with_make_column_selector\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_error\", \"sklearn/compose/tests/test_column_transformer.py::test_make_column_selector_pickle\", \"sklearn/compose/tests/test_column_transformer.py::test_feature_names_empty_columns[list]\", \"sklearn/compose/tests/test_column_transformer.py::test_feature_names_empty_columns[array]\", \"sklearn/compose/tests/test_column_transformer.py::test_feature_names_empty_columns[callable]\", \"sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_pandas[selector0]\", \"sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_pandas[<lambda>0]\", \"sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_pandas[selector2]\", \"sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_pandas[<lambda>1]\", \"sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_pandas[selector4]\", \"sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_pandas[<lambda>2]\", \"sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_non_pandas[selector0]\", \"sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_non_pandas[<lambda>0]\", \"sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_non_pandas[selector2]\", \"sklearn/compose/tests/test_column_transformer.py::test_feature_names_out_non_pandas[<lambda>1]\", \"sklearn/compose/tests/test_column_transformer.py::test_sk_visual_block_remainder[passthrough]\", \"sklearn/compose/tests/test_column_transformer.py::test_sk_visual_block_remainder[remainder1]\", \"sklearn/compose/tests/test_column_transformer.py::test_sk_visual_block_remainder_drop\", \"sklearn/compose/tests/test_column_transformer.py::test_sk_visual_block_remainder_fitted_pandas[passthrough]\", \"sklearn/compose/tests/test_column_transformer.py::test_sk_visual_block_remainder_fitted_pandas[remainder1]\", \"sklearn/compose/tests/test_column_transformer.py::test_sk_visual_block_remainder_fitted_numpy[passthrough]\", \"sklearn/compose/tests/test_column_transformer.py::test_sk_visual_block_remainder_fitted_numpy[remainder1]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[remainder0-first]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[remainder0-second]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[remainder0-0]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[remainder0-1]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[passthrough-first]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[passthrough-second]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[passthrough-0]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[passthrough-1]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[drop-first]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[drop-second]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[drop-0]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_reordered_column_names_remainder[drop-1]\", \"sklearn/compose/tests/test_column_transformer.py::test_feature_name_validation_missing_columns_drop_passthough\", \"sklearn/compose/tests/test_column_transformer.py::test_feature_names_in_\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers0-passthrough-expected_names0]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers1-drop-expected_names1]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers2-passthrough-expected_names2]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers3-passthrough-expected_names3]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers4-drop-expected_names4]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers5-passthrough-expected_names5]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers6-drop-expected_names6]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers7-drop-expected_names7]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers8-passthrough-expected_names8]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers9-passthrough-expected_names9]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers10-drop-expected_names10]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers11-passthrough-expected_names11]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_true[transformers12-passthrough-expected_names12]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers0-passthrough-expected_names0]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers1-drop-expected_names1]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers2-passthrough-expected_names2]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers3-passthrough-expected_names3]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers4-drop-expected_names4]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers5-passthrough-expected_names5]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers6-drop-expected_names6]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers7-passthrough-expected_names7]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers8-passthrough-expected_names8]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers9-drop-expected_names9]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers10-passthrough-expected_names10]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers11-passthrough-expected_names11]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers12-drop-expected_names12]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false[transformers13-drop-expected_names13]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers0-drop-['b']]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers1-drop-['c']]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers2-passthrough-['a']]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers3-passthrough-['a']]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers4-drop-['b',\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers5-passthrough-['a']]\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers6-passthrough-['a',\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers7-passthrough-['pca0',\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers8-passthrough-['a',\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers9-passthrough-['a',\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers10-passthrough-['a',\", \"sklearn/compose/tests/test_column_transformer.py::test_verbose_feature_names_out_false_errors[transformers11-passthrough-['a',\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_set_output[drop-True]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_set_output[drop-False]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_set_output[passthrough-True]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transformer_set_output[passthrough-False]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transform_set_output_mixed[True-drop]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transform_set_output_mixed[True-passthrough]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transform_set_output_mixed[False-drop]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transform_set_output_mixed[False-passthrough]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transform_set_output_after_fitting[drop]\", \"sklearn/compose/tests/test_column_transformer.py::test_column_transform_set_output_after_fitting[passthrough]\", \"sklearn/compose/tests/test_column_transformer.py::test_transformers_with_pandas_out_but_not_feature_names_out[trans_10-expected_verbose_names0-expected_non_verbose_names0]\", \"sklearn/compose/tests/test_column_transformer.py::test_transformers_with_pandas_out_but_not_feature_names_out[drop-expected_verbose_names1-expected_non_verbose_names1]\", \"sklearn/compose/tests/test_column_transformer.py::test_transformers_with_pandas_out_but_not_feature_names_out[passthrough-expected_verbose_names2-expected_non_verbose_names2]\"]",
  "environment_setup_commit": "1e8a5b833d1b58f3ab84099c4582239af854b23a",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.020522",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}