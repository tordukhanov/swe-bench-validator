{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-23413",
  "base_commit": "10de1a18a0efac0b19b611e40c928250dda688bf",
  "patch": "diff --git a/sympy/polys/matrices/normalforms.py b/sympy/polys/matrices/normalforms.py\n--- a/sympy/polys/matrices/normalforms.py\n+++ b/sympy/polys/matrices/normalforms.py\n@@ -205,16 +205,19 @@ def _hermite_normal_form(A):\n     if not A.domain.is_ZZ:\n         raise DMDomainError('Matrix must be over domain ZZ.')\n     # We work one row at a time, starting from the bottom row, and working our\n-    # way up. The total number of rows we will consider is min(m, n), where\n-    # A is an m x n matrix.\n+    # way up.\n     m, n = A.shape\n-    rows = min(m, n)\n     A = A.to_dense().rep.copy()\n     # Our goal is to put pivot entries in the rightmost columns.\n     # Invariant: Before processing each row, k should be the index of the\n     # leftmost column in which we have so far put a pivot.\n     k = n\n-    for i in range(m - 1, m - 1 - rows, -1):\n+    for i in range(m - 1, -1, -1):\n+        if k == 0:\n+            # This case can arise when n < m and we've already found n pivots.\n+            # We don't need to consider any more rows, because this is already\n+            # the maximum possible number of pivots.\n+            break\n         k -= 1\n         # k now points to the column in which we want to put a pivot.\n         # We want zeros in all entries to the left of the pivot column.\n",
  "test_patch": "diff --git a/sympy/matrices/tests/test_normalforms.py b/sympy/matrices/tests/test_normalforms.py\n--- a/sympy/matrices/tests/test_normalforms.py\n+++ b/sympy/matrices/tests/test_normalforms.py\n@@ -77,5 +77,11 @@ def test_hermite_normal():\n     assert hermite_normal_form(m) == hnf\n \n     m = Matrix([[2, 7], [0, 0], [0, 0]])\n-    hnf = Matrix(3, 0, [])\n+    hnf = Matrix([[1], [0], [0]])\n     assert hermite_normal_form(m) == hnf\n+\n+\n+def test_issue_23410():\n+    A = Matrix([[1, 12], [0, 8], [0, 5]])\n+    H = Matrix([[1, 0], [0, 8], [0, 5]])\n+    assert hermite_normal_form(A) == H\ndiff --git a/sympy/polys/matrices/tests/test_normalforms.py b/sympy/polys/matrices/tests/test_normalforms.py\n--- a/sympy/polys/matrices/tests/test_normalforms.py\n+++ b/sympy/polys/matrices/tests/test_normalforms.py\n@@ -62,7 +62,7 @@ def test_hermite_normal():\n     assert hermite_normal_form(m) == hnf\n \n     m = DM([[2, 7], [0, 0], [0, 0]], ZZ)\n-    hnf = DM([[], [], []], ZZ)\n+    hnf = DM([[1], [0], [0]], ZZ)\n     assert hermite_normal_form(m) == hnf\n \n     m = DM([[-2, 1], [0, 1]], ZZ)\n",
  "problem_statement": "bug with HNF removing rows\nI expect\r\n`np.flip (hermite_normal_form (Matrix (np.flip (np.array ([[5, 8, 12], [0, 0, 1]]))).T).T))`\r\nto give\r\n`[[5,  8, 0], [0,  0, 1]]`\r\nbut instead I get\r\n`[[5,  8, 0]]`\r\nIt seems to be falsely identifying my matrix as rank-deficient and removing the row when I try to achieve a row-style HNF using flips and transposes.\n",
  "hints_text": "Seems to depend on where the 1 is when it comes to do the hnf:\r\n```python\r\n>>> hermite_normal_form(Matrix([  # row2\r\n... [0, 12],\r\n... [1,  8],\r\n... [0,  5]]))\r\nMatrix([\r\n[0, 12],\r\n[1,  0],\r\n[0,  5]])\r\n>>> hermite_normal_form(Matrix([  # row3\r\n... [0, 12],\r\n... [0,  8],\r\n... [1,  5]]))\r\nMatrix([\r\n[12, 0],\r\n[ 8, 0],\r\n[ 0, 1]])\r\n>>> hermite_normal_form(Matrix([  # row1\r\n... [1, 12],\r\n... [0,  8],\r\n... [0,  5]]))\r\nMatrix([\r\n[12],\r\n[ 8],\r\n[ 5]])\r\n```\nThanks. I believe this may be related to the also recently opened bug https://github.com/sympy/sympy/issues/23260. \r\n\r\nIn Wolfram Language, I can just do `Last[HermiteDecomposition[{{5,8,12},{0,0,1}}]]` and get `{{5,8,0},{0,0,1}}` as expected. The above may be a workaround but it's not pretty.",
  "created_at": "2022-04-23T23:40:41Z",
  "version": "1.11",
  "FAIL_TO_PASS": "[\"test_hermite_normal\"]",
  "PASS_TO_PASS": "[\"test_smith_normal\", \"test_smith_normal_deprecated\"]",
  "environment_setup_commit": "9a6104eab0ea7ac191a09c24f3e2d79dcd66bda5",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.153119",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}