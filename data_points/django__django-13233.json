{
  "repo": "django/django",
  "instance_id": "django__django-13233",
  "base_commit": "41065cfed56d5408dd8f267b9e70089471a7f1be",
  "patch": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -299,6 +299,10 @@ def pre_save(self, model_instance, add):\n             file.save(file.name, file.file, save=False)\n         return file\n \n+    def contribute_to_class(self, cls, name, **kwargs):\n+        super().contribute_to_class(cls, name, **kwargs)\n+        setattr(cls, self.attname, self.descriptor_class(self))\n+\n     def generate_filename(self, instance, filename):\n         \"\"\"\n         Apply (if callable) or prepend (if a string) upload_to to the filename,\n",
  "test_patch": "diff --git a/tests/model_fields/test_filefield.py b/tests/model_fields/test_filefield.py\n--- a/tests/model_fields/test_filefield.py\n+++ b/tests/model_fields/test_filefield.py\n@@ -8,8 +8,9 @@\n from django.core.files import File, temp\n from django.core.files.base import ContentFile\n from django.core.files.uploadedfile import TemporaryUploadedFile\n-from django.db import IntegrityError\n+from django.db import IntegrityError, models\n from django.test import TestCase, override_settings\n+from django.test.utils import isolate_apps\n \n from .models import Document\n \n@@ -147,3 +148,21 @@ def test_pickle(self):\n                         self.assertEqual(document.myfile.field, loaded_myfile.field)\n                     finally:\n                         document.myfile.delete()\n+\n+    @isolate_apps('model_fields')\n+    def test_abstract_filefield_model(self):\n+        \"\"\"\n+        FileField.model returns the concrete model for fields defined in an\n+        abstract model.\n+        \"\"\"\n+        class AbstractMyDocument(models.Model):\n+            myfile = models.FileField(upload_to='unused')\n+\n+            class Meta:\n+                abstract = True\n+\n+        class MyDocument(AbstractMyDocument):\n+            pass\n+\n+        document = MyDocument(myfile='test_file.py')\n+        self.assertEqual(document.myfile.field.model, MyDocument)\n",
  "problem_statement": "The `model` attribute of image fields doesn't point to concrete model.\nDescription\n\t\nIn Django 3.1 and before, one could use the model attribute of image fields to find the concrete model the image field belongs to.\nThis isn't possible in 3.2 anymore, and I bisected the change to the fix of #31701.\nI found this while investigating a CI failure of django-imagefield â€‹https://travis-ci.org/github/matthiask/django-imagefield/jobs/710794644\nI'm not sure whether this is a bug or whether it is an intentional change. If it is the later, is there an alternative to find the concrete model an image field belongs to? I'm classifying this as a bug because the change made model and field introspection harder than it was before. Also, since behavior changed #31701 may possibly not be classified as a cleanup/optimization anymore...\n",
  "hints_text": "",
  "created_at": "2020-07-24T06:59:52Z",
  "version": "3.2",
  "FAIL_TO_PASS": "[\"test_abstract_filefield_model (model_fields.test_filefield.FileFieldTests)\"]",
  "PASS_TO_PASS": "[\"test_changed (model_fields.test_filefield.FileFieldTests)\", \"test_clearable (model_fields.test_filefield.FileFieldTests)\", \"test_defer (model_fields.test_filefield.FileFieldTests)\", \"test_delete_when_file_unset (model_fields.test_filefield.FileFieldTests)\", \"test_media_root_pathlib (model_fields.test_filefield.FileFieldTests)\", \"test_move_temporary_file (model_fields.test_filefield.FileFieldTests)\", \"test_open_returns_self (model_fields.test_filefield.FileFieldTests)\", \"test_pickle (model_fields.test_filefield.FileFieldTests)\", \"test_refresh_from_db (model_fields.test_filefield.FileFieldTests)\", \"test_unchanged (model_fields.test_filefield.FileFieldTests)\", \"test_unique_when_same_filename (model_fields.test_filefield.FileFieldTests)\"]",
  "environment_setup_commit": "65dfb06a1ab56c238cc80f5e1c31f61210c4577d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.648106",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}