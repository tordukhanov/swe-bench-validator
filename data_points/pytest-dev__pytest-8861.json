{
  "repo": "pytest-dev/pytest",
  "instance_id": "pytest-dev__pytest-8861",
  "base_commit": "6740fb9da6dd21b3f1d2f6c3980605f4f7c9e81d",
  "patch": "diff --git a/src/_pytest/doctest.py b/src/_pytest/doctest.py\n--- a/src/_pytest/doctest.py\n+++ b/src/_pytest/doctest.py\n@@ -500,12 +500,18 @@ class MockAwareDocTestFinder(doctest.DocTestFinder):\n \n             def _find_lineno(self, obj, source_lines):\n                 \"\"\"Doctest code does not take into account `@property`, this\n-                is a hackish way to fix it.\n+                is a hackish way to fix it. https://bugs.python.org/issue17446\n \n-                https://bugs.python.org/issue17446\n+                Wrapped Doctests will need to be unwrapped so the correct\n+                line number is returned. This will be reported upstream. #8796\n                 \"\"\"\n                 if isinstance(obj, property):\n                     obj = getattr(obj, \"fget\", obj)\n+\n+                if hasattr(obj, \"__wrapped__\"):\n+                    # Get the main obj in case of it being wrapped\n+                    obj = inspect.unwrap(obj)\n+\n                 # Type ignored because this is a private function.\n                 return doctest.DocTestFinder._find_lineno(  # type: ignore\n                     self,\n",
  "test_patch": "diff --git a/testing/test_doctest.py b/testing/test_doctest.py\n--- a/testing/test_doctest.py\n+++ b/testing/test_doctest.py\n@@ -1164,6 +1164,41 @@ def test_continue_on_failure(self, pytester: Pytester):\n             [\"*4: UnexpectedException*\", \"*5: DocTestFailure*\", \"*8: DocTestFailure*\"]\n         )\n \n+    def test_skipping_wrapped_test(self, pytester):\n+        \"\"\"\n+        Issue 8796: INTERNALERROR raised when skipping a decorated DocTest\n+        through pytest_collection_modifyitems.\n+        \"\"\"\n+        pytester.makeconftest(\n+            \"\"\"\n+            import pytest\n+            from _pytest.doctest import DoctestItem\n+\n+            def pytest_collection_modifyitems(config, items):\n+                skip_marker = pytest.mark.skip()\n+\n+                for item in items:\n+                    if isinstance(item, DoctestItem):\n+                        item.add_marker(skip_marker)\n+            \"\"\"\n+        )\n+\n+        pytester.makepyfile(\n+            \"\"\"\n+            from contextlib import contextmanager\n+\n+            @contextmanager\n+            def my_config_context():\n+                '''\n+                >>> import os\n+                '''\n+            \"\"\"\n+        )\n+\n+        result = pytester.runpytest(\"--doctest-modules\")\n+        assert \"INTERNALERROR\" not in result.stdout.str()\n+        result.assert_outcomes(skipped=1)\n+\n \n class TestDoctestAutoUseFixtures:\n \n",
  "problem_statement": "Internal error when adding a skip mark to a doctest inside a contextmanager\nTo reproduce:\r\n\r\n```py\r\n# conftest.py\r\nimport pytest\r\nfrom _pytest.doctest import DoctestItem\r\n\r\n\r\ndef pytest_collection_modifyitems(config, items):\r\n    skip_marker = pytest.mark.skip(reason='Skipping doctests')\r\n\r\n    for item in items:\r\n        if isinstance(item, DoctestItem):\r\n            item.add_marker(skip_marker)\r\n```\r\n\r\n```py\r\n# test.py\r\nfrom contextlib import contextmanager\r\n\r\n@contextmanager\r\ndef my_config_context():\r\n    \"\"\"\r\n    >>> import os\r\n    \"\"\"\r\n```\r\n\r\n```\r\n❯ pytest test.py --doctest-modules\r\n=========================================================== test session starts ============================================================\r\nplatform linux -- Python 3.9.5, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\nrootdir: /tmp\r\ncollected 1 item                                                                                                                           \r\n\r\ntest.py \r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/_pytest/main.py\", line 269, in wrap_session\r\nINTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/_pytest/main.py\", line 323, in _main\r\nINTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/pluggy/manager.py\", line 84, in <lambda>\r\nINTERNALERROR>     self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/_pytest/main.py\", line 348, in pytest_runtestloop\r\nINTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/pluggy/manager.py\", line 84, in <lambda>\r\nINTERNALERROR>     self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/_pytest/runner.py\", line 109, in pytest_runtest_protocol\r\nINTERNALERROR>     runtestprotocol(item, nextitem=nextitem)\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/_pytest/runner.py\", line 120, in runtestprotocol\r\nINTERNALERROR>     rep = call_and_report(item, \"setup\", log)\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/_pytest/runner.py\", line 217, in call_and_report\r\nINTERNALERROR>     report: TestReport = hook.pytest_runtest_makereport(item=item, call=call)\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/pluggy/hooks.py\", line 286, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/pluggy/manager.py\", line 93, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/pluggy/manager.py\", line 84, in <lambda>\r\nINTERNALERROR>     self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/pluggy/callers.py\", line 203, in _multicall\r\nINTERNALERROR>     gen.send(outcome)\r\nINTERNALERROR>   File \"/home/lesteve/miniconda3/envs/test/lib/python3.9/site-packages/_pytest/skipping.py\", line 314, in pytest_runtest_makereport\r\nINTERNALERROR>     assert line is not None\r\nINTERNALERROR> AssertionError\r\n\r\n========================================================== no tests ran in 0.01s ===========================================================\r\n```\r\n\r\nThis is a simplified issue from a real use case in the scikit-learn repo. We sometimes want to skip doctests, for example when matplotlib (an optional dependency) is not installed. If there is be a better way to do it with pytest than using `pytest_collection_modifyitems`, let me know.\r\n\r\n<details>\r\n<summary>conda list output</summary>\r\n\r\n```\r\n❯ conda list\r\n# packages in environment at /home/lesteve/miniconda3/envs/test:\r\n#\r\n# Name                    Version                   Build  Channel\r\n_libgcc_mutex             0.1                        main  \r\n_openmp_mutex             4.5                       1_gnu  \r\nattrs                     21.2.0             pyhd3eb1b0_0  \r\nca-certificates           2021.5.25            h06a4308_1  \r\ncertifi                   2021.5.30        py39h06a4308_0  \r\niniconfig                 1.1.1              pyhd3eb1b0_0  \r\nld_impl_linux-64          2.35.1               h7274673_9  \r\nlibffi                    3.3                  he6710b0_2  \r\nlibgcc-ng                 9.3.0               h5101ec6_17  \r\nlibgomp                   9.3.0               h5101ec6_17  \r\nlibstdcxx-ng              9.3.0               hd4cf53a_17  \r\nmore-itertools            8.8.0              pyhd3eb1b0_0  \r\nncurses                   6.2                  he6710b0_1  \r\nopenssl                   1.1.1k               h27cfd23_0  \r\npackaging                 20.9               pyhd3eb1b0_0  \r\npip                       21.1.2           py39h06a4308_0  \r\npluggy                    0.13.1           py39h06a4308_0  \r\npy                        1.10.0             pyhd3eb1b0_0  \r\npyparsing                 2.4.7              pyhd3eb1b0_0  \r\npytest                    6.2.4            py39h06a4308_2  \r\npython                    3.9.5                h12debd9_4  \r\nreadline                  8.1                  h27cfd23_0  \r\nsetuptools                52.0.0           py39h06a4308_0  \r\nsix                       1.16.0             pyhd3eb1b0_0  \r\nsqlite                    3.36.0               hc218d9a_0  \r\ntk                        8.6.10               hbc83047_0  \r\ntoml                      0.10.2             pyhd3eb1b0_0  \r\ntzdata                    2021a                h52ac0ba_0  \r\nwheel                     0.36.2             pyhd3eb1b0_0  \r\nxz                        5.2.5                h7b6447c_0  \r\nzlib                      1.2.11               h7b6447c_3  \r\n```\r\n\r\n</details>\n",
  "hints_text": "Taking a look at this issue 👍 ",
  "created_at": "2021-07-06T16:29:51Z",
  "version": "7.0",
  "FAIL_TO_PASS": "[\"testing/test_doctest.py::TestDoctestSkips::test_skipping_wrapped_test\"]",
  "PASS_TO_PASS": "[\"testing/test_doctest.py::TestLiterals::test_number_re\", \"testing/test_doctest.py::test_warning_on_unwrap_of_broken_object[None]\", \"testing/test_doctest.py::test_warning_on_unwrap_of_broken_object[_is_mocked]\", \"testing/test_doctest.py::test_warning_on_unwrap_of_broken_object[<lambda>0]\", \"testing/test_doctest.py::test_warning_on_unwrap_of_broken_object[<lambda>1]\", \"testing/test_doctest.py::test_warning_on_unwrap_of_broken_object[<lambda>2]\", \"testing/test_doctest.py::test_is_setup_py_not_named_setup_py\", \"testing/test_doctest.py::test_is_setup_py_is_a_setup_py[setuptools]\", \"testing/test_doctest.py::test_is_setup_py_is_a_setup_py[distutils.core]\", \"testing/test_doctest.py::test_is_setup_py_different_encoding[setuptools]\", \"testing/test_doctest.py::test_is_setup_py_different_encoding[distutils.core]\", \"testing/test_doctest.py::TestDoctests::test_collect_testtextfile\", \"testing/test_doctest.py::TestDoctests::test_collect_module_empty\", \"testing/test_doctest.py::TestDoctests::test_collect_module_single_modulelevel_doctest\", \"testing/test_doctest.py::TestDoctests::test_collect_module_two_doctest_one_modulelevel\", \"testing/test_doctest.py::TestDoctests::test_collect_module_two_doctest_no_modulelevel[__init__]\", \"testing/test_doctest.py::TestDoctests::test_collect_module_two_doctest_no_modulelevel[whatever]\", \"testing/test_doctest.py::TestDoctests::test_simple_doctestfile\", \"testing/test_doctest.py::TestDoctests::test_new_pattern\", \"testing/test_doctest.py::TestDoctests::test_multiple_patterns\", \"testing/test_doctest.py::TestDoctests::test_encoding[foo-ascii]\", \"testing/test_doctest.py::TestDoctests::test_encoding[\\\\xf6\\\\xe4\\\\xfc-latin1]\", \"testing/test_doctest.py::TestDoctests::test_encoding[\\\\xf6\\\\xe4\\\\xfc-utf-8]\", \"testing/test_doctest.py::TestDoctests::test_doctest_unexpected_exception\", \"testing/test_doctest.py::TestDoctests::test_doctest_outcomes\", \"testing/test_doctest.py::TestDoctests::test_docstring_partial_context_around_error\", \"testing/test_doctest.py::TestDoctests::test_docstring_full_context_around_error\", \"testing/test_doctest.py::TestDoctests::test_doctest_linedata_missing\", \"testing/test_doctest.py::TestDoctests::test_doctest_linedata_on_property\", \"testing/test_doctest.py::TestDoctests::test_doctest_no_linedata_on_overriden_property\", \"testing/test_doctest.py::TestDoctests::test_doctest_unex_importerror_only_txt\", \"testing/test_doctest.py::TestDoctests::test_doctest_unex_importerror_with_module\", \"testing/test_doctest.py::TestDoctests::test_doctestmodule\", \"testing/test_doctest.py::TestDoctests::test_doctestmodule_external_and_issue116\", \"testing/test_doctest.py::TestDoctests::test_txtfile_failing\", \"testing/test_doctest.py::TestDoctests::test_txtfile_with_fixtures\", \"testing/test_doctest.py::TestDoctests::test_txtfile_with_usefixtures_in_ini\", \"testing/test_doctest.py::TestDoctests::test_doctestmodule_with_fixtures\", \"testing/test_doctest.py::TestDoctests::test_doctestmodule_three_tests\", \"testing/test_doctest.py::TestDoctests::test_doctestmodule_two_tests_one_fail\", \"testing/test_doctest.py::TestDoctests::test_ignored_whitespace\", \"testing/test_doctest.py::TestDoctests::test_non_ignored_whitespace\", \"testing/test_doctest.py::TestDoctests::test_ignored_whitespace_glob\", \"testing/test_doctest.py::TestDoctests::test_non_ignored_whitespace_glob\", \"testing/test_doctest.py::TestDoctests::test_contains_unicode\", \"testing/test_doctest.py::TestDoctests::test_ignore_import_errors_on_doctest\", \"testing/test_doctest.py::TestDoctests::test_junit_report_for_doctest\", \"testing/test_doctest.py::TestDoctests::test_unicode_doctest\", \"testing/test_doctest.py::TestDoctests::test_unicode_doctest_module\", \"testing/test_doctest.py::TestDoctests::test_print_unicode_value\", \"testing/test_doctest.py::TestDoctests::test_reportinfo\", \"testing/test_doctest.py::TestDoctests::test_valid_setup_py\", \"testing/test_doctest.py::TestDoctests::test_invalid_setup_py\", \"testing/test_doctest.py::TestLiterals::test_allow_unicode[ini]\", \"testing/test_doctest.py::TestLiterals::test_allow_unicode[comment]\", \"testing/test_doctest.py::TestLiterals::test_allow_bytes[ini]\", \"testing/test_doctest.py::TestLiterals::test_allow_bytes[comment]\", \"testing/test_doctest.py::TestLiterals::test_unicode_string\", \"testing/test_doctest.py::TestLiterals::test_bytes_literal\", \"testing/test_doctest.py::TestLiterals::test_number_precision[ini]\", \"testing/test_doctest.py::TestLiterals::test_number_precision[comment]\", \"testing/test_doctest.py::TestLiterals::test_number_non_matches[3.0-3]\", \"testing/test_doctest.py::TestLiterals::test_number_non_matches[3e0-3]\", \"testing/test_doctest.py::TestLiterals::test_number_non_matches[1e3-1000]\", \"testing/test_doctest.py::TestLiterals::test_number_non_matches[3-3.0]\", \"testing/test_doctest.py::TestLiterals::test_number_non_matches[3.1-3.0]\", \"testing/test_doctest.py::TestLiterals::test_number_non_matches[3.1-3.2]\", \"testing/test_doctest.py::TestLiterals::test_number_non_matches[3.1-4.0]\", \"testing/test_doctest.py::TestLiterals::test_number_non_matches[8.22e5-810000.0]\", \"testing/test_doctest.py::TestLiterals::test_number_non_matches[3.0-2.98]\", \"testing/test_doctest.py::TestLiterals::test_number_non_matches[1e3-999]\", \"testing/test_doctest.py::TestLiterals::test_number_and_allow_unicode\", \"testing/test_doctest.py::TestDoctestSkips::test_one_skipped[text]\", \"testing/test_doctest.py::TestDoctestSkips::test_one_skipped[module]\", \"testing/test_doctest.py::TestDoctestSkips::test_one_skipped_failed[text]\", \"testing/test_doctest.py::TestDoctestSkips::test_one_skipped_failed[module]\", \"testing/test_doctest.py::TestDoctestSkips::test_all_skipped[text]\", \"testing/test_doctest.py::TestDoctestSkips::test_all_skipped[module]\", \"testing/test_doctest.py::TestDoctestSkips::test_vacuous_all_skipped[text]\", \"testing/test_doctest.py::TestDoctestSkips::test_vacuous_all_skipped[module]\", \"testing/test_doctest.py::TestDoctestSkips::test_continue_on_failure\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_doctest_module_session_fixture\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_scopes[True-module]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_scopes[True-session]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_scopes[True-class]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_scopes[True-function]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_scopes[False-module]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_scopes[False-session]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_scopes[False-class]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_scopes[False-function]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_module_doctest_scopes[True-True-module]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_module_doctest_scopes[True-True-session]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_module_doctest_scopes[True-True-class]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_module_doctest_scopes[True-True-function]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_module_doctest_scopes[True-False-module]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_module_doctest_scopes[True-False-session]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_module_doctest_scopes[True-False-class]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_module_doctest_scopes[True-False-function]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_module_doctest_scopes[False-True-module]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_module_doctest_scopes[False-True-session]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_module_doctest_scopes[False-True-class]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_module_doctest_scopes[False-True-function]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_module_doctest_scopes[False-False-module]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_module_doctest_scopes[False-False-session]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_module_doctest_scopes[False-False-class]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_fixture_module_doctest_scopes[False-False-function]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_auto_use_request_attributes[module]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_auto_use_request_attributes[session]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_auto_use_request_attributes[class]\", \"testing/test_doctest.py::TestDoctestAutoUseFixtures::test_auto_use_request_attributes[function]\", \"testing/test_doctest.py::TestDoctestNamespaceFixture::test_namespace_doctestfile[module]\", \"testing/test_doctest.py::TestDoctestNamespaceFixture::test_namespace_doctestfile[session]\", \"testing/test_doctest.py::TestDoctestNamespaceFixture::test_namespace_doctestfile[class]\", \"testing/test_doctest.py::TestDoctestNamespaceFixture::test_namespace_doctestfile[function]\", \"testing/test_doctest.py::TestDoctestNamespaceFixture::test_namespace_pyfile[module]\", \"testing/test_doctest.py::TestDoctestNamespaceFixture::test_namespace_pyfile[session]\", \"testing/test_doctest.py::TestDoctestNamespaceFixture::test_namespace_pyfile[class]\", \"testing/test_doctest.py::TestDoctestNamespaceFixture::test_namespace_pyfile[function]\", \"testing/test_doctest.py::TestDoctestReportingOption::test_doctest_report_udiff[udiff]\", \"testing/test_doctest.py::TestDoctestReportingOption::test_doctest_report_udiff[UDIFF]\", \"testing/test_doctest.py::TestDoctestReportingOption::test_doctest_report_udiff[uDiFf]\", \"testing/test_doctest.py::TestDoctestReportingOption::test_doctest_report_cdiff\", \"testing/test_doctest.py::TestDoctestReportingOption::test_doctest_report_ndiff\", \"testing/test_doctest.py::TestDoctestReportingOption::test_doctest_report_none_or_only_first_failure[none]\", \"testing/test_doctest.py::TestDoctestReportingOption::test_doctest_report_none_or_only_first_failure[only_first_failure]\", \"testing/test_doctest.py::TestDoctestReportingOption::test_doctest_report_invalid\", \"testing/test_doctest.py::test_doctest_mock_objects_dont_recurse_missbehaved[unittest.mock]\"]",
  "environment_setup_commit": "e2ee3144ed6e241dea8d96215fcdca18b3892551",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.944240",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}