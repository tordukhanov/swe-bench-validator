{
  "repo": "pytest-dev/pytest",
  "instance_id": "pytest-dev__pytest-9279",
  "base_commit": "86446edc869f14de4d9e32d9f1fa4d8cd1df8cb6",
  "patch": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -669,9 +669,13 @@ def __init__(\n         nodeid: Optional[str] = None,\n         **kw,\n     ) -> None:\n+        # The first two arguments are intentionally passed positionally,\n+        # to keep plugins who define a node type which inherits from\n+        # (pytest.Item, pytest.File) working (see issue #8435).\n+        # They can be made kwargs when the deprecation above is done.\n         super().__init__(\n-            name=name,\n-            parent=parent,\n+            name,\n+            parent,\n             config=config,\n             session=session,\n             nodeid=nodeid,\n",
  "test_patch": "diff --git a/testing/test_nodes.py b/testing/test_nodes.py\n--- a/testing/test_nodes.py\n+++ b/testing/test_nodes.py\n@@ -71,7 +71,7 @@ def test_subclassing_both_item_and_collector_deprecated(\n         ),\n     ):\n \n-        class SoWrong(nodes.File, nodes.Item):\n+        class SoWrong(nodes.Item, nodes.File):\n             def __init__(self, fspath, parent):\n                 \"\"\"Legacy ctor with legacy call # don't wana see\"\"\"\n                 super().__init__(fspath, parent)\n",
  "problem_statement": "Unexpected keyword argument 'path' from plugins\nWhile troubleshooting #8332, I stumbled onto a new error, a `TypeError` that occurs when using pytest-black against the current main HEAD (32ad70d), easily reproducible with an empty test file and pip-run:\r\n\r\n```\r\ndraft $ touch test_something.py\r\ndraft $ pip-run -q git+https://github.com/pytest-dev/pytest pytest-black -- -m pytest --black\r\n===================================================================================== test session starts =====================================================================================\r\nplatform darwin -- Python 3.9.2, pytest-6.3.0.dev252+g32ad70dea, py-1.10.0, pluggy-0.13.1\r\nrootdir: /Users/jaraco/draft\r\nplugins: black-0.3.12\r\ncollected 0 items / 1 error                                                                                                                                                                   \r\n\r\n=========================================================================================== ERRORS ============================================================================================\r\n________________________________________________________________________________ ERROR collecting test session ________________________________________________________________________________\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-j9xn8e36/pluggy/hooks.py:286: in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-j9xn8e36/pluggy/manager.py:93: in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-j9xn8e36/pluggy/manager.py:84: in <lambda>\r\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-j9xn8e36/pytest_black.py:27: in pytest_collect_file\r\n    return BlackItem.from_parent(parent, fspath=path)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-j9xn8e36/_pytest/nodes.py:578: in from_parent\r\n    return super().from_parent(parent=parent, fspath=fspath, path=path, **kw)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-j9xn8e36/_pytest/nodes.py:226: in from_parent\r\n    return cls._create(parent=parent, **kw)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-j9xn8e36/_pytest/nodes.py:117: in _create\r\n    return super().__call__(*k, **kw)\r\nE   TypeError: __init__() got an unexpected keyword argument 'path'\r\n=================================================================================== short test summary info ===================================================================================\r\nERROR  - TypeError: __init__() got an unexpected keyword argument 'path'\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n====================================================================================== 1 error in 0.13s =======================================================================================\r\n```\r\n\r\nSame problem happens with pytest-checkdocs:\r\n\r\n```\r\ndraft $ touch setup.py\r\ndraft $ pip-run -q git+https://github.com/pytest-dev/pytest pytest-checkdocs -- -m pytest\r\n===================================================================================== test session starts =====================================================================================\r\nplatform darwin -- Python 3.9.2, pytest-6.3.0.dev252+g32ad70dea, py-1.10.0, pluggy-0.13.1\r\nrootdir: /Users/jaraco/draft\r\nplugins: checkdocs-2.4.0\r\ncollected 0 items / 1 error                                                                                                                                                                   \r\n\r\n=========================================================================================== ERRORS ============================================================================================\r\n________________________________________________________________________________ ERROR collecting test session ________________________________________________________________________________\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-5hc5__bb/pluggy/hooks.py:286: in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-5hc5__bb/pluggy/manager.py:93: in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-5hc5__bb/pluggy/manager.py:84: in <lambda>\r\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-5hc5__bb/pytest_checkdocs/__init__.py:14: in pytest_collect_file\r\n    CheckdocsItem.from_parent(parent, fspath=path)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-5hc5__bb/pytest_checkdocs/__init__.py:52: in from_parent\r\n    return super().from_parent(parent, fspath=fspath)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-5hc5__bb/_pytest/nodes.py:578: in from_parent\r\n    return super().from_parent(parent=parent, fspath=fspath, path=path, **kw)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-5hc5__bb/_pytest/nodes.py:226: in from_parent\r\n    return cls._create(parent=parent, **kw)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-5hc5__bb/_pytest/nodes.py:117: in _create\r\n    return super().__call__(*k, **kw)\r\nE   TypeError: __init__() got an unexpected keyword argument 'path'\r\n=================================================================================== short test summary info ===================================================================================\r\nERROR  - TypeError: __init__() got an unexpected keyword argument 'path'\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n====================================================================================== 1 error in 0.20s =======================================================================================\r\n```\n",
  "hints_text": "Hey @jaraco, \r\n\r\nI'm making a quick guess as I don't have time to delve deep into the code, but perhaps `from_parent` in `pytest_checkdocs/__init__.py:52` needs to receive `**kw` and pass that on to `super()`?\r\n\r\ncc @RonnyPfannschmidt \nThat's about it, I wonder if i can make this one a warning for the next releases \n> Perhaps `from_parent` in `pytest_checkdocs/__init__.py:52` needs to receive `**kw` and pass that on to `super()`?\r\n\r\nYes, perhaps. And also pytest-black and pytest-mypy and pytest-flake8 likely and maybe others.\nSounds like I definitely should sort out the signature of the create call and issue a warning \nI tried applying the suggested workaround.\r\n\r\n```diff\r\ndiff --git a/pytest_checkdocs/__init__.py b/pytest_checkdocs/__init__.py\r\nindex 3162319..8469ebe 100644\r\n--- a/pytest_checkdocs/__init__.py\r\n+++ b/pytest_checkdocs/__init__.py\r\n@@ -38,18 +38,18 @@ class Description(str):\r\n \r\n \r\n class CheckdocsItem(pytest.Item, pytest.File):\r\n-    def __init__(self, fspath, parent):\r\n+    def __init__(self, fspath, parent, **kw):\r\n         # ugly hack to add support for fspath parameter\r\n         # Ref pytest-dev/pytest#6928\r\n-        super().__init__(fspath, parent)\r\n+        super().__init__(fspath, parent, **kw)\r\n \r\n     @classmethod\r\n-    def from_parent(cls, parent, fspath):\r\n+    def from_parent(cls, parent, fspath, **kw):\r\n         \"\"\"\r\n         Compatibility shim to support\r\n         \"\"\"\r\n         try:\r\n-            return super().from_parent(parent, fspath=fspath)\r\n+            return super().from_parent(parent, fspath=fspath, **kw)\r\n         except AttributeError:\r\n             # pytest < 5.4\r\n             return cls(fspath, parent)\r\n```\r\n\r\nBut that only pushed the error down:\r\n\r\n```\r\n________________________________________________________________________________ ERROR collecting test session ________________________________________________________________________________\r\n.tox/python/lib/python3.9/site-packages/pluggy/hooks.py:286: in __call__\r\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\r\n.tox/python/lib/python3.9/site-packages/pluggy/manager.py:93: in _hookexec\r\n    return self._inner_hookexec(hook, methods, kwargs)\r\n.tox/python/lib/python3.9/site-packages/pluggy/manager.py:84: in <lambda>\r\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\r\npytest_checkdocs/__init__.py:14: in pytest_collect_file\r\n    CheckdocsItem.from_parent(parent, fspath=path)\r\npytest_checkdocs/__init__.py:52: in from_parent\r\n    return super().from_parent(parent, fspath=fspath, **kw)\r\n.tox/python/lib/python3.9/site-packages/_pytest/nodes.py:578: in from_parent\r\n    return super().from_parent(parent=parent, fspath=fspath, path=path, **kw)\r\n.tox/python/lib/python3.9/site-packages/_pytest/nodes.py:226: in from_parent\r\n    return cls._create(parent=parent, **kw)\r\n.tox/python/lib/python3.9/site-packages/_pytest/nodes.py:117: in _create\r\n    return super().__call__(*k, **kw)\r\npytest_checkdocs/__init__.py:44: in __init__\r\n    super().__init__(fspath, parent, **kw)\r\nE   TypeError: __init__() got an unexpected keyword argument 'path'\r\n```\r\n\r\n(I tried it with and without adding `**kw` to `__init__`).\r\n\r\nI don't understand what these hacks are trying to accomplish, so I'm out of my depth. If someone more familiar with the changes to the interfaces could suggest a fix, I'd be happy to test it and incorporate it. I'm also happy to drop support for older pytest versions (prior to 5.4) if that helps.\n@jaraco problem is that the hacks to make the switch from fspath to just pathlib paths where incomplete, and the backward compatibility handling is not yet aware of non keyword parameters\n\nIf you pass everything as keywords it should work,\n\nI should however fix that way of invocation\n@jaraco the correct fix  is to stop merging items and files, currently python has absolutely no sane support for that inheritance structure, it worked by sheer accident, we should actually just deprecate collecting items and collectors together \r\n\r\ni`m going to add a fitting deprecation warning\nThe bugs reported here still exist in pytest-black and pytest-flake8, even though they've been fixed in pytest-checkdocs and pytest.mypy. \n@jaraco does it happen against pytest main, or the last release?\nMain. I only report the status here because I was too lazy to report it to the downstream projects.\r\n\r\n<details>\r\n\r\n```\r\ndraft $ touch test_something.py\r\ndraft $ pip-run -q git+https://github.com/pytest-dev/pytest pytest-black -- -m pytest --black\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-kozax3_l/_pytest/nodes.py:654: PytestWarning: BlackItem is an Item subclass and should not be a collector, however its bases File are collectors.\r\nPlease split the Collectors and the Item into separate node types.\r\nPytest Doc example: https://docs.pytest.org/en/latest/example/nonpython.html\r\nexample pull request on a plugin: https://github.com/asmeurer/pytest-flakes/pull/40/\r\n  warnings.warn(\r\n======================================================================== test session starts ========================================================================\r\nplatform darwin -- Python 3.10.0, pytest-7.0.0.dev291+g7037a587, pluggy-1.0.0\r\nrootdir: /Users/jaraco/draft\r\nplugins: black-0.3.12\r\ncollected 0 items / 1 error                                                                                                                                         \r\n\r\n============================================================================== ERRORS ===============================================================================\r\n___________________________________________________________________ ERROR collecting test session ___________________________________________________________________\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-kozax3_l/_pytest/nodes.py:140: in _create\r\n    return super().__call__(*k, **kw)\r\nE   TypeError: BlackItem.__init__() got an unexpected keyword argument 'path'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-kozax3_l/pluggy/_hooks.py:265: in __call__\r\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-kozax3_l/pluggy/_manager.py:80: in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-kozax3_l/pytest_black.py:27: in pytest_collect_file\r\n    return BlackItem.from_parent(parent, fspath=path)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-kozax3_l/_pytest/nodes.py:623: in from_parent\r\n    return super().from_parent(parent=parent, fspath=fspath, path=path, **kw)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-kozax3_l/_pytest/nodes.py:256: in from_parent\r\n    return cls._create(parent=parent, **kw)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-kozax3_l/_pytest/nodes.py:152: in _create\r\n    return super().__call__(*k, **known_kw)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-kozax3_l/pytest_black.py:47: in __init__\r\n    super(BlackItem, self).__init__(fspath, parent)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-kozax3_l/_pytest/nodes.py:672: in __init__\r\n    super().__init__(\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-kozax3_l/_pytest/nodes.py:578: in __init__\r\n    path = _imply_path(type(self), path, fspath=fspath)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-kozax3_l/_pytest/nodes.py:121: in _imply_path\r\n    assert fspath is not None\r\nE   AssertionError\r\n====================================================================== short test summary info ======================================================================\r\nERROR  - AssertionError\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n========================================================================= 1 error in 0.09s ==========================================================================\r\ndraft $ pip-run -q git+https://github.com/pytest-dev/pytest pytest-flake8 -- -m pytest --flake8\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-dbk66s9v/_pytest/nodes.py:654: PytestWarning: Flake8Item is an Item subclass and should not be a collector, however its bases File are collectors.\r\nPlease split the Collectors and the Item into separate node types.\r\nPytest Doc example: https://docs.pytest.org/en/latest/example/nonpython.html\r\nexample pull request on a plugin: https://github.com/asmeurer/pytest-flakes/pull/40/\r\n  warnings.warn(\r\n======================================================================== test session starts ========================================================================\r\nplatform darwin -- Python 3.10.0, pytest-7.0.0.dev291+g7037a587, pluggy-1.0.0\r\nrootdir: /Users/jaraco/draft\r\nplugins: flake8-1.0.7\r\ncollected 0 items / 1 error                                                                                                                                         \r\n\r\n============================================================================== ERRORS ===============================================================================\r\n___________________________________________________________________ ERROR collecting test session ___________________________________________________________________\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-dbk66s9v/_pytest/nodes.py:140: in _create\r\n    return super().__call__(*k, **kw)\r\nE   TypeError: Flake8Item.__init__() got an unexpected keyword argument 'path'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-dbk66s9v/pluggy/_hooks.py:265: in __call__\r\n    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-dbk66s9v/pluggy/_manager.py:80: in _hookexec\r\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-dbk66s9v/pytest_flake8.py:67: in pytest_collect_file\r\n    item = Flake8Item.from_parent(parent, fspath=path)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-dbk66s9v/_pytest/nodes.py:623: in from_parent\r\n    return super().from_parent(parent=parent, fspath=fspath, path=path, **kw)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-dbk66s9v/_pytest/nodes.py:256: in from_parent\r\n    return cls._create(parent=parent, **kw)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-dbk66s9v/_pytest/nodes.py:152: in _create\r\n    return super().__call__(*k, **known_kw)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-dbk66s9v/pytest_flake8.py:99: in __init__\r\n    super(Flake8Item, self).__init__(fspath, parent)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-dbk66s9v/_pytest/nodes.py:672: in __init__\r\n    super().__init__(\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-dbk66s9v/_pytest/nodes.py:578: in __init__\r\n    path = _imply_path(type(self), path, fspath=fspath)\r\n/var/folders/c6/v7hnmq453xb6p2dbz1gqc6rr0000gn/T/pip-run-dbk66s9v/_pytest/nodes.py:121: in _imply_path\r\n    assert fspath is not None\r\nE   AssertionError\r\n====================================================================== short test summary info ======================================================================\r\nERROR  - AssertionError\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n========================================================================= 1 error in 0.10s ==========================================================================\r\n```\r\n\r\n</details>\n@bluetech Could this be related to the recent change in imply? \nI don't think it's a recent regression. I think the regression happened due to a refactoring in main. I believe the original analysis is still the same. I just came in to report that this incompatibility still exists. I've since filed issues with the downstream projects so they're aware of the impending, intended breakage.\nThe assert `assert fspath is not None` is not supposed to trigger. I will try to look at this soon.\nTL;DR: @RonnyPfannschmidt should look at the diff below and say if we want to go ahead with it to keep this plugins working for a bit longer, or accept the breakage. My opinion is that we should apply it, so the plugins have a chance to fix their code, otherwise they go from working -> broken without deprecation in the middle.\r\n\r\n---\r\n\r\nThe source of the trouble in both pytest-black and pytest-flake8 is that they have their item type inherit from both `pytest.Item` and `pytest.File`. This is already deprecated; I wonder where that pattern came from -- maybe we had bad docs at some point? -- but anyway the entire thing worked only by accident. \r\n\r\nTaking pytest-black as an example, it does\r\n\r\n```py\r\nclass BlackItem(pytest.Item, pytest.File):\r\n    def __init__(self, fspath, parent):\r\n        super(BlackItem, self).__init__(fspath, parent)\r\n```\r\n\r\nthe MRO here is\r\n\r\n```\r\n<class 'pytest_black.BlackItem'>\r\n<class '_pytest.nodes.Item'>\r\n<class '_pytest.nodes.File'>\r\n<class '_pytest.nodes.FSCollector'>\r\n<class '_pytest.nodes.Collector'>\r\n<class '_pytest.nodes.Node'>\r\n<class 'object'>\r\n```\r\n\r\nof interest are the `Item` ctor:\r\n\r\n```py\r\n    def __init__(\r\n        self,\r\n        name,\r\n        parent=None,\r\n        config: Optional[Config] = None,\r\n        session: Optional[\"Session\"] = None,\r\n        nodeid: Optional[str] = None,\r\n        **kw,\r\n    ) -> None:\r\n        super().__init__(\r\n            name=name,\r\n            parent=parent,\r\n            config=config,\r\n            session=session,\r\n            nodeid=nodeid,\r\n            **kw,\r\n        )\r\n```\r\n\r\nand the `FSCollector` ctor:\r\n\r\n```py\r\nclass FSCollector(Collector):\r\n    def __init__(\r\n        self,\r\n        fspath: Optional[LEGACY_PATH] = None,\r\n        path_or_parent: Optional[Union[Path, Node]] = None,\r\n        path: Optional[Path] = None,\r\n        name: Optional[str] = None,\r\n        parent: Optional[Node] = None,\r\n        config: Optional[Config] = None,\r\n        session: Optional[\"Session\"] = None,\r\n        nodeid: Optional[str] = None,\r\n    ) -> None:\r\n        if path_or_parent:\r\n            if isinstance(path_or_parent, Node):\r\n                assert parent is None\r\n                parent = cast(FSCollector, path_or_parent)\r\n            elif isinstance(path_or_parent, Path):\r\n                assert path is None\r\n                path = path_or_parent\r\n\r\n        path = _imply_path(type(self), path, fspath=fspath)\r\n```\r\n\r\nYou can see how the `fspath` gets lost here -- it is interpreted as `name`. Before d7b0e172052d855afe444c599330c907cdc53d93 `Item` passed the ctor arguments positionally which made things work mostly by luck/accident. If we want to keep them working for a little bit more while they fix the deprecation warnings, the following diff works:\r\n\r\n```diff\r\ndiff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\r\nindex 09bbda0a2..20a3f8739 100644\r\n--- a/src/_pytest/nodes.py\r\n+++ b/src/_pytest/nodes.py\r\n@@ -670,8 +670,8 @@ class Item(Node):\r\n         **kw,\r\n     ) -> None:\r\n         super().__init__(\r\n-            name=name,\r\n-            parent=parent,\r\n+            name,\r\n+            parent,\r\n             config=config,\r\n             session=session,\r\n             nodeid=nodeid,\r\n```\nLet's do that and make things nice once the other plugins are fixed, thanks for the investigation ",
  "created_at": "2021-11-08T07:19:11Z",
  "version": "7.0",
  "FAIL_TO_PASS": "[\"testing/test_nodes.py::test_subclassing_both_item_and_collector_deprecated\"]",
  "PASS_TO_PASS": "[\"testing/test_nodes.py::test_iterparentnodeids[-expected0]\", \"testing/test_nodes.py::test_iterparentnodeids[a-expected1]\", \"testing/test_nodes.py::test_iterparentnodeids[aa/b-expected2]\", \"testing/test_nodes.py::test_iterparentnodeids[a/b/c-expected3]\", \"testing/test_nodes.py::test_iterparentnodeids[a/bbb/c::D-expected4]\", \"testing/test_nodes.py::test_iterparentnodeids[a/b/c::D::eee-expected5]\", \"testing/test_nodes.py::test_iterparentnodeids[::xx-expected6]\", \"testing/test_nodes.py::test_iterparentnodeids[a/b/c::D/d::e-expected7]\", \"testing/test_nodes.py::test_iterparentnodeids[a/b::D:e:f::g-expected8]\", \"testing/test_nodes.py::test_iterparentnodeids[a/b::c/d::e[/test]-expected9]\", \"testing/test_nodes.py::test_node_from_parent_disallowed_arguments\", \"testing/test_nodes.py::test_node_direct_construction_deprecated\", \"testing/test_nodes.py::test__check_initialpaths_for_relpath\", \"testing/test_nodes.py::test_node_warn_is_no_longer_only_pytest_warnings[DeprecationWarning-deprecated]\", \"testing/test_nodes.py::test_node_warn_is_no_longer_only_pytest_warnings[PytestWarning-pytest]\", \"testing/test_nodes.py::test_node_warning_enforces_warning_types\", \"testing/test_nodes.py::test_failure_with_changed_cwd\"]",
  "environment_setup_commit": "e2ee3144ed6e241dea8d96215fcdca18b3892551",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.946625",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}