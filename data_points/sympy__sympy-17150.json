{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-17150",
  "base_commit": "dcc4430810a88d239d75f16c5c3403cd6926d666",
  "patch": "diff --git a/sympy/functions/elementary/exponential.py b/sympy/functions/elementary/exponential.py\n--- a/sympy/functions/elementary/exponential.py\n+++ b/sympy/functions/elementary/exponential.py\n@@ -481,6 +481,15 @@ class log(Function):\n     a logarithm of a different base ``b``, use ``log(x, b)``,\n     which is essentially short-hand for ``log(x)/log(b)``.\n \n+    Examples\n+    ========\n+\n+    >>> from sympy import log, S\n+    >>> log(8, 2)\n+    3\n+    >>> log(S(8)/3, 2)\n+    -log(3)/log(2) + 3\n+\n     See Also\n     ========\n \n@@ -522,11 +531,7 @@ def eval(cls, arg, base=None):\n                 # or else expand_log in Mul would have to handle this\n                 n = multiplicity(base, arg)\n                 if n:\n-                    den = base**n\n-                    if den.is_Integer:\n-                        return n + log(arg // den) / log(base)\n-                    else:\n-                        return n + log(arg / den) / log(base)\n+                    return n + log(arg / base**n) / log(base)\n                 else:\n                     return log(arg)/log(base)\n             except ValueError:\n",
  "test_patch": "diff --git a/sympy/functions/elementary/tests/test_exponential.py b/sympy/functions/elementary/tests/test_exponential.py\n--- a/sympy/functions/elementary/tests/test_exponential.py\n+++ b/sympy/functions/elementary/tests/test_exponential.py\n@@ -212,6 +212,8 @@ def test_log_base():\n     assert log(Rational(2, 3), Rational(1, 3)) == -log(2)/log(3) + 1\n     assert log(Rational(2, 3), Rational(2, 5)) == \\\n         log(S(2)/3)/log(S(2)/5)\n+    # issue 17148\n+    assert log(S(8)/3, 2) == -log(3)/log(2) + 3\n \n \n def test_log_symbolic():\n",
  "problem_statement": "Incorrect extraction of base powers in log class\nEvaluating `log(Rational(408,499),2)` produces `zoo`, but it should produce `log(Rational(51,499))/log(2) + 3`.\r\n\r\nThe issue seems to originate around line `531` in `sympy/functions/elementary/exponential.py` during extraction of base powers, where `arg // den` is evaluated to `0` but should evaluate to `Rational(51,499)`:\r\n\r\n                    if den.is_Integer:\r\n                        return n + log(arg // den) / log(base)\r\n                    else:\r\n                        return n + log(arg / den) / log(base)\r\n\r\nI would suggest to fix the issue by removing the `if` conditional and keeping the else branch (seems like a case of premature optimization). Alternatively, this also seems to fix the issue:\r\n\r\n                    if arg.is_Integer and den.is_Integer:\r\n                        return n + log(arg // den) / log(base)\r\n                    else:\r\n                        return n + log(arg / den) / log(base)\r\n\r\nThat said, seeing that this code was not changed recently, the issue may run deeper.\r\n\n",
  "hints_text": "",
  "created_at": "2019-07-04T16:06:15Z",
  "version": "1.5",
  "FAIL_TO_PASS": "[\"test_log_base\"]",
  "PASS_TO_PASS": "[\"test_exp_values\", \"test_exp_log\", \"test_exp_expand\", \"test_exp__as_base_exp\", \"test_exp_infinity\", \"test_exp_subs\", \"test_exp_conjugate\", \"test_exp_rewrite\", \"test_exp_leading_term\", \"test_exp_taylor_term\", \"test_exp_MatrixSymbol\", \"test_exp_fdiff\", \"test_log_values\", \"test_log_symbolic\", \"test_exp_assumptions\", \"test_exp_AccumBounds\", \"test_log_assumptions\", \"test_log_hashing\", \"test_log_sign\", \"test_log_expand_complex\", \"test_log_apply_evalf\", \"test_log_expand\", \"test_log_simplify\", \"test_log_AccumBounds\", \"test_lambertw\", \"test_issue_5673\", \"test_log_fdiff\", \"test_log_taylor_term\", \"test_exp_expand_NC\", \"test_as_numer_denom\", \"test_polar\", \"test_log_product\", \"test_issue_8866\"]",
  "environment_setup_commit": "70381f282f2d9d039da860e391fe51649df2779d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.113534",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}