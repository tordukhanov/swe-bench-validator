{
  "repo": "django/django",
  "instance_id": "django__django-16950",
  "base_commit": "f64fd47a7627ed6ffe2df2a32ded6ee528a784eb",
  "patch": "diff --git a/django/forms/models.py b/django/forms/models.py\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -1177,7 +1177,13 @@ def add_fields(self, form, index):\n                 to_field = self.instance._meta.get_field(kwargs[\"to_field\"])\n             else:\n                 to_field = self.instance._meta.pk\n-            if to_field.has_default():\n+\n+            if to_field.has_default() and (\n+                # Don't ignore a parent's auto-generated key if it's not the\n+                # parent model's pk and form data is provided.\n+                to_field.attname == self.fk.remote_field.model._meta.pk.name\n+                or not form.data\n+            ):\n                 setattr(self.instance, to_field.attname, None)\n \n         form.fields[name] = InlineForeignKeyField(self.instance, **kwargs)\n",
  "test_patch": "diff --git a/tests/model_formsets/test_uuid.py b/tests/model_formsets/test_uuid.py\n--- a/tests/model_formsets/test_uuid.py\n+++ b/tests/model_formsets/test_uuid.py\n@@ -43,6 +43,8 @@ def test_inlineformset_factory_ignores_default_pks_on_submit(self):\n             }\n         )\n         self.assertTrue(formset.is_valid())\n+        self.assertIsNone(formset.instance.uuid)\n+        self.assertIsNone(formset.forms[0].instance.parent_id)\n \n     def test_inlineformset_factory_nulls_default_pks_uuid_parent_auto_child(self):\n         \"\"\"\n@@ -91,3 +93,25 @@ def test_inlineformset_factory_nulls_default_pks_alternate_key_relation(self):\n         )\n         formset = FormSet()\n         self.assertIsNone(formset.forms[0].fields[\"parent\"].initial)\n+\n+    def test_inlineformset_factory_nulls_default_pks_alternate_key_relation_data(self):\n+        \"\"\"\n+        If form data is provided, a parent's auto-generated alternate key is\n+        set.\n+        \"\"\"\n+        FormSet = inlineformset_factory(\n+            ParentWithUUIDAlternateKey, ChildRelatedViaAK, fields=\"__all__\"\n+        )\n+        formset = FormSet(\n+            {\n+                \"childrelatedviaak_set-TOTAL_FORMS\": 3,\n+                \"childrelatedviaak_set-INITIAL_FORMS\": 0,\n+                \"childrelatedviaak_set-MAX_NUM_FORMS\": \"\",\n+                \"childrelatedviaak_set-0-name\": \"Test\",\n+                \"childrelatedviaak_set-1-name\": \"\",\n+                \"childrelatedviaak_set-2-name\": \"\",\n+            }\n+        )\n+        self.assertIs(formset.is_valid(), True)\n+        self.assertIsNotNone(formset.instance.uuid)\n+        self.assertEqual(formset.forms[0].instance.parent_id, formset.instance.uuid)\n",
  "problem_statement": "Django Admin with Inlines not using UUIDField default value\nDescription\n\t \n\t\t(last modified by Joseph Metzinger)\n\t \nHello,\nI am a long time django user, first time bug reporter, so please let me know if I need to do anything else to help get this bug fixed :)\nI am using Django 3.1.3 and python 3.8.5 and have cerated a toy project to illustrate the bug. I have the following models:\nclass UUIDModel(models.Model):\n\tpkid = models.BigAutoField(primary_key=True, editable=False)\n\tid = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)\n\tclass Meta:\n\t\tabstract = True\nclass Thing(UUIDModel):\n\tname = models.CharField(max_length=191)\nclass SubThing(models.Model):\n\tname = models.CharField(max_length=191)\n\tthing = models.ForeignKey(\n\t\t'bugapp.Thing',\n\t\tto_field='id',\n\t\ton_delete = models.CASCADE,\n\t\trelated_name='subthings',\n\t)\nAnd the following admin.py file:\nclass SubThingInline(admin.StackedInline):\n\tmodel = SubThing\n@admin.register(Thing)\nclass ThingAdmin(admin.ModelAdmin):\n\tlist_display = ('name',)\n\tordering = ('pkid',)\n\tinlines = (SubThingInline,)\nWhen logging into the admin, if you delete all of the entries for \"subthings\", add a name, and save the model, it will work. As soon as you try to add a subthing alongside the main Thing, it fails with the following exception:\n​https://dpaste.com/8EU4FF6RW\nIt shows that the value of \"id\" in the Thing model is being set to null.\nI believe this is a bug in django.\nThanks!\n",
  "hints_text": "I made a toy project containing all the code to reproduce the error and zipped it.\nThanks for the detailed report. I was able to reproduce this issue. It looks that formsets' validation mutates the main object, because new_object.id is not empty before the ​all_valid() call: >>> new_object.id e13fd82c-c3fc-42dc-ac12-577a4412ba51 >>> all_valid(formsets) True >>> new_object.id None Reproduced at ead37dfb580136cc27dbd487a1f1ad90c9235d15.\nLooks like it's not directly related to formsets' validation but instantiating formset's forms. (Pdb) new_object.id UUID('06048350-3ad9-45f5-bca3-d08d795d7231') (Pdb) formsets[0].forms [<SubThingForm bound=True, valid=Unknown, fields=(name;thing;id;DELETE)>] (Pdb) new_object.id (Pdb) (Pdb) new_object.id UUID('652863a7-ccc8-4a18-9390-6fb77aa4bafa') (Pdb) formsets[0]._construct_form(0) <SubThingForm bound=True, valid=Unknown, fields=(name;thing;id;DELETE)> (Pdb) new_object.id (Pdb)\nThe below code set id value None when formsets is_valid calling. so need to stop set id value None when that field is not model's pk as UUIDField. if self.instance._state.adding: if kwargs.get(\"to_field\") is not None: to_field = self.instance._meta.get_field(kwargs[\"to_field\"]) else: to_field = self.instance._meta.pk if to_field.has_default(): setattr(self.instance, to_field.attname, None)\nCheck PR for this issue. ​https://github.com/django/django/pull/15983\n​PR\nAny update about this issue? Added PR related to this issue. This issue still exists in the latest version of Django.\nResetting the PR flags to ensure the new PR gets picked up in the review queue.",
  "created_at": "2023-06-06T19:58:48Z",
  "version": "5.0",
  "FAIL_TO_PASS": "[\"If form data is provided, a parent's auto-generated alternate key is\"]",
  "PASS_TO_PASS": "[\"#24377 - Inlines with a model field default should ignore that default\", \"#24377 - If we're adding a new object, a parent's auto-generated pk\", \"#24958 - Variant of test_inlineformset_factory_nulls_default_pks for\"]",
  "environment_setup_commit": "4a72da71001f154ea60906a2f74898d32b7322a7",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.776501",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}