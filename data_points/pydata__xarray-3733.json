{
  "repo": "pydata/xarray",
  "instance_id": "pydata__xarray-3733",
  "base_commit": "009aa66620b3437cf0de675013fa7d1ff231963c",
  "patch": "diff --git a/xarray/__init__.py b/xarray/__init__.py\n--- a/xarray/__init__.py\n+++ b/xarray/__init__.py\n@@ -17,7 +17,7 @@\n from .core.alignment import align, broadcast\n from .core.combine import auto_combine, combine_by_coords, combine_nested\n from .core.common import ALL_DIMS, full_like, ones_like, zeros_like\n-from .core.computation import apply_ufunc, dot, where\n+from .core.computation import apply_ufunc, dot, polyval, where\n from .core.concat import concat\n from .core.dataarray import DataArray\n from .core.dataset import Dataset\n@@ -65,6 +65,7 @@\n     \"open_mfdataset\",\n     \"open_rasterio\",\n     \"open_zarr\",\n+    \"polyval\",\n     \"register_dataarray_accessor\",\n     \"register_dataset_accessor\",\n     \"save_mfdataset\",\ndiff --git a/xarray/core/computation.py b/xarray/core/computation.py\n--- a/xarray/core/computation.py\n+++ b/xarray/core/computation.py\n@@ -1306,3 +1306,35 @@ def where(cond, x, y):\n         dataset_join=\"exact\",\n         dask=\"allowed\",\n     )\n+\n+\n+def polyval(coord, coeffs, degree_dim=\"degree\"):\n+    \"\"\"Evaluate a polynomial at specific values\n+\n+    Parameters\n+    ----------\n+    coord : DataArray\n+        The 1D coordinate along which to evaluate the polynomial.\n+    coeffs : DataArray\n+        Coefficients of the polynomials.\n+    degree_dim : str, default \"degree\"\n+        Name of the polynomial degree dimension in `coeffs`.\n+\n+    See also\n+    --------\n+    xarray.DataArray.polyfit\n+    numpy.polyval\n+    \"\"\"\n+    from .dataarray import DataArray\n+    from .missing import get_clean_interp_index\n+\n+    x = get_clean_interp_index(coord, coord.name)\n+\n+    deg_coord = coeffs[degree_dim]\n+\n+    lhs = DataArray(\n+        np.vander(x, int(deg_coord.max()) + 1),\n+        dims=(coord.name, degree_dim),\n+        coords={coord.name: coord, degree_dim: np.arange(deg_coord.max() + 1)[::-1]},\n+    )\n+    return (lhs * coeffs).sum(degree_dim)\ndiff --git a/xarray/core/dask_array_ops.py b/xarray/core/dask_array_ops.py\n--- a/xarray/core/dask_array_ops.py\n+++ b/xarray/core/dask_array_ops.py\n@@ -95,3 +95,30 @@ def func(x, window, axis=-1):\n     # crop boundary.\n     index = (slice(None),) * axis + (slice(drop_size, drop_size + orig_shape[axis]),)\n     return out[index]\n+\n+\n+def least_squares(lhs, rhs, rcond=None, skipna=False):\n+    import dask.array as da\n+\n+    lhs_da = da.from_array(lhs, chunks=(rhs.chunks[0], lhs.shape[1]))\n+    if skipna:\n+        added_dim = rhs.ndim == 1\n+        if added_dim:\n+            rhs = rhs.reshape(rhs.shape[0], 1)\n+        results = da.apply_along_axis(\n+            nputils._nanpolyfit_1d,\n+            0,\n+            rhs,\n+            lhs_da,\n+            dtype=float,\n+            shape=(lhs.shape[1] + 1,),\n+            rcond=rcond,\n+        )\n+        coeffs = results[:-1, ...]\n+        residuals = results[-1, ...]\n+        if added_dim:\n+            coeffs = coeffs.reshape(coeffs.shape[0])\n+            residuals = residuals.reshape(residuals.shape[0])\n+    else:\n+        coeffs, residuals, _, _ = da.linalg.lstsq(lhs_da, rhs)\n+    return coeffs, residuals\ndiff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py\n--- a/xarray/core/dataarray.py\n+++ b/xarray/core/dataarray.py\n@@ -3275,6 +3275,68 @@ def map_blocks(\n \n         return map_blocks(func, self, args, kwargs)\n \n+    def polyfit(\n+        self,\n+        dim: Hashable,\n+        deg: int,\n+        skipna: bool = None,\n+        rcond: float = None,\n+        w: Union[Hashable, Any] = None,\n+        full: bool = False,\n+        cov: bool = False,\n+    ):\n+        \"\"\"\n+        Least squares polynomial fit.\n+\n+        This replicates the behaviour of `numpy.polyfit` but differs by skipping\n+        invalid values when `skipna = True`.\n+\n+        Parameters\n+        ----------\n+        dim : hashable\n+            Coordinate along which to fit the polynomials.\n+        deg : int\n+            Degree of the fitting polynomial.\n+        skipna : bool, optional\n+            If True, removes all invalid values before fitting each 1D slices of the array.\n+            Default is True if data is stored in a dask.array or if there is any\n+            invalid values, False otherwise.\n+        rcond : float, optional\n+            Relative condition number to the fit.\n+        w : Union[Hashable, Any], optional\n+            Weights to apply to the y-coordinate of the sample points.\n+            Can be an array-like object or the name of a coordinate in the dataset.\n+        full : bool, optional\n+            Whether to return the residuals, matrix rank and singular values in addition\n+            to the coefficients.\n+        cov : Union[bool, str], optional\n+            Whether to return to the covariance matrix in addition to the coefficients.\n+            The matrix is not scaled if `cov='unscaled'`.\n+\n+        Returns\n+        -------\n+        polyfit_results : Dataset\n+            A single dataset which contains:\n+\n+            polyfit_coefficients\n+                The coefficients of the best fit.\n+            polyfit_residuals\n+                The residuals of the least-square computation (only included if `full=True`)\n+            [dim]_matrix_rank\n+                The effective rank of the scaled Vandermonde coefficient matrix (only included if `full=True`)\n+            [dim]_singular_value\n+                The singular values of the scaled Vandermonde coefficient matrix (only included if `full=True`)\n+            polyfit_covariance\n+                The covariance matrix of the polynomial coefficient estimates (only included if `full=False` and `cov=True`)\n+\n+        See also\n+        --------\n+        numpy.polyfit\n+        \"\"\"\n+        return self._to_temp_dataset().polyfit(\n+            dim, deg, skipna=skipna, rcond=rcond, w=w, full=full, cov=cov\n+        )\n+\n     def pad(\n         self,\n         pad_width: Mapping[Hashable, Union[int, Tuple[int, int]]] = None,\ndiff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -76,6 +76,7 @@\n     merge_coordinates_without_align,\n     merge_data_and_coords,\n )\n+from .missing import get_clean_interp_index\n from .options import OPTIONS, _get_keep_attrs\n from .pycompat import dask_array_type\n from .utils import (\n@@ -5748,6 +5749,184 @@ def map_blocks(\n \n         return map_blocks(func, self, args, kwargs)\n \n+    def polyfit(\n+        self,\n+        dim: Hashable,\n+        deg: int,\n+        skipna: bool = None,\n+        rcond: float = None,\n+        w: Union[Hashable, Any] = None,\n+        full: bool = False,\n+        cov: Union[bool, str] = False,\n+    ):\n+        \"\"\"\n+        Least squares polynomial fit.\n+\n+        This replicates the behaviour of `numpy.polyfit` but differs by skipping\n+        invalid values when `skipna = True`.\n+\n+        Parameters\n+        ----------\n+        dim : hashable\n+            Coordinate along which to fit the polynomials.\n+        deg : int\n+            Degree of the fitting polynomial.\n+        skipna : bool, optional\n+            If True, removes all invalid values before fitting each 1D slices of the array.\n+            Default is True if data is stored in a dask.array or if there is any\n+            invalid values, False otherwise.\n+        rcond : float, optional\n+            Relative condition number to the fit.\n+        w : Union[Hashable, Any], optional\n+            Weights to apply to the y-coordinate of the sample points.\n+            Can be an array-like object or the name of a coordinate in the dataset.\n+        full : bool, optional\n+            Whether to return the residuals, matrix rank and singular values in addition\n+            to the coefficients.\n+        cov : Union[bool, str], optional\n+            Whether to return to the covariance matrix in addition to the coefficients.\n+            The matrix is not scaled if `cov='unscaled'`.\n+\n+\n+        Returns\n+        -------\n+        polyfit_results : Dataset\n+            A single dataset which contains (for each \"var\" in the input dataset):\n+\n+            [var]_polyfit_coefficients\n+                The coefficients of the best fit for each variable in this dataset.\n+            [var]_polyfit_residuals\n+                The residuals of the least-square computation for each variable (only included if `full=True`)\n+            [dim]_matrix_rank\n+                The effective rank of the scaled Vandermonde coefficient matrix (only included if `full=True`)\n+            [dim]_singular_values\n+                The singular values of the scaled Vandermonde coefficient matrix (only included if `full=True`)\n+            [var]_polyfit_covariance\n+                The covariance matrix of the polynomial coefficient estimates (only included if `full=False` and `cov=True`)\n+\n+        See also\n+        --------\n+        numpy.polyfit\n+        \"\"\"\n+        variables = {}\n+        skipna_da = skipna\n+\n+        x = get_clean_interp_index(self, dim)\n+        xname = \"{}_\".format(self[dim].name)\n+        order = int(deg) + 1\n+        lhs = np.vander(x, order)\n+\n+        if rcond is None:\n+            rcond = x.shape[0] * np.core.finfo(x.dtype).eps\n+\n+        # Weights:\n+        if w is not None:\n+            if isinstance(w, Hashable):\n+                w = self.coords[w]\n+            w = np.asarray(w)\n+            if w.ndim != 1:\n+                raise TypeError(\"Expected a 1-d array for weights.\")\n+            if w.shape[0] != lhs.shape[0]:\n+                raise TypeError(\"Expected w and {} to have the same length\".format(dim))\n+            lhs *= w[:, np.newaxis]\n+\n+        # Scaling\n+        scale = np.sqrt((lhs * lhs).sum(axis=0))\n+        lhs /= scale\n+\n+        degree_dim = utils.get_temp_dimname(self.dims, \"degree\")\n+\n+        rank = np.linalg.matrix_rank(lhs)\n+        if rank != order and not full:\n+            warnings.warn(\n+                \"Polyfit may be poorly conditioned\", np.RankWarning, stacklevel=4\n+            )\n+\n+        if full:\n+            rank = xr.DataArray(rank, name=xname + \"matrix_rank\")\n+            variables[rank.name] = rank\n+            sing = np.linalg.svd(lhs, compute_uv=False)\n+            sing = xr.DataArray(\n+                sing,\n+                dims=(degree_dim,),\n+                coords={degree_dim: np.arange(order)[::-1]},\n+                name=xname + \"singular_values\",\n+            )\n+            variables[sing.name] = sing\n+\n+        for name, da in self.data_vars.items():\n+            if dim not in da.dims:\n+                continue\n+\n+            if skipna is None:\n+                if isinstance(da.data, dask_array_type):\n+                    skipna_da = True\n+                else:\n+                    skipna_da = np.any(da.isnull())\n+\n+            dims_to_stack = [dimname for dimname in da.dims if dimname != dim]\n+            stacked_coords = {}\n+            if dims_to_stack:\n+                stacked_dim = utils.get_temp_dimname(dims_to_stack, \"stacked\")\n+                rhs = da.transpose(dim, *dims_to_stack).stack(\n+                    {stacked_dim: dims_to_stack}\n+                )\n+                stacked_coords = {stacked_dim: rhs[stacked_dim]}\n+                scale_da = scale[:, np.newaxis]\n+            else:\n+                rhs = da\n+                scale_da = scale\n+\n+            if w is not None:\n+                rhs *= w[:, np.newaxis]\n+\n+            coeffs, residuals = duck_array_ops.least_squares(\n+                lhs, rhs.data, rcond=rcond, skipna=skipna_da\n+            )\n+\n+            if isinstance(name, str):\n+                name = \"{}_\".format(name)\n+            else:\n+                # Thus a ReprObject => polyfit was called on a DataArray\n+                name = \"\"\n+\n+            coeffs = xr.DataArray(\n+                coeffs / scale_da,\n+                dims=[degree_dim] + list(stacked_coords.keys()),\n+                coords={degree_dim: np.arange(order)[::-1], **stacked_coords},\n+                name=name + \"polyfit_coefficients\",\n+            )\n+            if dims_to_stack:\n+                coeffs = coeffs.unstack(stacked_dim)\n+            variables[coeffs.name] = coeffs\n+\n+            if full or (cov is True):\n+                residuals = xr.DataArray(\n+                    residuals if dims_to_stack else residuals.squeeze(),\n+                    dims=list(stacked_coords.keys()),\n+                    coords=stacked_coords,\n+                    name=name + \"polyfit_residuals\",\n+                )\n+                if dims_to_stack:\n+                    residuals = residuals.unstack(stacked_dim)\n+                variables[residuals.name] = residuals\n+\n+            if cov:\n+                Vbase = np.linalg.inv(np.dot(lhs.T, lhs))\n+                Vbase /= np.outer(scale, scale)\n+                if cov == \"unscaled\":\n+                    fac = 1\n+                else:\n+                    if x.shape[0] <= order:\n+                        raise ValueError(\n+                            \"The number of data points must exceed order to scale the covariance matrix.\"\n+                        )\n+                    fac = residuals / (x.shape[0] - order)\n+                covariance = xr.DataArray(Vbase, dims=(\"cov_i\", \"cov_j\"),) * fac\n+                variables[name + \"polyfit_covariance\"] = covariance\n+\n+        return Dataset(data_vars=variables, attrs=self.attrs.copy())\n+\n     def pad(\n         self,\n         pad_width: Mapping[Hashable, Union[int, Tuple[int, int]]] = None,\ndiff --git a/xarray/core/duck_array_ops.py b/xarray/core/duck_array_ops.py\n--- a/xarray/core/duck_array_ops.py\n+++ b/xarray/core/duck_array_ops.py\n@@ -597,3 +597,12 @@ def rolling_window(array, axis, window, center, fill_value):\n         return dask_array_ops.rolling_window(array, axis, window, center, fill_value)\n     else:  # np.ndarray\n         return nputils.rolling_window(array, axis, window, center, fill_value)\n+\n+\n+def least_squares(lhs, rhs, rcond=None, skipna=False):\n+    \"\"\"Return the coefficients and residuals of a least-squares fit.\n+    \"\"\"\n+    if isinstance(rhs, dask_array_type):\n+        return dask_array_ops.least_squares(lhs, rhs, rcond=rcond, skipna=skipna)\n+    else:\n+        return nputils.least_squares(lhs, rhs, rcond=rcond, skipna=skipna)\ndiff --git a/xarray/core/nputils.py b/xarray/core/nputils.py\n--- a/xarray/core/nputils.py\n+++ b/xarray/core/nputils.py\n@@ -220,6 +220,39 @@ def f(values, axis=None, **kwargs):\n     return f\n \n \n+def _nanpolyfit_1d(arr, x, rcond=None):\n+    out = np.full((x.shape[1] + 1,), np.nan)\n+    mask = np.isnan(arr)\n+    if not np.all(mask):\n+        out[:-1], out[-1], _, _ = np.linalg.lstsq(x[~mask, :], arr[~mask], rcond=rcond)\n+    return out\n+\n+\n+def least_squares(lhs, rhs, rcond=None, skipna=False):\n+    if skipna:\n+        added_dim = rhs.ndim == 1\n+        if added_dim:\n+            rhs = rhs.reshape(rhs.shape[0], 1)\n+        nan_cols = np.any(np.isnan(rhs), axis=0)\n+        out = np.empty((lhs.shape[1] + 1, rhs.shape[1]))\n+        if np.any(nan_cols):\n+            out[:, nan_cols] = np.apply_along_axis(\n+                _nanpolyfit_1d, 0, rhs[:, nan_cols], lhs\n+            )\n+        if np.any(~nan_cols):\n+            out[:-1, ~nan_cols], out[-1, ~nan_cols], _, _ = np.linalg.lstsq(\n+                lhs, rhs[:, ~nan_cols], rcond=rcond\n+            )\n+        coeffs = out[:-1, :]\n+        residuals = out[-1, :]\n+        if added_dim:\n+            coeffs = coeffs.reshape(coeffs.shape[0])\n+            residuals = residuals.reshape(residuals.shape[0])\n+    else:\n+        coeffs, residuals, _, _ = np.linalg.lstsq(lhs, rhs, rcond=rcond)\n+    return coeffs, residuals\n+\n+\n nanmin = _create_bottleneck_method(\"nanmin\")\n nanmax = _create_bottleneck_method(\"nanmax\")\n nanmean = _create_bottleneck_method(\"nanmean\")\n",
  "test_patch": "diff --git a/xarray/tests/test_computation.py b/xarray/tests/test_computation.py\n--- a/xarray/tests/test_computation.py\n+++ b/xarray/tests/test_computation.py\n@@ -1120,3 +1120,35 @@ def test_where():\n     actual = xr.where(cond, 1, 0)\n     expected = xr.DataArray([1, 0], dims=\"x\")\n     assert_identical(expected, actual)\n+\n+\n+@pytest.mark.parametrize(\"use_dask\", [True, False])\n+@pytest.mark.parametrize(\"use_datetime\", [True, False])\n+def test_polyval(use_dask, use_datetime):\n+    if use_dask and not has_dask:\n+        pytest.skip(\"requires dask\")\n+\n+    if use_datetime:\n+        xcoord = xr.DataArray(\n+            pd.date_range(\"2000-01-01\", freq=\"D\", periods=10), dims=(\"x\",), name=\"x\"\n+        )\n+        x = xr.core.missing.get_clean_interp_index(xcoord, \"x\")\n+    else:\n+        xcoord = x = np.arange(10)\n+\n+    da = xr.DataArray(\n+        np.stack((1.0 + x + 2.0 * x ** 2, 1.0 + 2.0 * x + 3.0 * x ** 2)),\n+        dims=(\"d\", \"x\"),\n+        coords={\"x\": xcoord, \"d\": [0, 1]},\n+    )\n+    coeffs = xr.DataArray(\n+        [[2, 1, 1], [3, 2, 1]],\n+        dims=(\"d\", \"degree\"),\n+        coords={\"d\": [0, 1], \"degree\": [2, 1, 0]},\n+    )\n+    if use_dask:\n+        coeffs = coeffs.chunk({\"d\": 2})\n+\n+    da_pv = xr.polyval(da.x, coeffs)\n+\n+    xr.testing.assert_allclose(da, da_pv.T)\ndiff --git a/xarray/tests/test_dataarray.py b/xarray/tests/test_dataarray.py\n--- a/xarray/tests/test_dataarray.py\n+++ b/xarray/tests/test_dataarray.py\n@@ -23,6 +23,7 @@\n     assert_array_equal,\n     assert_equal,\n     assert_identical,\n+    has_dask,\n     raises_regex,\n     requires_bottleneck,\n     requires_dask,\n@@ -4191,6 +4192,55 @@ def test_rank(self):\n         y = DataArray([0.75, 0.25, np.nan, 0.5, 1.0], dims=(\"z\",))\n         assert_equal(y.rank(\"z\", pct=True), y)\n \n+    @pytest.mark.parametrize(\"use_dask\", [True, False])\n+    @pytest.mark.parametrize(\"use_datetime\", [True, False])\n+    def test_polyfit(self, use_dask, use_datetime):\n+        if use_dask and not has_dask:\n+            pytest.skip(\"requires dask\")\n+        xcoord = xr.DataArray(\n+            pd.date_range(\"1970-01-01\", freq=\"D\", periods=10), dims=(\"x\",), name=\"x\"\n+        )\n+        x = xr.core.missing.get_clean_interp_index(xcoord, \"x\")\n+        if not use_datetime:\n+            xcoord = x\n+\n+        da_raw = DataArray(\n+            np.stack(\n+                (10 + 1e-15 * x + 2e-28 * x ** 2, 30 + 2e-14 * x + 1e-29 * x ** 2)\n+            ),\n+            dims=(\"d\", \"x\"),\n+            coords={\"x\": xcoord, \"d\": [0, 1]},\n+        )\n+\n+        if use_dask:\n+            da = da_raw.chunk({\"d\": 1})\n+        else:\n+            da = da_raw\n+\n+        out = da.polyfit(\"x\", 2)\n+        expected = DataArray(\n+            [[2e-28, 1e-15, 10], [1e-29, 2e-14, 30]],\n+            dims=(\"d\", \"degree\"),\n+            coords={\"degree\": [2, 1, 0], \"d\": [0, 1]},\n+        ).T\n+        assert_allclose(out.polyfit_coefficients, expected, rtol=1e-3)\n+\n+        # With NaN\n+        da_raw[0, 1] = np.nan\n+        if use_dask:\n+            da = da_raw.chunk({\"d\": 1})\n+        else:\n+            da = da_raw\n+        out = da.polyfit(\"x\", 2, skipna=True, cov=True)\n+        assert_allclose(out.polyfit_coefficients, expected, rtol=1e-3)\n+        assert \"polyfit_covariance\" in out\n+\n+        # Skipna + Full output\n+        out = da.polyfit(\"x\", 2, skipna=True, full=True)\n+        assert_allclose(out.polyfit_coefficients, expected, rtol=1e-3)\n+        assert out.x_matrix_rank == 3\n+        np.testing.assert_almost_equal(out.polyfit_residuals, [0, 0])\n+\n     def test_pad_constant(self):\n         ar = DataArray(np.arange(3 * 4 * 5).reshape(3, 4, 5))\n         actual = ar.pad(dim_0=(1, 3))\ndiff --git a/xarray/tests/test_dataset.py b/xarray/tests/test_dataset.py\n--- a/xarray/tests/test_dataset.py\n+++ b/xarray/tests/test_dataset.py\n@@ -5499,6 +5499,19 @@ def test_ipython_key_completion(self):\n             ds.data_vars[item]  # should not raise\n         assert sorted(actual) == sorted(expected)\n \n+    def test_polyfit_output(self):\n+        ds = create_test_data(seed=1)\n+\n+        out = ds.polyfit(\"dim2\", 2, full=False)\n+        assert \"var1_polyfit_coefficients\" in out\n+\n+        out = ds.polyfit(\"dim1\", 2, full=True)\n+        assert \"var1_polyfit_coefficients\" in out\n+        assert \"dim1_matrix_rank\" in out\n+\n+        out = ds.polyfit(\"time\", 2)\n+        assert len(out.data_vars) == 0\n+\n     def test_pad(self):\n         ds = create_test_data(seed=1)\n         padded = ds.pad(dim2=(1, 1), constant_values=42)\ndiff --git a/xarray/tests/test_duck_array_ops.py b/xarray/tests/test_duck_array_ops.py\n--- a/xarray/tests/test_duck_array_ops.py\n+++ b/xarray/tests/test_duck_array_ops.py\n@@ -16,6 +16,7 @@\n     first,\n     gradient,\n     last,\n+    least_squares,\n     mean,\n     np_timedelta64_to_float,\n     pd_timedelta_to_float,\n@@ -761,3 +762,20 @@ def test_timedelta_to_numeric(td):\n     out = timedelta_to_numeric(td, \"ns\")\n     np.testing.assert_allclose(out, 86400 * 1e9)\n     assert isinstance(out, float)\n+\n+\n+@pytest.mark.parametrize(\"use_dask\", [True, False])\n+@pytest.mark.parametrize(\"skipna\", [True, False])\n+def test_least_squares(use_dask, skipna):\n+    if use_dask and not has_dask:\n+        pytest.skip(\"requires dask\")\n+    lhs = np.array([[1, 2], [1, 2], [3, 2]])\n+    rhs = DataArray(np.array([3, 5, 7]), dims=(\"y\",))\n+\n+    if use_dask:\n+        rhs = rhs.chunk({\"y\": 1})\n+\n+    coeffs, residuals = least_squares(lhs, rhs.data, skipna=skipna)\n+\n+    np.testing.assert_allclose(coeffs, [1.5, 1.25])\n+    np.testing.assert_allclose(residuals, [2.0])\n",
  "problem_statement": "Implement polyfit?\nFitting a line (or curve) to data along a specified axis is a long-standing need of xarray users. There are many blog posts and SO questions about how to do it:\r\n- http://atedstone.github.io/rate-of-change-maps/\r\n- https://gist.github.com/luke-gregor/4bb5c483b2d111e52413b260311fbe43\r\n- https://stackoverflow.com/questions/38960903/applying-numpy-polyfit-to-xarray-dataset\r\n- https://stackoverflow.com/questions/52094320/with-xarray-how-to-parallelize-1d-operations-on-a-multidimensional-dataset\r\n- https://stackoverflow.com/questions/36275052/applying-a-function-along-an-axis-of-a-dask-array\r\n\r\nThe main use case in my domain is finding the temporal trend on a 3D variable (e.g. temperature in time, lon, lat).\r\n\r\nYes, you can do it with apply_ufunc, but apply_ufunc is inaccessibly complex for many users. Much of our existing API could be removed and replaced with apply_ufunc calls, but that doesn't mean we should do it.\r\n\r\nI am proposing we add a Dataarray method called `polyfit`. It would work like this:\r\n\r\n```python\r\nx_ = np.linspace(0, 1, 10)\r\ny_ = np.arange(5)\r\na_ = np.cos(y_)\r\n\r\nx = xr.DataArray(x_, dims=['x'], coords={'x': x_})\r\na = xr.DataArray(a_, dims=['y'])\r\nf = a*x\r\np = f.polyfit(dim='x', deg=1)\r\n\r\n# equivalent numpy code\r\np_ = np.polyfit(x_, f.values.transpose(), 1)\r\nnp.testing.assert_allclose(p_[0], a_)\r\n```\r\n\r\nNumpy's [polyfit](https://docs.scipy.org/doc/numpy/reference/generated/numpy.polynomial.polynomial.Polynomial.fit.html#numpy.polynomial.polynomial.Polynomial.fit) function is already vectorized in the sense that it accepts 1D x and 2D y, performing the fit independently over each column of y. To extend this to ND, we would just need to reshape the data going in and out of the function. We do this already in [other packages](https://github.com/xgcm/xcape/blob/master/xcape/core.py#L16-L34). For dask, we could simply require that the dimension over which the fit is calculated be contiguous, and then call map_blocks.\r\n\r\nThoughts?\r\n\r\n\r\n\n",
  "hints_text": "dask has `lstsq` https://docs.dask.org/en/latest/array-api.html#dask.array.linalg.lstsq . Would that avoid the dimension-must-have-one-chunk issue?\r\n\r\nEDIT: I am in favour of adding this. It's a common use case like `differentiate` and `integrate`\nI am in favour of adding this (and other common functionality), but I would comment that perhaps we should move forward with discussion about where to put extra functionality generally (the scipy to xarray's numpy if you will)? If only because otherwise the API could get to an unwieldy size? \r\n\r\nI can't remember where the relevant issue was, but for example this might go under an `xarray.utils` module?\nI second @TomNicholas' point... functionality like this would be wonderful to have but where would be the best place for it to live?\nThe question of a standalone library has come up many times (see discussion in #1850). Everyone agrees it's a nice idea, but no one seems to have the bandwidth to take on ownership and maintenance of such a project.\r\n\r\nPerhaps we need to put this issue on pause and figure out a general strategy here. The current Xarray API is far from a complete feature set, so more development is needed. But we should decide what belongs in xarray and what belongs elsewhere. #1850 is probably the best place to continue that conversation.\nThe quickest way to close this is probably to extend @fujiisoup's xr-scipy(https://github.com/fujiisoup/xr-scipy) to wrap `scipy.linalg.lstsq` and `dask.array.linalg.lstsq`. It is likely that all the necessary helper functions already exist.\nNow that xarray itself has interpolate, gradient, and integrate, it seems like the only thing left in xr-scipy is fourier transforms, which is also what we provide in [xrft](https://github.com/xgcm/xrft)! 😆 \nFrom a user perspective, I think people prefer to find stuff in one place.\r\n\r\nFrom a maintainer perspective, as long as it's somewhat domain agnostic (e.g., \"physical sciences\" rather than \"oceanography\") and written to a reasonable level of code quality, I think it's fine to toss it into xarray. \"Already exists in NumPy/SciPy\" is probably a reasonable proxy for the former.\r\n\r\nSo I say: yes, let's toss in polyfit, along with fast fourier transforms.\r\n\r\nIf we're concerned about clutter, we can put stuff in a dedicated namespace, e.g., `xarray.wrappers`.\nhttps://xscale.readthedocs.io/en/latest/generated/xscale.signal.fitting.polyfit.html#xscale.signal.fitting.polyfit\nI'm getting deja-vu here... Xscale has a huge and impressive sounding API. But no code coverage and no commits since January. Like many of these projects, it seems to have bit off more than its maintainers could chew.\r\n\r\n_Edit: I'd love for such a package to really achieve community uptake and become sustainable. I just don't quite know the roadmap for getting there._\nIt seems like these are getting reinvented often enough that it's worth\npulling some of these into xarray proper.\n\nOn Wed, Oct 2, 2019 at 9:04 AM Ryan Abernathey <notifications@github.com>\nwrote:\n\n> I'm getting deja-vu here... Xscale has a huge and impressive sounding API.\n> But no code coverage and no commits since January. Like many of these\n> projects, it seems to have bit off more than its maintainers could chew.\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/pydata/xarray/issues/3349?email_source=notifications&email_token=AAJJFVV5XANAGSPKHSF6KZLQMTA7HA5CNFSM4I3HCUUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEAFJCDI#issuecomment-537563405>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAJJFVREMUT5RKJJESG5NVLQMTA7HANCNFSM4I3HCUUA>\n> .\n>\n\nxyzpy has a polyfit too : https://xyzpy.readthedocs.io/en/latest/manipulate.html\nStarted to work on this and facing some issues with the x-coordinate when its a datetime. For standard calendars, I can use `pd.to_numeric(da.time)`, but for non-standard calendars, it's not clear how to go ahead. If I use `xr.coding.times.encode_cf_datetime(coord)`, the coefficients we'll find will only make sense in the `polyval` function if we use the same time encoding. \r\n\r\n\nIf I understand correctly, `pd.to_numeric` (and its inverse) works because it always uses 1970-01-01T00:00:00 as the reference date.  Could we do something similar when working with cftime dates?\r\n\r\nWithin xarray we typically convert dates to numeric values (e.g. when doing interpolation) using `xarray.core.duck_array_ops.datetime_to_numeric`, which takes an optional `offset` argument to control the reference date.  Would it work to always make sure to pass 1970-01-01T00:00:00 with the appropriate calendar type as the offset when constructing the ordinal x-coordinate for `polyfit`/`polyval`?\nThanks, it seems to work !\nExcellent, looking forward to seeing it in a PR!\nMy current implementation is pretty naive. It's just calling numpy.polyfit using dask.array.apply_along_axis. Happy to put that in a PR as a starting point, but there are a couple of questions I had: \r\n* How to return the full output (residuals, rank, singular_values, rcond) ? A tuple of dataarrays or a dataset ?\r\n* Do we want to use the dask least square functionality to allow for chunking within the x dimension ? Then it's not just a simple wrapper around polyfit. \r\n* Should we use np.polyfit or np.polynomial.polynomial.polyfit ?\n[geocat.comp.ndpolyfit](https://geocat-comp.readthedocs.io/en/latest/user_api/generated/geocat.comp.ndpolyfit.html#geocat.comp.ndpolyfit) extends `NumPy.polyfit` for multi-dimensional arrays and has support for Xarray and Dask. It does exactly what is requested here.\r\n\r\nregards,\r\n\r\n@andersy005 @clyne @matt-long @khallock\n@maboualidev Nice ! I see you're storing the residuals in the DataArray attributes. From my perspective, it would be useful to have those directly as DataArrays. Thoughts ?\r\n\r\nSo it looks like there are multiple inspirations to draw from. Here is what I could gather. \r\n\r\n- `xscale.signal.fitting.polyfit(obj, deg=1, dim=None, coord=None)` supports chunking along the fitting dimension using `dask.array.linalg.lstsq`. No explicit missing data handling.\r\n- `xyzpy.signal.xr_polyfit(obj, dim, ix=None, deg=0.5, poly='hermite')` applies `np.polynomial.polynomial.polyfit` using `xr.apply_ufunc` along dim with the help of `numba`. Also supports other types of polynomial (legendre, chebyshev, ...). Missing values are masked out 1D wise. \r\n - `geocat.comp.ndpolyfit(x: Iterable, y: Iterable, deg: int, axis: int = 0, **kwargs) -> (xr.DataArray, da.Array)` reorders the array to apply `np.polyfit` along dim, returns the full outputs (residuals, rank, etc) as DataArray attributes.  Missing values are masked out in bulk if possible, 1D-wise otherwise. \r\n\r\nThere does not seem to be matching `polyval` implementations for any of those nor support for indexing along a time dimension with a non-standard calendar. \r\n\nHi @huard Thanks for the reply.\r\n\r\nRegarding:\r\n\r\n> There does not seem to be matching polyval implementations for any of those nor support for indexing along a time dimension with a non-standard calendar.\r\n\r\nThere is a pull request on GeoCAT-comp for [ndpolyval](https://github.com/NCAR/geocat-comp/pull/49). I think `polyval` and `polyfit` go hand-in-hand. If we have `ndpolyfit` there must be a also a `ndpolyval`. \r\n\r\nRegarding:\r\n\r\n> I see you're storing the residuals in the DataArray attributes. From my perspective, it would be useful to have those directly as DataArrays. Thoughts ?\r\n\r\nI see the point and agree with you. I think it is a good idea to be as similar to `NumPy.polyfit` as possible; even for the style of the output. I will see it through to have that changed in GeoCAT.\r\n\r\n\r\nattn: @clyne and @khallock\n@maboualidev Is your objective to integrate the GeoCat implementation into xarray or keep it standalone ? \r\n\r\nOn my end, I'll submit a PR to add support for non-standard calendars to `xarray.core.missing.get_clean_interp`, which you'd then be able to use to get x values from coordinates. \n> @maboualidev Is your objective to integrate the GeoCat implementation into xarray or keep it standalone ?\r\n\r\n[GeoCAT](https://geocat.ucar.edu) is the python version of [NCL](https://www.ncl.ucar.edu) and we are a team at [NCAR](https://ncar.ucar.edu) working on it. I know that the team decision is to make use of Xarray within GeoCAT as much as possible, though. \r\n\r\n\nCurrently the plan is to keep GeoCAT as a standalone package that plays well with Xarray.\n\n> On Dec 16, 2019, at 9:21 AM, Mohammad Abouali <notifications@github.com> wrote:\n> \n> @maboualidev Is your objective to integrate the GeoCat implementation into xarray or keep it standalone ?\n> \n> GeoCAT is the python version of NCL and we are a team at NCAR working on it. I know that the team decision is to make use of Xarray within GeoCAT as much as possible, though.\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n> \n\n\n\n\n@clyne Let me rephrase my question: how do you feel about xarray providing a polyfit/polyval implementation essentially duplicating GeoCat's implementation ? \nGeoCAT is licensed under Apache 2.0. So if someone wants to incorporate it into Xarray they are welcome to it :-)",
  "created_at": "2020-01-30T16:58:51Z",
  "version": "0.12",
  "FAIL_TO_PASS": "[\"xarray/tests/test_computation.py::test_signature_properties\", \"xarray/tests/test_computation.py::test_result_name\", \"xarray/tests/test_computation.py::test_ordered_set_union\", \"xarray/tests/test_computation.py::test_ordered_set_intersection\", \"xarray/tests/test_computation.py::test_join_dict_keys\", \"xarray/tests/test_computation.py::test_collect_dict_values\", \"xarray/tests/test_computation.py::test_unified_dim_sizes\", \"xarray/tests/test_computation.py::test_broadcast_compat_data_1d\", \"xarray/tests/test_computation.py::test_broadcast_compat_data_2d\", \"xarray/tests/test_computation.py::test_keep_attrs\", \"xarray/tests/test_computation.py::test_vectorize\", \"xarray/tests/test_computation.py::test_output_wrong_number\", \"xarray/tests/test_computation.py::test_output_wrong_dims\", \"xarray/tests/test_computation.py::test_dot[False]\", \"xarray/tests/test_computation.py::test_where\", \"xarray/tests/test_dataarray.py::TestDataArray::test_properties\", \"xarray/tests/test_dataarray.py::TestDataArray::test_data_property\", \"xarray/tests/test_dataarray.py::TestDataArray::test_indexes\", \"xarray/tests/test_dataarray.py::TestDataArray::test_get_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_get_index_size_zero\", \"xarray/tests/test_dataarray.py::TestDataArray::test_name\", \"xarray/tests/test_dataarray.py::TestDataArray::test_dims\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sizes\", \"xarray/tests/test_dataarray.py::TestDataArray::test_encoding\", \"xarray/tests/test_dataarray.py::TestDataArray::test_constructor\", \"xarray/tests/test_dataarray.py::TestDataArray::test_constructor_invalid\", \"xarray/tests/test_dataarray.py::TestDataArray::test_constructor_from_self_described\", \"xarray/tests/test_dataarray.py::TestDataArray::test_constructor_from_0d\", \"xarray/tests/test_dataarray.py::TestDataArray::test_equals_and_identical\", \"xarray/tests/test_dataarray.py::TestDataArray::test_equals_failures\", \"xarray/tests/test_dataarray.py::TestDataArray::test_broadcast_equals\", \"xarray/tests/test_dataarray.py::TestDataArray::test_getitem\", \"xarray/tests/test_dataarray.py::TestDataArray::test_getitem_dict\", \"xarray/tests/test_dataarray.py::TestDataArray::test_getitem_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_getitem_dataarray\", \"xarray/tests/test_dataarray.py::TestDataArray::test_getitem_empty_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_setitem\", \"xarray/tests/test_dataarray.py::TestDataArray::test_setitem_fancy\", \"xarray/tests/test_dataarray.py::TestDataArray::test_contains\", \"xarray/tests/test_dataarray.py::TestDataArray::test_attr_sources_multiindex\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pickle\", \"xarray/tests/test_dataarray.py::TestDataArray::test_isel\", \"xarray/tests/test_dataarray.py::TestDataArray::test_isel_types\", \"xarray/tests/test_dataarray.py::TestDataArray::test_isel_fancy\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sel_dataarray\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sel_invalid_slice\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sel_dataarray_datetime\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sel_no_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sel_method\", \"xarray/tests/test_dataarray.py::TestDataArray::test_isel_drop\", \"xarray/tests/test_dataarray.py::TestDataArray::test_head\", \"xarray/tests/test_dataarray.py::TestDataArray::test_tail\", \"xarray/tests/test_dataarray.py::TestDataArray::test_thin\", \"xarray/tests/test_dataarray.py::TestDataArray::test_loc_assign\", \"xarray/tests/test_dataarray.py::TestDataArray::test_selection_multiindex\", \"xarray/tests/test_dataarray.py::TestDataArray::test_selection_multiindex_remove_unused\", \"xarray/tests/test_dataarray.py::TestDataArray::test_selection_multiindex_from_level\", \"xarray/tests/test_dataarray.py::TestDataArray::test_virtual_default_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_virtual_time_components\", \"xarray/tests/test_dataarray.py::TestDataArray::test_coords_to_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_coord_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reset_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_assign_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_coords_alignment\", \"xarray/tests/test_dataarray.py::TestDataArray::test_set_coords_update_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_coords_replacement_alignment\", \"xarray/tests/test_dataarray.py::TestDataArray::test_coords_non_string\", \"xarray/tests/test_dataarray.py::TestDataArray::test_coords_delitem_delete_indexes\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reindex_like\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reindex_like_no_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reindex_method\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reindex_fill_value[fill_value0]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reindex_fill_value[2]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reindex_fill_value[2.0]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_rename\", \"xarray/tests/test_dataarray.py::TestDataArray::test_init_value\", \"xarray/tests/test_dataarray.py::TestDataArray::test_swap_dims\", \"xarray/tests/test_dataarray.py::TestDataArray::test_expand_dims_error\", \"xarray/tests/test_dataarray.py::TestDataArray::test_expand_dims\", \"xarray/tests/test_dataarray.py::TestDataArray::test_expand_dims_with_scalar_coordinate\", \"xarray/tests/test_dataarray.py::TestDataArray::test_expand_dims_with_greater_dim_size\", \"xarray/tests/test_dataarray.py::TestDataArray::test_set_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reset_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reorder_levels\", \"xarray/tests/test_dataarray.py::TestDataArray::test_dataset_getitem\", \"xarray/tests/test_dataarray.py::TestDataArray::test_array_interface\", \"xarray/tests/test_dataarray.py::TestDataArray::test_is_null\", \"xarray/tests/test_dataarray.py::TestDataArray::test_math\", \"xarray/tests/test_dataarray.py::TestDataArray::test_empty_dataarrays_return_empty_result\", \"xarray/tests/test_dataarray.py::TestDataArray::test_inplace_math_basics\", \"xarray/tests/test_dataarray.py::TestDataArray::test_inplace_math_automatic_alignment\", \"xarray/tests/test_dataarray.py::TestDataArray::test_math_name\", \"xarray/tests/test_dataarray.py::TestDataArray::test_math_with_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_index_math\", \"xarray/tests/test_dataarray.py::TestDataArray::test_dataset_math\", \"xarray/tests/test_dataarray.py::TestDataArray::test_stack_unstack_decreasing_coordinate\", \"xarray/tests/test_dataarray.py::TestDataArray::test_unstack_pandas_consistency\", \"xarray/tests/test_dataarray.py::TestDataArray::test_stack_nonunique_consistency\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_unstacked_dataset_raises_value_error\", \"xarray/tests/test_dataarray.py::TestDataArray::test_transpose\", \"xarray/tests/test_dataarray.py::TestDataArray::test_squeeze\", \"xarray/tests/test_dataarray.py::TestDataArray::test_squeeze_drop\", \"xarray/tests/test_dataarray.py::TestDataArray::test_drop_coordinates\", \"xarray/tests/test_dataarray.py::TestDataArray::test_drop_index_labels\", \"xarray/tests/test_dataarray.py::TestDataArray::test_dropna\", \"xarray/tests/test_dataarray.py::TestDataArray::test_where\", \"xarray/tests/test_dataarray.py::TestDataArray::test_where_lambda\", \"xarray/tests/test_dataarray.py::TestDataArray::test_where_string\", \"xarray/tests/test_dataarray.py::TestDataArray::test_cumops\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reduce\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reduce_keepdims\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reduce_dtype\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reduce_out\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[None-None-0.25-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[None-None-0.25-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[None-None-q1-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[None-None-q1-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[None-None-q2-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[None-None-q2-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[0-x-0.25-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[0-x-0.25-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[0-x-q1-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[0-x-q1-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[0-x-q2-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[0-x-q2-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis2-dim2-0.25-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis2-dim2-0.25-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis2-dim2-q1-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis2-dim2-q1-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis2-dim2-q2-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis2-dim2-q2-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis3-dim3-0.25-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis3-dim3-0.25-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis3-dim3-q1-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis3-dim3-q1-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis3-dim3-q2-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis3-dim3-q2-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reduce_keep_attrs\", \"xarray/tests/test_dataarray.py::TestDataArray::test_assign_attrs\", \"xarray/tests/test_dataarray.py::TestDataArray::test_fillna\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_iter\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_properties\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_sum\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_sum_default\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_count\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_map_center\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_map_ndarray\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_map_changes_metadata\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_restore_dim_order\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_restore_coord_dims\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_first_and_last\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_multidim\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_multidim_map\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_bins\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_bins_empty\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_bins_multidim\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_dtype\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_override\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_override_error[darrays0]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_override_error[darrays1]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_indexes\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_without_indexes_exclude\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_mixed_indexes\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_without_indexes_errors\", \"xarray/tests/test_dataarray.py::TestDataArray::test_broadcast_arrays\", \"xarray/tests/test_dataarray.py::TestDataArray::test_broadcast_arrays_nocopy\", \"xarray/tests/test_dataarray.py::TestDataArray::test_broadcast_coordinates\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_pandas\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_dataframe\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_pandas_name_matches_coordinate\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_series\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_empty_series\", \"xarray/tests/test_dataarray.py::TestDataArray::test_series_categorical_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict_with_time_dim\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict_with_nan_nat\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_dict_with_numpy_attrs\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_masked_array\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_dataset_whole\", \"xarray/tests/test_dataarray.py::TestDataArray::test_dataarray_diff_n1\", \"xarray/tests/test_dataarray.py::TestDataArray::test_coordinate_diff\", \"xarray/tests/test_dataarray.py::TestDataArray::test_shift[2-int--5]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_shift[2-int-0]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_shift[2-int-1]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_shift[2-int-2]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_shift[fill_value1-float--5]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_shift[fill_value1-float-0]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_shift[fill_value1-float-1]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_shift[fill_value1-float-2]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_roll_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_roll_no_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_roll_coords_none\", \"xarray/tests/test_dataarray.py::TestDataArray::test_copy_with_data\", \"xarray/tests/test_dataarray.py::TestDataArray::test_real_and_imag\", \"xarray/tests/test_dataarray.py::TestDataArray::test_setattr_raises\", \"xarray/tests/test_dataarray.py::TestDataArray::test_full_like\", \"xarray/tests/test_dataarray.py::TestDataArray::test_dot\", \"xarray/tests/test_dataarray.py::TestDataArray::test_dot_align_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_matmul\", \"xarray/tests/test_dataarray.py::TestDataArray::test_matmul_align_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_binary_op_propagate_indexes\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sortby\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_constant\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[None-minimum]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[None-maximum]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[None-mean]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[None-median]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[3-minimum]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[3-maximum]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[3-mean]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[3-median]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[stat_length2-minimum]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[stat_length2-maximum]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[stat_length2-mean]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[stat_length2-median]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[stat_length3-minimum]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[stat_length3-maximum]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[stat_length3-mean]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[stat_length3-median]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_linear_ramp[None]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_linear_ramp[3]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_linear_ramp[end_values2]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_linear_ramp[end_values3]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_reflect[None-reflect]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_reflect[None-symmetric]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_reflect[even-reflect]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_reflect[even-symmetric]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_reflect[odd-reflect]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_reflect[odd-symmetric]\", \"xarray/tests/test_dataarray.py::test_isin[repeating_ints]\", \"xarray/tests/test_dataarray.py::test_rolling_iter[1]\", \"xarray/tests/test_dataarray.py::test_rolling_iter[2]\", \"xarray/tests/test_dataarray.py::test_rolling_doc[1]\", \"xarray/tests/test_dataarray.py::test_rolling_properties[1]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[1-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[1-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[1-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[1-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[1-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[1-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[1-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[1-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[2-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[2-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[2-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[2-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[2-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[2-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[2-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[2-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[3-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[3-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[3-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[3-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[3-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[3-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[3-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[3-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[4-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[4-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[4-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[4-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[4-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[4-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[4-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[4-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_construct[1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_construct[1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_construct[2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_construct[2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_construct[3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_construct[3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_construct[4-True]\", \"xarray/tests/test_dataarray.py::test_rolling_construct[4-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-1-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-1-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-1-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-1-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-1-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-1-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-1-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-1-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-2-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-2-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-2-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-2-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-2-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-2-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-2-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-2-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-3-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-3-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-3-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-3-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-3-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-3-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-3-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-3-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-4-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-4-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-4-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-4-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-4-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-4-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-4-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-4-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-1-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-1-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-1-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-1-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-1-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-1-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-1-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-1-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-2-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-2-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-2-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-2-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-2-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-2-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-2-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-2-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-3-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-3-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-3-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-3-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-3-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-3-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-3-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-3-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-4-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-4-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-4-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-4-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-4-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-4-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-4-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-4-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_count_correct\", \"xarray/tests/test_dataarray.py::test_raise_no_warning_for_nan_in_binary_ops\", \"xarray/tests/test_dataarray.py::test_name_in_masking\", \"xarray/tests/test_dataarray.py::test_no_dict\", \"xarray/tests/test_dataarray.py::test_subclass_slots\", \"xarray/tests/test_dataarray.py::test_weakref\", \"xarray/tests/test_dataset.py::TestDataset::test_unicode_data\", \"xarray/tests/test_dataset.py::TestDataset::test_repr_nep18\", \"xarray/tests/test_dataset.py::TestDataset::test_info\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_invalid_dims\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_1d\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_0d\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_deprecated\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_compat\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_with_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_properties\", \"xarray/tests/test_dataset.py::TestDataset::test_asarray\", \"xarray/tests/test_dataset.py::TestDataset::test_get_index\", \"xarray/tests/test_dataset.py::TestDataset::test_attr_access\", \"xarray/tests/test_dataset.py::TestDataset::test_variable\", \"xarray/tests/test_dataset.py::TestDataset::test_modify_inplace\", \"xarray/tests/test_dataset.py::TestDataset::test_coords_modify\", \"xarray/tests/test_dataset.py::TestDataset::test_update_index\", \"xarray/tests/test_dataset.py::TestDataset::test_coords_setitem_with_new_dimension\", \"xarray/tests/test_dataset.py::TestDataset::test_coords_setitem_multiindex\", \"xarray/tests/test_dataset.py::TestDataset::test_coords_set\", \"xarray/tests/test_dataset.py::TestDataset::test_coords_to_dataset\", \"xarray/tests/test_dataset.py::TestDataset::test_coords_merge\", \"xarray/tests/test_dataset.py::TestDataset::test_coords_merge_mismatched_shape\", \"xarray/tests/test_dataset.py::TestDataset::test_equals_and_identical\", \"xarray/tests/test_dataset.py::TestDataset::test_equals_failures\", \"xarray/tests/test_dataset.py::TestDataset::test_broadcast_equals\", \"xarray/tests/test_dataset.py::TestDataset::test_attrs\", \"xarray/tests/test_dataset.py::TestDataset::test_isel\", \"xarray/tests/test_dataset.py::TestDataset::test_isel_fancy\", \"xarray/tests/test_dataset.py::TestDataset::test_sel_dataarray\", \"xarray/tests/test_dataset.py::TestDataset::test_sel_dataarray_mindex\", \"xarray/tests/test_dataset.py::TestDataset::test_categorical_index\", \"xarray/tests/test_dataset.py::TestDataset::test_categorical_reindex\", \"xarray/tests/test_dataset.py::TestDataset::test_isel_drop\", \"xarray/tests/test_dataset.py::TestDataset::test_head\", \"xarray/tests/test_dataset.py::TestDataset::test_tail\", \"xarray/tests/test_dataset.py::TestDataset::test_thin\", \"xarray/tests/test_dataset.py::TestDataset::test_sel_fancy\", \"xarray/tests/test_dataset.py::TestDataset::test_selection_multiindex\", \"xarray/tests/test_dataset.py::TestDataset::test_broadcast_like\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_like\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_warning\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_variables_copied\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_method\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_fill_value[fill_value0]\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_fill_value[2]\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_fill_value[2.0]\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_like_fill_value[fill_value0]\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_like_fill_value[2]\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_like_fill_value[2.0]\", \"xarray/tests/test_dataset.py::TestDataset::test_align_exact\", \"xarray/tests/test_dataset.py::TestDataset::test_align_override\", \"xarray/tests/test_dataset.py::TestDataset::test_align_indexes\", \"xarray/tests/test_dataset.py::TestDataset::test_broadcast\", \"xarray/tests/test_dataset.py::TestDataset::test_broadcast_nocopy\", \"xarray/tests/test_dataset.py::TestDataset::test_broadcast_exclude\", \"xarray/tests/test_dataset.py::TestDataset::test_variable_indexing\", \"xarray/tests/test_dataset.py::TestDataset::test_drop_variables\", \"xarray/tests/test_dataset.py::TestDataset::test_drop_index_labels\", \"xarray/tests/test_dataset.py::TestDataset::test_drop_labels_by_keyword\", \"xarray/tests/test_dataset.py::TestDataset::test_drop_dims\", \"xarray/tests/test_dataset.py::TestDataset::test_copy\", \"xarray/tests/test_dataset.py::TestDataset::test_copy_with_data\", \"xarray/tests/test_dataset.py::TestDataset::test_copy_with_data_errors\", \"xarray/tests/test_dataset.py::TestDataset::test_rename\", \"xarray/tests/test_dataset.py::TestDataset::test_rename_old_name\", \"xarray/tests/test_dataset.py::TestDataset::test_rename_same_name\", \"xarray/tests/test_dataset.py::TestDataset::test_rename_inplace\", \"xarray/tests/test_dataset.py::TestDataset::test_rename_dims\", \"xarray/tests/test_dataset.py::TestDataset::test_rename_vars\", \"xarray/tests/test_dataset.py::TestDataset::test_rename_multiindex\", \"xarray/tests/test_dataset.py::TestDataset::test_rename_does_not_change_DatetimeIndex_type\", \"xarray/tests/test_dataset.py::TestDataset::test_swap_dims\", \"xarray/tests/test_dataset.py::TestDataset::test_expand_dims_error\", \"xarray/tests/test_dataset.py::TestDataset::test_expand_dims_int\", \"xarray/tests/test_dataset.py::TestDataset::test_expand_dims_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_expand_dims_existing_scalar_coord\", \"xarray/tests/test_dataset.py::TestDataset::test_isel_expand_dims_roundtrip\", \"xarray/tests/test_dataset.py::TestDataset::test_expand_dims_mixed_int_and_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_expand_dims_kwargs_python36plus\", \"xarray/tests/test_dataset.py::TestDataset::test_set_index\", \"xarray/tests/test_dataset.py::TestDataset::test_reset_index\", \"xarray/tests/test_dataset.py::TestDataset::test_reorder_levels\", \"xarray/tests/test_dataset.py::TestDataset::test_stack\", \"xarray/tests/test_dataset.py::TestDataset::test_unstack\", \"xarray/tests/test_dataset.py::TestDataset::test_unstack_errors\", \"xarray/tests/test_dataset.py::TestDataset::test_stack_unstack_fast\", \"xarray/tests/test_dataset.py::TestDataset::test_stack_unstack_slow\", \"xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_invalid_sample_dims\", \"xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_name\", \"xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_dtype_dims\", \"xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_to_unstacked_dataset\", \"xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_to_unstacked_dataset_different_dimension\", \"xarray/tests/test_dataset.py::TestDataset::test_update\", \"xarray/tests/test_dataset.py::TestDataset::test_update_overwrite_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_update_auto_align\", \"xarray/tests/test_dataset.py::TestDataset::test_getitem\", \"xarray/tests/test_dataset.py::TestDataset::test_getitem_hashable\", \"xarray/tests/test_dataset.py::TestDataset::test_virtual_variables_default_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_virtual_variables_time\", \"xarray/tests/test_dataset.py::TestDataset::test_virtual_variable_same_name\", \"xarray/tests/test_dataset.py::TestDataset::test_virtual_variable_multiindex\", \"xarray/tests/test_dataset.py::TestDataset::test_time_season\", \"xarray/tests/test_dataset.py::TestDataset::test_slice_virtual_variable\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem_pandas\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem_auto_align\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem_dimension_override\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem_with_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem_align_new_indexes\", \"xarray/tests/test_dataset.py::TestDataset::test_assign\", \"xarray/tests/test_dataset.py::TestDataset::test_assign_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_assign_attrs\", \"xarray/tests/test_dataset.py::TestDataset::test_assign_multiindex_level\", \"xarray/tests/test_dataset.py::TestDataset::test_merge_multiindex_level\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem_original_non_unique_index\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem_both_non_unique_index\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem_multiindex_level\", \"xarray/tests/test_dataset.py::TestDataset::test_delitem\", \"xarray/tests/test_dataset.py::TestDataset::test_squeeze\", \"xarray/tests/test_dataset.py::TestDataset::test_squeeze_drop\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby_returns_new_type\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby_iter\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby_errors\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby_reduce\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby_nan\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby_order\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_old_api\", \"xarray/tests/test_dataset.py::TestDataset::test_to_array\", \"xarray/tests/test_dataset.py::TestDataset::test_to_and_from_dataframe\", \"xarray/tests/test_dataset.py::TestDataset::test_to_and_from_empty_dataframe\", \"xarray/tests/test_dataset.py::TestDataset::test_from_dataframe_non_unique_columns\", \"xarray/tests/test_dataset.py::TestDataset::test_convert_dataframe_with_many_types_and_multiindex\", \"xarray/tests/test_dataset.py::TestDataset::test_to_and_from_dict\", \"xarray/tests/test_dataset.py::TestDataset::test_to_and_from_dict_with_time_dim\", \"xarray/tests/test_dataset.py::TestDataset::test_to_and_from_dict_with_nan_nat\", \"xarray/tests/test_dataset.py::TestDataset::test_to_dict_with_numpy_attrs\", \"xarray/tests/test_dataset.py::TestDataset::test_pickle\", \"xarray/tests/test_dataset.py::TestDataset::test_lazy_load\", \"xarray/tests/test_dataset.py::TestDataset::test_dropna\", \"xarray/tests/test_dataset.py::TestDataset::test_fillna\", \"xarray/tests/test_dataset.py::TestDataset::test_where\", \"xarray/tests/test_dataset.py::TestDataset::test_where_other\", \"xarray/tests/test_dataset.py::TestDataset::test_where_drop\", \"xarray/tests/test_dataset.py::TestDataset::test_where_drop_empty\", \"xarray/tests/test_dataset.py::TestDataset::test_where_drop_no_indexes\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_mean_uint_dtype\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_bad_dim\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_cumsum\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_cumsum_test_dims\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_non_numeric\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_strings\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_dtypes\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_keep_attrs\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_argmin\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_scalars\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_only_one_axis\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_no_axis\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_keepdims\", \"xarray/tests/test_dataset.py::TestDataset::test_quantile[0.25-True]\", \"xarray/tests/test_dataset.py::TestDataset::test_quantile[0.25-False]\", \"xarray/tests/test_dataset.py::TestDataset::test_quantile[q1-True]\", \"xarray/tests/test_dataset.py::TestDataset::test_quantile[q1-False]\", \"xarray/tests/test_dataset.py::TestDataset::test_quantile[q2-True]\", \"xarray/tests/test_dataset.py::TestDataset::test_quantile[q2-False]\", \"xarray/tests/test_dataset.py::TestDataset::test_quantile_skipna[True]\", \"xarray/tests/test_dataset.py::TestDataset::test_quantile_skipna[False]\", \"xarray/tests/test_dataset.py::TestDataset::test_count\", \"xarray/tests/test_dataset.py::TestDataset::test_map\", \"xarray/tests/test_dataset.py::TestDataset::test_apply_pending_deprecated_map\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_number_math\", \"xarray/tests/test_dataset.py::TestDataset::test_unary_ops\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_array_math\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_math_errors\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_transpose\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_ellipsis_transpose_different_ordered_vars\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_retains_period_index_on_transpose\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_n1_simple\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_n1_label\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_n1\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_n2\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_exception_n_neg\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_exception_label_str\", \"xarray/tests/test_dataset.py::TestDataset::test_shift[fill_value0]\", \"xarray/tests/test_dataset.py::TestDataset::test_shift[2]\", \"xarray/tests/test_dataset.py::TestDataset::test_shift[2.0]\", \"xarray/tests/test_dataset.py::TestDataset::test_roll_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_roll_no_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_roll_coords_none\", \"xarray/tests/test_dataset.py::TestDataset::test_roll_multidim\", \"xarray/tests/test_dataset.py::TestDataset::test_real_and_imag\", \"xarray/tests/test_dataset.py::TestDataset::test_setattr_raises\", \"xarray/tests/test_dataset.py::TestDataset::test_filter_by_attrs\", \"xarray/tests/test_dataset.py::TestDataset::test_binary_op_propagate_indexes\", \"xarray/tests/test_dataset.py::TestDataset::test_full_like\", \"xarray/tests/test_dataset.py::TestDataset::test_sortby\", \"xarray/tests/test_dataset.py::TestDataset::test_attribute_access\", \"xarray/tests/test_dataset.py::TestDataset::test_ipython_key_completion\", \"xarray/tests/test_dataset.py::TestDataset::test_pad\", \"xarray/tests/test_dataset.py::test_isin[test_elements0]\", \"xarray/tests/test_dataset.py::test_isin[test_elements1]\", \"xarray/tests/test_dataset.py::test_isin[test_elements2]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords0]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords1]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords2]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords3]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords4]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords5]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords6]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords7]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords8]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords9]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords0]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords1]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords2]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords3]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords4]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords5]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords6]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords7]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords8]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords9]\", \"xarray/tests/test_dataset.py::test_error_message_on_set_supplied\", \"xarray/tests/test_dataset.py::test_constructor_raises_with_invalid_coords[unaligned_coords0]\", \"xarray/tests/test_dataset.py::test_dir_expected_attrs[None]\", \"xarray/tests/test_dataset.py::test_dir_non_string[None]\", \"xarray/tests/test_dataset.py::test_dir_unicode[None]\", \"xarray/tests/test_dataset.py::test_coarsen_absent_dims_error[1]\", \"xarray/tests/test_dataset.py::test_coarsen[1-trim-left-True]\", \"xarray/tests/test_dataset.py::test_coarsen[1-trim-left-False]\", \"xarray/tests/test_dataset.py::test_coarsen[1-pad-right-True]\", \"xarray/tests/test_dataset.py::test_coarsen[1-pad-right-False]\", \"xarray/tests/test_dataset.py::test_coarsen_coords[1-True]\", \"xarray/tests/test_dataset.py::test_coarsen_coords[1-False]\", \"xarray/tests/test_dataset.py::test_coarsen_keep_attrs\", \"xarray/tests/test_dataset.py::test_rolling_keep_attrs\", \"xarray/tests/test_dataset.py::test_rolling_properties[1]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-None-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-None-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-1-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-1-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-2-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-2-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-3-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-3-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-None-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-None-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-1-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-1-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-2-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-2-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-3-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-3-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-None-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-None-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-1-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-1-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-2-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-2-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-3-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-3-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-None-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-None-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-1-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-1-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-2-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-2-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-3-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-3-False]\", \"xarray/tests/test_dataset.py::test_rolling_construct[1-True]\", \"xarray/tests/test_dataset.py::test_rolling_construct[1-False]\", \"xarray/tests/test_dataset.py::test_rolling_construct[2-True]\", \"xarray/tests/test_dataset.py::test_rolling_construct[2-False]\", \"xarray/tests/test_dataset.py::test_rolling_construct[3-True]\", \"xarray/tests/test_dataset.py::test_rolling_construct[3-False]\", \"xarray/tests/test_dataset.py::test_rolling_construct[4-True]\", \"xarray/tests/test_dataset.py::test_rolling_construct[4-False]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-3-False-2]\", \"xarray/tests/test_dataset.py::test_raise_no_warning_for_nan_in_binary_ops\", \"xarray/tests/test_dataset.py::test_differentiate[1-False]\", \"xarray/tests/test_dataset.py::test_differentiate[2-False]\", \"xarray/tests/test_dataset.py::test_differentiate_datetime[False]\", \"xarray/tests/test_dataset.py::test_integrate[True]\", \"xarray/tests/test_dataset.py::test_integrate[False]\", \"xarray/tests/test_dataset.py::test_trapz_datetime[np-True]\", \"xarray/tests/test_dataset.py::test_trapz_datetime[np-False]\", \"xarray/tests/test_dataset.py::test_no_dict\", \"xarray/tests/test_dataset.py::test_subclass_slots\", \"xarray/tests/test_dataset.py::test_weakref\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_first\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_last\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_count\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_where_type_promotion\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_stack_type_promotion\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_concatenate_type_promotion\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_all_nan_arrays\", \"xarray/tests/test_duck_array_ops.py::test_cumsum_1d\", \"xarray/tests/test_duck_array_ops.py::test_cumsum_2d\", \"xarray/tests/test_duck_array_ops.py::test_cumprod_2d\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_equal[arr10-arr20]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_equal[arr11-arr21]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_equal[arr12-arr22]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_some_not_equal\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_wrong_shape\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_types[val10-val20-val30-null0]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_types[1.0-2.0-3.0-nan]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_types[foo-bar-baz-None]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_types[foo-bar-baz-nan]\", \"xarray/tests/test_duck_array_ops.py::test_datetime_mean[False]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-True-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-True-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max_error\", \"xarray/tests/test_duck_array_ops.py::test_isnull[array0]\", \"xarray/tests/test_duck_array_ops.py::test_isnull[array1]\", \"xarray/tests/test_duck_array_ops.py::test_isnull[array2]\", \"xarray/tests/test_duck_array_ops.py::test_isnull[array3]\", \"xarray/tests/test_duck_array_ops.py::test_isnull[array4]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_dataset[sum]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_dataset[prod]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_docs\", \"xarray/tests/test_duck_array_ops.py::test_datetime_to_numeric_datetime64\", \"xarray/tests/test_duck_array_ops.py::test_py_timedelta_to_float\", \"xarray/tests/test_duck_array_ops.py::test_np_timedelta64_to_float[td0-86400000000000.0]\", \"xarray/tests/test_duck_array_ops.py::test_np_timedelta64_to_float[td1-1.0]\", \"xarray/tests/test_duck_array_ops.py::test_pd_timedelta_to_float[td0-86400000000000.0]\", \"xarray/tests/test_duck_array_ops.py::test_pd_timedelta_to_float[td1-1.0]\", \"xarray/tests/test_duck_array_ops.py::test_timedelta_to_numeric[td0]\", \"xarray/tests/test_duck_array_ops.py::test_timedelta_to_numeric[td1]\", \"xarray/tests/test_duck_array_ops.py::test_timedelta_to_numeric[td2]\", \"xarray/tests/test_duck_array_ops.py::test_timedelta_to_numeric[1\", \"xarray/tests/test_duck_array_ops.py::test_least_squares[True-False]\", \"xarray/tests/test_duck_array_ops.py::test_least_squares[False-False]\"]",
  "PASS_TO_PASS": "[\"xarray/tests/test_computation.py::test_apply_dask\", \"xarray/tests/test_computation.py::test_apply_dask_parallelized_one_arg\", \"xarray/tests/test_computation.py::test_apply_dask_parallelized_two_args\", \"xarray/tests/test_computation.py::test_apply_dask_parallelized_errors\", \"xarray/tests/test_computation.py::test_apply_dask_multiple_inputs\", \"xarray/tests/test_computation.py::test_apply_dask_new_output_dimension\", \"xarray/tests/test_computation.py::test_vectorize_dask\", \"xarray/tests/test_computation.py::test_vectorize_dask_new_output_dims\", \"xarray/tests/test_computation.py::test_dot[True]\", \"xarray/tests/test_computation.py::test_dot_align_coords[True]\", \"xarray/tests/test_computation.py::test_dot_align_coords[False]\", \"xarray/tests/test_computation.py::test_polyval[True-True]\", \"xarray/tests/test_computation.py::test_polyval[True-False]\", \"xarray/tests/test_computation.py::test_polyval[False-True]\", \"xarray/tests/test_computation.py::test_polyval[False-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_struct_array_dims\", \"xarray/tests/test_dataarray.py::TestDataArray::test_constructor_dask_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_chunk\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sel\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sel_float\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sel_drop\", \"xarray/tests/test_dataarray.py::TestDataArray::test_loc\", \"xarray/tests/test_dataarray.py::TestDataArray::test_loc_single_boolean\", \"xarray/tests/test_dataarray.py::TestDataArray::test_broadcast_like\", \"xarray/tests/test_dataarray.py::TestDataArray::test_math_automatic_alignment\", \"xarray/tests/test_dataarray.py::TestDataArray::test_non_overlapping_dataarrays_return_empty_result\", \"xarray/tests/test_dataarray.py::TestDataArray::test_stack_unstack\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reduce_keepdims_bottleneck\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_map_identity\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_math\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_math_not_aligned\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_bins_sort\", \"xarray/tests/test_dataarray.py::TestDataArray::test_resample\", \"xarray/tests/test_dataarray.py::TestDataArray::test_da_resample_func_args\", \"xarray/tests/test_dataarray.py::TestDataArray::test_resample_first\", \"xarray/tests/test_dataarray.py::TestDataArray::test_resample_bad_resample_dim\", \"xarray/tests/test_dataarray.py::TestDataArray::test_resample_drop_nondim_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_resample_keep_attrs\", \"xarray/tests/test_dataarray.py::TestDataArray::test_resample_skipna\", \"xarray/tests/test_dataarray.py::TestDataArray::test_upsample\", \"xarray/tests/test_dataarray.py::TestDataArray::test_upsample_nd\", \"xarray/tests/test_dataarray.py::TestDataArray::test_upsample_tolerance\", \"xarray/tests/test_dataarray.py::TestDataArray::test_upsample_interpolate\", \"xarray/tests/test_dataarray.py::TestDataArray::test_upsample_interpolate_bug_2197\", \"xarray/tests/test_dataarray.py::TestDataArray::test_upsample_interpolate_regression_1605\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_copy\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_exclude\", \"xarray/tests/test_dataarray.py::TestDataArray::test_broadcast_arrays_misaligned\", \"xarray/tests/test_dataarray.py::TestDataArray::test_broadcast_arrays_exclude\", \"xarray/tests/test_dataarray.py::TestDataArray::test_from_series_sparse\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_cdms2_classic\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_cdms2_ugrid\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_dataset_split\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_dataset_retains_keys\", \"xarray/tests/test_dataarray.py::TestDataArray::test_binary_op_join_setting\", \"xarray/tests/test_dataarray.py::TestDataArray::test_combine_first\", \"xarray/tests/test_dataarray.py::TestDataArray::test_rank\", \"xarray/tests/test_dataarray.py::TestDataArray::test_polyfit[True-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_polyfit[True-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_polyfit[False-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_polyfit[False-False]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-True-sum]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-True-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-True-std]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-True-min]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-True-max]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-True-median]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-False-sum]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-False-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-False-std]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-False-min]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-False-max]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-False-median]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-None-sum]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-None-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-None-std]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-None-min]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-None-max]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-None-median]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-True-sum]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-True-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-True-std]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-True-min]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-True-max]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-True-median]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-False-sum]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-False-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-False-std]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-False-min]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-False-max]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-False-median]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-None-sum]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-None-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-None-std]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-None-min]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-None-max]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-None-median]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-1-True-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-1-True-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-1-False-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-1-False-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-1-None-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-1-None-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-None-True-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-None-True-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-None-False-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-None-False-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-None-None-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-None-None-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-1-True-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-1-True-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-1-False-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-1-False-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-1-None-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-1-None-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-None-True-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-None-True-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-None-False-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-None-False-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-None-None-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-None-None-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask_nochunk[True]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask_nochunk[None]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_to_and_from_iris\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_to_and_from_iris_dask\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_da_name_from_cube[var_name-height-Height-var_name-attrs0]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_da_name_from_cube[None-height-Height-height-attrs1]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_da_name_from_cube[None-None-Height-Height-attrs2]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_da_name_from_cube[None-None-None-None-attrs3]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_da_coord_name_from_cube[var_name-height-Height-var_name-attrs0]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_da_coord_name_from_cube[None-height-Height-height-attrs1]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_da_coord_name_from_cube[None-None-Height-Height-attrs2]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_da_coord_name_from_cube[None-None-None-unknown-attrs3]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_prevent_duplicate_coord_names\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_fallback_to_iris_AuxCoord[coord_values0]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_fallback_to_iris_AuxCoord[coord_values1]\", \"xarray/tests/test_dataarray.py::test_rolling_exp[1-span-5-time]\", \"xarray/tests/test_dataarray.py::test_rolling_exp[1-span-5-x]\", \"xarray/tests/test_dataarray.py::test_rolling_exp[1-alpha-0.5-time]\", \"xarray/tests/test_dataarray.py::test_rolling_exp[1-alpha-0.5-x]\", \"xarray/tests/test_dataarray.py::test_rolling_exp[1-com-0.5-time]\", \"xarray/tests/test_dataarray.py::test_rolling_exp[1-com-0.5-x]\", \"xarray/tests/test_dataarray.py::test_rolling_exp[1-halflife-5-time]\", \"xarray/tests/test_dataarray.py::test_rolling_exp[1-halflife-5-x]\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_auto_align\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_pandas_sequence\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_pandas_single\", \"xarray/tests/test_dataset.py::TestDataset::test_chunk\", \"xarray/tests/test_dataset.py::TestDataset::test_dask_is_lazy\", \"xarray/tests/test_dataset.py::TestDataset::test_sel\", \"xarray/tests/test_dataset.py::TestDataset::test_sel_drop\", \"xarray/tests/test_dataset.py::TestDataset::test_sel_method\", \"xarray/tests/test_dataset.py::TestDataset::test_loc\", \"xarray/tests/test_dataset.py::TestDataset::test_align_fill_value[fill_value0]\", \"xarray/tests/test_dataset.py::TestDataset::test_align_fill_value[2]\", \"xarray/tests/test_dataset.py::TestDataset::test_align_fill_value[2.0]\", \"xarray/tests/test_dataset.py::TestDataset::test_align\", \"xarray/tests/test_dataset.py::TestDataset::test_align_exclude\", \"xarray/tests/test_dataset.py::TestDataset::test_align_nocopy\", \"xarray/tests/test_dataset.py::TestDataset::test_align_non_unique\", \"xarray/tests/test_dataset.py::TestDataset::test_broadcast_misaligned\", \"xarray/tests/test_dataset.py::TestDataset::test_rename_does_not_change_CFTimeIndex_type\", \"xarray/tests/test_dataset.py::TestDataset::test_unstack_sparse\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby_math\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby_math_virtual\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_and_first\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_min_count\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_by_mean_with_keep_attrs\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_loffset\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_by_mean_discarding_attrs\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_by_last_discarding_attrs\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_drop_nondim_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_ds_da_are_the_same\", \"xarray/tests/test_dataset.py::TestDataset::test_ds_resample_apply_func_args\", \"xarray/tests/test_dataset.py::TestDataset::test_from_dataframe_sparse\", \"xarray/tests/test_dataset.py::TestDataset::test_rank\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_dataset_math\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_math_auto_align\", \"xarray/tests/test_dataset.py::TestDataset::test_binary_op_join_setting\", \"xarray/tests/test_dataset.py::TestDataset::test_combine_first\", \"xarray/tests/test_dataset.py::TestDataset::test_polyfit_output\", \"xarray/tests/test_dataset.py::test_isin_dask[test_elements0]\", \"xarray/tests/test_dataset.py::test_isin_dask[test_elements1]\", \"xarray/tests/test_dataset.py::test_isin_dask[test_elements2]\", \"xarray/tests/test_dataset.py::test_coarsen_coords_cftime\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-median]\", \"xarray/tests/test_dataset.py::test_rolling_exp[1]\", \"xarray/tests/test_dataset.py::test_differentiate_cftime[False]\", \"xarray/tests/test_dataset.py::test_trapz_datetime[cftime-True]\", \"xarray/tests/test_dataset.py::test_trapz_datetime[cftime-False]\", \"xarray/tests/test_duck_array_ops.py::test_datetime_mean[True]\", \"xarray/tests/test_duck_array_ops.py::test_cftime_datetime_mean\", \"xarray/tests/test_duck_array_ops.py::test_cftime_datetime_mean_dask_error\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-True-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_isnull_with_dask\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[True-3-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[True-3--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[True-8-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[True-8--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[True-11-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[True-11--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[False-3-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[False-3--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[False-8-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[False-8--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[False-11-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[False-11--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[1-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[1--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[1-1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[2-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[2--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[2-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[None-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[x-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_datetime_to_numeric_cftime\", \"xarray/tests/test_duck_array_ops.py::test_datetime_to_numeric_potential_overflow\", \"xarray/tests/test_duck_array_ops.py::test_least_squares[True-True]\", \"xarray/tests/test_duck_array_ops.py::test_least_squares[False-True]\"]",
  "environment_setup_commit": "1c198a191127c601d091213c4b3292a8bb3054e1",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.873358",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}