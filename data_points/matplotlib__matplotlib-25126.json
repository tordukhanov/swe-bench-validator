{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-25126",
  "base_commit": "f3938be9f3be3446065e184b810ee0a8bcb54901",
  "patch": "diff --git a/lib/matplotlib/transforms.py b/lib/matplotlib/transforms.py\n--- a/lib/matplotlib/transforms.py\n+++ b/lib/matplotlib/transforms.py\n@@ -1732,6 +1732,7 @@ def set(self, child):\n         dimensions as the current child.\n         \"\"\"\n         if hasattr(self, \"_child\"):  # Absent during init.\n+            self.invalidate()\n             new_dims = (child.input_dims, child.output_dims)\n             old_dims = (self._child.input_dims, self._child.output_dims)\n             if new_dims != old_dims:\n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_transforms.py b/lib/matplotlib/tests/test_transforms.py\n--- a/lib/matplotlib/tests/test_transforms.py\n+++ b/lib/matplotlib/tests/test_transforms.py\n@@ -10,7 +10,7 @@\n import matplotlib.patches as mpatches\n import matplotlib.transforms as mtransforms\n from matplotlib.path import Path\n-from matplotlib.testing.decorators import image_comparison\n+from matplotlib.testing.decorators import image_comparison, check_figures_equal\n \n \n def test_non_affine_caching():\n@@ -730,3 +730,17 @@ def test_transformwrapper():\n             r\"The input and output dims of the new child \\(1, 1\\) \"\n             r\"do not match those of current child \\(2, 2\\)\")):\n         t.set(scale.LogTransform(10))\n+\n+\n+@check_figures_equal(extensions=[\"png\"])\n+def test_scale_swapping(fig_test, fig_ref):\n+    np.random.seed(19680801)\n+    samples = np.random.normal(size=10)\n+    x = np.linspace(-5, 5, 10)\n+\n+    for fig, log_state in zip([fig_test, fig_ref], [True, False]):\n+        ax = fig.subplots()\n+        ax.hist(samples, log=log_state, density=True)\n+        ax.plot(x, np.exp(-(x**2) / 2) / np.sqrt(2 * np.pi))\n+        fig.canvas.draw()\n+        ax.set_yscale('linear')\n",
  "problem_statement": "[Bug]: ax.plot(x,y) disappears after changing y_scale\n### Bug summary\n\nThe output of ax.plot(x,y) disappears while changing y_scale from 'log' (initial scale for the y axis) to 'linear'. \r\n\n\n### Code for reproduction\n\n```python\nimport numpy as np\r\nimport matplotlib.pyplot as plt\r\n\r\nsamples = np.random.normal(size = 1000)\r\nx = np.linspace(-5,5,1000)\r\nfig, ax = plt.subplots()\r\nax.hist(samples, log = True, density = True)\r\nax.plot(x, np.exp(-x**2/2)/np.sqrt(2*np.pi))\r\nfig.savefig('log.pdf')\r\nax.set_yscale('linear')\r\nfig.savefig('lin.pdf')\n```\n\n\n### Actual outcome\n\n[lin.pdf](https://github.com/matplotlib/matplotlib/files/10559533/lin.pdf)\r\n[log.pdf](https://github.com/matplotlib/matplotlib/files/10559534/log.pdf)\r\n\n\n### Expected outcome\n\n[lin.pdf](https://github.com/matplotlib/matplotlib/files/10559549/lin.pdf)\r\n[log.pdf](https://github.com/matplotlib/matplotlib/files/10559550/log.pdf)\r\n\n\n### Additional information\n\nThe expected outcome is generated with matplotlib==3.5.3 \r\nfill_between and hist are working fine.\n\n### Operating system\n\nMacOSX\n\n### Matplotlib Version\n\n3.6.3\n\n### Matplotlib Backend\n\nMacOSX\n\n### Python version\n\n3.9.13\n\n### Jupyter version\n\n_No response_\n\n### Installation\n\npip\n",
  "hints_text": "I can confirm that this is a regression between 3.6.2 and 3.6.3, is still present in 3.7.0rc1 and is not a pdf related problem.\r\n\r\nSlightly modified reproduction script:\r\n\r\n```python\r\n\r\nimport numpy as np\r\nimport matplotlib\r\nimport matplotlib.pyplot as plt\r\n\r\nsamples = np.random.normal(size = 1000)\r\nx = np.linspace(-5,5,1000)\r\nfig, ax = plt.subplots()\r\nax.set_title(f'{matplotlib.__version__}')\r\nax.hist(samples, log = True, density = True)\r\nax.plot(x, np.exp(-x**2/2)/np.sqrt(2*np.pi))\r\nfig.savefig('/tmp/log.pdf')\r\nplt.pause(1)\r\nax.set_yscale('linear')\r\nplt.pause(1)\r\nfig.savefig('/tmp/lin.pdf')\r\n```\r\n\r\nThank you for the very clear report @sterinaldi !\nbisects to 8d8d3f5c11a6e086e53163a6986a771f5b11f5bc (#24684)\r\n\r\nwhich is the (manual) backport of #24654\r\n\r\nAlso interacts with #24634, which was modifying some of the same areas of code\r\n\r\nCache invalidation strikes again\nInterestingly, the original PR (#24654) explicitly mentions the \"fix log/linear toggle\", and states that it \"clearly works fine even with this removal\"\nIt matters if there is a draw before the switch.  Commenting out the save and the pause makes the linear one look correct.\r\n\r\nFurther linear -> log works, but log -> linear does not...\nok, I  have a fix for this and see how to test it, PR coming soon.",
  "created_at": "2023-02-01T22:10:54Z",
  "version": "3.6",
  "FAIL_TO_PASS": "[\"lib/matplotlib/tests/test_transforms.py::test_scale_swapping[png]\"]",
  "PASS_TO_PASS": "[\"lib/matplotlib/tests/test_transforms.py::test_non_affine_caching\", \"lib/matplotlib/tests/test_transforms.py::test_external_transform_api\", \"lib/matplotlib/tests/test_transforms.py::test_pre_transform_plotting[png]\", \"lib/matplotlib/tests/test_transforms.py::test_pre_transform_plotting[pdf]\", \"lib/matplotlib/tests/test_transforms.py::test_contour_pre_transform_limits\", \"lib/matplotlib/tests/test_transforms.py::test_pcolor_pre_transform_limits\", \"lib/matplotlib/tests/test_transforms.py::test_pcolormesh_pre_transform_limits\", \"lib/matplotlib/tests/test_transforms.py::test_Affine2D_from_values\", \"lib/matplotlib/tests/test_transforms.py::test_affine_inverted_invalidated\", \"lib/matplotlib/tests/test_transforms.py::test_clipping_of_log\", \"lib/matplotlib/tests/test_transforms.py::TestBasicTransform::test_transform_depth\", \"lib/matplotlib/tests/test_transforms.py::TestBasicTransform::test_left_to_right_iteration\", \"lib/matplotlib/tests/test_transforms.py::TestBasicTransform::test_transform_shortcuts\", \"lib/matplotlib/tests/test_transforms.py::TestBasicTransform::test_contains_branch\", \"lib/matplotlib/tests/test_transforms.py::TestBasicTransform::test_affine_simplification\", \"lib/matplotlib/tests/test_transforms.py::TestTransformPlotInterface::test_line_extent_axes_coords\", \"lib/matplotlib/tests/test_transforms.py::TestTransformPlotInterface::test_line_extent_data_coords\", \"lib/matplotlib/tests/test_transforms.py::TestTransformPlotInterface::test_line_extent_compound_coords1\", \"lib/matplotlib/tests/test_transforms.py::TestTransformPlotInterface::test_line_extent_predata_transform_coords\", \"lib/matplotlib/tests/test_transforms.py::TestTransformPlotInterface::test_line_extent_compound_coords2\", \"lib/matplotlib/tests/test_transforms.py::TestTransformPlotInterface::test_line_extents_affine\", \"lib/matplotlib/tests/test_transforms.py::TestTransformPlotInterface::test_line_extents_non_affine\", \"lib/matplotlib/tests/test_transforms.py::TestTransformPlotInterface::test_pathc_extents_non_affine\", \"lib/matplotlib/tests/test_transforms.py::TestTransformPlotInterface::test_pathc_extents_affine\", \"lib/matplotlib/tests/test_transforms.py::TestTransformPlotInterface::test_line_extents_for_non_affine_transData\", \"lib/matplotlib/tests/test_transforms.py::test_bbox_frozen_copies_minpos\", \"lib/matplotlib/tests/test_transforms.py::test_bbox_intersection\", \"lib/matplotlib/tests/test_transforms.py::test_bbox_as_strings\", \"lib/matplotlib/tests/test_transforms.py::test_str_transform\", \"lib/matplotlib/tests/test_transforms.py::test_transform_single_point\", \"lib/matplotlib/tests/test_transforms.py::test_log_transform\", \"lib/matplotlib/tests/test_transforms.py::test_nan_overlap\", \"lib/matplotlib/tests/test_transforms.py::test_transform_angles\", \"lib/matplotlib/tests/test_transforms.py::test_nonsingular\", \"lib/matplotlib/tests/test_transforms.py::test_invalid_arguments\", \"lib/matplotlib/tests/test_transforms.py::test_transformed_path\", \"lib/matplotlib/tests/test_transforms.py::test_transformed_patch_path\", \"lib/matplotlib/tests/test_transforms.py::test_lockable_bbox[x0]\", \"lib/matplotlib/tests/test_transforms.py::test_lockable_bbox[y0]\", \"lib/matplotlib/tests/test_transforms.py::test_lockable_bbox[x1]\", \"lib/matplotlib/tests/test_transforms.py::test_lockable_bbox[y1]\", \"lib/matplotlib/tests/test_transforms.py::test_copy\", \"lib/matplotlib/tests/test_transforms.py::test_deepcopy\", \"lib/matplotlib/tests/test_transforms.py::test_transformwrapper\"]",
  "environment_setup_commit": "73909bcb408886a22e2b84581d6b9e6d9907c813",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.818356",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}