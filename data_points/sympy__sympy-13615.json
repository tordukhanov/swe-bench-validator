{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-13615",
  "base_commit": "50d8a102f0735da8e165a0369bbb994c7d0592a6",
  "patch": "diff --git a/sympy/sets/sets.py b/sympy/sets/sets.py\n--- a/sympy/sets/sets.py\n+++ b/sympy/sets/sets.py\n@@ -217,7 +217,17 @@ def _complement(self, other):\n             return S.EmptySet\n \n         elif isinstance(other, FiniteSet):\n-            return FiniteSet(*[el for el in other if self.contains(el) != True])\n+            from sympy.utilities.iterables import sift\n+\n+            def ternary_sift(el):\n+                contains = self.contains(el)\n+                return contains if contains in [True, False] else None\n+\n+            sifted = sift(other, ternary_sift)\n+            # ignore those that are contained in self\n+            return Union(FiniteSet(*(sifted[False])),\n+                Complement(FiniteSet(*(sifted[None])), self, evaluate=False)\n+                if sifted[None] else S.EmptySet)\n \n     def symmetric_difference(self, other):\n         \"\"\"\n",
  "test_patch": "diff --git a/sympy/sets/tests/test_sets.py b/sympy/sets/tests/test_sets.py\n--- a/sympy/sets/tests/test_sets.py\n+++ b/sympy/sets/tests/test_sets.py\n@@ -187,6 +187,10 @@ def test_Complement():\n \n     assert S.Reals - Union(S.Naturals, FiniteSet(pi)) == \\\n             Intersection(S.Reals - S.Naturals, S.Reals - FiniteSet(pi))\n+    # isssue 12712\n+    assert Complement(FiniteSet(x, y, 2), Interval(-10, 10)) == \\\n+            Complement(FiniteSet(x, y), Interval(-10, 10))\n+\n \n def test_complement():\n     assert Interval(0, 1).complement(S.Reals) == \\\n",
  "problem_statement": "Complement doesn't work when input is a mixture of Symbols and numbers\n```\r\n>>> a=FiniteSet(x,y,2)\r\n>>> b=Interval(-10,10)\r\n>>> Complement(a,b)\r\n{x, y}\r\n```\r\n`{x, y} \\ [-10,10]` is expected as output.\n",
  "hints_text": "If `x` and `y` denote `Symbol`s and not `Number`s, they remain in the set `a` when any numbers are removed. The result will be different when they denote numbers, e.g, `x = 5`, `y = 12`.\n@jksuom @gxyd I Wish to solve this issue. Can you please tell me from where should i start?\r\nThank You.\nI'd start by studying how the complement is computed in different cases.\n@ayush1999 Are you still working on the issue?\r\n\r\nIt affects other types of sets than intervals as well\r\n```python\r\n>>> x,y = symbols(\"x y\")\r\n>>> F = FiniteSet(x, y, 3, 33)\r\n>>> I = Interval(0, 10)\r\n>>> C = ComplexRegion(I * I)\r\n>>> Complement(F, C)\r\n{33}\r\n```\r\nHowever in this case seems to be an issue with `contains` as\r\n```python\r\n>>> C.contains(x)\r\nTrue\r\n```\nAnother problem with symbols in sets\r\n```python\r\n>>> a, b, c = symbols(\"a b c\")\r\n>>> F1 = FiniteSet(a, b)\r\n>>> F2 = FiniteSet(a, c)\r\n>>> Complement(F1, F2)\r\n{b} \\ {c}\r\n```\r\nWhich is incorrect if ``a = b``",
  "created_at": "2017-11-17T08:59:51Z",
  "version": "1.1",
  "FAIL_TO_PASS": "[\"test_Complement\"]",
  "PASS_TO_PASS": "[\"test_imageset\", \"test_interval_arguments\", \"test_interval_symbolic_end_points\", \"test_union\", \"test_union_iter\", \"test_difference\", \"test_complement\", \"test_intersect\", \"test_intersection\", \"test_issue_9623\", \"test_is_disjoint\", \"test_ProductSet_of_single_arg_is_arg\", \"test_interval_subs\", \"test_interval_to_mpi\", \"test_measure\", \"test_is_subset\", \"test_is_proper_subset\", \"test_is_superset\", \"test_is_proper_superset\", \"test_contains\", \"test_interval_symbolic\", \"test_union_contains\", \"test_is_number\", \"test_Interval_is_left_unbounded\", \"test_Interval_is_right_unbounded\", \"test_Interval_as_relational\", \"test_Finite_as_relational\", \"test_Union_as_relational\", \"test_Intersection_as_relational\", \"test_EmptySet\", \"test_finite_basic\", \"test_powerset\", \"test_product_basic\", \"test_real\", \"test_supinf\", \"test_universalset\", \"test_Union_of_ProductSets_shares\", \"test_Interval_free_symbols\", \"test_image_interval\", \"test_image_piecewise\", \"test_image_FiniteSet\", \"test_image_Union\", \"test_image_EmptySet\", \"test_issue_5724_7680\", \"test_boundary\", \"test_boundary_Union\", \"test_boundary_ProductSet\", \"test_boundary_ProductSet_line\", \"test_is_open\", \"test_is_closed\", \"test_closure\", \"test_interior\", \"test_issue_7841\", \"test_Eq\", \"test_SymmetricDifference\", \"test_issue_9536\", \"test_issue_9637\", \"test_issue_9808\", \"test_issue_9956\", \"test_issue_Symbol_inter\", \"test_issue_11827\", \"test_issue_10113\", \"test_issue_10248\", \"test_issue_9447\", \"test_issue_10337\", \"test_issue_10326\", \"test_issue_2799\", \"test_issue_9706\", \"test_issue_8257\", \"test_issue_10931\"]",
  "environment_setup_commit": "ec9e3c0436fbff934fa84e22bf07f1b3ef5bfac3",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.085164",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}