{
  "repo": "django/django",
  "instance_id": "django__django-14385",
  "base_commit": "221b2f85febcf68629fc3a4007dc7edb5a305b91",
  "patch": "diff --git a/django/contrib/admindocs/utils.py b/django/contrib/admindocs/utils.py\n--- a/django/contrib/admindocs/utils.py\n+++ b/django/contrib/admindocs/utils.py\n@@ -142,6 +142,15 @@ def default_reference_role(name, rawtext, text, lineno, inliner, options=None, c\n unnamed_group_matcher = _lazy_re_compile(r'\\(')\n \n \n+def replace_metacharacters(pattern):\n+    \"\"\"Remove unescaped metacharacters from the pattern.\"\"\"\n+    return re.sub(\n+        r'((?:^|(?<!\\\\))(?:\\\\\\\\)*)(\\\\?)([?*+^$]|\\\\[bBAZ])',\n+        lambda m: m[1] + m[3] if m[2] else m[1],\n+        pattern,\n+    )\n+\n+\n def replace_named_groups(pattern):\n     r\"\"\"\n     Find named groups in `pattern` and replace them with the group name. E.g.,\ndiff --git a/django/contrib/admindocs/views.py b/django/contrib/admindocs/views.py\n--- a/django/contrib/admindocs/views.py\n+++ b/django/contrib/admindocs/views.py\n@@ -8,7 +8,7 @@\n from django.contrib.admin.views.decorators import staff_member_required\n from django.contrib.admindocs import utils\n from django.contrib.admindocs.utils import (\n-    replace_named_groups, replace_unnamed_groups,\n+    replace_metacharacters, replace_named_groups, replace_unnamed_groups,\n )\n from django.core.exceptions import ImproperlyConfigured, ViewDoesNotExist\n from django.db import models\n@@ -412,8 +412,7 @@ def simplify_regex(pattern):\n     \"\"\"\n     pattern = replace_named_groups(pattern)\n     pattern = replace_unnamed_groups(pattern)\n-    # clean up any outstanding regex-y characters.\n-    pattern = pattern.replace('^', '').replace('$', '').replace('?', '')\n+    pattern = replace_metacharacters(pattern)\n     if not pattern.startswith('/'):\n         pattern = '/' + pattern\n     return pattern\n",
  "test_patch": "diff --git a/tests/admin_docs/test_views.py b/tests/admin_docs/test_views.py\n--- a/tests/admin_docs/test_views.py\n+++ b/tests/admin_docs/test_views.py\n@@ -385,7 +385,7 @@ class AdminDocViewFunctionsTests(SimpleTestCase):\n \n     def test_simplify_regex(self):\n         tests = (\n-            (r'^a', '/a'),\n+            # Named and unnamed groups.\n             (r'^(?P<a>\\w+)/b/(?P<c>\\w+)/$', '/<a>/b/<c>/'),\n             (r'^(?P<a>\\w+)/b/(?P<c>\\w+)$', '/<a>/b/<c>'),\n             (r'^(?P<a>\\w+)/b/(?P<c>\\w+)', '/<a>/b/<c>'),\n@@ -397,7 +397,89 @@ def test_simplify_regex(self):\n             (r'^(?P<a>(x|y))/b/(?P<c>\\w+)', '/<a>/b/<c>'),\n             (r'^(?P<a>(x|y))/b/(?P<c>\\w+)ab', '/<a>/b/<c>ab'),\n             (r'^(?P<a>(x|y)(\\(|\\)))/b/(?P<c>\\w+)ab', '/<a>/b/<c>ab'),\n+            # Single and repeated metacharacters.\n+            (r'^a', '/a'),\n+            (r'^^a', '/a'),\n+            (r'^^^a', '/a'),\n+            (r'a$', '/a'),\n+            (r'a$$', '/a'),\n+            (r'a$$$', '/a'),\n+            (r'a?', '/a'),\n+            (r'a??', '/a'),\n+            (r'a???', '/a'),\n+            (r'a*', '/a'),\n+            (r'a**', '/a'),\n+            (r'a***', '/a'),\n+            (r'a+', '/a'),\n+            (r'a++', '/a'),\n+            (r'a+++', '/a'),\n+            (r'\\Aa', '/a'),\n+            (r'\\A\\Aa', '/a'),\n+            (r'\\A\\A\\Aa', '/a'),\n+            (r'a\\Z', '/a'),\n+            (r'a\\Z\\Z', '/a'),\n+            (r'a\\Z\\Z\\Z', '/a'),\n+            (r'\\ba', '/a'),\n+            (r'\\b\\ba', '/a'),\n+            (r'\\b\\b\\ba', '/a'),\n+            (r'a\\B', '/a'),\n+            (r'a\\B\\B', '/a'),\n+            (r'a\\B\\B\\B', '/a'),\n+            # Multiple mixed metacharacters.\n             (r'^a/?$', '/a/'),\n+            (r'\\Aa\\Z', '/a'),\n+            (r'\\ba\\B', '/a'),\n+            # Escaped single metacharacters.\n+            (r'\\^a', r'/^a'),\n+            (r'\\\\^a', r'/\\\\a'),\n+            (r'\\\\\\^a', r'/\\\\^a'),\n+            (r'\\\\\\\\^a', r'/\\\\\\\\a'),\n+            (r'\\\\\\\\\\^a', r'/\\\\\\\\^a'),\n+            (r'a\\$', r'/a$'),\n+            (r'a\\\\$', r'/a\\\\'),\n+            (r'a\\\\\\$', r'/a\\\\$'),\n+            (r'a\\\\\\\\$', r'/a\\\\\\\\'),\n+            (r'a\\\\\\\\\\$', r'/a\\\\\\\\$'),\n+            (r'a\\?', r'/a?'),\n+            (r'a\\\\?', r'/a\\\\'),\n+            (r'a\\\\\\?', r'/a\\\\?'),\n+            (r'a\\\\\\\\?', r'/a\\\\\\\\'),\n+            (r'a\\\\\\\\\\?', r'/a\\\\\\\\?'),\n+            (r'a\\*', r'/a*'),\n+            (r'a\\\\*', r'/a\\\\'),\n+            (r'a\\\\\\*', r'/a\\\\*'),\n+            (r'a\\\\\\\\*', r'/a\\\\\\\\'),\n+            (r'a\\\\\\\\\\*', r'/a\\\\\\\\*'),\n+            (r'a\\+', r'/a+'),\n+            (r'a\\\\+', r'/a\\\\'),\n+            (r'a\\\\\\+', r'/a\\\\+'),\n+            (r'a\\\\\\\\+', r'/a\\\\\\\\'),\n+            (r'a\\\\\\\\\\+', r'/a\\\\\\\\+'),\n+            (r'\\\\Aa', r'/\\Aa'),\n+            (r'\\\\\\Aa', r'/\\\\a'),\n+            (r'\\\\\\\\Aa', r'/\\\\\\Aa'),\n+            (r'\\\\\\\\\\Aa', r'/\\\\\\\\a'),\n+            (r'\\\\\\\\\\\\Aa', r'/\\\\\\\\\\Aa'),\n+            (r'a\\\\Z', r'/a\\Z'),\n+            (r'a\\\\\\Z', r'/a\\\\'),\n+            (r'a\\\\\\\\Z', r'/a\\\\\\Z'),\n+            (r'a\\\\\\\\\\Z', r'/a\\\\\\\\'),\n+            (r'a\\\\\\\\\\\\Z', r'/a\\\\\\\\\\Z'),\n+            # Escaped mixed metacharacters.\n+            (r'^a\\?$', r'/a?'),\n+            (r'^a\\\\?$', r'/a\\\\'),\n+            (r'^a\\\\\\?$', r'/a\\\\?'),\n+            (r'^a\\\\\\\\?$', r'/a\\\\\\\\'),\n+            (r'^a\\\\\\\\\\?$', r'/a\\\\\\\\?'),\n+            # Adjacent escaped metacharacters.\n+            (r'^a\\?\\$', r'/a?$'),\n+            (r'^a\\\\?\\\\$', r'/a\\\\\\\\'),\n+            (r'^a\\\\\\?\\\\\\$', r'/a\\\\?\\\\$'),\n+            (r'^a\\\\\\\\?\\\\\\\\$', r'/a\\\\\\\\\\\\\\\\'),\n+            (r'^a\\\\\\\\\\?\\\\\\\\\\$', r'/a\\\\\\\\?\\\\\\\\$'),\n+            # Complex examples with metacharacters and (un)named groups.\n+            (r'^\\b(?P<slug>\\w+)\\B/(\\w+)?', '/<slug>/<var>'),\n+            (r'^\\A(?P<slug>\\w+)\\Z', '/<slug>'),\n         )\n         for pattern, output in tests:\n             with self.subTest(pattern=pattern):\n",
  "problem_statement": "simplify_regex only removes some metacharacters from regex patterns\nDescription\n\t\n Input Pattern Expected Output Actual Output \n r'^\\b(?P<slug>\\w+)\\B' /<slug> /\\b<slug>\\B\n r'\\Ab/\\Z' /b/ /\\Ab/\\Z\n",
  "hints_text": "",
  "created_at": "2021-05-12T10:03:56Z",
  "version": "4.1",
  "FAIL_TO_PASS": "[\"test_simplify_regex (admin_docs.test_views.AdminDocViewFunctionsTests)\", \"test_bookmarklets (admin_docs.test_views.AdminDocViewTests)\"]",
  "PASS_TO_PASS": "[\"test_builtin_fields (admin_docs.test_views.TestFieldType)\", \"test_custom_fields (admin_docs.test_views.TestFieldType)\", \"test_field_name (admin_docs.test_views.TestFieldType)\", \"test_template_detail_path_traversal (admin_docs.test_views.AdminDocViewDefaultEngineOnly)\", \"test_app_not_found (admin_docs.test_views.TestModelDetailView)\", \"The ``description`` field should render correctly for each field type.\", \"Model cached properties are displayed as fields.\", \"Model properties are displayed as fields.\", \"test_method_data_types (admin_docs.test_views.TestModelDetailView)\", \"Methods that begin with strings defined in\", \"Methods that take arguments should also displayed.\", \"Methods with arguments should have their arguments displayed.\", \"Methods with keyword arguments should have their arguments displayed.\", \"Methods with multiple arguments should have all their arguments\", \"test_model_detail_title (admin_docs.test_views.TestModelDetailView)\", \"test_model_docstring_renders_correctly (admin_docs.test_views.TestModelDetailView)\", \"test_model_not_found (admin_docs.test_views.TestModelDetailView)\", \"test_model_with_many_to_one (admin_docs.test_views.TestModelDetailView)\", \"A model with ``related_name`` of `+` shouldn't show backward\", \"Index view should correctly resolve view patterns when ROOT_URLCONF is\", \"test_index (admin_docs.test_views.AdminDocViewTests)\", \"test_missing_docutils (admin_docs.test_views.AdminDocViewTests)\", \"test_model_index (admin_docs.test_views.AdminDocViewTests)\", \"test_namespaced_view_detail (admin_docs.test_views.AdminDocViewTests)\", \"Without the sites framework, should not access SITE_ID or Site\", \"test_template_detail (admin_docs.test_views.AdminDocViewTests)\", \"test_templatefilter_index (admin_docs.test_views.AdminDocViewTests)\", \"test_templatetag_index (admin_docs.test_views.AdminDocViewTests)\", \"test_view_detail (admin_docs.test_views.AdminDocViewTests)\", \"Views that are methods can be displayed.\", \"test_view_detail_illegal_import (admin_docs.test_views.AdminDocViewTests)\", \"test_view_index (admin_docs.test_views.AdminDocViewTests)\", \"Views that are methods are listed correctly.\", \"test_bookmarklets (admin_docs.test_views.AdminDocViewWithMultipleEngines)\", \"test_index (admin_docs.test_views.AdminDocViewWithMultipleEngines)\", \"test_missing_docutils (admin_docs.test_views.AdminDocViewWithMultipleEngines)\", \"test_model_index (admin_docs.test_views.AdminDocViewWithMultipleEngines)\", \"test_namespaced_view_detail (admin_docs.test_views.AdminDocViewWithMultipleEngines)\", \"test_template_detail (admin_docs.test_views.AdminDocViewWithMultipleEngines)\", \"test_templatefilter_index (admin_docs.test_views.AdminDocViewWithMultipleEngines)\", \"test_templatetag_index (admin_docs.test_views.AdminDocViewWithMultipleEngines)\", \"test_view_detail (admin_docs.test_views.AdminDocViewWithMultipleEngines)\", \"test_view_detail_illegal_import (admin_docs.test_views.AdminDocViewWithMultipleEngines)\", \"test_view_index (admin_docs.test_views.AdminDocViewWithMultipleEngines)\"]",
  "environment_setup_commit": "647480166bfe7532e8c471fef0146e3a17e6c0c9",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.690049",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}