{
  "repo": "scikit-learn/scikit-learn",
  "instance_id": "scikit-learn__scikit-learn-26242",
  "base_commit": "b747bacfa1d706bf3c52680566590bfaf0d74363",
  "patch": "diff --git a/sklearn/ensemble/_base.py b/sklearn/ensemble/_base.py\n--- a/sklearn/ensemble/_base.py\n+++ b/sklearn/ensemble/_base.py\n@@ -157,7 +157,7 @@ def _validate_estimator(self, default=None):\n \n         if self.estimator is not None:\n             self.estimator_ = self.estimator\n-        elif self.base_estimator not in [None, \"deprecated\"]:\n+        elif self.base_estimator != \"deprecated\":\n             warnings.warn(\n                 (\n                     \"`base_estimator` was renamed to `estimator` in version 1.2 and \"\n@@ -165,7 +165,10 @@ def _validate_estimator(self, default=None):\n                 ),\n                 FutureWarning,\n             )\n-            self.estimator_ = self.base_estimator\n+            if self.base_estimator is not None:\n+                self.estimator_ = self.base_estimator\n+            else:\n+                self.estimator_ = default\n         else:\n             self.estimator_ = default\n \ndiff --git a/sklearn/ensemble/_weight_boosting.py b/sklearn/ensemble/_weight_boosting.py\n--- a/sklearn/ensemble/_weight_boosting.py\n+++ b/sklearn/ensemble/_weight_boosting.py\n@@ -64,7 +64,11 @@ class BaseWeightBoosting(BaseEnsemble, metaclass=ABCMeta):\n         \"n_estimators\": [Interval(Integral, 1, None, closed=\"left\")],\n         \"learning_rate\": [Interval(Real, 0, None, closed=\"neither\")],\n         \"random_state\": [\"random_state\"],\n-        \"base_estimator\": [HasMethods([\"fit\", \"predict\"]), StrOptions({\"deprecated\"})],\n+        \"base_estimator\": [\n+            HasMethods([\"fit\", \"predict\"]),\n+            StrOptions({\"deprecated\"}),\n+            None,\n+        ],\n     }\n \n     @abstractmethod\n",
  "test_patch": "diff --git a/sklearn/ensemble/tests/test_weight_boosting.py b/sklearn/ensemble/tests/test_weight_boosting.py\n--- a/sklearn/ensemble/tests/test_weight_boosting.py\n+++ b/sklearn/ensemble/tests/test_weight_boosting.py\n@@ -613,6 +613,27 @@ def test_base_estimator_argument_deprecated(AdaBoost, Estimator):\n         model.fit(X, y)\n \n \n+# TODO(1.4): remove in 1.4\n+@pytest.mark.parametrize(\n+    \"AdaBoost\",\n+    [\n+        AdaBoostClassifier,\n+        AdaBoostRegressor,\n+    ],\n+)\n+def test_base_estimator_argument_deprecated_none(AdaBoost):\n+    X = np.array([[1, 2], [3, 4]])\n+    y = np.array([1, 0])\n+    model = AdaBoost(base_estimator=None)\n+\n+    warn_msg = (\n+        \"`base_estimator` was renamed to `estimator` in version 1.2 and \"\n+        \"will be removed in 1.4.\"\n+    )\n+    with pytest.warns(FutureWarning, match=warn_msg):\n+        model.fit(X, y)\n+\n+\n # TODO(1.4): remove in 1.4\n @pytest.mark.parametrize(\n     \"AdaBoost\",\n",
  "problem_statement": "AdaBoost: deprecation of \"base_estimator\" does not handle \"base_estimator=None\" setting properly\n### Describe the bug\r\n\r\nScikit-learn 1.2 deprecated `AdaBoostClassifier` 's `base_estimator` in favour of `estimator` (see #23819). Because there are also validators in place, old code that explicitly defined `base_estimator=None` stopped working.\r\n\r\nA solution that fixes the deprecation is to add a possible `None` to a list allowed values in `_parameter_constraints`; I will do that in a PR.\r\n\r\n### Steps/Code to Reproduce\r\n\r\n```\r\nfrom sklearn.ensemble import AdaBoostClassifier\r\nclf = AdaBoostClassifier(base_estimator=None)\r\nclf.fit([[1]], [0])\r\n```\r\n\r\n### Expected Results\r\n\r\nNo error is thrown.\r\n\r\n### Actual Results\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/Users/marko/opt/miniconda3/envs/orange310/lib/python3.10/site-packages/sklearn/ensemble/_weight_boosting.py\", line 124, in fit\r\n    self._validate_params()\r\n  File \"/Users/marko/opt/miniconda3/envs/orange310/lib/python3.10/site-packages/sklearn/base.py\", line 600, in _validate_params\r\n    validate_parameter_constraints(\r\n  File \"/Users/marko/opt/miniconda3/envs/orange310/lib/python3.10/site-packages/sklearn/utils/_param_validation.py\", line 97, in validate_parameter_constraints\r\n    raise InvalidParameterError(\r\nsklearn.utils._param_validation.InvalidParameterError: The 'base_estimator' parameter of AdaBoostClassifier must be an object implementing 'fit' and 'predict' or a str among {'deprecated'}. Got None instead.\r\n```\r\n\r\n### Versions\r\n\r\n```shell\r\nsklearn: 1.2.2; others are not important\r\n```\r\n\n",
  "hints_text": "",
  "created_at": "2023-04-21T12:20:43Z",
  "version": "1.3",
  "FAIL_TO_PASS": "[\"sklearn/ensemble/tests/test_weight_boosting.py::test_base_estimator_argument_deprecated_none[AdaBoostClassifier]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_base_estimator_argument_deprecated_none[AdaBoostRegressor]\"]",
  "PASS_TO_PASS": "[\"sklearn/ensemble/tests/test_weight_boosting.py::test_samme_proba\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_oneclass_adaboost_proba\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_classification_toy[SAMME]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_classification_toy[SAMME.R]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_regression_toy\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_iris\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_diabetes[linear]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_diabetes[square]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_diabetes[exponential]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_staged_predict[SAMME]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_staged_predict[SAMME.R]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_gridsearch\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_pickle\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_importances\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_adaboost_classifier_sample_weight_error\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_estimator\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_sample_weights_infinite\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_sparse_classification\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_sparse_regression\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_sample_weight_adaboost_regressor\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_multidimensional_X\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_adaboostclassifier_without_sample_weight[SAMME]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_adaboostclassifier_without_sample_weight[SAMME.R]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_adaboostregressor_sample_weight\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_adaboost_consistent_predict[SAMME]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_adaboost_consistent_predict[SAMME.R]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_adaboost_negative_weight_error[model0-X0-y0]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_adaboost_negative_weight_error[model1-X1-y1]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_adaboost_numerically_stable_feature_importance_with_small_weights\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_base_estimator_argument_deprecated[AdaBoostClassifier-DecisionTreeClassifier]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_base_estimator_argument_deprecated[AdaBoostRegressor-DecisionTreeRegressor]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_base_estimator_property_deprecated[AdaBoostClassifier]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_base_estimator_property_deprecated[AdaBoostRegressor]\", \"sklearn/ensemble/tests/test_weight_boosting.py::test_deprecated_base_estimator_parameters_can_be_set\"]",
  "environment_setup_commit": "1e8a5b833d1b58f3ab84099c4582239af854b23a",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.024746",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}