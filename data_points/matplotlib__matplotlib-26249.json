{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-26249",
  "base_commit": "f017315dd5e56c367e43fc7458fd0ed5fd9482a2",
  "patch": "diff --git a/lib/mpl_toolkits/mplot3d/axes3d.py b/lib/mpl_toolkits/mplot3d/axes3d.py\n--- a/lib/mpl_toolkits/mplot3d/axes3d.py\n+++ b/lib/mpl_toolkits/mplot3d/axes3d.py\n@@ -2249,7 +2249,11 @@ def scatter(self, xs, ys, zs=0, zdir='z', s=20, c=None, depthshade=True,\n             *[np.ravel(np.ma.filled(t, np.nan)) for t in [xs, ys, zs]])\n         s = np.ma.ravel(s)  # This doesn't have to match x, y in size.\n \n-        xs, ys, zs, s, c = cbook.delete_masked_points(xs, ys, zs, s, c)\n+        xs, ys, zs, s, c, color = cbook.delete_masked_points(\n+            xs, ys, zs, s, c, kwargs.get('color', None)\n+            )\n+        if kwargs.get('color', None):\n+            kwargs['color'] = color\n \n         # For xs and ys, 2D scatter() will do the copying.\n         if np.may_share_memory(zs_orig, zs):  # Avoid unnecessary copies.\n",
  "test_patch": "diff --git a/lib/mpl_toolkits/mplot3d/tests/test_axes3d.py b/lib/mpl_toolkits/mplot3d/tests/test_axes3d.py\n--- a/lib/mpl_toolkits/mplot3d/tests/test_axes3d.py\n+++ b/lib/mpl_toolkits/mplot3d/tests/test_axes3d.py\n@@ -2226,3 +2226,29 @@ def test_mutating_input_arrays_y_and_z(fig_test, fig_ref):\n     y = [0.0, 0.0, 0.0]\n     z = [0.0, 0.0, 0.0]\n     ax2.plot(x, y, z, 'o-')\n+\n+\n+def test_scatter_masked_color():\n+    \"\"\"\n+    Test color parameter usage with non-finite coordinate arrays.\n+\n+    GH#26236\n+    \"\"\"\n+\n+    x = [np.nan, 1, 2,  1]\n+    y = [0, np.inf, 2,  1]\n+    z = [0, 1, -np.inf, 1]\n+    colors = [\n+        [0.0, 0.0, 0.0, 1],\n+        [0.0, 0.0, 0.0, 1],\n+        [0.0, 0.0, 0.0, 1],\n+        [0.0, 0.0, 0.0, 1]\n+    ]\n+\n+    fig = plt.figure()\n+    ax = fig.add_subplot(projection='3d')\n+    path3d = ax.scatter(x, y, z, color=colors)\n+\n+    # Assert sizes' equality\n+    assert len(path3d.get_offsets()) ==\\\n+           len(super(type(path3d), path3d).get_facecolors())\n",
  "problem_statement": "[Bug]: ax.scatter (projection='3d') - incorrect handling of NaN \n### Bug summary\n\nIn axis 3D projection NaN values are not handled correctly, apparently the values are masked out (as it should be) but the mask is not applied to a color array that may not have NaN in the same position.\n\n### Code for reproduction\n\n```python\nimport numpy as np\r\nfrom matplotlib import pylab as plt\r\nfig = plt.figure()\r\nax = fig.add_subplot(projection='3d')\r\nax.scatter([1,np.nan,3], [2,np.nan,4], [3, np.nan,5], color=[[.5,.5,.5,.5]]*3, s=11.5)\n```\n\n\n### Actual outcome\n\n```python\r\nValueError                                Traceback (most recent call last)\r\nCell In[24], line 1\r\n----> 1 ax.scatter([1,np.nan,3], [2,np.nan,4], [3, np.nan,5], color=[[.5,.5,.5,.5]]*3, s=11.5)\r\n\r\nFile ~/Python/lib/python3.11/site-packages/matplotlib/__init__.py:1442, in _preprocess_data.<locals>.inner(ax, data, *args, **kwargs)\r\n   1439 @functools.wraps(func)\r\n   1440 def inner(ax, *args, data=None, **kwargs):\r\n   1441     if data is None:\r\n-> 1442         return func(ax, *map(sanitize_sequence, args), **kwargs)\r\n   1444     bound = new_sig.bind(ax, *args, **kwargs)\r\n   1445     auto_label = (bound.arguments.get(label_namer)\r\n   1446                   or bound.kwargs.get(label_namer))\r\n\r\nFile ~/Python/lib/python3.11/site-packages/mpl_toolkits/mplot3d/axes3d.py:2275, in Axes3D.scatter(self, xs, ys, zs, zdir, s, c, depthshade, *args, **kwargs)\r\n   2272 if np.may_share_memory(zs_orig, zs):  # Avoid unnecessary copies.\r\n   2273     zs = zs.copy()\r\n-> 2275 patches = super().scatter(xs, ys, s=s, c=c, *args, **kwargs)\r\n   2276 art3d.patch_collection_2d_to_3d(patches, zs=zs, zdir=zdir,\r\n   2277                                 depthshade=depthshade)\r\n   2279 if self._zmargin < 0.05 and xs.size > 0:\r\n\r\nFile ~/Python/lib/python3.11/site-packages/matplotlib/__init__.py:1442, in _preprocess_data.<locals>.inner(ax, data, *args, **kwargs)\r\n   1439 @functools.wraps(func)\r\n   1440 def inner(ax, *args, data=None, **kwargs):\r\n   1441     if data is None:\r\n-> 1442         return func(ax, *map(sanitize_sequence, args), **kwargs)\r\n   1444     bound = new_sig.bind(ax, *args, **kwargs)\r\n   1445     auto_label = (bound.arguments.get(label_namer)\r\n   1446                   or bound.kwargs.get(label_namer))\r\n\r\nFile ~/Python/lib/python3.11/site-packages/matplotlib/axes/_axes.py:4602, in Axes.scatter(self, x, y, s, c, marker, cmap, norm, vmin, vmax, alpha, linewidths, edgecolors, plotnonfinite, **kwargs)\r\n   4599 if edgecolors is None:\r\n   4600     orig_edgecolor = kwargs.get('edgecolor', None)\r\n   4601 c, colors, edgecolors = \\\r\n-> 4602     self._parse_scatter_color_args(\r\n   4603         c, edgecolors, kwargs, x.size,\r\n   4604         get_next_color_func=self._get_patches_for_fill.get_next_color)\r\n   4606 if plotnonfinite and colors is None:\r\n   4607     c = np.ma.masked_invalid(c)\r\n\r\nFile ~/Python/lib/python3.11/site-packages/matplotlib/axes/_axes.py:4455, in Axes._parse_scatter_color_args(c, edgecolors, kwargs, xsize, get_next_color_func)\r\n   4451     else:\r\n   4452         if len(colors) not in (0, 1, xsize):\r\n   4453             # NB: remember that a single color is also acceptable.\r\n   4454             # Besides *colors* will be an empty array if c == 'none'.\r\n-> 4455             raise invalid_shape_exception(len(colors), xsize)\r\n   4456 else:\r\n   4457     colors = None  # use cmap, norm after collection is created\r\n\r\nValueError: 'c' argument has 3 elements, which is inconsistent with 'x' and 'y' with size 2.\r\n\r\n```\n\n### Expected outcome\n\nA plot with the first and 3rd data point.\n\n### Additional information\n\nUnconditionally reproducible.  \r\n\r\nI have not seen this before, but I may never have called it this way before.\n\n### Operating system\n\nFedora 38\n\n### Matplotlib Version\n\n3.7.1\n\n### Matplotlib Backend\n\nTkAgg\n\n### Python version\n\n3.11.4\n\n### Jupyter version\n\nIPython 8.14.0\n\n### Installation\n\npip\n",
  "hints_text": "Thank you for your clear report and diagnosis @2sn.  I have reproduced this with our `main` development branch.\nChange this: \r\nhttps://github.com/matplotlib/matplotlib/blob/f017315dd5e56c367e43fc7458fd0ed5fd9482a2/lib/mpl_toolkits/mplot3d/axes3d.py#L2252\r\n\r\nto \r\n\r\n```  \r\nif kwargs.get('color', None):\r\n    xs, ys, zs, s, c, kwargs['color'] = cbook.delete_masked_points(xs, ys, zs, s, c, kwargs['color'])\r\nelse:\r\n    xs, ys, zs, s, c = cbook.delete_masked_points(xs, ys, zs, s, c)\r\n```\r\n\r\non first sight solve the problem. \r\nI am willing to take this issue if no one alredy did it.\n@artemshekh go for it",
  "created_at": "2023-07-04T07:17:41Z",
  "version": "3.7",
  "FAIL_TO_PASS": "[\"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_scatter_masked_color\"]",
  "PASS_TO_PASS": "[\"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_invisible_axes[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_grid_off[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_invisible_ticks_axis[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_aspects[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_aspects_adjust_box[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_axes3d_repr\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_axes3d_primary_views[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_bar3d[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_bar3d_colors\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_bar3d_shaded[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_bar3d_notshaded[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_bar3d_lightsource\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_contour3d[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_contour3d_extend3d[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_contourf3d[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_contourf3d_fill[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_contourf3d_extend[png-both-levels0]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_contourf3d_extend[png-min-levels1]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_contourf3d_extend[png-max-levels2]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_tricontour[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_contour3d_1d_input\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_lines3d[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_plot_scalar[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_invalid_line_data\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_mixedsubplots[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_tight_layout_text[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_scatter3d[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_scatter3d_color[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_scatter3d_linewidth[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_scatter3d_linewidth_modification[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_scatter3d_modification[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_scatter3d_sorting[png-True]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_scatter3d_sorting[png-False]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_marker_draw_order_data_reversed[png--50]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_marker_draw_order_data_reversed[png-130]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_marker_draw_order_view_rotated[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_plot_3d_from_2d[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_surface3d[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_surface3d_label_offset_tick_position[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_surface3d_shaded[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_surface3d_masked[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_plot_surface_None_arg[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_surface3d_masked_strides[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_text3d[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_text3d_modification[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_trisurf3d[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_trisurf3d_shaded[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_wireframe3d[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_wireframe3dzerocstride[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_wireframe3dzerorstride[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_wireframe3dzerostrideraises\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_mixedsamplesraises\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_quiver3d[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_quiver3d_empty[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_quiver3d_masked[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_patch_modification\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_patch_collection_modification[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_poly3dcollection_verts_validation\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_poly3dcollection_closed[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_poly_collection_2d_to_3d_empty\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_poly3dcollection_alpha[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_add_collection3d_zs_array[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_add_collection3d_zs_scalar[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_axes3d_labelpad[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_axes3d_cla[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_axes3d_rotated[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_plotsurface_1d_raises\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_proj_transform\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_proj_axes_cube[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_proj_axes_cube_ortho[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_world\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_lines_dists[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_lines_dists_nowarning\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_autoscale\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_unautoscale[True-x]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_unautoscale[True-y]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_unautoscale[True-z]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_unautoscale[False-x]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_unautoscale[False-y]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_unautoscale[False-z]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_unautoscale[None-x]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_unautoscale[None-y]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_unautoscale[None-z]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_axes3d_focal_length_checks\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_axes3d_focal_length[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_axes3d_ortho[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_axes3d_isometric[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_invalid_axes_limits[set_xlim3d-left-inf]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_invalid_axes_limits[set_xlim3d-left-nan]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_invalid_axes_limits[set_xlim3d-right-inf]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_invalid_axes_limits[set_xlim3d-right-nan]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_invalid_axes_limits[set_ylim3d-bottom-inf]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_invalid_axes_limits[set_ylim3d-bottom-nan]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_invalid_axes_limits[set_ylim3d-top-inf]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_invalid_axes_limits[set_ylim3d-top-nan]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_invalid_axes_limits[set_zlim3d-bottom-inf]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_invalid_axes_limits[set_zlim3d-bottom-nan]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_invalid_axes_limits[set_zlim3d-top-inf]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_invalid_axes_limits[set_zlim3d-top-nan]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::TestVoxels::test_simple[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::TestVoxels::test_edge_style[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::TestVoxels::test_named_colors[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::TestVoxels::test_rgb_data[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::TestVoxels::test_alpha[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::TestVoxels::test_xyz[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::TestVoxels::test_calling_conventions\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_line3d_set_get_data_3d\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_inverted[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_inverted_cla\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_ax3d_tickcolour\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_ticklabel_format[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_quiver3D_smoke[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_minor_ticks[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_errorbar3d_errorevery[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_errorbar3d[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_stem3d[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_equal_box_aspect[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_colorbar_pos\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_inverted_zaxis\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_set_zlim\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_shared_view[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_shared_axes_retick\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_pan\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_toolbar_zoom_pan[zoom-1-None-expected0]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_toolbar_zoom_pan[zoom-1-x-expected1]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_toolbar_zoom_pan[zoom-1-y-expected2]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_toolbar_zoom_pan[zoom-3-None-expected3]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_toolbar_zoom_pan[pan-1-None-expected4]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_toolbar_zoom_pan[pan-1-x-expected5]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_toolbar_zoom_pan[pan-1-y-expected6]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_scalarmap_update[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_subfigure_simple\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_computed_zorder[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_format_coord\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_get_axis_position\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_margins\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_margins_errors[ValueError-args0-kwargs0-margin\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_margins_errors[ValueError-args1-kwargs1-margin\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_margins_errors[ValueError-args2-kwargs2-margin\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_margins_errors[ValueError-args3-kwargs3-margin\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_margins_errors[ValueError-args4-kwargs4-margin\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_margins_errors[ValueError-args5-kwargs5-margin\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_margins_errors[TypeError-args6-kwargs6-Cannot\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_margins_errors[TypeError-args7-kwargs7-Cannot\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_margins_errors[TypeError-args8-kwargs8-Cannot\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_margins_errors[TypeError-args9-kwargs9-Must\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_text_3d[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_draw_single_lines_from_Nx1\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_pathpatch_3d[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_scatter_spiral[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_Poly3DCollection_get_facecolor\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_Poly3DCollection_get_edgecolor\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_view_init_vertical_axis[z-proj_expected0-axis_lines_expected0-tickdirs_expected0]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_view_init_vertical_axis[y-proj_expected1-axis_lines_expected1-tickdirs_expected1]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_view_init_vertical_axis[x-proj_expected2-axis_lines_expected2-tickdirs_expected2]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_arc_pathpatch[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_panecolor_rcparams[png]\", \"lib/mpl_toolkits/mplot3d/tests/test_axes3d.py::test_mutating_input_arrays_y_and_z[png]\"]",
  "environment_setup_commit": "0849036fd992a2dd133a0cffc3f84f58ccf1840f",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.830296",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}