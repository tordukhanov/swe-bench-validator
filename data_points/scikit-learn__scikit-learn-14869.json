{
  "repo": "scikit-learn/scikit-learn",
  "instance_id": "scikit-learn__scikit-learn-14869",
  "base_commit": "1018f9f98c80fb42e30ab5fd42b554322a057fbf",
  "patch": "diff --git a/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py b/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py\n--- a/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py\n+++ b/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py\n@@ -1039,6 +1039,12 @@ def _encode_y(self, y):\n         return encoded_y\n \n     def _get_loss(self):\n+        if (self.loss == 'categorical_crossentropy' and\n+                self.n_trees_per_iteration_ == 1):\n+            raise ValueError(\"'categorical_crossentropy' is not suitable for \"\n+                             \"a binary classification problem. Please use \"\n+                             \"'auto' or 'binary_crossentropy' instead.\")\n+\n         if self.loss == 'auto':\n             if self.n_trees_per_iteration_ == 1:\n                 return _LOSSES['binary_crossentropy']()\n",
  "test_patch": "diff --git a/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py b/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py\n--- a/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py\n+++ b/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py\n@@ -417,6 +417,17 @@ def test_infinite_values_missing_values():\n     assert stump_clf.fit(X, y_isnan).score(X, y_isnan) == 1\n \n \n+def test_crossentropy_binary_problem():\n+    # categorical_crossentropy should only be used if there are more than two\n+    # classes present. PR #14869\n+    X = [[1], [0]]\n+    y = [0, 1]\n+    gbrt = HistGradientBoostingClassifier(loss='categorical_crossentropy')\n+    with pytest.raises(ValueError,\n+                       match=\"'categorical_crossentropy' is not suitable for\"):\n+        gbrt.fit(X, y)\n+\n+\n @pytest.mark.parametrize(\"scoring\", [None, 'loss'])\n def test_string_target_early_stopping(scoring):\n     # Regression tests for #14709 where the targets need to be encoded before\n",
  "problem_statement": "HGBC with categorical_crossentropy fails silently on binary classification\n```python\r\nimport numpy as np\r\nfrom sklearn.experimental import enable_hist_gradient_boosting\r\nfrom sklearn.ensemble import HistGradientBoostingClassifier\r\n\r\nX = [[1, 0],\r\n     [1, 0],\r\n     [1, 0],\r\n     [0, 1],\r\n     [1, 1]]\r\ny = [1, 1, 1, 0, 1]\r\ngb = HistGradientBoostingClassifier(loss='categorical_crossentropy',\r\n                                    min_samples_leaf=1)\r\ngb.fit(X, y)\r\nprint(gb.predict([[1, 0]]))\r\nprint(gb.predict([[0, 1]]))\r\n```\r\n\r\ngives:\r\n\r\n```\r\n[0]\r\n[0]\r\n```\r\n\r\nAnd `binary_crossentropy` works fine. `categorical_crossentropy` should either generalize or raise an error on binary classification.\r\n\r\nPing @NicolasHug @ogrisel \n",
  "hints_text": "Thanks for the report, I think changing \r\n\r\n```py\r\nself.n_trees_per_iteration_ = 1 if n_classes <= 2 else n_classes\r\n```\r\nto\r\n```\r\nself.n_trees_per_iteration_ = n_classes\r\n```\r\n\r\nwould make categorical-crossentropy behave like the log loss.\r\n\r\nBut I think we want to error in this case: categorical-crossentropy will be twice as slow. This is a bug right now\r\n\r\nSubmit a PR Adrin?\nI'm happy to submit a PR, but do we want to have two trees for binary classification and categorical crossentropy and one tree for binary crossentropy? And then raise a warning if categorical crossentropy is used for binary classification?\n> do we want to have two trees for binary classification and categorical crossentropy and one tree for binary crossentropy? \r\n\r\nI'd say no, we should just error. But no strong opinion. I don't see the point of allowing categorical crossentropy in binary classification when the log loss is equivalent and twice as fast. Especially considering the loss='auto' which is the default.",
  "created_at": "2019-09-02T16:28:25Z",
  "version": "0.22",
  "FAIL_TO_PASS": "[\"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_crossentropy_binary_problem\"]",
  "PASS_TO_PASS": "[\"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_init_parameters_validation[params0-Loss\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_init_parameters_validation[params1-learning_rate=0\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_init_parameters_validation[params2-learning_rate=-1\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_init_parameters_validation[params3-max_iter=0\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_init_parameters_validation[params4-max_leaf_nodes=0\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_init_parameters_validation[params5-max_leaf_nodes=1\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_init_parameters_validation[params6-max_depth=0\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_init_parameters_validation[params7-max_depth=1\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_init_parameters_validation[params8-min_samples_leaf=0\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_init_parameters_validation[params9-l2_regularization=-1\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_init_parameters_validation[params10-max_bins=1\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_init_parameters_validation[params11-max_bins=256\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_init_parameters_validation[params12-n_iter_no_change=-1\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_init_parameters_validation[params13-validation_fraction=-1\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_init_parameters_validation[params14-validation_fraction=0\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_init_parameters_validation[params15-tol=-1\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_invalid_classification_loss\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_regression[neg_mean_squared_error-0.1-5-1e-07]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_regression[neg_mean_squared_error-None-5-0.1]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_regression[None-0.1-5-1e-07]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_regression[None-None-5-0.1]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_regression[loss-0.1-5-1e-07]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_regression[loss-None-5-0.1]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_regression[None-None-None-None]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_classification[accuracy-0.1-5-1e-07-data0]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_classification[accuracy-0.1-5-1e-07-data1]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_classification[accuracy-None-5-0.1-data0]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_classification[accuracy-None-5-0.1-data1]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_classification[None-0.1-5-1e-07-data0]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_classification[None-0.1-5-1e-07-data1]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_classification[None-None-5-0.1-data0]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_classification[None-None-5-0.1-data1]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_classification[loss-0.1-5-1e-07-data0]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_classification[loss-0.1-5-1e-07-data1]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_classification[loss-None-5-0.1-data0]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_classification[loss-None-5-0.1-data1]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_classification[None-None-None-None-data0]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_early_stopping_classification[None-None-None-None-data1]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_should_stop[scores0-1-0.001-False]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_should_stop[scores1-5-0.001-False]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_should_stop[scores2-5-0.001-False]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_should_stop[scores3-5-0.001-False]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_should_stop[scores4-5-0.0-False]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_should_stop[scores5-5-0.999-False]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_should_stop[scores6-5-4.99999-False]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_should_stop[scores7-5-0.0-True]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_should_stop[scores8-5-0.001-True]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_should_stop[scores9-5-5-True]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_binning_train_validation_are_separated\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_missing_values_trivial\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_missing_values_resilience[0.1-0.97-0.89-classification]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_missing_values_resilience[0.1-0.97-0.89-regression]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_missing_values_resilience[0.2-0.93-0.81-classification]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_missing_values_resilience[0.2-0.93-0.81-regression]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_missing_values_resilience[0.5-0.79-0.52-classification]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_missing_values_resilience[0.5-0.79-0.52-regression]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_zero_division_hessians[binary_crossentropy]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_zero_division_hessians[categorical_crossentropy]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_small_trainset\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_missing_values_minmax_imputation\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_infinite_values\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_infinite_values_missing_values\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_string_target_early_stopping[None]\", \"sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py::test_string_target_early_stopping[loss]\"]",
  "environment_setup_commit": "7e85a6d1f038bbb932b36f18d75df6be937ed00d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.008243",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}