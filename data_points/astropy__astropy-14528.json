{
  "repo": "astropy/astropy",
  "instance_id": "astropy__astropy-14528",
  "base_commit": "13b1bef09be51cb875ca665bb2cb14f5e5cf68de",
  "patch": "diff --git a/astropy/io/fits/hdu/image.py b/astropy/io/fits/hdu/image.py\n--- a/astropy/io/fits/hdu/image.py\n+++ b/astropy/io/fits/hdu/image.py\n@@ -264,19 +264,16 @@ def data(self, data):\n             self._data_replaced = True\n             was_unsigned = False\n \n-        if (\n-            data is not None\n-            and not isinstance(data, np.ndarray)\n-            and not _is_dask_array(data)\n-        ):\n-            # Try to coerce the data into a numpy array--this will work, on\n-            # some level, for most objects\n-            try:\n-                data = np.array(data)\n-            except Exception:\n-                raise TypeError(\n-                    f\"data object {data!r} could not be coerced into an ndarray\"\n-                )\n+        if data is not None:\n+            if not isinstance(data, np.ndarray) and not _is_dask_array(data):\n+                # Try to coerce the data into a numpy array--this will work, on\n+                # some level, for most objects\n+                try:\n+                    data = np.array(data)\n+                except Exception:  # pragma: no cover\n+                    raise TypeError(\n+                        f\"data object {data!r} could not be coerced into an \" f\"ndarray\"\n+                    )\n \n             if data.shape == ():\n                 raise TypeError(\n",
  "test_patch": "diff --git a/astropy/io/fits/tests/test_hdulist.py b/astropy/io/fits/tests/test_hdulist.py\n--- a/astropy/io/fits/tests/test_hdulist.py\n+++ b/astropy/io/fits/tests/test_hdulist.py\n@@ -547,11 +547,14 @@ def test_new_hdulist_extend_keyword(self):\n \n         h0 = fits.Header()\n         hdu = fits.PrimaryHDU(header=h0)\n-        sci = fits.ImageHDU(data=np.array(10))\n-        image = fits.HDUList([hdu, sci])\n-        image.writeto(self.temp(\"temp.fits\"))\n+        sci = fits.ImageHDU(data=np.array([10]))\n+        hdul = fits.HDUList([hdu, sci])\n         assert \"EXTEND\" in hdu.header\n         assert hdu.header[\"EXTEND\"] is True\n+        hdul.writeto(self.temp(\"temp.fits\"))\n+        hdr = fits.getheader(self.temp(\"temp.fits\"))\n+        assert \"EXTEND\" in hdr\n+        assert hdr[\"EXTEND\"] is True\n \n     def test_replace_memmaped_array(self, home_is_temp):\n         # Copy the original before we modify it\ndiff --git a/astropy/io/fits/tests/test_image.py b/astropy/io/fits/tests/test_image.py\n--- a/astropy/io/fits/tests/test_image.py\n+++ b/astropy/io/fits/tests/test_image.py\n@@ -1126,6 +1126,11 @@ def test_hdu_creation_with_scalar(self):\n             fits.ImageHDU(data=1)\n         with pytest.raises(TypeError, match=msg):\n             fits.PrimaryHDU(data=1)\n+        # Regression test for https://github.com/astropy/astropy/issues/14527\n+        with pytest.raises(TypeError, match=msg):\n+            fits.ImageHDU(data=np.array(1))\n+        with pytest.raises(TypeError, match=msg):\n+            fits.PrimaryHDU(data=np.array(1))\n \n \n class TestCompressedImage(FitsTestCase):\n",
  "problem_statement": "`io.fits` creates a corrupt FITS files if a `ImageHDU` contains zero-dimensional data\n### Description\n\n`ImageHDU` accepts a ndarray with shape `()` (zero-dimensional) as a data array. This later causes issues when writing to a file because `io.fits` assumes that the data has at least 1 dimension, resulting in a corrupt FITS file.\n\n### Expected behavior\n\n`io.fits` should never silently create a corrupt FITS file.\n\n### How to Reproduce\n\nMinimal reproducible example:\r\n\r\n```python\r\nimport numpy as np\r\nfrom astropy.io import fits\r\n\r\nfilename = 'corrupted.fits'\r\nhdu = fits.ImageHDU(name='test', data=np.array(1.0))\r\nhdu.writeto(filename, overwrite=True)\r\n```\r\nAlthough this causes no errors/warnings, the resulting file is not valid FITS and will fail to properly open with `fits.getdata(filename)`.\n\n### Versions\n\nWindows-10-10.0.19044-SP0\r\nPython 3.10.10 (tags/v3.10.10:aad5f6a, Feb  7 2023, 17:20:36) [MSC v.1929 64 bit (AMD64)]\r\nastropy 5.2.1\r\nNumpy 1.24.2\r\npyerfa 2.0.0.1\r\nScipy 1.10.0\r\nMatplotlib 3.6.3\n",
  "hints_text": "This seems to have a trivial fix, I will provide a PR soon.",
  "created_at": "2023-03-14T16:42:42Z",
  "version": "5.1",
  "FAIL_TO_PASS": "[\"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_hdu_creation_with_scalar\"]",
  "PASS_TO_PASS": "[\"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_update_name\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_hdu_file_bytes\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_hdulist_file_info\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_create_from_multiple_primary\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_append_primary_to_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_append_extension_to_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_append_table_extension_to_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_append_groupshdu_to_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_append_primary_to_non_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_append_extension_to_non_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_append_groupshdu_to_non_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_insert_primary_to_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_insert_extension_to_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_insert_table_extension_to_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_insert_groupshdu_to_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_insert_primary_to_non_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_insert_extension_to_non_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_insert_groupshdu_to_non_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_insert_groupshdu_to_begin_of_hdulist_with_groupshdu\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_insert_extension_to_primary_in_non_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_insert_image_extension_to_primary_in_non_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_filename[]\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_filename[home_is_data]\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_filename[home_is_data,\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_file_like\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_file_like_2\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_file_like_3\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_shallow_copy\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_deep_copy\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_new_hdu_extname\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_update_filelike\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_flush_readonly\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_fix_extend_keyword\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_fix_malformed_naxisj\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_fix_wellformed_naxisj\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_new_hdulist_extend_keyword\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_replace_memmaped_array[]\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_replace_memmaped_array[home_is_data]\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_replace_memmaped_array[home_is_data,\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_open_file_with_bad_file_padding\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_open_file_with_end_padding\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_open_file_with_bad_header_padding\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_update_with_truncated_header\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_update_resized_header[]\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_update_resized_header[home_is_data]\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_update_resized_header[home_is_data,\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_update_resized_header2[]\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_update_resized_header2[home_is_data]\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_update_resized_header2[home_is_data,\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_hdul_fromstring\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_save_backup[]\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_save_backup[home_is_data]\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_save_backup[home_is_data,\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_replace_mmap_data\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_replace_mmap_data_2\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_extname_in_hdulist\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_overwrite[]\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_overwrite[home_is_data]\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_overwrite[home_is_data,\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_invalid_hdu_key_in_contains\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_iteration_of_lazy_loaded_hdulist\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_read_non_standard_hdu\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_proper_error_raised_on_non_fits_file\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_proper_error_raised_on_invalid_fits_file\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_warning_raised_on_non_standard_simple_card\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_proper_error_raised_on_non_fits_file_with_unicode\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_no_resource_warning_raised_on_non_fits_file\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_pop_with_lazy_load\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_pop_extname\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_write_hdulist_to_stream\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_output_verify\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_constructor_name_arg\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_constructor_ver_arg\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_constructor_copies_header\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_open\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_open_2\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_open_3\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_fortran_array\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_fortran_array_non_contiguous\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_primary_with_extname\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_io_manipulation\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_memory_mapping\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_verification_on_output\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_section\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_section_data_single\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_section_data_square\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_section_data_cube\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_section_data_four\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_section_data_scaled\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_do_not_scale_image_data\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_append_uint_data\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_scale_with_explicit_bzero_bscale\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_uint_header_consistency\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_uint_header_keywords_removed_after_bitpix_change[False-False]\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_uint_header_keywords_removed_after_bitpix_change[False-True]\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_blanks\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_invalid_blanks\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_scale_back_with_blanks\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_bzero_with_floats\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_rewriting_large_scaled_image\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_image_update_header\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_open_scaled_in_update_mode\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_scale_back\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_image_none\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_invalid_blank\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_scaled_image_fromfile\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_set_data\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_scale_bzero_with_int_data\", \"astropy/io/fits/tests/test_image.py::TestImageFunctions::test_scale_back_uint_assignment\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_empty\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_comp_image[<-data0-RICE_1-16]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_comp_image[<-data1-GZIP_1--0.01]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_comp_image[<-data2-GZIP_2--0.01]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_comp_image[<-data3-HCOMPRESS_1-16]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_comp_image[<-data4-PLIO_1-16]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_comp_image[>-data0-RICE_1-16]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_comp_image[>-data1-GZIP_1--0.01]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_comp_image[>-data2-GZIP_2--0.01]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_comp_image[>-data3-HCOMPRESS_1-16]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_comp_image[>-data4-PLIO_1-16]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_comp_image_hcompression_1_invalid_data\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_comp_image_hcompress_image_stack\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_subtractive_dither_seed\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_disable_image_compression\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_open_comp_image_in_update_mode\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_write_comp_hdu_direct_from_existing\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_rewriting_large_scaled_image_compressed\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_scale_back_compressed\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_lossless_gzip_compression\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compression_column_tforms\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compression_update_header\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compression_update_header_with_reserved\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compression_header_append\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compression_header_append2\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compression_header_insert\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compression_header_set_before_after\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compression_header_append_commentary\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compression_with_gzip_column\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_duplicate_compression_header_keywords\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_scale_bzero_with_compressed_int_data\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_scale_back_compressed_uint_assignment\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compressed_header_missing_znaxis\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compressed_header_double_extname\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compressed_header_extname\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compressed_header_minimal\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compressed_scaled_float[BSCALE-uint8-float32]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compressed_scaled_float[BSCALE-int16-float32]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compressed_scaled_float[BSCALE-int32-float64]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compressed_scaled_float[BZERO-uint8-float32]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compressed_scaled_float[BZERO-int16-float32]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compressed_scaled_float[BZERO-int32-float64]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compressed_integers[uint8]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compressed_integers[int16]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compressed_integers[uint16]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compressed_integers[int32]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_compressed_integers[uint32]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_write_non_contiguous_data[f-NOCOMPRESS]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_write_non_contiguous_data[f-RICE_1]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_write_non_contiguous_data[f-GZIP_1]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_write_non_contiguous_data[f-GZIP_2]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_write_non_contiguous_data[f-PLIO_1]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_write_non_contiguous_data[f-HCOMPRESS_1]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_write_non_contiguous_data[i4-NOCOMPRESS]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_write_non_contiguous_data[i4-RICE_1]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_write_non_contiguous_data[i4-GZIP_1]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_write_non_contiguous_data[i4-GZIP_2]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_write_non_contiguous_data[i4-PLIO_1]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_write_non_contiguous_data[i4-HCOMPRESS_1]\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_slice_and_write_comp_hdu\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_comp_image_deprecated_tile_size\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_comp_image_deprecated_tile_size_and_tile_shape\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_comp_image_properties_default\", \"astropy/io/fits/tests/test_image.py::TestCompressedImage::test_comp_image_properties_set\", \"astropy/io/fits/tests/test_image.py::TestCompHDUSections::test_section_slicing\", \"astropy/io/fits/tests/test_image.py::TestCompHDUSections::test_section_slicing_scaling\", \"astropy/io/fits/tests/test_image.py::test_comphdu_fileobj\", \"astropy/io/fits/tests/test_image.py::test_comphdu_bscale\", \"astropy/io/fits/tests/test_image.py::test_scale_implicit_casting\", \"astropy/io/fits/tests/test_image.py::test_bzero_implicit_casting_compressed\", \"astropy/io/fits/tests/test_image.py::test_bzero_mishandled_info\", \"astropy/io/fits/tests/test_image.py::test_image_write_readonly\", \"astropy/io/fits/tests/test_image.py::test_int8\"]",
  "environment_setup_commit": "5f74eacbcc7fff707a44d8eb58adaa514cb7dcb5",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.540583",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}