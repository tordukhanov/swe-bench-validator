{
  "repo": "pydata/xarray",
  "instance_id": "pydata__xarray-4879",
  "base_commit": "15c68366b8ba8fd678d675df5688cf861d1c7235",
  "patch": "diff --git a/xarray/backends/file_manager.py b/xarray/backends/file_manager.py\n--- a/xarray/backends/file_manager.py\n+++ b/xarray/backends/file_manager.py\n@@ -3,8 +3,9 @@\n import contextlib\n import io\n import threading\n+import uuid\n import warnings\n-from typing import Any\n+from typing import Any, Hashable\n \n from ..core import utils\n from ..core.options import OPTIONS\n@@ -12,12 +13,11 @@\n from .lru_cache import LRUCache\n \n # Global cache for storing open files.\n-FILE_CACHE: LRUCache[str, io.IOBase] = LRUCache(\n+FILE_CACHE: LRUCache[Any, io.IOBase] = LRUCache(\n     maxsize=OPTIONS[\"file_cache_maxsize\"], on_evict=lambda k, v: v.close()\n )\n assert FILE_CACHE.maxsize, \"file cache must be at least size one\"\n \n-\n REF_COUNTS: dict[Any, int] = {}\n \n _DEFAULT_MODE = utils.ReprObject(\"<unused>\")\n@@ -85,12 +85,13 @@ def __init__(\n         kwargs=None,\n         lock=None,\n         cache=None,\n+        manager_id: Hashable | None = None,\n         ref_counts=None,\n     ):\n-        \"\"\"Initialize a FileManager.\n+        \"\"\"Initialize a CachingFileManager.\n \n-        The cache and ref_counts arguments exist solely to facilitate\n-        dependency injection, and should only be set for tests.\n+        The cache, manager_id and ref_counts arguments exist solely to\n+        facilitate dependency injection, and should only be set for tests.\n \n         Parameters\n         ----------\n@@ -120,6 +121,8 @@ def __init__(\n             global variable and contains non-picklable file objects, an\n             unpickled FileManager objects will be restored with the default\n             cache.\n+        manager_id : hashable, optional\n+            Identifier for this CachingFileManager.\n         ref_counts : dict, optional\n             Optional dict to use for keeping track the number of references to\n             the same file.\n@@ -129,13 +132,17 @@ def __init__(\n         self._mode = mode\n         self._kwargs = {} if kwargs is None else dict(kwargs)\n \n-        self._default_lock = lock is None or lock is False\n-        self._lock = threading.Lock() if self._default_lock else lock\n+        self._use_default_lock = lock is None or lock is False\n+        self._lock = threading.Lock() if self._use_default_lock else lock\n \n         # cache[self._key] stores the file associated with this object.\n         if cache is None:\n             cache = FILE_CACHE\n         self._cache = cache\n+        if manager_id is None:\n+            # Each call to CachingFileManager should separately open files.\n+            manager_id = str(uuid.uuid4())\n+        self._manager_id = manager_id\n         self._key = self._make_key()\n \n         # ref_counts[self._key] stores the number of CachingFileManager objects\n@@ -153,6 +160,7 @@ def _make_key(self):\n             self._args,\n             \"a\" if self._mode == \"w\" else self._mode,\n             tuple(sorted(self._kwargs.items())),\n+            self._manager_id,\n         )\n         return _HashedSequence(value)\n \n@@ -223,20 +231,14 @@ def close(self, needs_lock=True):\n             if file is not None:\n                 file.close()\n \n-    def __del__(self):\n-        # If we're the only CachingFileManger referencing a unclosed file, we\n-        # should remove it from the cache upon garbage collection.\n+    def __del__(self) -> None:\n+        # If we're the only CachingFileManger referencing a unclosed file,\n+        # remove it from the cache upon garbage collection.\n         #\n-        # Keeping our own count of file references might seem like overkill,\n-        # but it's actually pretty common to reopen files with the same\n-        # variable name in a notebook or command line environment, e.g., to\n-        # fix the parameters used when opening a file:\n-        #    >>> ds = xarray.open_dataset('myfile.nc')\n-        #    >>> ds = xarray.open_dataset('myfile.nc', decode_times=False)\n-        # This second assignment to \"ds\" drops CPython's ref-count on the first\n-        # \"ds\" argument to zero, which can trigger garbage collections. So if\n-        # we didn't check whether another object is referencing 'myfile.nc',\n-        # the newly opened file would actually be immediately closed!\n+        # We keep track of our own reference count because we don't want to\n+        # close files if another identical file manager needs it. This can\n+        # happen if a CachingFileManager is pickled and unpickled without\n+        # closing the original file.\n         ref_count = self._ref_counter.decrement(self._key)\n \n         if not ref_count and self._key in self._cache:\n@@ -249,30 +251,40 @@ def __del__(self):\n \n             if OPTIONS[\"warn_for_unclosed_files\"]:\n                 warnings.warn(\n-                    \"deallocating {}, but file is not already closed. \"\n-                    \"This may indicate a bug.\".format(self),\n+                    f\"deallocating {self}, but file is not already closed. \"\n+                    \"This may indicate a bug.\",\n                     RuntimeWarning,\n                     stacklevel=2,\n                 )\n \n     def __getstate__(self):\n         \"\"\"State for pickling.\"\"\"\n-        # cache and ref_counts are intentionally omitted: we don't want to try\n-        # to serialize these global objects.\n-        lock = None if self._default_lock else self._lock\n-        return (self._opener, self._args, self._mode, self._kwargs, lock)\n+        # cache is intentionally omitted: we don't want to try to serialize\n+        # these global objects.\n+        lock = None if self._use_default_lock else self._lock\n+        return (\n+            self._opener,\n+            self._args,\n+            self._mode,\n+            self._kwargs,\n+            lock,\n+            self._manager_id,\n+        )\n \n-    def __setstate__(self, state):\n+    def __setstate__(self, state) -> None:\n         \"\"\"Restore from a pickle.\"\"\"\n-        opener, args, mode, kwargs, lock = state\n-        self.__init__(opener, *args, mode=mode, kwargs=kwargs, lock=lock)\n+        opener, args, mode, kwargs, lock, manager_id = state\n+        self.__init__(  # type: ignore\n+            opener, *args, mode=mode, kwargs=kwargs, lock=lock, manager_id=manager_id\n+        )\n \n-    def __repr__(self):\n+    def __repr__(self) -> str:\n         args_string = \", \".join(map(repr, self._args))\n         if self._mode is not _DEFAULT_MODE:\n             args_string += f\", mode={self._mode!r}\"\n-        return \"{}({!r}, {}, kwargs={})\".format(\n-            type(self).__name__, self._opener, args_string, self._kwargs\n+        return (\n+            f\"{type(self).__name__}({self._opener!r}, {args_string}, \"\n+            f\"kwargs={self._kwargs}, manager_id={self._manager_id!r})\"\n         )\n \n \n",
  "test_patch": "diff --git a/xarray/tests/test_backends.py b/xarray/tests/test_backends.py\n--- a/xarray/tests/test_backends.py\n+++ b/xarray/tests/test_backends.py\n@@ -1207,6 +1207,39 @@ def test_multiindex_not_implemented(self) -> None:\n                 pass\n \n \n+class NetCDFBase(CFEncodedBase):\n+    \"\"\"Tests for all netCDF3 and netCDF4 backends.\"\"\"\n+\n+    @pytest.mark.skipif(\n+        ON_WINDOWS, reason=\"Windows does not allow modifying open files\"\n+    )\n+    def test_refresh_from_disk(self) -> None:\n+        # regression test for https://github.com/pydata/xarray/issues/4862\n+\n+        with create_tmp_file() as example_1_path:\n+            with create_tmp_file() as example_1_modified_path:\n+\n+                with open_example_dataset(\"example_1.nc\") as example_1:\n+                    self.save(example_1, example_1_path)\n+\n+                    example_1.rh.values += 100\n+                    self.save(example_1, example_1_modified_path)\n+\n+                a = open_dataset(example_1_path, engine=self.engine).load()\n+\n+                # Simulate external process modifying example_1.nc while this script is running\n+                shutil.copy(example_1_modified_path, example_1_path)\n+\n+                # Reopen example_1.nc (modified) as `b`; note that `a` has NOT been closed\n+                b = open_dataset(example_1_path, engine=self.engine).load()\n+\n+                try:\n+                    assert not np.array_equal(a.rh.values, b.rh.values)\n+                finally:\n+                    a.close()\n+                    b.close()\n+\n+\n _counter = itertools.count()\n \n \n@@ -1238,7 +1271,7 @@ def create_tmp_files(\n         yield files\n \n \n-class NetCDF4Base(CFEncodedBase):\n+class NetCDF4Base(NetCDFBase):\n     \"\"\"Tests for both netCDF4-python and h5netcdf.\"\"\"\n \n     engine: T_NetcdfEngine = \"netcdf4\"\n@@ -1595,6 +1628,10 @@ def test_setncattr_string(self) -> None:\n                 assert_array_equal(one_element_list_of_strings, totest.attrs[\"bar\"])\n                 assert one_string == totest.attrs[\"baz\"]\n \n+    @pytest.mark.skip(reason=\"https://github.com/Unidata/netcdf4-python/issues/1195\")\n+    def test_refresh_from_disk(self) -> None:\n+        super().test_refresh_from_disk()\n+\n \n @requires_netCDF4\n class TestNetCDF4AlreadyOpen:\n@@ -3182,20 +3219,20 @@ def test_open_mfdataset_list_attr() -> None:\n \n     with create_tmp_files(2) as nfiles:\n         for i in range(2):\n-            f = Dataset(nfiles[i], \"w\")\n-            f.createDimension(\"x\", 3)\n-            vlvar = f.createVariable(\"test_var\", np.int32, (\"x\"))\n-            # here create an attribute as a list\n-            vlvar.test_attr = [f\"string a {i}\", f\"string b {i}\"]\n-            vlvar[:] = np.arange(3)\n-            f.close()\n-        ds1 = open_dataset(nfiles[0])\n-        ds2 = open_dataset(nfiles[1])\n-        original = xr.concat([ds1, ds2], dim=\"x\")\n-        with xr.open_mfdataset(\n-            [nfiles[0], nfiles[1]], combine=\"nested\", concat_dim=\"x\"\n-        ) as actual:\n-            assert_identical(actual, original)\n+            with Dataset(nfiles[i], \"w\") as f:\n+                f.createDimension(\"x\", 3)\n+                vlvar = f.createVariable(\"test_var\", np.int32, (\"x\"))\n+                # here create an attribute as a list\n+                vlvar.test_attr = [f\"string a {i}\", f\"string b {i}\"]\n+                vlvar[:] = np.arange(3)\n+\n+        with open_dataset(nfiles[0]) as ds1:\n+            with open_dataset(nfiles[1]) as ds2:\n+                original = xr.concat([ds1, ds2], dim=\"x\")\n+                with xr.open_mfdataset(\n+                    [nfiles[0], nfiles[1]], combine=\"nested\", concat_dim=\"x\"\n+                ) as actual:\n+                    assert_identical(actual, original)\n \n \n @requires_scipy_or_netCDF4\ndiff --git a/xarray/tests/test_backends_file_manager.py b/xarray/tests/test_backends_file_manager.py\n--- a/xarray/tests/test_backends_file_manager.py\n+++ b/xarray/tests/test_backends_file_manager.py\n@@ -7,6 +7,7 @@\n \n import pytest\n \n+# from xarray.backends import file_manager\n from xarray.backends.file_manager import CachingFileManager\n from xarray.backends.lru_cache import LRUCache\n from xarray.core.options import set_options\n@@ -89,7 +90,7 @@ def test_file_manager_repr() -> None:\n     assert \"my-file\" in repr(manager)\n \n \n-def test_file_manager_refcounts() -> None:\n+def test_file_manager_cache_and_refcounts() -> None:\n     mock_file = mock.Mock()\n     opener = mock.Mock(spec=open, return_value=mock_file)\n     cache: dict = {}\n@@ -97,47 +98,72 @@ def test_file_manager_refcounts() -> None:\n \n     manager = CachingFileManager(opener, \"filename\", cache=cache, ref_counts=ref_counts)\n     assert ref_counts[manager._key] == 1\n+\n+    assert not cache\n     manager.acquire()\n-    assert cache\n+    assert len(cache) == 1\n \n-    manager2 = CachingFileManager(\n-        opener, \"filename\", cache=cache, ref_counts=ref_counts\n-    )\n-    assert cache\n-    assert manager._key == manager2._key\n-    assert ref_counts[manager._key] == 2\n+    with set_options(warn_for_unclosed_files=False):\n+        del manager\n+        gc.collect()\n+\n+    assert not ref_counts\n+    assert not cache\n+\n+\n+def test_file_manager_cache_repeated_open() -> None:\n+    mock_file = mock.Mock()\n+    opener = mock.Mock(spec=open, return_value=mock_file)\n+    cache: dict = {}\n+\n+    manager = CachingFileManager(opener, \"filename\", cache=cache)\n+    manager.acquire()\n+    assert len(cache) == 1\n+\n+    manager2 = CachingFileManager(opener, \"filename\", cache=cache)\n+    manager2.acquire()\n+    assert len(cache) == 2\n \n     with set_options(warn_for_unclosed_files=False):\n         del manager\n         gc.collect()\n \n-    assert cache\n-    assert ref_counts[manager2._key] == 1\n-    mock_file.close.assert_not_called()\n+    assert len(cache) == 1\n \n     with set_options(warn_for_unclosed_files=False):\n         del manager2\n         gc.collect()\n \n-    assert not ref_counts\n     assert not cache\n \n \n-def test_file_manager_replace_object() -> None:\n-    opener = mock.Mock()\n+def test_file_manager_cache_with_pickle(tmpdir) -> None:\n+\n+    path = str(tmpdir.join(\"testing.txt\"))\n+    with open(path, \"w\") as f:\n+        f.write(\"data\")\n     cache: dict = {}\n-    ref_counts: dict = {}\n \n-    manager = CachingFileManager(opener, \"filename\", cache=cache, ref_counts=ref_counts)\n-    manager.acquire()\n-    assert ref_counts[manager._key] == 1\n-    assert cache\n+    with mock.patch(\"xarray.backends.file_manager.FILE_CACHE\", cache):\n+        assert not cache\n \n-    manager = CachingFileManager(opener, \"filename\", cache=cache, ref_counts=ref_counts)\n-    assert ref_counts[manager._key] == 1\n-    assert cache\n+        manager = CachingFileManager(open, path, mode=\"r\")\n+        manager.acquire()\n+        assert len(cache) == 1\n \n-    manager.close()\n+        manager2 = pickle.loads(pickle.dumps(manager))\n+        manager2.acquire()\n+        assert len(cache) == 1\n+\n+        with set_options(warn_for_unclosed_files=False):\n+            del manager\n+            gc.collect()\n+        # assert len(cache) == 1\n+\n+        with set_options(warn_for_unclosed_files=False):\n+            del manager2\n+            gc.collect()\n+        assert not cache\n \n \n def test_file_manager_write_consecutive(tmpdir, file_cache) -> None:\n",
  "problem_statement": "jupyter repr caching deleted netcdf file\n**What happened**:\r\n\r\nTesting xarray data storage in a jupyter notebook with varying data sizes and storing to a netcdf, i noticed that open_dataset/array (both show this behaviour) continue to return data from the first testing run, ignoring the fact that each run deletes the previously created netcdf file.\r\nThis only happens once the `repr` was used to display the xarray object. \r\nBut once in error mode, even the previously fine printed objects are then showing the wrong data.\r\n\r\nThis was hard to track down as it depends on the precise sequence in jupyter.\r\n\r\n**What you expected to happen**:\r\n\r\nwhen i use `open_dataset/array`, the resulting object should reflect reality on disk.\r\n\r\n**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\nimport xarray as xr\r\nfrom pathlib import Path\r\nimport numpy as np\r\n\r\ndef test_repr(nx):\r\n    ds = xr.DataArray(np.random.rand(nx))\r\n    path = Path(\"saved_on_disk.nc\")\r\n    if path.exists():\r\n        path.unlink()\r\n    ds.to_netcdf(path)\r\n    return path\r\n```\r\n\r\nWhen executed in a cell with print for display, all is fine:\r\n```python\r\ntest_repr(4)\r\nprint(xr.open_dataset(\"saved_on_disk.nc\"))\r\ntest_repr(5)\r\nprint(xr.open_dataset(\"saved_on_disk.nc\"))\r\n```\r\n\r\nbut as soon as one cell used the jupyter repr:\r\n\r\n```python\r\nxr.open_dataset(\"saved_on_disk.nc\")\r\n```\r\n\r\nall future file reads, even after executing the test function again and even using `print` and not `repr`, show the data from the last repr use.\r\n\r\n\r\n**Anything else we need to know?**:\r\n\r\nHere's a notebook showing the issue:\r\nhttps://gist.github.com/05c2542ed33662cdcb6024815cc0c72c\r\n\r\n**Environment**:\r\n\r\n<details><summary>Output of <tt>xr.show_versions()</tt></summary>\r\n\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit: None\r\npython: 3.7.6 | packaged by conda-forge | (default, Jun  1 2020, 18:57:50) \r\n[GCC 7.5.0]\r\npython-bits: 64\r\nOS: Linux\r\nOS-release: 5.4.0-40-generic\r\nmachine: x86_64\r\nprocessor: x86_64\r\nbyteorder: little\r\nLC_ALL: None\r\nLANG: en_US.UTF-8\r\nLOCALE: en_US.UTF-8\r\nlibhdf5: 1.10.6\r\nlibnetcdf: 4.7.4\r\n\r\nxarray: 0.16.0\r\npandas: 1.0.5\r\nnumpy: 1.19.0\r\nscipy: 1.5.1\r\nnetCDF4: 1.5.3\r\npydap: None\r\nh5netcdf: None\r\nh5py: 2.10.0\r\nNio: None\r\nzarr: None\r\ncftime: 1.2.1\r\nnc_time_axis: None\r\nPseudoNetCDF: None\r\nrasterio: 1.1.5\r\ncfgrib: None\r\niris: None\r\nbottleneck: None\r\ndask: 2.21.0\r\ndistributed: 2.21.0\r\nmatplotlib: 3.3.0\r\ncartopy: 0.18.0\r\nseaborn: 0.10.1\r\nnumbagg: None\r\npint: None\r\nsetuptools: 49.2.0.post20200712\r\npip: 20.1.1\r\nconda: installed\r\npytest: 6.0.0rc1\r\nIPython: 7.16.1\r\nsphinx: 3.1.2\r\n\r\n</details>\r\n\n",
  "hints_text": "Thanks for the clear example!\r\n\r\nThis happens dues to xarray's caching logic for files: \r\nhttps://github.com/pydata/xarray/blob/b1c7e315e8a18e86c5751a0aa9024d41a42ca5e8/xarray/backends/file_manager.py#L50-L76\r\n\r\nThis means that when you open the same filename, xarray doesn't actually reopen the file from disk -- instead it points to the same file object already cached in memory.\r\n\r\nI can see why this could be confusing. We do need this caching logic for files opened from the same `backends.*DataStore` class, but this could include some sort of unique identifier (i.e., from `uuid`) to ensure each separate call to `xr.open_dataset` results in a separately cached/opened file object: \r\nhttps://github.com/pydata/xarray/blob/b1c7e315e8a18e86c5751a0aa9024d41a42ca5e8/xarray/backends/netCDF4_.py#L355-L357\nis there a workaround for forcing the opening without restarting the notebook?\nnow i'm wondering why the caching logic is only activated by the `repr`? As you can see, when printed, it always updated to the status on disk?\nProbably the easiest work around is to call `.close()` on the original dataset. Failing that, the file is cached in `xarray.backends.file_manager.FILE_CACHE`, which you could muck around with.\r\n\r\nI believe it only gets activated by `repr()` because array values from netCDF file are loaded lazily. Not 100% without more testing, though.\nWould it be an option to consider the time stamp of the file's last change as a caching criterion?\nI've stumbled over this weird behaviour many times and was wondering why this happens. So AFAICT @shoyer hit the nail on the head but the root cause is that the Dataset is added to the notebook namespace somehow, if one just evaluates it in the cell.\r\n\r\nThis doesn't happen if you invoke the `__repr__` via\r\n\r\n```python\r\ndisplay(xr.open_dataset(\"saved_on_disk.nc\"))\r\n```\r\n\r\nI've forced myself to use either `print` or `display` for xarray data. As this also happens if the Dataset is attached to a variable you would need to specifically delete (or .close()) the variable in question before opening again. \r\n\r\n```python\r\ntry: \r\n    del ds\r\nexcept NameError:\r\n    pass\r\nds = xr.open_dataset(\"saved_on_disk.nc\")\r\n```\r\n",
  "created_at": "2021-02-07T21:48:06Z",
  "version": "0.12",
  "FAIL_TO_PASS": "[\"xarray/tests/test_backends_file_manager.py::test_file_manager_cache_repeated_open\"]",
  "PASS_TO_PASS": "[\"xarray/tests/test_backends.py::TestCommon::test_robust_getitem\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_zero_dimensional_variable\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_write_store\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_test_data\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_load\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_dataset_compute\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_pickle\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_pickle_dataarray\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_dataset_caching\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_None_variable\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_object_dtype\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_string_data\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_string_encoded_characters\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_numpy_datetime_data\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_cftime_datetime_data\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_timedelta_data\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_float64_data\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_example_1_netcdf\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_coordinates\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_global_coordinates\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_coordinates_with_space\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_boolean_dtype\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_orthogonal_indexing\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_vectorized_indexing\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_isel_dataarray\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_array_type_after_indexing\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_dropna\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_ondisk_after_print\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_bytes_with_fill_value\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_string_with_fill_value_nchar\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_mask_and_scale[create_unsigned_masked_scaled_data-create_encoded_unsigned_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_mask_and_scale[create_signed_masked_scaled_data-create_encoded_signed_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_mask_and_scale[create_masked_and_scaled_data-create_encoded_masked_and_scaled_data]\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_grid_mapping_and_bounds_are_not_coordinates_in_file\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_coordinate_variables_after_dataset_roundtrip\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_grid_mapping_and_bounds_are_coordinates_after_dataarray_roundtrip\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_coordinate_variables_after_iris_roundtrip\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_coordinates_encoding\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_endian\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_invalid_dataarray_names_raise\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_encoding_kwarg\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_encoding_kwarg_dates\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_encoding_kwarg_fixed_width_string\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_default_fill_value\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_explicitly_omit_fill_value\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_explicitly_omit_fill_value_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_explicitly_omit_fill_value_in_coord\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_explicitly_omit_fill_value_in_coord_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_encoding_same_dtype\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_append_write\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_append_overwrite_values\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_append_with_invalid_dim_raises\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_multiindex_not_implemented\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_open_group\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_open_subgroup\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_write_groups\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_encoding_kwarg_vlen_string\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_string_with_fill_value_vlen\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_roundtrip_character_array\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_default_to_char_arrays\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_open_encodings\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_dump_encodings\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_dump_and_open_encodings\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_compression_encoding\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_encoding_kwarg_compression\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_keep_chunksizes_if_no_original_shape\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_encoding_chunksizes_unlimited\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_mask_and_scale\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_0dimensional_variable\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_read_variable_len_strings\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_encoding_unlimited_dims\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_variable_order\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_unsorted_index_raises\", \"xarray/tests/test_backends.py::TestNetCDF4Data::test_setncattr_string\", \"xarray/tests/test_backends.py::TestNetCDF4AlreadyOpen::test_base_case\", \"xarray/tests/test_backends.py::TestNetCDF4AlreadyOpen::test_group\", \"xarray/tests/test_backends.py::TestNetCDF4AlreadyOpen::test_deepcopy\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_zero_dimensional_variable\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_write_store\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_test_data\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_load\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_dataset_compute\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_pickle\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_pickle_dataarray\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_None_variable\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_object_dtype\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_string_data\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_string_encoded_characters\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_numpy_datetime_data\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_cftime_datetime_data\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_timedelta_data\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_float64_data\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_example_1_netcdf\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_coordinates\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_global_coordinates\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_coordinates_with_space\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_boolean_dtype\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_orthogonal_indexing\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_vectorized_indexing\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_isel_dataarray\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_array_type_after_indexing\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_dropna\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_ondisk_after_print\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_bytes_with_fill_value\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_string_with_fill_value_nchar\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_mask_and_scale[create_unsigned_masked_scaled_data-create_encoded_unsigned_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_mask_and_scale[create_signed_masked_scaled_data-create_encoded_signed_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_mask_and_scale[create_masked_and_scaled_data-create_encoded_masked_and_scaled_data]\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_grid_mapping_and_bounds_are_not_coordinates_in_file\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_coordinate_variables_after_dataset_roundtrip\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_grid_mapping_and_bounds_are_coordinates_after_dataarray_roundtrip\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_coordinate_variables_after_iris_roundtrip\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_coordinates_encoding\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_endian\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_invalid_dataarray_names_raise\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_encoding_kwarg\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_encoding_kwarg_dates\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_encoding_kwarg_fixed_width_string\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_default_fill_value\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_explicitly_omit_fill_value\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_explicitly_omit_fill_value_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_explicitly_omit_fill_value_in_coord\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_explicitly_omit_fill_value_in_coord_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_encoding_same_dtype\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_append_write\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_append_overwrite_values\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_append_with_invalid_dim_raises\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_multiindex_not_implemented\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_open_group\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_open_subgroup\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_write_groups\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_encoding_kwarg_vlen_string\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_string_with_fill_value_vlen\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_roundtrip_character_array\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_default_to_char_arrays\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_open_encodings\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_dump_encodings\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_dump_and_open_encodings\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_compression_encoding\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_encoding_kwarg_compression\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_keep_chunksizes_if_no_original_shape\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_encoding_chunksizes_unlimited\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_mask_and_scale\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_0dimensional_variable\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_read_variable_len_strings\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_encoding_unlimited_dims\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_variable_order\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_setncattr_string\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_unsorted_index_raises\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_dataset_caching\", \"xarray/tests/test_backends.py::TestNetCDF4ViaDaskData::test_write_inconsistent_chunks\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_zero_dimensional_variable\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_store\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_test_data\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_load\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_dataset_compute\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_pickle\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_pickle_dataarray\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_None_variable\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_object_dtype\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_string_data\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_string_encoded_characters\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_numpy_datetime_data\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_cftime_datetime_data\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_timedelta_data\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_float64_data\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_example_1_netcdf\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_coordinates\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_global_coordinates\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_coordinates_with_space\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_boolean_dtype\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_orthogonal_indexing\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_vectorized_indexing\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_isel_dataarray\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_array_type_after_indexing\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_dropna\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_ondisk_after_print\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_bytes_with_fill_value\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_string_with_fill_value_nchar\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_mask_and_scale[create_unsigned_masked_scaled_data-create_encoded_unsigned_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_mask_and_scale[create_signed_masked_scaled_data-create_encoded_signed_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_mask_and_scale[create_masked_and_scaled_data-create_encoded_masked_and_scaled_data]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_grid_mapping_and_bounds_are_not_coordinates_in_file\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_coordinate_variables_after_dataset_roundtrip\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_grid_mapping_and_bounds_are_coordinates_after_dataarray_roundtrip\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_coordinate_variables_after_iris_roundtrip\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_coordinates_encoding\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_endian\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_invalid_dataarray_names_raise\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_encoding_kwarg\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_encoding_kwarg_dates\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_default_fill_value\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_explicitly_omit_fill_value\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_explicitly_omit_fill_value_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_explicitly_omit_fill_value_in_coord\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_explicitly_omit_fill_value_in_coord_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_encoding_same_dtype\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_append_overwrite_values\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_multiindex_not_implemented\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_consolidated[False]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_consolidated[True]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_roundtrip_consolidated[None]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_read_non_consolidated_warning\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_non_existent_store\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_with_chunkstore\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_auto_chunk\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_manual_chunk\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_warning_on_bad_chunks\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_deprecate_auto_chunk\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_uneven_dask_chunks\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_chunk_encoding\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_chunk_encoding_with_dask\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_hidden_zarr_keys\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_persistence_modes[None]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_persistence_modes[group1]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_compressor_encoding\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_group\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_encoding_kwarg_fixed_width_string\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_append_write\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_append_with_mode_rplus_success\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_append_with_mode_rplus_fails\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_append_with_invalid_dim_raises\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_append_with_no_dims_raises\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_append_with_append_dim_not_set_raises\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_append_with_mode_not_a_raises\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_append_with_existing_encoding_raises\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_append_string_length_mismatch_raises[U]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_append_string_length_mismatch_raises[S]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_check_encoding_is_consistent_after_append\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_append_with_new_variable\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_to_zarr_compute_false_roundtrip\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_to_zarr_append_compute_false_roundtrip\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_save_emptydim[False]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_save_emptydim[True]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_no_warning_from_open_emptydim_with_chunks\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[False-False-False]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[False-False-True]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[False-True-False]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[False-True-True]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[True-False-False]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[True-False-True]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[True-True-False]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region[True-True-True]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region_mode[None]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region_mode[r+]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region_mode[a]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_preexisting_override_metadata\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_region_errors\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_encoding_chunksizes\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_chunk_encoding_with_partial_dask_chunks\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_chunk_encoding_with_larger_dask_chunks\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_open_zarr_use_cftime\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_write_read_select_write\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_attributes[obj0]\", \"xarray/tests/test_backends.py::TestZarrDictStore::test_attributes[obj1]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_zero_dimensional_variable\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_store\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_test_data\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_load\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_dataset_compute\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_pickle\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_pickle_dataarray\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_None_variable\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_object_dtype\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_string_data\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_string_encoded_characters\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_numpy_datetime_data\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_cftime_datetime_data\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_timedelta_data\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_float64_data\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_example_1_netcdf\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_coordinates\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_global_coordinates\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_coordinates_with_space\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_boolean_dtype\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_orthogonal_indexing\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_vectorized_indexing\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_isel_dataarray\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_array_type_after_indexing\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_dropna\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_ondisk_after_print\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_bytes_with_fill_value\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_string_with_fill_value_nchar\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_mask_and_scale[create_unsigned_masked_scaled_data-create_encoded_unsigned_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_mask_and_scale[create_signed_masked_scaled_data-create_encoded_signed_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_mask_and_scale[create_masked_and_scaled_data-create_encoded_masked_and_scaled_data]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_grid_mapping_and_bounds_are_not_coordinates_in_file\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_coordinate_variables_after_dataset_roundtrip\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_grid_mapping_and_bounds_are_coordinates_after_dataarray_roundtrip\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_coordinate_variables_after_iris_roundtrip\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_coordinates_encoding\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_endian\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_invalid_dataarray_names_raise\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_encoding_kwarg\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_encoding_kwarg_dates\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_default_fill_value\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_explicitly_omit_fill_value\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_explicitly_omit_fill_value_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_explicitly_omit_fill_value_in_coord\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_explicitly_omit_fill_value_in_coord_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_encoding_same_dtype\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_append_overwrite_values\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_multiindex_not_implemented\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_consolidated[False]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_consolidated[True]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_roundtrip_consolidated[None]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_read_non_consolidated_warning\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_non_existent_store\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_with_chunkstore\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_auto_chunk\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_manual_chunk\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_warning_on_bad_chunks\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_deprecate_auto_chunk\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_uneven_dask_chunks\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_chunk_encoding\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_chunk_encoding_with_dask\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_hidden_zarr_keys\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_persistence_modes[None]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_persistence_modes[group1]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_compressor_encoding\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_group\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_encoding_kwarg_fixed_width_string\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_append_write\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_append_with_mode_rplus_success\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_append_with_mode_rplus_fails\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_append_with_invalid_dim_raises\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_append_with_no_dims_raises\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_append_with_append_dim_not_set_raises\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_append_with_mode_not_a_raises\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_append_with_existing_encoding_raises\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_append_string_length_mismatch_raises[U]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_append_string_length_mismatch_raises[S]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_check_encoding_is_consistent_after_append\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_append_with_new_variable\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_to_zarr_compute_false_roundtrip\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_to_zarr_append_compute_false_roundtrip\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_save_emptydim[False]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_save_emptydim[True]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_no_warning_from_open_emptydim_with_chunks\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_region[False-False-False]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_region[False-False-True]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_region[False-True-False]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_region[False-True-True]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_region[True-False-False]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_region[True-False-True]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_region[True-True-False]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_region[True-True-True]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_region_mode[None]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_region_mode[r+]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_region_mode[a]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_preexisting_override_metadata\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_region_errors\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_encoding_chunksizes\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_chunk_encoding_with_partial_dask_chunks\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_chunk_encoding_with_larger_dask_chunks\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_open_zarr_use_cftime\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_write_read_select_write\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_attributes[obj0]\", \"xarray/tests/test_backends.py::TestZarrDirectoryStore::test_attributes[obj1]\", \"xarray/tests/test_backends.py::test_zarr_storage_options\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_dtype_coercion_error\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_zero_dimensional_variable\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_write_store\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_test_data\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_load\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_dataset_compute\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_pickle\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_pickle_dataarray\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_dataset_caching\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_None_variable\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_object_dtype\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_string_data\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_string_encoded_characters\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_numpy_datetime_data\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_cftime_datetime_data\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_timedelta_data\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_float64_data\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_example_1_netcdf\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_coordinates\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_global_coordinates\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_coordinates_with_space\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_boolean_dtype\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_orthogonal_indexing\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_vectorized_indexing\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_isel_dataarray\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_array_type_after_indexing\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_dropna\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_ondisk_after_print\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_bytes_with_fill_value\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_string_with_fill_value_nchar\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_mask_and_scale[create_unsigned_masked_scaled_data-create_encoded_unsigned_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_mask_and_scale[create_signed_masked_scaled_data-create_encoded_signed_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_mask_and_scale[create_masked_and_scaled_data-create_encoded_masked_and_scaled_data]\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_grid_mapping_and_bounds_are_not_coordinates_in_file\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_coordinate_variables_after_dataset_roundtrip\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_grid_mapping_and_bounds_are_coordinates_after_dataarray_roundtrip\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_coordinate_variables_after_iris_roundtrip\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_coordinates_encoding\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_roundtrip_endian\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_invalid_dataarray_names_raise\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_encoding_kwarg\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_encoding_kwarg_dates\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_encoding_kwarg_fixed_width_string\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_default_fill_value\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_explicitly_omit_fill_value\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_explicitly_omit_fill_value_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_explicitly_omit_fill_value_in_coord\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_explicitly_omit_fill_value_in_coord_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_encoding_same_dtype\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_append_write\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_append_overwrite_values\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_append_with_invalid_dim_raises\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_multiindex_not_implemented\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_to_netcdf_explicit_engine\", \"xarray/tests/test_backends.py::TestScipyInMemoryData::test_bytes_pickle\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_dtype_coercion_error\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_zero_dimensional_variable\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_write_store\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_test_data\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_load\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_dataset_compute\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_dataset_caching\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_None_variable\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_object_dtype\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_string_data\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_string_encoded_characters\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_numpy_datetime_data\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_cftime_datetime_data\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_timedelta_data\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_float64_data\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_example_1_netcdf\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_coordinates\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_global_coordinates\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_coordinates_with_space\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_boolean_dtype\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_orthogonal_indexing\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_vectorized_indexing\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_isel_dataarray\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_array_type_after_indexing\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_dropna\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_ondisk_after_print\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_bytes_with_fill_value\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_string_with_fill_value_nchar\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_mask_and_scale[create_unsigned_masked_scaled_data-create_encoded_unsigned_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_mask_and_scale[create_signed_masked_scaled_data-create_encoded_signed_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_mask_and_scale[create_masked_and_scaled_data-create_encoded_masked_and_scaled_data]\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_grid_mapping_and_bounds_are_not_coordinates_in_file\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_coordinate_variables_after_dataset_roundtrip\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_grid_mapping_and_bounds_are_coordinates_after_dataarray_roundtrip\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_coordinate_variables_after_iris_roundtrip\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_coordinates_encoding\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_roundtrip_endian\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_invalid_dataarray_names_raise\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_encoding_kwarg\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_encoding_kwarg_dates\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_encoding_kwarg_fixed_width_string\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_default_fill_value\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_explicitly_omit_fill_value\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_explicitly_omit_fill_value_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_explicitly_omit_fill_value_in_coord\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_explicitly_omit_fill_value_in_coord_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_encoding_same_dtype\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_append_write\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_append_overwrite_values\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_append_with_invalid_dim_raises\", \"xarray/tests/test_backends.py::TestScipyFileObject::test_multiindex_not_implemented\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_dtype_coercion_error\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_zero_dimensional_variable\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_write_store\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_test_data\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_load\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_dataset_compute\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_pickle\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_pickle_dataarray\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_dataset_caching\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_None_variable\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_object_dtype\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_string_data\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_string_encoded_characters\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_numpy_datetime_data\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_cftime_datetime_data\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_timedelta_data\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_float64_data\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_example_1_netcdf\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_coordinates\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_global_coordinates\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_coordinates_with_space\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_boolean_dtype\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_orthogonal_indexing\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_vectorized_indexing\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_isel_dataarray\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_array_type_after_indexing\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_dropna\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_ondisk_after_print\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_bytes_with_fill_value\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_string_with_fill_value_nchar\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_mask_and_scale[create_unsigned_masked_scaled_data-create_encoded_unsigned_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_mask_and_scale[create_signed_masked_scaled_data-create_encoded_signed_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_mask_and_scale[create_masked_and_scaled_data-create_encoded_masked_and_scaled_data]\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_grid_mapping_and_bounds_are_not_coordinates_in_file\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_coordinate_variables_after_dataset_roundtrip\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_grid_mapping_and_bounds_are_coordinates_after_dataarray_roundtrip\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_coordinate_variables_after_iris_roundtrip\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_coordinates_encoding\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_endian\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_invalid_dataarray_names_raise\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_encoding_kwarg\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_encoding_kwarg_dates\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_encoding_kwarg_fixed_width_string\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_default_fill_value\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_explicitly_omit_fill_value\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_explicitly_omit_fill_value_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_explicitly_omit_fill_value_in_coord\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_explicitly_omit_fill_value_in_coord_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_encoding_same_dtype\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_append_write\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_append_overwrite_values\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_append_with_invalid_dim_raises\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_multiindex_not_implemented\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_array_attrs\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_roundtrip_example_1_netcdf_gz\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_netcdf3_endianness\", \"xarray/tests/test_backends.py::TestScipyFilePath::test_nc4_scipy\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_dtype_coercion_error\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_zero_dimensional_variable\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_write_store\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_test_data\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_load\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_dataset_compute\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_pickle\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_pickle_dataarray\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_dataset_caching\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_None_variable\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_object_dtype\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_string_data\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_string_encoded_characters\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_numpy_datetime_data\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_cftime_datetime_data\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_timedelta_data\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_float64_data\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_example_1_netcdf\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_coordinates\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_global_coordinates\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_coordinates_with_space\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_boolean_dtype\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_orthogonal_indexing\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_vectorized_indexing\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_isel_dataarray\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_array_type_after_indexing\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_dropna\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_ondisk_after_print\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_bytes_with_fill_value\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_string_with_fill_value_nchar\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_mask_and_scale[create_unsigned_masked_scaled_data-create_encoded_unsigned_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_mask_and_scale[create_signed_masked_scaled_data-create_encoded_signed_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_mask_and_scale[create_masked_and_scaled_data-create_encoded_masked_and_scaled_data]\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_grid_mapping_and_bounds_are_not_coordinates_in_file\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_coordinate_variables_after_dataset_roundtrip\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_grid_mapping_and_bounds_are_coordinates_after_dataarray_roundtrip\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_coordinate_variables_after_iris_roundtrip\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_coordinates_encoding\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_roundtrip_endian\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_invalid_dataarray_names_raise\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_encoding_kwarg\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_encoding_kwarg_dates\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_encoding_kwarg_fixed_width_string\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_default_fill_value\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_explicitly_omit_fill_value\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_explicitly_omit_fill_value_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_explicitly_omit_fill_value_in_coord\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_explicitly_omit_fill_value_in_coord_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_encoding_same_dtype\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_append_write\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_append_overwrite_values\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_append_with_invalid_dim_raises\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_multiindex_not_implemented\", \"xarray/tests/test_backends.py::TestNetCDF3ViaNetCDF4Data::test_encoding_kwarg_vlen_string\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_dtype_coercion_error\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_zero_dimensional_variable\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_write_store\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_test_data\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_load\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_dataset_compute\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_pickle\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_pickle_dataarray\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_dataset_caching\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_None_variable\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_object_dtype\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_string_data\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_string_encoded_characters\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_numpy_datetime_data\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_cftime_datetime_data\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_timedelta_data\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_float64_data\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_example_1_netcdf\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_coordinates\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_global_coordinates\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_coordinates_with_space\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_boolean_dtype\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_orthogonal_indexing\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_vectorized_indexing\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_isel_dataarray\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_array_type_after_indexing\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_dropna\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_ondisk_after_print\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_bytes_with_fill_value\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_string_with_fill_value_nchar\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_mask_and_scale[create_unsigned_masked_scaled_data-create_encoded_unsigned_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_mask_and_scale[create_signed_masked_scaled_data-create_encoded_signed_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_mask_and_scale[create_masked_and_scaled_data-create_encoded_masked_and_scaled_data]\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_grid_mapping_and_bounds_are_not_coordinates_in_file\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_coordinate_variables_after_dataset_roundtrip\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_grid_mapping_and_bounds_are_coordinates_after_dataarray_roundtrip\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_coordinate_variables_after_iris_roundtrip\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_coordinates_encoding\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_roundtrip_endian\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_invalid_dataarray_names_raise\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_encoding_kwarg\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_encoding_kwarg_dates\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_encoding_kwarg_fixed_width_string\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_default_fill_value\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_explicitly_omit_fill_value\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_explicitly_omit_fill_value_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_explicitly_omit_fill_value_in_coord\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_explicitly_omit_fill_value_in_coord_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_encoding_same_dtype\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_append_write\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_append_overwrite_values\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_append_with_invalid_dim_raises\", \"xarray/tests/test_backends.py::TestNetCDF4ClassicViaNetCDF4Data::test_multiindex_not_implemented\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_dtype_coercion_error\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_zero_dimensional_variable\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_test_data\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_load\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_dataset_compute\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_pickle\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_pickle_dataarray\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_dataset_caching\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_None_variable\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_object_dtype\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_string_data\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_string_encoded_characters\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_numpy_datetime_data\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_cftime_datetime_data\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_timedelta_data\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_float64_data\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_example_1_netcdf\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_coordinates\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_global_coordinates\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_coordinates_with_space\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_boolean_dtype\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_orthogonal_indexing\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_vectorized_indexing\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_isel_dataarray\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_array_type_after_indexing\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_dropna\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_ondisk_after_print\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_bytes_with_fill_value\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_string_with_fill_value_nchar\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_mask_and_scale[create_unsigned_masked_scaled_data-create_encoded_unsigned_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_mask_and_scale[create_signed_masked_scaled_data-create_encoded_signed_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_mask_and_scale[create_masked_and_scaled_data-create_encoded_masked_and_scaled_data]\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_grid_mapping_and_bounds_are_not_coordinates_in_file\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_coordinate_variables_after_dataset_roundtrip\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_grid_mapping_and_bounds_are_coordinates_after_dataarray_roundtrip\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_coordinate_variables_after_iris_roundtrip\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_coordinates_encoding\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_roundtrip_endian\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_invalid_dataarray_names_raise\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_encoding_kwarg\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_encoding_kwarg_dates\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_encoding_kwarg_fixed_width_string\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_default_fill_value\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_explicitly_omit_fill_value\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_explicitly_omit_fill_value_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_explicitly_omit_fill_value_in_coord\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_explicitly_omit_fill_value_in_coord_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_encoding_same_dtype\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_append_write\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_append_overwrite_values\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_append_with_invalid_dim_raises\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_multiindex_not_implemented\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_write_store\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_engine\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_cross_engine_read_write_netcdf3\", \"xarray/tests/test_backends.py::TestGenericNetCDFData::test_encoding_unlimited_dims\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_zero_dimensional_variable\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_write_store\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_test_data\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_load\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_dataset_compute\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_pickle\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_pickle_dataarray\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_dataset_caching\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_None_variable\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_object_dtype\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_string_data\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_string_encoded_characters\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_numpy_datetime_data\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_cftime_datetime_data\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_timedelta_data\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_float64_data\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_example_1_netcdf\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_coordinates\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_global_coordinates\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_coordinates_with_space\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_boolean_dtype\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_orthogonal_indexing\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_vectorized_indexing\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_isel_dataarray\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_array_type_after_indexing\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_dropna\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_ondisk_after_print\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_bytes_with_fill_value\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_string_with_fill_value_nchar\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_mask_and_scale[create_unsigned_masked_scaled_data-create_encoded_unsigned_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_mask_and_scale[create_signed_masked_scaled_data-create_encoded_signed_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_mask_and_scale[create_masked_and_scaled_data-create_encoded_masked_and_scaled_data]\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_grid_mapping_and_bounds_are_not_coordinates_in_file\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_coordinate_variables_after_dataset_roundtrip\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_grid_mapping_and_bounds_are_coordinates_after_dataarray_roundtrip\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_coordinate_variables_after_iris_roundtrip\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_coordinates_encoding\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_endian\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_invalid_dataarray_names_raise\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_encoding_kwarg\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_encoding_kwarg_dates\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_encoding_kwarg_fixed_width_string\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_default_fill_value\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_explicitly_omit_fill_value\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_explicitly_omit_fill_value_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_explicitly_omit_fill_value_in_coord\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_explicitly_omit_fill_value_in_coord_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_encoding_same_dtype\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_append_write\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_append_overwrite_values\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_append_with_invalid_dim_raises\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_multiindex_not_implemented\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_refresh_from_disk\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_open_group\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_open_subgroup\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_write_groups\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_encoding_kwarg_vlen_string\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_string_with_fill_value_vlen\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_roundtrip_character_array\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_default_to_char_arrays\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_open_encodings\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_dump_encodings\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_dump_and_open_encodings\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_compression_encoding\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_encoding_kwarg_compression\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_keep_chunksizes_if_no_original_shape\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_encoding_chunksizes_unlimited\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_mask_and_scale\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_0dimensional_variable\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_read_variable_len_strings\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_complex[True-None-0]\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_complex_error[None]\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_complex_error[False]\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_numpy_bool_\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_cross_engine_read_write_netcdf4\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_read_byte_attrs_as_unicode\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_encoding_unlimited_dims\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_compression_encoding_h5py\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_compression_check_encoding_h5py\", \"xarray/tests/test_backends.py::TestH5NetCDFData::test_dump_encodings_h5py\", \"xarray/tests/test_backends.py::TestH5NetCDFAlreadyOpen::test_open_dataset_group\", \"xarray/tests/test_backends.py::TestH5NetCDFAlreadyOpen::test_deepcopy\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_zero_dimensional_variable\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_write_store\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_test_data\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_load\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_dataset_compute\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_pickle\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_pickle_dataarray\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_dataset_caching\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_None_variable\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_object_dtype\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_string_data\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_string_encoded_characters\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_numpy_datetime_data\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_cftime_datetime_data\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_timedelta_data\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_float64_data\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_example_1_netcdf\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_coordinates\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_global_coordinates\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_coordinates_with_space\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_boolean_dtype\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_orthogonal_indexing\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_vectorized_indexing\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_isel_dataarray\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_array_type_after_indexing\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_dropna\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_ondisk_after_print\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_bytes_with_fill_value\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_string_with_fill_value_nchar\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_mask_and_scale[create_unsigned_masked_scaled_data-create_encoded_unsigned_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_mask_and_scale[create_signed_masked_scaled_data-create_encoded_signed_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_mask_and_scale[create_masked_and_scaled_data-create_encoded_masked_and_scaled_data]\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_grid_mapping_and_bounds_are_not_coordinates_in_file\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_coordinate_variables_after_dataset_roundtrip\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_grid_mapping_and_bounds_are_coordinates_after_dataarray_roundtrip\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_coordinate_variables_after_iris_roundtrip\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_coordinates_encoding\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_endian\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_invalid_dataarray_names_raise\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_encoding_kwarg\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_encoding_kwarg_dates\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_encoding_kwarg_fixed_width_string\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_default_fill_value\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_explicitly_omit_fill_value\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_explicitly_omit_fill_value_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_explicitly_omit_fill_value_in_coord\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_explicitly_omit_fill_value_in_coord_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_encoding_same_dtype\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_append_write\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_append_overwrite_values\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_append_with_invalid_dim_raises\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_multiindex_not_implemented\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_refresh_from_disk\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_open_group\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_open_subgroup\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_write_groups\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_encoding_kwarg_vlen_string\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_string_with_fill_value_vlen\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_roundtrip_character_array\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_default_to_char_arrays\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_open_encodings\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_dump_encodings\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_dump_and_open_encodings\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_compression_encoding\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_encoding_kwarg_compression\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_keep_chunksizes_if_no_original_shape\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_encoding_chunksizes_unlimited\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_mask_and_scale\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_0dimensional_variable\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_read_variable_len_strings\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_complex[True-None-0]\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_complex_error[None]\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_complex_error[False]\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_numpy_bool_\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_cross_engine_read_write_netcdf4\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_read_byte_attrs_as_unicode\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_encoding_unlimited_dims\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_compression_encoding_h5py\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_compression_check_encoding_h5py\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_dump_encodings_h5py\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_open_badbytes\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_open_twice\", \"xarray/tests/test_backends.py::TestH5NetCDFFileObject::test_open_fileobj\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_zero_dimensional_variable\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_write_store\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_test_data\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_load\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_dataset_compute\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_pickle\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_pickle_dataarray\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_None_variable\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_object_dtype\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_string_data\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_string_encoded_characters\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_numpy_datetime_data\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_cftime_datetime_data\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_timedelta_data\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_float64_data\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_example_1_netcdf\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_coordinates\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_global_coordinates\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_coordinates_with_space\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_boolean_dtype\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_orthogonal_indexing\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_vectorized_indexing\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_isel_dataarray\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_array_type_after_indexing\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_dropna\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_ondisk_after_print\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_bytes_with_fill_value\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_string_with_fill_value_nchar\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_mask_and_scale[create_unsigned_masked_scaled_data-create_encoded_unsigned_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_mask_and_scale[create_signed_masked_scaled_data-create_encoded_signed_masked_scaled_data]\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_mask_and_scale[create_masked_and_scaled_data-create_encoded_masked_and_scaled_data]\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_grid_mapping_and_bounds_are_not_coordinates_in_file\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_coordinate_variables_after_dataset_roundtrip\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_grid_mapping_and_bounds_are_coordinates_after_dataarray_roundtrip\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_coordinate_variables_after_iris_roundtrip\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_coordinates_encoding\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_endian\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_invalid_dataarray_names_raise\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_encoding_kwarg\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_encoding_kwarg_dates\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_encoding_kwarg_fixed_width_string\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_default_fill_value\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_explicitly_omit_fill_value\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_explicitly_omit_fill_value_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_explicitly_omit_fill_value_in_coord\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_explicitly_omit_fill_value_in_coord_via_encoding_kwarg\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_encoding_same_dtype\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_append_write\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_append_overwrite_values\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_append_with_invalid_dim_raises\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_multiindex_not_implemented\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_refresh_from_disk\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_open_group\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_open_subgroup\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_write_groups\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_encoding_kwarg_vlen_string\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_string_with_fill_value_vlen\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_roundtrip_character_array\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_default_to_char_arrays\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_open_encodings\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_dump_encodings\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_dump_and_open_encodings\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_compression_encoding\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_encoding_kwarg_compression\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_keep_chunksizes_if_no_original_shape\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_encoding_chunksizes_unlimited\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_mask_and_scale\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_0dimensional_variable\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_read_variable_len_strings\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_complex[True-None-0]\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_complex_error[None]\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_complex_error[False]\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_numpy_bool_\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_cross_engine_read_write_netcdf4\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_read_byte_attrs_as_unicode\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_encoding_unlimited_dims\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_compression_encoding_h5py\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_compression_check_encoding_h5py\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_dump_encodings_h5py\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_dataset_caching\", \"xarray/tests/test_backends.py::TestH5NetCDFViaDaskData::test_write_inconsistent_chunks\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[scipy-1-True-None-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[scipy-1-True-None-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[scipy-1-True-5-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[scipy-1-True-5-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[scipy-1-False-None-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[scipy-1-False-None-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[scipy-1-False-5-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[scipy-1-False-5-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[scipy-20-True-None-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[scipy-20-True-None-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[scipy-20-True-5-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[scipy-20-True-5-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[scipy-20-False-None-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[scipy-20-False-None-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[scipy-20-False-5-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[scipy-20-False-5-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[netcdf4-1-True-None-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[netcdf4-1-True-None-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[netcdf4-1-True-5-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[netcdf4-1-True-5-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[netcdf4-1-False-None-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[netcdf4-1-False-None-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[netcdf4-1-False-5-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[netcdf4-1-False-5-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[netcdf4-20-True-None-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[netcdf4-20-True-None-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[netcdf4-20-True-5-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[netcdf4-20-True-5-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[netcdf4-20-False-None-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[netcdf4-20-False-None-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[netcdf4-20-False-5-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[netcdf4-20-False-5-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[h5netcdf-1-True-None-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[h5netcdf-1-True-None-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[h5netcdf-1-True-5-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[h5netcdf-1-True-5-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[h5netcdf-1-False-None-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[h5netcdf-1-False-None-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[h5netcdf-1-False-5-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[h5netcdf-1-False-5-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[h5netcdf-20-True-None-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[h5netcdf-20-True-None-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[h5netcdf-20-True-5-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[h5netcdf-20-True-5-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[h5netcdf-20-False-None-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[h5netcdf-20-False-None-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[h5netcdf-20-False-5-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[h5netcdf-20-False-5-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[zarr-1-True-None-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[zarr-1-True-None-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[zarr-1-True-5-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[zarr-1-True-5-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[zarr-1-False-None-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[zarr-1-False-None-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[zarr-1-False-5-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[zarr-1-False-5-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[zarr-20-True-None-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[zarr-20-True-None-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[zarr-20-True-5-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[zarr-20-True-5-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[zarr-20-False-None-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[zarr-20-False-None-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[zarr-20-False-5-5]\", \"xarray/tests/test_backends.py::test_open_mfdataset_manyfiles[zarr-20-False-5-None]\", \"xarray/tests/test_backends.py::test_open_mfdataset_can_open_path_objects\", \"xarray/tests/test_backends.py::test_open_mfdataset_list_attr\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[outer-all-nested-t]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[outer-all-by_coords-None]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[outer-minimal-nested-t]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[outer-minimal-by_coords-None]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[outer-different-nested-t]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[outer-different-by_coords-None]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[inner-all-nested-t]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[inner-all-by_coords-None]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[inner-minimal-nested-t]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[inner-minimal-by_coords-None]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[inner-different-nested-t]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[inner-different-by_coords-None]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[left-all-nested-t]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[left-all-by_coords-None]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[left-minimal-nested-t]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[left-minimal-by_coords-None]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[left-different-nested-t]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[left-different-by_coords-None]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[right-all-nested-t]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[right-all-by_coords-None]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[right-minimal-nested-t]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[right-minimal-by_coords-None]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[right-different-nested-t]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_does_same_as_concat[right-different-by_coords-None]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_dataset_combine_attrs[drop]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_dataset_combine_attrs[override]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_dataset_combine_attrs[no_conflicts]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_dataset_combine_attrs[identical]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_dataset_combine_attrs[drop_conflicts]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_dataset_attr_by_coords\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_dataarray_attr_by_coords\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_exact_join_raises_error[all-nested-t]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_exact_join_raises_error[all-by_coords-None]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_exact_join_raises_error[minimal-nested-t]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_exact_join_raises_error[minimal-by_coords-None]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_exact_join_raises_error[different-nested-t]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_open_mfdataset_exact_join_raises_error[different-by_coords-None]\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_common_coord_when_datavars_all\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_common_coord_when_datavars_minimal\", \"xarray/tests/test_backends.py::TestOpenMFDatasetWithDataVarsAndCoordsKw::test_invalid_data_vars_value_should_fail\", \"xarray/tests/test_backends.py::TestDask::test_zero_dimensional_variable\", \"xarray/tests/test_backends.py::TestDask::test_roundtrip_test_data\", \"xarray/tests/test_backends.py::TestDask::test_load\", \"xarray/tests/test_backends.py::TestDask::test_dataset_compute\", \"xarray/tests/test_backends.py::TestDask::test_pickle\", \"xarray/tests/test_backends.py::TestDask::test_pickle_dataarray\", \"xarray/tests/test_backends.py::TestDask::test_roundtrip_None_variable\", \"xarray/tests/test_backends.py::TestDask::test_roundtrip_object_dtype\", \"xarray/tests/test_backends.py::TestDask::test_roundtrip_string_data\", \"xarray/tests/test_backends.py::TestDask::test_roundtrip_timedelta_data\", \"xarray/tests/test_backends.py::TestDask::test_roundtrip_float64_data\", \"xarray/tests/test_backends.py::TestDask::test_roundtrip_example_1_netcdf\", \"xarray/tests/test_backends.py::TestDask::test_roundtrip_coordinates\", \"xarray/tests/test_backends.py::TestDask::test_roundtrip_global_coordinates\", \"xarray/tests/test_backends.py::TestDask::test_roundtrip_boolean_dtype\", \"xarray/tests/test_backends.py::TestDask::test_orthogonal_indexing\", \"xarray/tests/test_backends.py::TestDask::test_vectorized_indexing\", \"xarray/tests/test_backends.py::TestDask::test_isel_dataarray\", \"xarray/tests/test_backends.py::TestDask::test_array_type_after_indexing\", \"xarray/tests/test_backends.py::TestDask::test_dropna\", \"xarray/tests/test_backends.py::TestDask::test_ondisk_after_print\", \"xarray/tests/test_backends.py::TestDask::test_roundtrip_string_encoded_characters\", \"xarray/tests/test_backends.py::TestDask::test_roundtrip_coordinates_with_space\", \"xarray/tests/test_backends.py::TestDask::test_roundtrip_numpy_datetime_data\", \"xarray/tests/test_backends.py::TestDask::test_roundtrip_cftime_datetime_data\", \"xarray/tests/test_backends.py::TestDask::test_write_store\", \"xarray/tests/test_backends.py::TestDask::test_dataset_caching\", \"xarray/tests/test_backends.py::TestDask::test_open_mfdataset\", \"xarray/tests/test_backends.py::TestDask::test_open_mfdataset_no_files\", \"xarray/tests/test_backends.py::TestDask::test_open_mfdataset_2d\", \"xarray/tests/test_backends.py::TestDask::test_open_mfdataset_pathlib\", \"xarray/tests/test_backends.py::TestDask::test_open_mfdataset_2d_pathlib\", \"xarray/tests/test_backends.py::TestDask::test_open_mfdataset_2\", \"xarray/tests/test_backends.py::TestDask::test_attrs_mfdataset\", \"xarray/tests/test_backends.py::TestDask::test_open_mfdataset_attrs_file\", \"xarray/tests/test_backends.py::TestDask::test_open_mfdataset_attrs_file_path\", \"xarray/tests/test_backends.py::TestDask::test_open_mfdataset_auto_combine\", \"xarray/tests/test_backends.py::TestDask::test_open_mfdataset_raise_on_bad_combine_args\", \"xarray/tests/test_backends.py::TestDask::test_preprocess_mfdataset\", \"xarray/tests/test_backends.py::TestDask::test_save_mfdataset_roundtrip\", \"xarray/tests/test_backends.py::TestDask::test_save_mfdataset_invalid\", \"xarray/tests/test_backends.py::TestDask::test_save_mfdataset_invalid_dataarray\", \"xarray/tests/test_backends.py::TestDask::test_save_mfdataset_pathlib_roundtrip\", \"xarray/tests/test_backends.py::TestDask::test_save_mfdataset_pass_kwargs\", \"xarray/tests/test_backends.py::TestDask::test_open_and_do_math\", \"xarray/tests/test_backends.py::TestDask::test_open_mfdataset_concat_dim_none\", \"xarray/tests/test_backends.py::TestDask::test_open_mfdataset_concat_dim_default_none\", \"xarray/tests/test_backends.py::TestDask::test_open_dataset\", \"xarray/tests/test_backends.py::TestDask::test_open_single_dataset\", \"xarray/tests/test_backends.py::TestDask::test_open_multi_dataset\", \"xarray/tests/test_backends.py::TestDask::test_dask_roundtrip\", \"xarray/tests/test_backends.py::TestDask::test_deterministic_names\", \"xarray/tests/test_backends.py::TestDask::test_dataarray_compute\", \"xarray/tests/test_backends.py::TestDask::test_load_dataset\", \"xarray/tests/test_backends.py::TestDask::test_load_dataarray\", \"xarray/tests/test_backends.py::TestDask::test_inline_array\", \"xarray/tests/test_backends.py::TestPydap::test_cmp_local_file\", \"xarray/tests/test_backends.py::TestPydap::test_compatible_to_netcdf\", \"xarray/tests/test_backends.py::TestPydap::test_dask\", \"xarray/tests/test_backends.py::TestCfGrib::test_read\", \"xarray/tests/test_backends.py::TestCfGrib::test_read_filter_by_keys\", \"xarray/tests/test_backends.py::TestCfGrib::test_read_outer\", \"xarray/tests/test_backends.py::TestPseudoNetCDFFormat::test_ict_format\", \"xarray/tests/test_backends.py::TestPseudoNetCDFFormat::test_ict_format_write\", \"xarray/tests/test_backends.py::TestPseudoNetCDFFormat::test_uamiv_format_read\", \"xarray/tests/test_backends.py::TestPseudoNetCDFFormat::test_uamiv_format_mfread\", \"xarray/tests/test_backends.py::TestRasterio::test_serialization\", \"xarray/tests/test_backends.py::TestRasterio::test_utm\", \"xarray/tests/test_backends.py::TestRasterio::test_non_rectilinear\", \"xarray/tests/test_backends.py::TestRasterio::test_platecarree\", \"xarray/tests/test_backends.py::TestRasterio::test_notransform\", \"xarray/tests/test_backends.py::TestRasterio::test_indexing\", \"xarray/tests/test_backends.py::TestRasterio::test_caching\", \"xarray/tests/test_backends.py::TestRasterio::test_chunks\", \"xarray/tests/test_backends.py::TestRasterio::test_pickle_rasterio\", \"xarray/tests/test_backends.py::TestRasterio::test_ENVI_tags\", \"xarray/tests/test_backends.py::TestRasterio::test_geotiff_tags\", \"xarray/tests/test_backends.py::TestRasterio::test_no_mftime\", \"xarray/tests/test_backends.py::TestRasterio::test_rasterio_environment\", \"xarray/tests/test_backends.py::TestRasterio::test_rasterio_vrt_with_transform_and_size\", \"xarray/tests/test_backends.py::TestRasterio::test_rasterio_vrt_with_src_crs\", \"xarray/tests/test_backends.py::TestEncodingInvalid::test_extract_nc4_variable_encoding\", \"xarray/tests/test_backends.py::TestEncodingInvalid::test_extract_h5nc_encoding\", \"xarray/tests/test_backends.py::TestValidateAttrs::test_validating_attrs\", \"xarray/tests/test_backends.py::TestDataArrayToNetCDF::test_dataarray_to_netcdf_no_name\", \"xarray/tests/test_backends.py::TestDataArrayToNetCDF::test_dataarray_to_netcdf_with_name\", \"xarray/tests/test_backends.py::TestDataArrayToNetCDF::test_dataarray_to_netcdf_coord_name_clash\", \"xarray/tests/test_backends.py::TestDataArrayToNetCDF::test_open_dataarray_options\", \"xarray/tests/test_backends.py::TestDataArrayToNetCDF::test_dataarray_to_netcdf_return_bytes\", \"xarray/tests/test_backends.py::TestDataArrayToNetCDF::test_dataarray_to_netcdf_no_name_pathlib\", \"xarray/tests/test_backends.py::test_no_warning_from_dask_effective_get\", \"xarray/tests/test_backends.py::test_source_encoding_always_present\", \"xarray/tests/test_backends.py::test_source_encoding_always_present_with_pathlib\", \"xarray/tests/test_backends.py::test_use_cftime_standard_calendar_default_in_range[gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_standard_calendar_default_in_range[proleptic_gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_standard_calendar_default_in_range[standard]\", \"xarray/tests/test_backends.py::test_use_cftime_standard_calendar_default_out_of_range[1500-gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_standard_calendar_default_out_of_range[1500-proleptic_gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_standard_calendar_default_out_of_range[1500-standard]\", \"xarray/tests/test_backends.py::test_use_cftime_standard_calendar_default_out_of_range[2500-gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_standard_calendar_default_out_of_range[2500-proleptic_gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_standard_calendar_default_out_of_range[2500-standard]\", \"xarray/tests/test_backends.py::test_use_cftime_true[1500-360_day]\", \"xarray/tests/test_backends.py::test_use_cftime_true[1500-365_day]\", \"xarray/tests/test_backends.py::test_use_cftime_true[1500-366_day]\", \"xarray/tests/test_backends.py::test_use_cftime_true[1500-all_leap]\", \"xarray/tests/test_backends.py::test_use_cftime_true[1500-gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_true[1500-julian]\", \"xarray/tests/test_backends.py::test_use_cftime_true[1500-noleap]\", \"xarray/tests/test_backends.py::test_use_cftime_true[1500-proleptic_gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_true[1500-standard]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2000-360_day]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2000-365_day]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2000-366_day]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2000-all_leap]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2000-gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2000-julian]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2000-noleap]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2000-proleptic_gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2000-standard]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2500-360_day]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2500-365_day]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2500-366_day]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2500-all_leap]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2500-gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2500-julian]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2500-noleap]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2500-proleptic_gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_true[2500-standard]\", \"xarray/tests/test_backends.py::test_use_cftime_false_standard_calendar_in_range[gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_false_standard_calendar_in_range[proleptic_gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_false_standard_calendar_in_range[standard]\", \"xarray/tests/test_backends.py::test_use_cftime_false_standard_calendar_out_of_range[1500-gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_false_standard_calendar_out_of_range[1500-proleptic_gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_false_standard_calendar_out_of_range[1500-standard]\", \"xarray/tests/test_backends.py::test_use_cftime_false_standard_calendar_out_of_range[2500-gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_false_standard_calendar_out_of_range[2500-proleptic_gregorian]\", \"xarray/tests/test_backends.py::test_use_cftime_false_standard_calendar_out_of_range[2500-standard]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[1500-360_day]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[1500-365_day]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[1500-366_day]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[1500-all_leap]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[1500-julian]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[1500-noleap]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[2000-360_day]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[2000-365_day]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[2000-366_day]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[2000-all_leap]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[2000-julian]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[2000-noleap]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[2500-360_day]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[2500-365_day]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[2500-366_day]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[2500-all_leap]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[2500-julian]\", \"xarray/tests/test_backends.py::test_use_cftime_false_nonstandard_calendar[2500-noleap]\", \"xarray/tests/test_backends.py::test_invalid_netcdf_raises[netcdf4]\", \"xarray/tests/test_backends.py::test_invalid_netcdf_raises[scipy]\", \"xarray/tests/test_backends.py::test_encode_zarr_attr_value\", \"xarray/tests/test_backends.py::test_extract_zarr_variable_encoding\", \"xarray/tests/test_backends.py::test_open_fsspec\", \"xarray/tests/test_backends.py::test_load_single_value_h5netcdf\", \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[auto]\", \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[-1]\", \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks2]\", \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks3]\", \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks4]\", \"xarray/tests/test_backends.py::test_open_dataset_chunking_zarr[chunks5]\", \"xarray/tests/test_backends.py::test_chunking_consintency[auto]\", \"xarray/tests/test_backends.py::test_chunking_consintency[-1]\", \"xarray/tests/test_backends.py::test_chunking_consintency[chunks2]\", \"xarray/tests/test_backends.py::test_chunking_consintency[chunks3]\", \"xarray/tests/test_backends.py::test_chunking_consintency[chunks4]\", \"xarray/tests/test_backends.py::test_chunking_consintency[chunks5]\", \"xarray/tests/test_backends.py::test_netcdf4_entrypoint\", \"xarray/tests/test_backends.py::test_scipy_entrypoint\", \"xarray/tests/test_backends.py::test_h5netcdf_entrypoint\", \"xarray/tests/test_backends.py::test_write_file_from_np_str[str]\", \"xarray/tests/test_backends.py::test_write_file_from_np_str[str_]\", \"xarray/tests/test_backends.py::TestNCZarr::test_overwriting_nczarr\", \"xarray/tests/test_backends.py::TestNCZarr::test_raise_writing_to_nczarr[a]\", \"xarray/tests/test_backends.py::TestNCZarr::test_raise_writing_to_nczarr[r+]\", \"xarray/tests/test_backends.py::test_pickle_open_mfdataset_dataset\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_mock_write[1]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_mock_write[2]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_mock_write[3]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_mock_write[None]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_autoclose[True]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_autoclose[False]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_autoclose_while_locked\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_repr\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_cache_and_refcounts\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_cache_with_pickle\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_write_consecutive[1]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_write_consecutive[2]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_write_consecutive[3]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_write_consecutive[None]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_write_concurrent[1]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_write_concurrent[2]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_write_concurrent[3]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_write_concurrent[None]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_write_pickle[1]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_write_pickle[2]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_write_pickle[3]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_write_pickle[None]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_read[1]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_read[2]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_read[3]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_read[None]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_acquire_context[1]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_acquire_context[2]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_acquire_context[3]\", \"xarray/tests/test_backends_file_manager.py::test_file_manager_acquire_context[None]\"]",
  "environment_setup_commit": "1c198a191127c601d091213c4b3292a8bb3054e1",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.885111",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}