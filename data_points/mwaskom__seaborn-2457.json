{
  "repo": "mwaskom/seaborn",
  "instance_id": "mwaskom__seaborn-2457",
  "base_commit": "ba086c2096962bbffde2a8eb721b322f382f9e0e",
  "patch": "diff --git a/seaborn/relational.py b/seaborn/relational.py\n--- a/seaborn/relational.py\n+++ b/seaborn/relational.py\n@@ -607,7 +607,7 @@ def lineplot(\n     palette=None, hue_order=None, hue_norm=None,\n     sizes=None, size_order=None, size_norm=None,\n     dashes=True, markers=None, style_order=None,\n-    units=None, estimator=\"mean\", ci=None, n_boot=1000, seed=None,\n+    units=None, estimator=\"mean\", ci=\"deprecated\", n_boot=1000, seed=None,\n     sort=True, err_style=\"band\", err_kws=None,\n     legend=\"auto\",\n     errorbar=(\"ci\", 95),\ndiff --git a/seaborn/utils.py b/seaborn/utils.py\n--- a/seaborn/utils.py\n+++ b/seaborn/utils.py\n@@ -715,14 +715,17 @@ def _deprecate_ci(errorbar, ci):\n     (and extracted from kwargs) after one cycle.\n \n     \"\"\"\n-    if ci is not None:\n-        if ci == \"sd\":\n+    if ci != \"deprecated\":\n+        if ci is None:\n+            errorbar = None\n+        elif ci == \"sd\":\n             errorbar = \"sd\"\n-            msg = \"use `errorbar='sd'` for same effect.\"\n         else:\n             errorbar = (\"ci\", ci)\n-            msg = f\"use `errorbar=('ci', {ci})` for same effect.\"\n-        msg = f\"The `ci` parameter is deprecated; {msg}\"\n+        msg = (\n+            \"The `ci` parameter is deprecated; \"\n+            f\"use `errorbar={repr(errorbar)}` for same effect.\"\n+        )\n         warnings.warn(msg, UserWarning)\n \n     return errorbar\n",
  "test_patch": "diff --git a/seaborn/tests/test_utils.py b/seaborn/tests/test_utils.py\n--- a/seaborn/tests/test_utils.py\n+++ b/seaborn/tests/test_utils.py\n@@ -28,6 +28,7 @@\n     load_dataset,\n     _assign_default_kwargs,\n     _draw_figure,\n+    _deprecate_ci,\n )\n \n \n@@ -458,3 +459,20 @@ def test_draw_figure():\n     assert not f.stale\n     # ticklabels are not populated until a draw, but this may change\n     assert ax.get_xticklabels()[0].get_text() == \"a\"\n+\n+\n+def test_deprecate_ci():\n+\n+    msg = \"The `ci` parameter is deprecated; use `errorbar=\"\n+\n+    with pytest.warns(UserWarning, match=msg + \"None\"):\n+        out = _deprecate_ci(None, None)\n+    assert out is None\n+\n+    with pytest.warns(UserWarning, match=msg + \"'sd'\"):\n+        out = _deprecate_ci(None, \"sd\")\n+    assert out == \"sd\"\n+\n+    with pytest.warns(UserWarning, match=msg + r\"\\('ci', 68\\)\"):\n+        out = _deprecate_ci(None, 68)\n+    assert out == (\"ci\", 68)\n",
  "problem_statement": "lineplot ignoring ci=None\n```python\r\nsns.lineplot(x=[1, 1, 2, 2], y=[1, 2, 3, 4], ci=None)\r\n```\r\n\r\nThis should warn and then reformat the args to have `errorbar=None`\n",
  "hints_text": "",
  "created_at": "2021-01-30T22:18:52Z",
  "version": "0.12",
  "FAIL_TO_PASS": "[\"seaborn/tests/test_utils.py::test_deprecate_ci\"]",
  "PASS_TO_PASS": "[\"seaborn/tests/test_utils.py::test_ci_to_errsize\", \"seaborn/tests/test_utils.py::test_desaturate\", \"seaborn/tests/test_utils.py::test_desaturation_prop\", \"seaborn/tests/test_utils.py::test_saturate\", \"seaborn/tests/test_utils.py::test_to_utf8[a-a0]\", \"seaborn/tests/test_utils.py::test_to_utf8[abc-abc0]\", \"seaborn/tests/test_utils.py::test_to_utf8[a-a1]\", \"seaborn/tests/test_utils.py::test_to_utf8[abc-abc1]\", \"seaborn/tests/test_utils.py::test_to_utf8[s4-abc]\", \"seaborn/tests/test_utils.py::test_to_utf8[s5-]\", \"seaborn/tests/test_utils.py::test_to_utf8[1-1]\", \"seaborn/tests/test_utils.py::test_to_utf8[0-0]\", \"seaborn/tests/test_utils.py::test_to_utf8[s8-[]]\", \"seaborn/tests/test_utils.py::TestSpineUtils::test_despine\", \"seaborn/tests/test_utils.py::TestSpineUtils::test_despine_specific_axes\", \"seaborn/tests/test_utils.py::TestSpineUtils::test_despine_with_offset\", \"seaborn/tests/test_utils.py::TestSpineUtils::test_despine_side_specific_offset\", \"seaborn/tests/test_utils.py::TestSpineUtils::test_despine_with_offset_specific_axes\", \"seaborn/tests/test_utils.py::TestSpineUtils::test_despine_trim_spines\", \"seaborn/tests/test_utils.py::TestSpineUtils::test_despine_trim_inverted\", \"seaborn/tests/test_utils.py::TestSpineUtils::test_despine_trim_noticks\", \"seaborn/tests/test_utils.py::TestSpineUtils::test_despine_trim_categorical\", \"seaborn/tests/test_utils.py::TestSpineUtils::test_despine_moved_ticks\", \"seaborn/tests/test_utils.py::test_ticklabels_overlap\", \"seaborn/tests/test_utils.py::test_get_dataset_names\", \"seaborn/tests/test_utils.py::test_load_datasets\", \"seaborn/tests/test_utils.py::test_load_dataset_error\", \"seaborn/tests/test_utils.py::test_load_cached_datasets\", \"seaborn/tests/test_utils.py::test_relative_luminance\", \"seaborn/tests/test_utils.py::test_get_color_cycle[cycler0-result0]\", \"seaborn/tests/test_utils.py::test_get_color_cycle[cycler1-result1]\", \"seaborn/tests/test_utils.py::test_get_color_cycle[cycler2-result2]\", \"seaborn/tests/test_utils.py::test_get_color_cycle[cycler3-result3]\", \"seaborn/tests/test_utils.py::test_get_color_cycle[cycler4-result4]\", \"seaborn/tests/test_utils.py::test_get_color_cycle[cycler5-result5]\", \"seaborn/tests/test_utils.py::test_get_color_cycle[cycler6-result6]\", \"seaborn/tests/test_utils.py::test_remove_na\", \"seaborn/tests/test_utils.py::test_assign_default_kwargs\", \"seaborn/tests/test_utils.py::test_draw_figure\"]",
  "environment_setup_commit": "d25872b0fc99dbf7e666a91f59bd4ed125186aa1",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.834674",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}