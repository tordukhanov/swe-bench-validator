{
  "repo": "django/django",
  "instance_id": "django__django-11356",
  "base_commit": "330638b89f14e1fb06e9d313ccc9768ae167c53f",
  "patch": "diff --git a/django/db/models/fields/related.py b/django/db/models/fields/related.py\n--- a/django/db/models/fields/related.py\n+++ b/django/db/models/fields/related.py\n@@ -797,6 +797,8 @@ def __init__(self, to, on_delete, related_name=None, related_query_name=None,\n             # the to_field during FK construction. It won't be guaranteed to\n             # be correct until contribute_to_class is called. Refs #12190.\n             to_field = to_field or (to._meta.pk and to._meta.pk.name)\n+        if not callable(on_delete):\n+            raise TypeError('on_delete must be callable.')\n \n         kwargs['rel'] = self.rel_class(\n             self, to, to_field,\n",
  "test_patch": "diff --git a/tests/delete/tests.py b/tests/delete/tests.py\n--- a/tests/delete/tests.py\n+++ b/tests/delete/tests.py\n@@ -21,6 +21,13 @@ def test_auto(self):\n         a.auto.delete()\n         self.assertFalse(A.objects.filter(name='auto').exists())\n \n+    def test_non_callable(self):\n+        msg = 'on_delete must be callable.'\n+        with self.assertRaisesMessage(TypeError, msg):\n+            models.ForeignKey('self', on_delete=None)\n+        with self.assertRaisesMessage(TypeError, msg):\n+            models.OneToOneField('self', on_delete=None)\n+\n     def test_auto_nullable(self):\n         a = create_a('auto_nullable')\n         a.auto_nullable.delete()\n",
  "problem_statement": "on_delete attribute must be callable.\nDescription\n\t\nIf you set on_delete=None as a ForeignKey field parameter you might get the following error:\n File \"django/contrib/admin/options.py\", line 1823, in get_deleted_objects\n\treturn get_deleted_objects(objs, request, self.admin_site)\n File \"django/contrib/admin/utils.py\", line 134, in get_deleted_objects\n\tcollector.collect(objs)\n File \"django/contrib/admin/utils.py\", line 197, in collect\n\treturn super().collect(objs, source_attr=source_attr, **kwargs)\n File \"django/db/models/deletion.py\", line 221, in collect\n\tfield.remote_field.on_delete(self, field, sub_objs, self.using)\nTypeError: 'NoneType' object is not callable\nI believe that we could validate the on_delete value to prevent such behaviour. Or at least tell that None is not a valid on_delete value.\nRefs ​https://docs.djangoproject.com/fr/2.2/ref/models/fields/#django.db.models.ForeignKey.on_delete\n",
  "hints_text": "IMO it would be unnecessary to add an extra check for None since it covers all options for on_delete explicitly in documentation: The possible values for on_delete are found in django.db.models: ... ​https://docs.djangoproject.com/en/2.2/ref/models/fields/#django.db.models.ForeignKey.on_delete\nThanks for the report. I can imagine that someone may provide custom on_delete behavior, hence I don't think we should validate this attribute with a static list of on_delete behaviors defined by Django. IMO we can raise raise ValueError('on_delete must be callable.') in __init__().\nI agree with adding a check in __init__() and raising ValueError('on_delete must be callable.') . I'm going to submit a patch soon, do you have any suggestion as to where I should write my tests?\ntests/delete looks like a good place for tests.",
  "created_at": "2019-05-12T11:00:10Z",
  "version": "3.0",
  "FAIL_TO_PASS": "[\"test_non_callable (delete.tests.OnDeleteTests)\"]",
  "PASS_TO_PASS": "[\"test_fast_delete_empty_no_update_can_self_select (delete.tests.FastDeleteTests)\", \"test_fast_delete_fk (delete.tests.FastDeleteTests)\", \"test_fast_delete_inheritance (delete.tests.FastDeleteTests)\", \"test_fast_delete_instance_set_pk_none (delete.tests.FastDeleteTests)\", \"test_fast_delete_joined_qs (delete.tests.FastDeleteTests)\", \"test_fast_delete_large_batch (delete.tests.FastDeleteTests)\", \"test_fast_delete_m2m (delete.tests.FastDeleteTests)\", \"test_fast_delete_qs (delete.tests.FastDeleteTests)\", \"test_fast_delete_revm2m (delete.tests.FastDeleteTests)\", \"test_auto (delete.tests.OnDeleteTests)\", \"test_auto_nullable (delete.tests.OnDeleteTests)\", \"test_cascade (delete.tests.OnDeleteTests)\", \"test_cascade_from_child (delete.tests.OnDeleteTests)\", \"test_cascade_from_parent (delete.tests.OnDeleteTests)\", \"test_cascade_nullable (delete.tests.OnDeleteTests)\", \"test_do_nothing (delete.tests.OnDeleteTests)\", \"test_do_nothing_qscount (delete.tests.OnDeleteTests)\", \"test_inheritance_cascade_down (delete.tests.OnDeleteTests)\", \"test_inheritance_cascade_up (delete.tests.OnDeleteTests)\", \"test_o2o_setnull (delete.tests.OnDeleteTests)\", \"test_protect (delete.tests.OnDeleteTests)\", \"test_setdefault (delete.tests.OnDeleteTests)\", \"test_setdefault_none (delete.tests.OnDeleteTests)\", \"test_setnull (delete.tests.OnDeleteTests)\", \"test_setnull_from_child (delete.tests.OnDeleteTests)\", \"test_setnull_from_parent (delete.tests.OnDeleteTests)\", \"test_setvalue (delete.tests.OnDeleteTests)\", \"test_bulk (delete.tests.DeletionTests)\", \"test_can_defer_constraint_checks (delete.tests.DeletionTests)\", \"test_delete_with_keeping_parents (delete.tests.DeletionTests)\", \"test_delete_with_keeping_parents_relationships (delete.tests.DeletionTests)\", \"test_deletion_order (delete.tests.DeletionTests)\", \"test_hidden_related (delete.tests.DeletionTests)\", \"test_instance_update (delete.tests.DeletionTests)\", \"test_large_delete (delete.tests.DeletionTests)\", \"test_large_delete_related (delete.tests.DeletionTests)\", \"test_m2m (delete.tests.DeletionTests)\", \"test_model_delete_returns_num_rows (delete.tests.DeletionTests)\", \"test_only_referenced_fields_selected (delete.tests.DeletionTests)\", \"test_proxied_model_duplicate_queries (delete.tests.DeletionTests)\", \"test_queryset_delete_returns_num_rows (delete.tests.DeletionTests)\", \"test_relational_post_delete_signals_happen_before_parent_object (delete.tests.DeletionTests)\"]",
  "environment_setup_commit": "419a78300f7cd27611196e1e464d50fd0385ff27",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.569453",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}