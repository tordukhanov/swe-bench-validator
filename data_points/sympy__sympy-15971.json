{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-15971",
  "base_commit": "c267d554e16f0392af2b22a2922cbe0db7e8c798",
  "patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -1370,11 +1370,13 @@ def _print_Function(self, e, sort=False, func_name=None):\n     def _special_function_classes(self):\n         from sympy.functions.special.tensor_functions import KroneckerDelta\n         from sympy.functions.special.gamma_functions import gamma, lowergamma\n+        from sympy.functions.special.zeta_functions import lerchphi\n         from sympy.functions.special.beta_functions import beta\n         from sympy.functions.special.delta_functions import DiracDelta\n         from sympy.functions.special.error_functions import Chi\n         return {KroneckerDelta: [greek_unicode['delta'], 'delta'],\n                 gamma: [greek_unicode['Gamma'], 'Gamma'],\n+                lerchphi: [greek_unicode['Phi'], 'lerchphi'],\n                 lowergamma: [greek_unicode['gamma'], 'gamma'],\n                 beta: [greek_unicode['Beta'], 'B'],\n                 DiracDelta: [greek_unicode['delta'], 'delta'],\n@@ -1394,6 +1396,10 @@ def _print_GeometryEntity(self, expr):\n         # GeometryEntity is based on Tuple but should not print like a Tuple\n         return self.emptyPrinter(expr)\n \n+    def _print_lerchphi(self, e):\n+        func_name = greek_unicode['Phi'] if self._use_unicode else 'lerchphi'\n+        return self._print_Function(e, func_name=func_name)\n+\n     def _print_Lambda(self, e):\n         vars, expr = e.args\n         if self._use_unicode:\n",
  "test_patch": "diff --git a/sympy/printing/pretty/tests/test_pretty.py b/sympy/printing/pretty/tests/test_pretty.py\n--- a/sympy/printing/pretty/tests/test_pretty.py\n+++ b/sympy/printing/pretty/tests/test_pretty.py\n@@ -14,7 +14,7 @@\n from sympy.functions import (Abs, Chi, Ci, Ei, KroneckerDelta,\n     Piecewise, Shi, Si, atan2, beta, binomial, catalan, ceiling, cos,\n     euler, exp, expint, factorial, factorial2, floor, gamma, hyper, log,\n-    meijerg, sin, sqrt, subfactorial, tan, uppergamma,\n+    meijerg, sin, sqrt, subfactorial, tan, uppergamma, lerchphi,\n     elliptic_k, elliptic_f, elliptic_e, elliptic_pi, DiracDelta)\n \n from sympy.codegen.ast import (Assignment, AddAugmentedAssignment,\n@@ -6504,6 +6504,15 @@ def test_issue_15560():\n     assert e == result\n \n \n+def test_print_lerchphi():\n+    # Part of issue 6013\n+    a = Symbol('a')\n+    pretty(lerchphi(a, 1, 2))\n+    uresult = u'Î¦(a, 1, 2)'\n+    aresult = 'lerchphi(a, 1, 2)'\n+    assert pretty(lerchphi(a, 1, 2)) == aresult\n+    assert upretty(lerchphi(a, 1, 2)) == uresult\n+\n def test_issue_15583():\n \n     N = mechanics.ReferenceFrame('N')\n",
  "problem_statement": "Add pretty printing functionality for lerchphi fuction\n<!-- Your title above should be a short description of what\r\nwas changed. Do not include the issue number in the title. -->\r\n\r\n#### References to other Issues or PRs\r\n<!-- If this pull request fixes an issue, write \"Fixes #NNNN\" in that exact\r\nformat, e.g. \"Fixes #1234\". See\r\nhttps://github.com/blog/1506-closing-issues-via-pull-requests .-->\r\n\r\n\r\n#### Brief description of what is fixed or changed\r\nAdded functionality to pretty print lerchphi function in pretty.py\r\nFixes the lerchphi part of #6013.\r\n\r\n#### Other comments\r\n\r\n\r\n#### Release Notes\r\n\r\n<!-- Write the release notes for this release below. See\r\nhttps://github.com/sympy/sympy/wiki/Writing-Release-Notes for more information\r\non how to write release notes. If there is no release notes entry for this PR,\r\nwrite \"NO ENTRY\". The bot will check your release notes automatically to see\r\nif they are formatted correctly. -->\r\n\r\n<!-- BEGIN RELEASE NOTES -->\r\nNO ENTRY\r\n<!-- END RELEASE NOTES -->\r\n\n",
  "hints_text": "",
  "created_at": "2019-02-12T19:57:43Z",
  "version": "1.4",
  "FAIL_TO_PASS": "[\"test_print_lerchphi\"]",
  "PASS_TO_PASS": "[\"test_pretty_ascii_str\", \"test_pretty_unicode_str\", \"test_upretty_greek\", \"test_upretty_multiindex\", \"test_upretty_sub_super\", \"test_upretty_subs_missing_in_24\", \"test_upretty_modifiers\", \"test_pretty_Cycle\", \"test_pretty_basic\", \"test_negative_fractions\", \"test_issue_5524\", \"test_pretty_ordering\", \"test_EulerGamma\", \"test_GoldenRatio\", \"test_pretty_relational\", \"test_Assignment\", \"test_AugmentedAssignment\", \"test_issue_7117\", \"test_pretty_rational\", \"test_pretty_functions\", \"test_pretty_sqrt\", \"test_pretty_sqrt_char_knob\", \"test_pretty_sqrt_longsymbol_no_sqrt_char\", \"test_pretty_KroneckerDelta\", \"test_pretty_product\", \"test_pretty_lambda\", \"test_pretty_order\", \"test_pretty_derivatives\", \"test_pretty_integrals\", \"test_pretty_matrix\", \"test_pretty_ndim_arrays\", \"test_tensor_TensorProduct\", \"test_diffgeom_print_WedgeProduct\", \"test_Adjoint\", \"test_pretty_Trace_issue_9044\", \"test_MatrixExpressions\", \"test_pretty_dotproduct\", \"test_pretty_piecewise\", \"test_pretty_ITE\", \"test_pretty_seq\", \"test_any_object_in_sequence\", \"test_print_builtin_set\", \"test_pretty_sets\", \"test_pretty_SetExpr\", \"test_pretty_ImageSet\", \"test_pretty_ConditionSet\", \"test_pretty_ComplexRegion\", \"test_pretty_Union_issue_10414\", \"test_pretty_Intersection_issue_10414\", \"test_ProductSet_paranthesis\", \"test_ProductSet_prod_char_issue_10413\", \"test_pretty_sequences\", \"test_pretty_FourierSeries\", \"test_pretty_FormalPowerSeries\", \"test_pretty_limits\", \"test_pretty_ComplexRootOf\", \"test_pretty_RootSum\", \"test_GroebnerBasis\", \"test_pretty_Boolean\", \"test_pretty_Domain\", \"test_pretty_prec\", \"test_pprint\", \"test_pretty_class\", \"test_pretty_no_wrap_line\", \"test_settings\", \"test_pretty_sum\", \"test_units\", \"test_pretty_Subs\", \"test_gammas\", \"test_beta\", \"test_function_subclass_different_name\", \"test_SingularityFunction\", \"test_deltas\", \"test_hyper\", \"test_meijerg\", \"test_noncommutative\", \"test_pretty_special_functions\", \"test_pretty_geometry\", \"test_expint\", \"test_elliptic_functions\", \"test_RandomDomain\", \"test_PrettyPoly\", \"test_issue_6285\", \"test_issue_6359\", \"test_issue_6739\", \"test_complicated_symbol_unchanged\", \"test_categories\", \"test_PrettyModules\", \"test_QuotientRing\", \"test_Homomorphism\", \"test_Tr\", \"test_pretty_Add\", \"test_issue_7179\", \"test_issue_7180\", \"test_pretty_Complement\", \"test_pretty_SymmetricDifference\", \"test_pretty_Contains\", \"test_issue_4335\", \"test_issue_6324\", \"test_issue_7927\", \"test_issue_6134\", \"test_issue_9877\", \"test_issue_13651\", \"test_pretty_primenu\", \"test_pretty_primeomega\", \"test_pretty_Mod\", \"test_issue_11801\", \"test_pretty_UnevaluatedExpr\", \"test_issue_10472\", \"test_MatrixElement_printing\", \"test_issue_12675\", \"test_MatrixSymbol_printing\", \"test_degree_printing\", \"test_vector_expr_pretty_printing\", \"test_pretty_print_tensor_expr\", \"test_pretty_print_tensor_partial_deriv\", \"test_issue_15560\", \"test_issue_15583\", \"test_put_accent_in_middle_of_string\"]",
  "environment_setup_commit": "73b3f90093754c5ed1561bd885242330e3583004",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.104732",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}