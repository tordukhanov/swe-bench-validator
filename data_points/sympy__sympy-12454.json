{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-12454",
  "base_commit": "d3fcdb72bfcbb560eb45264ac1c03f359436edef",
  "patch": "diff --git a/sympy/matrices/matrices.py b/sympy/matrices/matrices.py\n--- a/sympy/matrices/matrices.py\n+++ b/sympy/matrices/matrices.py\n@@ -641,7 +641,7 @@ def _eval_is_zero(self):\n     def _eval_is_upper_hessenberg(self):\n         return all(self[i, j].is_zero\n                    for i in range(2, self.rows)\n-                   for j in range(i - 1))\n+                   for j in range(min(self.cols, (i - 1))))\n \n     def _eval_values(self):\n         return [i for i in self if not i.is_zero]\n@@ -1112,7 +1112,7 @@ def is_upper(self):\n         \"\"\"\n         return all(self[i, j].is_zero\n                    for i in range(1, self.rows)\n-                   for j in range(i))\n+                   for j in range(min(i, self.cols)))\n \n     @property\n     def is_zero(self):\n",
  "test_patch": "diff --git a/sympy/matrices/tests/test_matrices.py b/sympy/matrices/tests/test_matrices.py\n--- a/sympy/matrices/tests/test_matrices.py\n+++ b/sympy/matrices/tests/test_matrices.py\n@@ -1225,6 +1225,8 @@ def test_is_upper():\n     assert a.is_upper is True\n     a = Matrix([[1], [2], [3]])\n     assert a.is_upper is False\n+    a = zeros(4, 2)\n+    assert a.is_upper is True\n \n \n def test_is_lower():\n@@ -1880,6 +1882,9 @@ def test_hessenberg():\n     A = Matrix([[3, 4, 1], [2, 4, 5], [3, 1, 2]])\n     assert not A.is_upper_hessenberg\n \n+    A = zeros(5, 2)\n+    assert A.is_upper_hessenberg\n+\n \n def test_cholesky():\n     raises(NonSquareMatrixError, lambda: Matrix((1, 2)).cholesky())\n",
  "problem_statement": "is_upper() raises IndexError for tall matrices\nThe function Matrix.is_upper raises an IndexError for a 4x2 matrix of zeros.\r\n```\r\n>>> sympy.zeros(4,2).is_upper\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"sympy/matrices/matrices.py\", line 1112, in is_upper\r\n    for i in range(1, self.rows)\r\n  File \"sympy/matrices/matrices.py\", line 1113, in <genexpr>\r\n    for j in range(i))\r\n  File \"sympy/matrices/dense.py\", line 119, in __getitem__\r\n    return self.extract(i, j)\r\n  File \"sympy/matrices/matrices.py\", line 352, in extract\r\n    colsList = [a2idx(k, self.cols) for k in colsList]\r\n  File \"sympy/matrices/matrices.py\", line 5261, in a2idx\r\n    raise IndexError(\"Index out of range: a[%s]\" % (j,))\r\nIndexError: Index out of range: a[2]\r\n```\r\nThe code for is_upper() is\r\n```\r\n        return all(self[i, j].is_zero\r\n                   for i in range(1, self.rows)\r\n                   for j in range(i))\r\n```\r\nFor a 4x2 matrix, is_upper iterates over the indices:\r\n```\r\n>>> A = sympy.zeros(4, 2)\r\n>>> print tuple([i, j] for i in range(1, A.rows) for j in range(i))\r\n([1, 0], [2, 0], [2, 1], [3, 0], [3, 1], [3, 2])\r\n```\r\nThe attempt to index the (3,2) entry appears to be the source of the error. \n",
  "hints_text": "@twhunt , I would like to work on this issue\r\n\nI don't have any special Sympy privileges, but feel free to work on it.\nIt's probably worth checking if is_lower() has a similar issue.\n\n\nOn Mar 29, 2017 12:02 PM, \"Mohit Chandra\" <notifications@github.com> wrote:\n\n@twhunt <https://github.com/twhunt> , I would like to work on this issue\n\nâ€”\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n<https://github.com/sympy/sympy/issues/12452#issuecomment-290192503>, or mute\nthe thread\n<https://github.com/notifications/unsubscribe-auth/AEi2SgHD7pnTn2d_B6spVitWbflkNGFmks5rqqrfgaJpZM4MtWZk>\n.\n",
  "created_at": "2017-03-29T20:40:49Z",
  "version": "1.0",
  "FAIL_TO_PASS": "[\"test_is_upper\", \"test_hessenberg\"]",
  "PASS_TO_PASS": "[\"test_args\", \"test_division\", \"test_sum\", \"test_addition\", \"test_fancy_index_matrix\", \"test_multiplication\", \"test_power\", \"test_creation\", \"test_tolist\", \"test_as_mutable\", \"test_determinant\", \"test_det_LU_decomposition\", \"test_berkowitz_minors\", \"test_slicing\", \"test_submatrix_assignment\", \"test_extract\", \"test_reshape\", \"test_applyfunc\", \"test_expand\", \"test_random\", \"test_LUdecomp\", \"test_LUsolve\", \"test_QRsolve\", \"test_inverse\", \"test_matrix_inverse_mod\", \"test_util\", \"test_jacobian_hessian\", \"test_QR\", \"test_QR_non_square\", \"test_nullspace\", \"test_columnspace\", \"test_wronskian\", \"test_subs\", \"test_xreplace\", \"test_transpose\", \"test_conjugate\", \"test_conj_dirac\", \"test_trace\", \"test_shape\", \"test_col_row_op\", \"test_zip_row_op\", \"test_issue_3950\", \"test_issue_3981\", \"test_evalf\", \"test_is_symbolic\", \"test_is_lower\", \"test_is_nilpotent\", \"test_zeros_ones_fill\", \"test_empty_zeros\", \"test_inv_iszerofunc\", \"test_jacobian_metrics\", \"test_jacobian2\", \"test_issue_4564\", \"test_nonvectorJacobian\", \"test_vec\", \"test_vech\", \"test_vech_errors\", \"test_diag\", \"test_get_diag_blocks1\", \"test_get_diag_blocks2\", \"test_inv_block\", \"test_creation_args\", \"test_diagonal_symmetrical\", \"test_diagonalization\", \"test_jordan_form\", \"test_jordan_form_complex_issue_9274\", \"test_issue_10220\", \"test_Matrix_berkowitz_charpoly\", \"test_exp\", \"test_has\", \"test_errors\", \"test_len\", \"test_integrate\", \"test_diff\", \"test_getattr\", \"test_cholesky\", \"test_LDLdecomposition\", \"test_cholesky_solve\", \"test_LDLsolve\", \"test_lower_triangular_solve\", \"test_upper_triangular_solve\", \"test_diagonal_solve\", \"test_singular_values\", \"test_condition_number\", \"test_equality\", \"test_col_join\", \"test_row_insert\", \"test_col_insert\", \"test_normalized\", \"test_print_nonzero\", \"test_zeros_eye\", \"test_is_zero\", \"test_rotation_matrices\", \"test_DeferredVector\", \"test_DeferredVector_not_iterable\", \"test_DeferredVector_Matrix\", \"test_GramSchmidt\", \"test_casoratian\", \"test_zero_dimension_multiply\", \"test_slice_issue_2884\", \"test_slice_issue_3401\", \"test_copyin\", \"test_invertible_check\", \"test_issue_5964\", \"test_issue_7604\", \"test_is_Identity\", \"test_dot\", \"test_dual\", \"test_anti_symmetric\", \"test_issue_5321\", \"test_issue_5320\", \"test_issue_11944\", \"test_cross\", \"test_hash\", \"test_adjoint\", \"test_simplify_immutable\", \"test_rank\", \"test_issue_11434\", \"test_rank_regression_from_so\", \"test_replace\", \"test_replace_map\", \"test_atoms\", \"test_pinv_solve\", \"test_gauss_jordan_solve\", \"test_issue_7201\", \"test_free_symbols\", \"test_hermitian\", \"test_doit\", \"test_issue_9457_9467_9876\", \"test_issue_9422\", \"test_issue_10770\", \"test_issue_10658\", \"test_partial_pivoting\", \"test_iszero_substitution\"]",
  "environment_setup_commit": "50b81f9f6be151014501ffac44e5dc6b2416938f",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.077357",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}