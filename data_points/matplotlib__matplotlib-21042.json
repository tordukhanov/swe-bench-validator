{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-21042",
  "base_commit": "8a8dd9093d381500555bccf46fc5d46b42d132ec",
  "patch": "diff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py\n--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n@@ -699,7 +699,10 @@ def find_all(self, pattern):\n                         if pattern_re.search(key))\n \n     def copy(self):\n-        return {k: dict.__getitem__(self, k) for k in self}\n+        rccopy = RcParams()\n+        for k in self:  # Skip deprecations and revalidation.\n+            dict.__setitem__(rccopy, k, dict.__getitem__(self, k))\n+        return rccopy\n \n \n def rc_params(fail_on_error=False):\n@@ -877,8 +880,8 @@ def rc_params_from_file(fname, fail_on_error=False, use_default_template=True):\n rcParams = RcParams()  # The global instance.\n dict.update(rcParams, dict.items(rcParamsDefault))\n dict.update(rcParams, _rc_params_in_file(matplotlib_fname()))\n+rcParamsOrig = rcParams.copy()\n with _api.suppress_matplotlib_deprecation_warning():\n-    rcParamsOrig = RcParams(rcParams.copy())\n     # This also checks that all rcParams are indeed listed in the template.\n     # Assigning to rcsetup.defaultParams is left only for backcompat.\n     defaultParams = rcsetup.defaultParams = {\n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_rcparams.py b/lib/matplotlib/tests/test_rcparams.py\n--- a/lib/matplotlib/tests/test_rcparams.py\n+++ b/lib/matplotlib/tests/test_rcparams.py\n@@ -546,3 +546,8 @@ def test_deprecation(monkeypatch):\n         mpl.rcParams[\"svg.hashsalt\"] = \"foobar\"\n     assert mpl.rcParams[\"svg.hashsalt\"] == \"foobar\"  # Doesn't warn.\n     mpl.rcParams[\"svg.hashsalt\"] = None  # Doesn't warn.\n+\n+    mpl.rcParams.update(mpl.rcParams.copy())  # Doesn't warn.\n+    # Note that the warning suppression actually arises from the\n+    # iteration over the updater rcParams being protected by\n+    # suppress_matplotlib_deprecation_warning, rather than any explicit check.\n",
  "problem_statement": "MatplotlibDeprecationWarning when updating rcparams\n### Bug report\r\n\r\n**Bug summary**\r\nUpdating RC params in code produces a deprecation warning.  In order to control rcParams for an internal library I am reading in parameters and popping some that I don't want used.  I am using a variation on the code below.  I think I have traced it to the _validators dictionary in [matplotlib.rcsetup.py](https://github.com/matplotlib/matplotlib/blob/master/lib/matplotlib/rcsetup.py#L783)\r\n\r\n**Code for reproduction**\r\nThis code reproduces the error.\r\n```python\r\nimport matplotlib as mpl\r\nrc = dict(mpl.rc_params())\r\nmpl.rcParams.update(rc)\r\n```\r\n\r\n**Actual outcome**\r\n```\r\nC:\\Users\\User\\miniconda3\\envs\\testmpl\\lib\\_collections_abc.py:841: MatplotlibDeprecationWarning: \r\nThe datapath rcparam was deprecated in Matplotlib 3.2.1 and will be removed two minor releases later.\r\n  self[key] = other[key]\r\nC:\\Users\\User\\miniconda3\\envs\\testmpl\\lib\\_collections_abc.py:841: MatplotlibDeprecationWarning: \r\nThe savefig.frameon rcparam was deprecated in Matplotlib 3.1 and will be removed in 3.3.\r\n  self[key] = other[key]\r\nC:\\Users\\User\\miniconda3\\envs\\testmpl\\lib\\_collections_abc.py:841: MatplotlibDeprecationWarning: \r\nThe text.latex.unicode rcparam was deprecated in Matplotlib 3.0 and will be removed in 3.2.\r\n  self[key] = other[key]\r\nC:\\Users\\User\\miniconda3\\envs\\testmpl\\lib\\_collections_abc.py:841: MatplotlibDeprecationWarning: \r\nThe verbose.fileo rcparam was deprecated in Matplotlib 3.1 and will be removed in 3.3.\r\n  self[key] = other[key]\r\nC:\\Users\\User\\miniconda3\\envs\\testmpl\\lib\\_collections_abc.py:841: MatplotlibDeprecationWarning: \r\nThe verbose.level rcparam was deprecated in Matplotlib 3.1 and will be removed in 3.3.\r\n  self[key] = other[key]\r\n\r\n```\r\n\r\n**Expected outcome**\r\nI would expect Matplotlib to not load deprecated rcParams\r\n\r\n**Matplotlib version**\r\n<!--Please specify your platform and versions of the relevant libraries you are using:-->\r\n  * Operating system: Windows\r\n  * Matplotlib version: 3.4.2 \r\n  * Matplotlib backend: 'Qt5Agg'\r\n  * Python version: 3.9.4\r\n  * Jupyter version (if applicable): \r\n  * Other libraries: \r\n\r\nSetup a conda environment and just specified matplotlib from conda-forge\r\n\r\n\n",
  "hints_text": "Those were all removed in 3.4.2, and indeed are not loaded.  I expect you have a crossed install somehow, and maybe an old matplotlibrc kicking around.  \nI thought that too at first, but I don't believe that is the case here.  \r\n\r\nAfter more digging, it seems to be related to line 846 of [\\_\\_init\\_\\_.py'](https://github.com/matplotlib/matplotlib/blob/master/lib/matplotlib/__init__.py#L846) which constructs the `rcParamsDefault` dictionary from the found matplotlibrc file AND the `_hardcoded_defaults` dictionary in [rcsetup.py](https://github.com/matplotlib/matplotlib/blob/master/lib/matplotlib/rcsetup.py#L1222).  It seems that when the matplotlibrc is loaded in [rc_params_from_file()](https://github.com/matplotlib/matplotlib/blob/master/lib/matplotlib/__init__.py#L802) those deprecated params are injected behind the scenes with warnings depressed.\r\n\r\nI suppose this is a feature to preserve behavior while in the deprecation period, but it is not expected (to me anyways).  This behavior has puzzled me for years as my library reads, manipulates, and then updates rcparams (pre mplstyle era).  I'd always find them even though my matplotlibrc and install was clean.  I eventually countered this by maintaining a list of deprecated rcparams and popping them before my update.  Not good for backward compatibility though.  But then time would pass and more would crop up as versions changed and more future deprecations occurred.  I finally posted here because it has become very cumbersome to manage. \r\n\r\n\nImporting just matplotlib produces no warnings.  It is only after the get and update.\nFor 3.4.2 the warning is:\r\n```\r\n/Users/jklymak/anaconda3/envs/matplotlibdev/lib/python3.9/_collections_abc.py:856: MatplotlibDeprecationWarning: \r\nThe animation.avconv_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.\r\n  self[key] = other[key]\r\n/Users/jklymak/anaconda3/envs/matplotlibdev/lib/python3.9/_collections_abc.py:856: MatplotlibDeprecationWarning: \r\nThe animation.avconv_path rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.\r\n  self[key] = other[key]\r\n/Users/jklymak/anaconda3/envs/matplotlibdev/lib/python3.9/_collections_abc.py:856: MatplotlibDeprecationWarning: \r\nThe animation.html_args rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.\r\n  self[key] = other[key]\r\n/Users/jklymak/anaconda3/envs/matplotlibdev/lib/python3.9/_collections_abc.py:856: MatplotlibDeprecationWarning: \r\nThe keymap.all_axes rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.\r\n  self[key] = other[key]\r\n/Users/jklymak/anaconda3/envs/matplotlibdev/lib/python3.9/_collections_abc.py:856: MatplotlibDeprecationWarning: \r\nThe savefig.jpeg_quality rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.\r\n  self[key] = other[key]\r\n/Users/jklymak/anaconda3/envs/matplotlibdev/lib/python3.9/_collections_abc.py:856: MatplotlibDeprecationWarning: \r\nThe text.latex.preview rcparam was deprecated in Matplotlib 3.3 and will be removed two minor releases later.\r\n  self[key] = other[key]\r\n```\r\n\r\nI think that is working as we would expect, yes those entries still need to be in the dict, and yes you will get the deprecation message if you update them.  I'm not sure we can do anything to fix this....\nSeems like the conundrum for a fix was discussed in [#13118](https://github.com/matplotlib/matplotlib/issues/13118#issuecomment-451776450).  Now that I understand that behavior, it seems good. \r\n\r\nThe \"fix\" is probably just using best practices like the `matplotlib.rc()` method or `matplotlib.rcParams[\"some key\"] = \"some value\"` to change global state, at least in my case.  These create a warning if a deprecated parameter is set, which is good.  The copy then update method is not great if you don't want to manage those warnings.\r\n\r\nPerhaps helpful to developers would be a clarification to the documentation for [matplotlib.rc_params()](https://matplotlib.org/stable/api/matplotlib_configuration_api.html#matplotlib.rc_params) and [matplotlib.rc_params_from_file()](https://matplotlib.org/stable/api/matplotlib_configuration_api.html#matplotlib.rc_params_from_file) indicating that deprecated rcparams will be inserted when loading from the matplotlibrc or other file to preserve behavior during the deprecation period.  Then point them to best practice for setting global parameters in the guide [here](https://matplotlib.org/stable/tutorials/introductory/customizing.html#matplotlib-rcparams)\n@gibbycu would you be willing to open a PR making the changes to those docstrings that would have saved you here?",
  "created_at": "2021-09-11T13:02:29Z",
  "version": "3.4",
  "FAIL_TO_PASS": "[\"lib/matplotlib/tests/test_rcparams.py::test_deprecation\"]",
  "PASS_TO_PASS": "[\"lib/matplotlib/tests/test_rcparams.py::test_rcparams\", \"lib/matplotlib/tests/test_rcparams.py::test_RcParams_class\", \"lib/matplotlib/tests/test_rcparams.py::test_Bug_2543\", \"lib/matplotlib/tests/test_rcparams.py::test_legend_colors[same\", \"lib/matplotlib/tests/test_rcparams.py::test_legend_colors[inherited\", \"lib/matplotlib/tests/test_rcparams.py::test_legend_colors[different\", \"lib/matplotlib/tests/test_rcparams.py::test_mfc_rcparams\", \"lib/matplotlib/tests/test_rcparams.py::test_mec_rcparams\", \"lib/matplotlib/tests/test_rcparams.py::test_axes_titlecolor_rcparams\", \"lib/matplotlib/tests/test_rcparams.py::test_Issue_1713\", \"lib/matplotlib/tests/test_rcparams.py::test_animation_frame_formats\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-t-True]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-y-True]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-yes-True]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-on-True]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-true-True]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-1-True0]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-1-True1]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-True-True]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-f-False]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-n-False]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-no-False]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-off-False]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-false-False]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-0-False0]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-0-False1]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-False-False]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist--target16]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-a,b-target17]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-aardvark-target18]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-aardvark,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-arg21-target21]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-arg22-target22]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-arg23-target23]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-arg24-target24]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_intlist-1,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_intlist-arg26-target26]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_intlist-arg27-target27]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_intlist-arg28-target28]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_intlist-arg29-target29]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_floatlist-1.5,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_floatlist-arg31-target31]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_floatlist-arg32-target32]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_floatlist-arg33-target33]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_floatlist-arg34-target34]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-cycler(\\\"color\\\",\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-arg36-target36]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-(cycler(\\\"color\\\",\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-cycler(c='rgb',\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-cycler('c',\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-arg40-target40]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-arg41-target41]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hatch---|---|]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hatch-\\\\\\\\oO-\\\\\\\\oO]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hatch-/+*/.x-/+*/.x]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hatch--]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-r,g,b-target46]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-arg47-target47]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-r,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-arg49-target49]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-arg50-target50]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-arg51-target51]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-None-none]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-none-none]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-AABBCC-#AABBCC]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-AABBCC00-#AABBCC00]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-tab:blue-tab:blue]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-C12-C12]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-(0,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-arg59-target59]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-arg61-target61]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_color_or_linecolor-linecolor-linecolor]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_color_or_linecolor-markerfacecolor-markerfacecolor]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_color_or_linecolor-mfc-markerfacecolor]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_color_or_linecolor-markeredgecolor-markeredgecolor]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_color_or_linecolor-mec-markeredgecolor]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-auto-auto]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-fd-fd]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-10-10]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-1,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-arg71-target71]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-arg72-target72]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-None-None]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-1-1]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-0.1-0.1]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-arg76-target76]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-arg77-target77]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-arg78-target78]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-arg79-target79]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-arg80-target80]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle----]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-solid-solid]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle------]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-dashed-dashed]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle--.--.]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-dashdot-dashdot]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-:-:]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-dotted-dotted]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle--]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-None-none]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-none-none]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-DoTtEd-dotted]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-1,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-arg95-target95]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-arg96-target96]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-arg97-target97]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-arg98-target98]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_bool-aardvark-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_bool-2-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_bool--1-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_bool-arg3-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_strlist-arg4-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_strlist-1-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_strlist-arg6-MatplotlibDeprecationWarning]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_strlist-arg7-MatplotlibDeprecationWarning]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_intlist-aardvark-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_intlist-arg9-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_intlist-arg10-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_floatlist-aardvark-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_floatlist-arg12-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_floatlist-arg13-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_floatlist-arg14-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_floatlist-None-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-4-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-cycler(\\\"bleh,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-Cycler(\\\"linewidth\\\",\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-1\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-os.system(\\\"echo\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-import\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-def\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-cycler(\\\"waka\\\",\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-cycler(c=[1,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-cycler(lw=['a',\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-arg26-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-arg27-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_hatch---_-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_hatch-8-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_hatch-X-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_colorlist-fish-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_color-tab:veryblue-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_color-(0,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_color_or_linecolor-line-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_color_or_linecolor-marker-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_hist_bins-aardvark-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg40-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg41-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg42-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg43-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg44-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg45-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg46-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg47-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg48-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-abc-TypeError0]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg50-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg51-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg52-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg53-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-abc-TypeError1]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-a-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg56-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-aardvark-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-dotted-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-\\\\xff\\\\xfed\\\\x00o\\\\x00t\\\\x00t\\\\x00e\\\\x00d\\\\x00-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-arg60-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-1.23-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-arg62-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-arg63-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-arg64-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-arg65-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[bold-bold]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[BOLD-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[100-100_0]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[100-100_1]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[weight4-100]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[20.6-20]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[20.6-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[weight7-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_keymaps\", \"lib/matplotlib/tests/test_rcparams.py::test_rcparams_reset_after_fail\", \"lib/matplotlib/tests/test_rcparams.py::test_backend_fallback_headless\"]",
  "environment_setup_commit": "f93c0a3dcb82feed0262d758626c90d4002685f3",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.792008",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}