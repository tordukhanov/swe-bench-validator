{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-8269",
  "base_commit": "1e2ccd8f0eca0870cf6f8fce6934e2da8eba9b72",
  "patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -166,6 +166,7 @@ def check_uri() -> Tuple[str, str, int]:\n                     # Read the whole document and see if #anchor exists\n                     response = requests.get(req_url, stream=True, config=self.app.config,\n                                             auth=auth_info, **kwargs)\n+                    response.raise_for_status()\n                     found = check_anchor(response, unquote(anchor))\n \n                     if not found:\n",
  "test_patch": "diff --git a/tests/roots/test-linkcheck-localserver/conf.py b/tests/roots/test-linkcheck-localserver/conf.py\nnew file mode 100644\n--- /dev/null\n+++ b/tests/roots/test-linkcheck-localserver/conf.py\n@@ -0,0 +1,2 @@\n+exclude_patterns = ['_build']\n+linkcheck_anchors = True\ndiff --git a/tests/roots/test-linkcheck-localserver/index.rst b/tests/roots/test-linkcheck-localserver/index.rst\nnew file mode 100644\n--- /dev/null\n+++ b/tests/roots/test-linkcheck-localserver/index.rst\n@@ -0,0 +1 @@\n+`local server <http://localhost:7777/#anchor>`_\ndiff --git a/tests/test_build_linkcheck.py b/tests/test_build_linkcheck.py\n--- a/tests/test_build_linkcheck.py\n+++ b/tests/test_build_linkcheck.py\n@@ -8,8 +8,10 @@\n     :license: BSD, see LICENSE for details.\n \"\"\"\n \n+import http.server\n import json\n import re\n+import threading\n from unittest import mock\n import pytest\n \n@@ -106,6 +108,21 @@ def test_anchors_ignored(app, status, warning):\n     # expect all ok when excluding #top\n     assert not content\n \n+@pytest.mark.sphinx('linkcheck', testroot='linkcheck-localserver', freshenv=True)\n+def test_raises_for_invalid_status(app, status, warning):\n+    server_thread = HttpServerThread(InternalServerErrorHandler, daemon=True)\n+    server_thread.start()\n+    try:\n+        app.builder.build_all()\n+    finally:\n+        server_thread.terminate()\n+    content = (app.outdir / 'output.txt').read_text()\n+    assert content == (\n+        \"index.rst:1: [broken] http://localhost:7777/#anchor: \"\n+        \"500 Server Error: Internal Server Error \"\n+        \"for url: http://localhost:7777/\\n\"\n+    )\n+\n \n @pytest.mark.sphinx(\n     'linkcheck', testroot='linkcheck', freshenv=True,\n@@ -160,3 +177,22 @@ def test_linkcheck_request_headers(app, status, warning):\n                 assert headers[\"X-Secret\"] == \"open sesami\"\n             else:\n                 assert headers[\"Accept\"] == \"text/html,application/xhtml+xml;q=0.9,*/*;q=0.8\"\n+\n+\n+class HttpServerThread(threading.Thread):\n+    def __init__(self, handler, *args, **kwargs):\n+        super().__init__(*args, **kwargs)\n+        self.server = http.server.HTTPServer((\"localhost\", 7777), handler)\n+\n+    def run(self):\n+        self.server.serve_forever(poll_interval=0.01)\n+\n+    def terminate(self):\n+        self.server.shutdown()\n+        self.server.server_close()\n+        self.join()\n+\n+\n+class InternalServerErrorHandler(http.server.BaseHTTPRequestHandler):\n+    def do_GET(self):\n+        self.send_error(500, \"Internal Server Error\")\n",
  "problem_statement": "Linkcheck should report HTTP errors instead of Anchor not found\n**Describe the bug**\r\nThe `linkcheck` command always reports that it was unable to find the anchor when [`linkcheck_anchors`](https://www.sphinx-doc.org/en/master/usage/configuration.html#confval-linkcheck_workers) is `True`, even when the server replied with an error status code (e.g. 404, 500).\r\n\r\nWhile it is indeed unable to find the anchor, the real issue is that the server encountered an error.\r\n\r\n**To Reproduce**\r\n```console\r\n$ sphinx-quickstart --project proj --sep --author me --release 1.0 --language en\r\n$ # https://google.com/test.txt does not exist, the server replies with a 404.\r\n$ echo '\\n`foo <https://google.com/test.txt#test>`_' >>source/index.rst\r\n$ make linkcheck\r\n```\r\n\r\n**Expected behavior**\r\n*Actual*\r\n```\r\n(line   22) broken    https://google.com/test.txt#test - Anchor 'test' not found\r\n```\r\n\r\n*Expected output*\r\nSame as when `linkcheck_anchors=False`.\r\n```\r\n(line   22) broken    https://google.com/test.txt#test - 404 Client Error: Not Found for url: https://google.com/test.txt\r\n``` \r\n\r\n**Environment info**\r\n- OS: Linux 5.8.12.a-1-hardened\r\n- Python version: 3.8.5\r\n- Sphinx version: 3.2.1\n",
  "hints_text": "",
  "created_at": "2020-10-03T11:08:37Z",
  "version": "3.3",
  "FAIL_TO_PASS": "[\"tests/test_build_linkcheck.py::test_raises_for_invalid_status\"]",
  "PASS_TO_PASS": "[\"tests/test_build_linkcheck.py::test_defaults\", \"tests/test_build_linkcheck.py::test_defaults_json\", \"tests/test_build_linkcheck.py::test_anchors_ignored\", \"tests/test_build_linkcheck.py::test_auth\", \"tests/test_build_linkcheck.py::test_linkcheck_request_headers\"]",
  "environment_setup_commit": "3b85187ffa3401e88582073c23188c147857a8a3",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.052922",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}