{
  "repo": "pydata/xarray",
  "instance_id": "pydata__xarray-6135",
  "base_commit": "48290fa14accd3ac87768d3f73d69493b82b0be6",
  "patch": "diff --git a/xarray/coding/cftime_offsets.py b/xarray/coding/cftime_offsets.py\n--- a/xarray/coding/cftime_offsets.py\n+++ b/xarray/coding/cftime_offsets.py\n@@ -39,11 +39,12 @@\n # THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n # (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n # OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+from __future__ import annotations\n \n import re\n from datetime import datetime, timedelta\n from functools import partial\n-from typing import ClassVar, Optional\n+from typing import ClassVar\n \n import numpy as np\n import pandas as pd\n@@ -87,10 +88,10 @@ def get_date_type(calendar, use_cftime=True):\n \n \n class BaseCFTimeOffset:\n-    _freq: ClassVar[Optional[str]] = None\n-    _day_option: ClassVar[Optional[str]] = None\n+    _freq: ClassVar[str | None] = None\n+    _day_option: ClassVar[str | None] = None\n \n-    def __init__(self, n=1):\n+    def __init__(self, n: int = 1):\n         if not isinstance(n, int):\n             raise TypeError(\n                 \"The provided multiple 'n' must be an integer. \"\n@@ -122,6 +123,8 @@ def __sub__(self, other):\n             return NotImplemented\n \n     def __mul__(self, other):\n+        if not isinstance(other, int):\n+            return NotImplemented\n         return type(self)(n=other * self.n)\n \n     def __neg__(self):\n@@ -171,6 +174,40 @@ def _get_offset_day(self, other):\n         return _get_day_of_month(other, self._day_option)\n \n \n+class Tick(BaseCFTimeOffset):\n+    # analogous https://github.com/pandas-dev/pandas/blob/ccb25ab1d24c4fb9691270706a59c8d319750870/pandas/_libs/tslibs/offsets.pyx#L806\n+\n+    def _next_higher_resolution(self):\n+        self_type = type(self)\n+        if self_type not in [Day, Hour, Minute, Second, Millisecond]:\n+            raise ValueError(\"Could not convert to integer offset at any resolution\")\n+        if type(self) is Day:\n+            return Hour(self.n * 24)\n+        if type(self) is Hour:\n+            return Minute(self.n * 60)\n+        if type(self) is Minute:\n+            return Second(self.n * 60)\n+        if type(self) is Second:\n+            return Millisecond(self.n * 1000)\n+        if type(self) is Millisecond:\n+            return Microsecond(self.n * 1000)\n+\n+    def __mul__(self, other):\n+        if not isinstance(other, (int, float)):\n+            return NotImplemented\n+        if isinstance(other, float):\n+            n = other * self.n\n+            # If the new `n` is an integer, we can represent it using the\n+            #  same BaseCFTimeOffset subclass as self, otherwise we need to move up\n+            #  to a higher-resolution subclass\n+            if np.isclose(n % 1, 0):\n+                return type(self)(int(n))\n+\n+            new_self = self._next_higher_resolution()\n+            return new_self * other\n+        return type(self)(n=other * self.n)\n+\n+\n def _get_day_of_month(other, day_option):\n     \"\"\"Find the day in `other`'s month that satisfies a BaseCFTimeOffset's\n     onOffset policy, as described by the `day_option` argument.\n@@ -396,6 +433,8 @@ def __sub__(self, other):\n             return NotImplemented\n \n     def __mul__(self, other):\n+        if isinstance(other, float):\n+            return NotImplemented\n         return type(self)(n=other * self.n, month=self.month)\n \n     def rule_code(self):\n@@ -482,6 +521,8 @@ def __sub__(self, other):\n             return NotImplemented\n \n     def __mul__(self, other):\n+        if isinstance(other, float):\n+            return NotImplemented\n         return type(self)(n=other * self.n, month=self.month)\n \n     def rule_code(self):\n@@ -541,7 +582,7 @@ def rollback(self, date):\n             return date - YearEnd(month=self.month)\n \n \n-class Day(BaseCFTimeOffset):\n+class Day(Tick):\n     _freq = \"D\"\n \n     def as_timedelta(self):\n@@ -551,7 +592,7 @@ def __apply__(self, other):\n         return other + self.as_timedelta()\n \n \n-class Hour(BaseCFTimeOffset):\n+class Hour(Tick):\n     _freq = \"H\"\n \n     def as_timedelta(self):\n@@ -561,7 +602,7 @@ def __apply__(self, other):\n         return other + self.as_timedelta()\n \n \n-class Minute(BaseCFTimeOffset):\n+class Minute(Tick):\n     _freq = \"T\"\n \n     def as_timedelta(self):\n@@ -571,7 +612,7 @@ def __apply__(self, other):\n         return other + self.as_timedelta()\n \n \n-class Second(BaseCFTimeOffset):\n+class Second(Tick):\n     _freq = \"S\"\n \n     def as_timedelta(self):\n@@ -581,7 +622,7 @@ def __apply__(self, other):\n         return other + self.as_timedelta()\n \n \n-class Millisecond(BaseCFTimeOffset):\n+class Millisecond(Tick):\n     _freq = \"L\"\n \n     def as_timedelta(self):\n@@ -591,7 +632,7 @@ def __apply__(self, other):\n         return other + self.as_timedelta()\n \n \n-class Microsecond(BaseCFTimeOffset):\n+class Microsecond(Tick):\n     _freq = \"U\"\n \n     def as_timedelta(self):\ndiff --git a/xarray/coding/cftimeindex.py b/xarray/coding/cftimeindex.py\n--- a/xarray/coding/cftimeindex.py\n+++ b/xarray/coding/cftimeindex.py\n@@ -38,11 +38,11 @@\n # THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n # (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n # OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+from __future__ import annotations\n \n import re\n import warnings\n from datetime import timedelta\n-from typing import Tuple, Type\n \n import numpy as np\n import pandas as pd\n@@ -66,7 +66,7 @@\n REPR_ELLIPSIS_SHOW_ITEMS_FRONT_END = 10\n \n \n-OUT_OF_BOUNDS_TIMEDELTA_ERRORS: Tuple[Type[Exception], ...]\n+OUT_OF_BOUNDS_TIMEDELTA_ERRORS: tuple[type[Exception], ...]\n try:\n     OUT_OF_BOUNDS_TIMEDELTA_ERRORS = (pd.errors.OutOfBoundsTimedelta, OverflowError)\n except AttributeError:\n@@ -511,7 +511,7 @@ def contains(self, key):\n         \"\"\"Needed for .loc based partial-string indexing\"\"\"\n         return self.__contains__(key)\n \n-    def shift(self, n, freq):\n+    def shift(self, n: int | float, freq: str | timedelta):\n         \"\"\"Shift the CFTimeIndex a multiple of the given frequency.\n \n         See the documentation for :py:func:`~xarray.cftime_range` for a\n@@ -519,7 +519,7 @@ def shift(self, n, freq):\n \n         Parameters\n         ----------\n-        n : int\n+        n : int, float if freq of days or below\n             Periods to shift by\n         freq : str or datetime.timedelta\n             A frequency string or datetime.timedelta object to shift by\n@@ -541,14 +541,15 @@ def shift(self, n, freq):\n         >>> index.shift(1, \"M\")\n         CFTimeIndex([2000-02-29 00:00:00],\n                     dtype='object', length=1, calendar='standard', freq=None)\n+        >>> index.shift(1.5, \"D\")\n+        CFTimeIndex([2000-02-01 12:00:00],\n+                    dtype='object', length=1, calendar='standard', freq=None)\n         \"\"\"\n-        from .cftime_offsets import to_offset\n-\n-        if not isinstance(n, int):\n-            raise TypeError(f\"'n' must be an int, got {n}.\")\n         if isinstance(freq, timedelta):\n             return self + n * freq\n         elif isinstance(freq, str):\n+            from .cftime_offsets import to_offset\n+\n             return self + n * to_offset(freq)\n         else:\n             raise TypeError(\n",
  "test_patch": "diff --git a/xarray/tests/test_cftime_offsets.py b/xarray/tests/test_cftime_offsets.py\n--- a/xarray/tests/test_cftime_offsets.py\n+++ b/xarray/tests/test_cftime_offsets.py\n@@ -18,6 +18,7 @@\n     QuarterBegin,\n     QuarterEnd,\n     Second,\n+    Tick,\n     YearBegin,\n     YearEnd,\n     _days_in_month,\n@@ -54,11 +55,25 @@ def calendar(request):\n         (YearEnd(), 1),\n         (QuarterBegin(), 1),\n         (QuarterEnd(), 1),\n+        (Tick(), 1),\n+        (Day(), 1),\n+        (Hour(), 1),\n+        (Minute(), 1),\n+        (Second(), 1),\n+        (Millisecond(), 1),\n+        (Microsecond(), 1),\n         (BaseCFTimeOffset(n=2), 2),\n         (YearBegin(n=2), 2),\n         (YearEnd(n=2), 2),\n         (QuarterBegin(n=2), 2),\n         (QuarterEnd(n=2), 2),\n+        (Tick(n=2), 2),\n+        (Day(n=2), 2),\n+        (Hour(n=2), 2),\n+        (Minute(n=2), 2),\n+        (Second(n=2), 2),\n+        (Millisecond(n=2), 2),\n+        (Microsecond(n=2), 2),\n     ],\n     ids=_id_func,\n )\n@@ -74,6 +89,15 @@ def test_cftime_offset_constructor_valid_n(offset, expected_n):\n         (YearEnd, 1.5),\n         (QuarterBegin, 1.5),\n         (QuarterEnd, 1.5),\n+        (MonthBegin, 1.5),\n+        (MonthEnd, 1.5),\n+        (Tick, 1.5),\n+        (Day, 1.5),\n+        (Hour, 1.5),\n+        (Minute, 1.5),\n+        (Second, 1.5),\n+        (Millisecond, 1.5),\n+        (Microsecond, 1.5),\n     ],\n     ids=_id_func,\n )\n@@ -359,30 +383,64 @@ def test_eq(a, b):\n \n \n _MUL_TESTS = [\n-    (BaseCFTimeOffset(), BaseCFTimeOffset(n=3)),\n-    (YearEnd(), YearEnd(n=3)),\n-    (YearBegin(), YearBegin(n=3)),\n-    (QuarterEnd(), QuarterEnd(n=3)),\n-    (QuarterBegin(), QuarterBegin(n=3)),\n-    (MonthEnd(), MonthEnd(n=3)),\n-    (MonthBegin(), MonthBegin(n=3)),\n-    (Day(), Day(n=3)),\n-    (Hour(), Hour(n=3)),\n-    (Minute(), Minute(n=3)),\n-    (Second(), Second(n=3)),\n-    (Millisecond(), Millisecond(n=3)),\n-    (Microsecond(), Microsecond(n=3)),\n+    (BaseCFTimeOffset(), 3, BaseCFTimeOffset(n=3)),\n+    (YearEnd(), 3, YearEnd(n=3)),\n+    (YearBegin(), 3, YearBegin(n=3)),\n+    (QuarterEnd(), 3, QuarterEnd(n=3)),\n+    (QuarterBegin(), 3, QuarterBegin(n=3)),\n+    (MonthEnd(), 3, MonthEnd(n=3)),\n+    (MonthBegin(), 3, MonthBegin(n=3)),\n+    (Tick(), 3, Tick(n=3)),\n+    (Day(), 3, Day(n=3)),\n+    (Hour(), 3, Hour(n=3)),\n+    (Minute(), 3, Minute(n=3)),\n+    (Second(), 3, Second(n=3)),\n+    (Millisecond(), 3, Millisecond(n=3)),\n+    (Microsecond(), 3, Microsecond(n=3)),\n+    (Day(), 0.5, Hour(n=12)),\n+    (Hour(), 0.5, Minute(n=30)),\n+    (Minute(), 0.5, Second(n=30)),\n+    (Second(), 0.5, Millisecond(n=500)),\n+    (Millisecond(), 0.5, Microsecond(n=500)),\n ]\n \n \n-@pytest.mark.parametrize((\"offset\", \"expected\"), _MUL_TESTS, ids=_id_func)\n-def test_mul(offset, expected):\n-    assert offset * 3 == expected\n+@pytest.mark.parametrize((\"offset\", \"multiple\", \"expected\"), _MUL_TESTS, ids=_id_func)\n+def test_mul(offset, multiple, expected):\n+    assert offset * multiple == expected\n \n \n-@pytest.mark.parametrize((\"offset\", \"expected\"), _MUL_TESTS, ids=_id_func)\n-def test_rmul(offset, expected):\n-    assert 3 * offset == expected\n+@pytest.mark.parametrize((\"offset\", \"multiple\", \"expected\"), _MUL_TESTS, ids=_id_func)\n+def test_rmul(offset, multiple, expected):\n+    assert multiple * offset == expected\n+\n+\n+def test_mul_float_multiple_next_higher_resolution():\n+    \"\"\"Test more than one iteration through _next_higher_resolution is required.\"\"\"\n+    assert 1e-6 * Second() == Microsecond()\n+    assert 1e-6 / 60 * Minute() == Microsecond()\n+\n+\n+@pytest.mark.parametrize(\n+    \"offset\",\n+    [YearBegin(), YearEnd(), QuarterBegin(), QuarterEnd(), MonthBegin(), MonthEnd()],\n+    ids=_id_func,\n+)\n+def test_nonTick_offset_multiplied_float_error(offset):\n+    \"\"\"Test that the appropriate error is raised if a non-Tick offset is\n+    multiplied by a float.\"\"\"\n+    with pytest.raises(TypeError, match=\"unsupported operand type\"):\n+        offset * 0.5\n+\n+\n+def test_Microsecond_multiplied_float_error():\n+    \"\"\"Test that the appropriate error is raised if a Tick offset is multiplied\n+    by a float which causes it not to be representable by a\n+    microsecond-precision timedelta.\"\"\"\n+    with pytest.raises(\n+        ValueError, match=\"Could not convert to integer offset at any resolution\"\n+    ):\n+        Microsecond() * 0.5\n \n \n @pytest.mark.parametrize(\ndiff --git a/xarray/tests/test_cftimeindex.py b/xarray/tests/test_cftimeindex.py\n--- a/xarray/tests/test_cftimeindex.py\n+++ b/xarray/tests/test_cftimeindex.py\n@@ -754,7 +754,7 @@ def test_cftimeindex_add(index):\n \n @requires_cftime\n @pytest.mark.parametrize(\"calendar\", _CFTIME_CALENDARS)\n-def test_cftimeindex_add_timedeltaindex(calendar):\n+def test_cftimeindex_add_timedeltaindex(calendar) -> None:\n     a = xr.cftime_range(\"2000\", periods=5, calendar=calendar)\n     deltas = pd.TimedeltaIndex([timedelta(days=2) for _ in range(5)])\n     result = a + deltas\n@@ -763,6 +763,44 @@ def test_cftimeindex_add_timedeltaindex(calendar):\n     assert isinstance(result, CFTimeIndex)\n \n \n+@requires_cftime\n+@pytest.mark.parametrize(\"n\", [2.0, 1.5])\n+@pytest.mark.parametrize(\n+    \"freq,units\",\n+    [\n+        (\"D\", \"D\"),\n+        (\"H\", \"H\"),\n+        (\"T\", \"min\"),\n+        (\"S\", \"S\"),\n+        (\"L\", \"ms\"),\n+    ],\n+)\n+@pytest.mark.parametrize(\"calendar\", _CFTIME_CALENDARS)\n+def test_cftimeindex_shift_float(n, freq, units, calendar) -> None:\n+    a = xr.cftime_range(\"2000\", periods=3, calendar=calendar, freq=\"D\")\n+    result = a + pd.Timedelta(n, units)\n+    expected = a.shift(n, freq)\n+    assert result.equals(expected)\n+    assert isinstance(result, CFTimeIndex)\n+\n+\n+@requires_cftime\n+def test_cftimeindex_shift_float_us() -> None:\n+    a = xr.cftime_range(\"2000\", periods=3, freq=\"D\")\n+    with pytest.raises(\n+        ValueError, match=\"Could not convert to integer offset at any resolution\"\n+    ):\n+        a.shift(2.5, \"us\")\n+\n+\n+@requires_cftime\n+@pytest.mark.parametrize(\"freq\", [\"AS\", \"A\", \"YS\", \"Y\", \"QS\", \"Q\", \"MS\", \"M\"])\n+def test_cftimeindex_shift_float_fails_for_non_tick_freqs(freq) -> None:\n+    a = xr.cftime_range(\"2000\", periods=3, freq=\"D\")\n+    with pytest.raises(TypeError, match=\"unsupported operand type\"):\n+        a.shift(2.5, freq)\n+\n+\n @requires_cftime\n def test_cftimeindex_radd(index):\n     date_type = index.date_type\n@@ -780,7 +818,7 @@ def test_cftimeindex_radd(index):\n \n @requires_cftime\n @pytest.mark.parametrize(\"calendar\", _CFTIME_CALENDARS)\n-def test_timedeltaindex_add_cftimeindex(calendar):\n+def test_timedeltaindex_add_cftimeindex(calendar) -> None:\n     a = xr.cftime_range(\"2000\", periods=5, calendar=calendar)\n     deltas = pd.TimedeltaIndex([timedelta(days=2) for _ in range(5)])\n     result = deltas + a\n@@ -828,7 +866,7 @@ def test_cftimeindex_sub_timedelta_array(index, other):\n \n @requires_cftime\n @pytest.mark.parametrize(\"calendar\", _CFTIME_CALENDARS)\n-def test_cftimeindex_sub_cftimeindex(calendar):\n+def test_cftimeindex_sub_cftimeindex(calendar) -> None:\n     a = xr.cftime_range(\"2000\", periods=5, calendar=calendar)\n     b = a.shift(2, \"D\")\n     result = b - a\n@@ -867,7 +905,7 @@ def test_distant_cftime_datetime_sub_cftimeindex(calendar):\n \n @requires_cftime\n @pytest.mark.parametrize(\"calendar\", _CFTIME_CALENDARS)\n-def test_cftimeindex_sub_timedeltaindex(calendar):\n+def test_cftimeindex_sub_timedeltaindex(calendar) -> None:\n     a = xr.cftime_range(\"2000\", periods=5, calendar=calendar)\n     deltas = pd.TimedeltaIndex([timedelta(days=2) for _ in range(5)])\n     result = a - deltas\n@@ -903,7 +941,7 @@ def test_cftimeindex_rsub(index):\n \n @requires_cftime\n @pytest.mark.parametrize(\"freq\", [\"D\", timedelta(days=1)])\n-def test_cftimeindex_shift(index, freq):\n+def test_cftimeindex_shift(index, freq) -> None:\n     date_type = index.date_type\n     expected_dates = [\n         date_type(1, 1, 3),\n@@ -918,14 +956,14 @@ def test_cftimeindex_shift(index, freq):\n \n \n @requires_cftime\n-def test_cftimeindex_shift_invalid_n():\n+def test_cftimeindex_shift_invalid_n() -> None:\n     index = xr.cftime_range(\"2000\", periods=3)\n     with pytest.raises(TypeError):\n         index.shift(\"a\", \"D\")\n \n \n @requires_cftime\n-def test_cftimeindex_shift_invalid_freq():\n+def test_cftimeindex_shift_invalid_freq() -> None:\n     index = xr.cftime_range(\"2000\", periods=3)\n     with pytest.raises(TypeError):\n         index.shift(1, 1)\n",
  "problem_statement": "[FEATURE]: `CFTimeIndex.shift(float)`\n### Is your feature request related to a problem?\n\n`CFTimeIndex.shift()` allows only `int` but sometimes I'd like to shift by a float e.g. 0.5.\r\n\r\nFor small freqs, that shouldnt be a problem as `pd.Timedelta` allows floats for `days` and below.\r\nFor freqs of months and larger, it becomes more tricky. Fractional shifts work for `calendar=360` easily, for other `calendar`s thats not possible.\n\n### Describe the solution you'd like\n\n`CFTimeIndex.shift(0.5, 'D')`\r\n`CFTimeIndex.shift(0.5, 'M')` for 360day calendar\r\n`CFTimeIndex.shift(0.5, 'M')` for other calendars fails\r\n\n\n### Describe alternatives you've considered\n\nsolution we have in climpred: https://github.com/pangeo-data/climpred/blob/617223b5bea23a094065efe46afeeafe9796fa97/climpred/utils.py#L657\n\n### Additional context\n\nhttps://xarray.pydata.org/en/stable/generated/xarray.CFTimeIndex.shift.html\n",
  "hints_text": "For shift intervals that can be represented as timedeltas this seems reasonably straightforward to add.  I would hold off for monthly or annual intervals -- even for 360-day calendars, I don't think that non-integer shift factors are very well-defined in that context, since those frequencies involve rounding, e.g. to the beginnings or ends of months:\r\n```\r\nIn [2]: times = xr.cftime_range(\"2000\", freq=\"7D\", periods=7)\r\n\r\nIn [3]: times\r\nOut[3]:\r\nCFTimeIndex([2000-01-01 00:00:00, 2000-01-08 00:00:00, 2000-01-15 00:00:00,\r\n             2000-01-22 00:00:00, 2000-01-29 00:00:00, 2000-02-05 00:00:00,\r\n             2000-02-12 00:00:00],\r\n            dtype='object', length=7, calendar='gregorian', freq='7D')\r\n\r\nIn [4]: times.shift(2, \"M\")\r\nOut[4]:\r\nCFTimeIndex([2000-02-29 00:00:00, 2000-02-29 00:00:00, 2000-02-29 00:00:00,\r\n             2000-02-29 00:00:00, 2000-02-29 00:00:00, 2000-03-31 00:00:00,\r\n             2000-03-31 00:00:00],\r\n            dtype='object', length=7, calendar='gregorian', freq='None')\r\n```",
  "created_at": "2022-01-04T15:28:16Z",
  "version": "0.20",
  "FAIL_TO_PASS": "[\"xarray/tests/test_cftimeindex.py::test_parse_iso8601_like[year]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_like[month]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_like[month-dash]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_like[day]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_like[day-dash]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_like[hour]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_like[hour-dash]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_like[hour-space-separator]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_like[minute]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_like[minute-dash]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_like[minute-space-separator]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_like[second]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_like[second-dash]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_like[second-space-separator]\"]",
  "PASS_TO_PASS": "[\"xarray/tests/test_cftime_offsets.py::test_cftime_offset_constructor_valid_n[<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_offset_constructor_valid_n[<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_offset_constructor_valid_n[<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_offset_constructor_valid_n[<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_offset_constructor_valid_n[<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_offset_constructor_valid_n[<Tick:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_offset_constructor_valid_n[<Day:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_offset_constructor_valid_n[<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_offset_constructor_valid_n[<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_offset_constructor_valid_n[<Second:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_offset_constructor_valid_n[<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_offset_constructor_valid_n[<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_offset_constructor_invalid_n[<class\", \"xarray/tests/test_cftime_offsets.py::test_year_offset_constructor_valid_month[<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_year_offset_constructor_valid_month[<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_year_offset_constructor_valid_month[<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_year_offset_constructor_valid_month[<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_year_offset_constructor_invalid_month[<class\", \"xarray/tests/test_cftime_offsets.py::test_rule_code[<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_rule_code[<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rule_code[<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rule_code[<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_str_and_repr[<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_str_and_repr[<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_str_and_repr[<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_offset_input[<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_offset_input[<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_offset_input[<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_offset_input[<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[M-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[2M-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[MS-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[2MS-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[D-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[2D-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[H-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[2H-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[T-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[2T-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[min-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[2min-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[S-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[2S-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[L-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[2L-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[ms-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[2ms-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[U-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[2U-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[us-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_sub_annual[2us-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-None-1-JAN]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-None-2-FEB]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-None-3-MAR]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-None-4-APR]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-None-5-MAY]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-None-6-JUN]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-None-7-JUL]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-None-8-AUG]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-None-9-SEP]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-None-10-OCT]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-None-11-NOV]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-None-12-DEC]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-None-0-]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-2-1-JAN]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-2-2-FEB]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-2-3-MAR]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-2-4-APR]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-2-5-MAY]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-2-6-JUN]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-2-7-JUL]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-2-8-AUG]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-2-9-SEP]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-2-10-OCT]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-2-11-NOV]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-2-12-DEC]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[AS-2-0-]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-None-1-JAN]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-None-2-FEB]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-None-3-MAR]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-None-4-APR]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-None-5-MAY]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-None-6-JUN]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-None-7-JUL]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-None-8-AUG]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-None-9-SEP]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-None-10-OCT]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-None-11-NOV]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-None-12-DEC]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-None-0-]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-2-1-JAN]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-2-2-FEB]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-2-3-MAR]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-2-4-APR]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-2-5-MAY]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-2-6-JUN]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-2-7-JUL]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-2-8-AUG]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-2-9-SEP]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-2-10-OCT]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-2-11-NOV]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-2-12-DEC]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_annual[A-2-0-]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-None-1-JAN]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-None-2-FEB]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-None-3-MAR]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-None-4-APR]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-None-5-MAY]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-None-6-JUN]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-None-7-JUL]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-None-8-AUG]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-None-9-SEP]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-None-10-OCT]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-None-11-NOV]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-None-12-DEC]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-None-0-]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-2-1-JAN]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-2-2-FEB]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-2-3-MAR]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-2-4-APR]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-2-5-MAY]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-2-6-JUN]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-2-7-JUL]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-2-8-AUG]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-2-9-SEP]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-2-10-OCT]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-2-11-NOV]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-2-12-DEC]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[QS-2-0-]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-None-1-JAN]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-None-2-FEB]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-None-3-MAR]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-None-4-APR]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-None-5-MAY]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-None-6-JUN]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-None-7-JUL]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-None-8-AUG]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-None-9-SEP]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-None-10-OCT]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-None-11-NOV]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-None-12-DEC]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-None-0-]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-2-1-JAN]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-2-2-FEB]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-2-3-MAR]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-2-4-APR]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-2-5-MAY]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-2-6-JUN]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-2-7-JUL]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-2-8-AUG]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-2-9-SEP]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-2-10-OCT]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-2-11-NOV]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-2-12-DEC]\", \"xarray/tests/test_cftime_offsets.py::test_to_offset_quarter[Q-2-0-]\", \"xarray/tests/test_cftime_offsets.py::test_invalid_to_offset_str[Z]\", \"xarray/tests/test_cftime_offsets.py::test_invalid_to_offset_str[7min2]\", \"xarray/tests/test_cftime_offsets.py::test_invalid_to_offset_str[AM]\", \"xarray/tests/test_cftime_offsets.py::test_invalid_to_offset_str[M-]\", \"xarray/tests/test_cftime_offsets.py::test_invalid_to_offset_str[AS-]\", \"xarray/tests/test_cftime_offsets.py::test_invalid_to_offset_str[QS-]\", \"xarray/tests/test_cftime_offsets.py::test_invalid_to_offset_str[1H1min]\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime[365_day-2000-01-01-(2000,\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime[365_day-(2000,\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime[360_day-2000-01-01-(2000,\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime[360_day-(2000,\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime[julian-2000-01-01-(2000,\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime[julian-(2000,\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime[all_leap-2000-01-01-(2000,\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime[all_leap-(2000,\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime[366_day-2000-01-01-(2000,\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime[366_day-(2000,\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime[gregorian-2000-01-01-(2000,\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime[gregorian-(2000,\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime[proleptic_gregorian-2000-01-01-(2000,\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime[proleptic_gregorian-(2000,\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime[standard-2000-01-01-(2000,\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime[standard-(2000,\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime_error_no_calendar\", \"xarray/tests/test_cftime_offsets.py::test_to_cftime_datetime_error_type_error\", \"xarray/tests/test_cftime_offsets.py::test_neq[<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_neq[<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_neq[<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_neq[<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_neq[<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_neq[<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_neq[<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_neq[<Day:\", \"xarray/tests/test_cftime_offsets.py::test_neq[<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_neq[<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_neq[<Second:\", \"xarray/tests/test_cftime_offsets.py::test_neq[<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_neq[<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_eq[<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_eq[<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_eq[<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_eq[<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_eq[<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_eq[<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_eq[<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_eq[<Day:\", \"xarray/tests/test_cftime_offsets.py::test_eq[<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_eq[<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_eq[<Second:\", \"xarray/tests/test_cftime_offsets.py::test_eq[<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_eq[<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_mul[<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_mul[<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_mul[<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_mul[<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_mul[<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_mul[<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_mul[<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_mul[<Tick:\", \"xarray/tests/test_cftime_offsets.py::test_mul[<Day:\", \"xarray/tests/test_cftime_offsets.py::test_mul[<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_mul[<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_mul[<Second:\", \"xarray/tests/test_cftime_offsets.py::test_mul[<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_mul[<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rmul[<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_rmul[<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rmul[<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rmul[<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rmul[<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rmul[<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rmul[<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rmul[<Tick:\", \"xarray/tests/test_cftime_offsets.py::test_rmul[<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rmul[<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rmul[<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rmul[<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rmul[<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rmul[<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_mul_float_multiple_next_higher_resolution\", \"xarray/tests/test_cftime_offsets.py::test_nonTick_offset_multiplied_float_error[<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_nonTick_offset_multiplied_float_error[<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_nonTick_offset_multiplied_float_error[<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_nonTick_offset_multiplied_float_error[<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_nonTick_offset_multiplied_float_error[<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_nonTick_offset_multiplied_float_error[<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_Microsecond_multiplied_float_error\", \"xarray/tests/test_cftime_offsets.py::test_neg[<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_neg[<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_neg[<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_neg[<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_neg[<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_neg[<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_neg[<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_neg[<Day:\", \"xarray/tests/test_cftime_offsets.py::test_neg[<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_neg[<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_neg[<Second:\", \"xarray/tests/test_cftime_offsets.py::test_neg[<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_neg[<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[365_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[365_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[365_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[365_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[365_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[365_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[360_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[360_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[360_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[360_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[360_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[360_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[julian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[julian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[julian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[julian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[julian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[julian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[all_leap-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[all_leap-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[all_leap-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[all_leap-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[all_leap-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[all_leap-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[366_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[366_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[366_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[366_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[366_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[366_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[gregorian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[gregorian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[gregorian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[gregorian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[gregorian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[gregorian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[proleptic_gregorian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[proleptic_gregorian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[proleptic_gregorian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[proleptic_gregorian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[proleptic_gregorian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[proleptic_gregorian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[standard-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[standard-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[standard-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[standard-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[standard-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_add_sub_monthly[standard-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[365_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[365_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[365_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[365_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[365_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[365_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[360_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[360_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[360_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[360_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[360_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[360_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[julian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[julian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[julian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[julian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[julian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[julian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[all_leap-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[all_leap-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[all_leap-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[all_leap-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[all_leap-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[all_leap-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[366_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[366_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[366_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[366_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[366_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[366_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[gregorian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[gregorian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[gregorian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[gregorian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[gregorian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[gregorian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[proleptic_gregorian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[proleptic_gregorian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[proleptic_gregorian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[proleptic_gregorian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[proleptic_gregorian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[proleptic_gregorian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[standard-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[standard-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[standard-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[standard-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[standard-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_radd_sub_monthly[standard-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[365_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[365_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[365_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[365_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[365_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[365_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[360_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[360_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[360_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[360_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[360_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[360_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[julian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[julian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[julian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[julian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[julian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[julian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[all_leap-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[all_leap-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[all_leap-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[all_leap-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[all_leap-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[all_leap-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[366_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[366_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[366_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[366_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[366_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[366_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[gregorian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[gregorian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[gregorian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[gregorian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[gregorian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[gregorian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[proleptic_gregorian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[proleptic_gregorian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[proleptic_gregorian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[proleptic_gregorian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[proleptic_gregorian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[proleptic_gregorian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[standard-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[standard-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[standard-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[standard-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[standard-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rsub_sub_monthly[standard-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[365_day-<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[365_day-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[365_day-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[365_day-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[365_day-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[365_day-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[365_day-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[365_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[365_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[365_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[365_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[365_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[365_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[360_day-<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[360_day-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[360_day-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[360_day-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[360_day-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[360_day-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[360_day-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[360_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[360_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[360_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[360_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[360_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[360_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[julian-<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[julian-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[julian-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[julian-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[julian-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[julian-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[julian-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[julian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[julian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[julian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[julian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[julian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[julian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[all_leap-<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[all_leap-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[all_leap-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[all_leap-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[all_leap-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[all_leap-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[all_leap-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[all_leap-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[all_leap-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[all_leap-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[all_leap-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[all_leap-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[all_leap-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[366_day-<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[366_day-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[366_day-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[366_day-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[366_day-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[366_day-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[366_day-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[366_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[366_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[366_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[366_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[366_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[366_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[gregorian-<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[gregorian-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[gregorian-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[gregorian-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[gregorian-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[gregorian-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[gregorian-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[gregorian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[gregorian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[gregorian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[gregorian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[gregorian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[gregorian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[proleptic_gregorian-<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[proleptic_gregorian-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[proleptic_gregorian-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[proleptic_gregorian-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[proleptic_gregorian-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[proleptic_gregorian-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[proleptic_gregorian-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[proleptic_gregorian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[proleptic_gregorian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[proleptic_gregorian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[proleptic_gregorian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[proleptic_gregorian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[proleptic_gregorian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[standard-<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[standard-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[standard-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[standard-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[standard-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[standard-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[standard-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[standard-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[standard-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[standard-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[standard-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[standard-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_sub_error[standard-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset[<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset[<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset[<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset[<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset[<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset[<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset[<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset[<Day:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset[<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset[<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset[<Second:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset[<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset[<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset_error[<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset_error[<BaseCFTimeOffset:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset_error[<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset_error[<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset_error[<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset_error[<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset_error[<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset_error[<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset_error[<Day:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset_error[<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset_error[<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset_error[<Second:\", \"xarray/tests/test_cftime_offsets.py::test_minus_offset_error[<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_days_in_month_non_december[365_day]\", \"xarray/tests/test_cftime_offsets.py::test_days_in_month_non_december[360_day]\", \"xarray/tests/test_cftime_offsets.py::test_days_in_month_non_december[julian]\", \"xarray/tests/test_cftime_offsets.py::test_days_in_month_non_december[all_leap]\", \"xarray/tests/test_cftime_offsets.py::test_days_in_month_non_december[366_day]\", \"xarray/tests/test_cftime_offsets.py::test_days_in_month_non_december[gregorian]\", \"xarray/tests/test_cftime_offsets.py::test_days_in_month_non_december[proleptic_gregorian]\", \"xarray/tests/test_cftime_offsets.py::test_days_in_month_non_december[standard]\", \"xarray/tests/test_cftime_offsets.py::test_days_in_month_december[365_day]\", \"xarray/tests/test_cftime_offsets.py::test_days_in_month_december[360_day]\", \"xarray/tests/test_cftime_offsets.py::test_days_in_month_december[julian]\", \"xarray/tests/test_cftime_offsets.py::test_days_in_month_december[all_leap]\", \"xarray/tests/test_cftime_offsets.py::test_days_in_month_december[366_day]\", \"xarray/tests/test_cftime_offsets.py::test_days_in_month_december[gregorian]\", \"xarray/tests/test_cftime_offsets.py::test_days_in_month_december[proleptic_gregorian]\", \"xarray/tests/test_cftime_offsets.py::test_days_in_month_december[standard]\", \"xarray/tests/test_cftime_offsets.py::test_add_month_begin[365_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_begin[365_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_begin[360_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_begin[360_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_begin[julian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_begin[julian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_begin[all_leap-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_begin[all_leap-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_begin[366_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_begin[366_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_begin[gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_begin[gregorian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_begin[proleptic_gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_begin[proleptic_gregorian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_begin[standard-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_begin[standard-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end[365_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end[365_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end[360_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end[360_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end[julian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end[julian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end[all_leap-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end[all_leap-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end[366_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end[366_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end[gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end[gregorian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end[proleptic_gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end[proleptic_gregorian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end[standard-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end[standard-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end_onOffset[365_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end_onOffset[365_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end_onOffset[360_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end_onOffset[360_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end_onOffset[julian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end_onOffset[julian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end_onOffset[all_leap-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end_onOffset[all_leap-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end_onOffset[366_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end_onOffset[366_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end_onOffset[gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end_onOffset[gregorian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end_onOffset[proleptic_gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end_onOffset[proleptic_gregorian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end_onOffset[standard-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_month_end_onOffset[standard-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_begin[365_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_begin[365_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_begin[360_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_begin[360_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_begin[julian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_begin[julian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_begin[all_leap-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_begin[all_leap-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_begin[366_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_begin[366_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_begin[gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_begin[gregorian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_begin[proleptic_gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_begin[proleptic_gregorian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_begin[standard-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_begin[standard-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end[365_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end[365_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end[360_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end[360_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end[julian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end[julian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end[all_leap-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end[all_leap-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end[366_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end[366_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end[gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end[gregorian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end[proleptic_gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end[proleptic_gregorian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end[standard-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end[standard-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[365_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[365_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[365_day-(3,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[360_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[360_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[360_day-(3,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[julian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[julian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[julian-(3,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[all_leap-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[all_leap-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[all_leap-(3,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[366_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[366_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[366_day-(3,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[gregorian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[gregorian-(3,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[proleptic_gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[proleptic_gregorian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[proleptic_gregorian-(3,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[standard-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[standard-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_year_end_onOffset[standard-(3,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_begin[365_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_begin[365_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_begin[360_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_begin[360_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_begin[julian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_begin[julian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_begin[all_leap-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_begin[all_leap-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_begin[366_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_begin[366_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_begin[gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_begin[gregorian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_begin[proleptic_gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_begin[proleptic_gregorian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_begin[standard-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_begin[standard-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end[365_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end[365_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end[360_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end[360_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end[julian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end[julian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end[all_leap-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end[all_leap-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end[366_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end[366_day-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end[gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end[gregorian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end[proleptic_gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end[proleptic_gregorian-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end[standard-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end[standard-(2,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end_onOffset[365_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end_onOffset[360_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end_onOffset[julian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end_onOffset[all_leap-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end_onOffset[366_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end_onOffset[gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end_onOffset[proleptic_gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_add_quarter_end_onOffset[standard-(1,\", \"xarray/tests/test_cftime_offsets.py::test_onOffset[365_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_onOffset[360_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_onOffset[julian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_onOffset[all_leap-(1,\", \"xarray/tests/test_cftime_offsets.py::test_onOffset[366_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_onOffset[gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_onOffset[proleptic_gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_onOffset[standard-(1,\", \"xarray/tests/test_cftime_offsets.py::test_onOffset_month_or_quarter_or_year_end[365_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_onOffset_month_or_quarter_or_year_end[360_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_onOffset_month_or_quarter_or_year_end[julian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_onOffset_month_or_quarter_or_year_end[all_leap-(1,\", \"xarray/tests/test_cftime_offsets.py::test_onOffset_month_or_quarter_or_year_end[366_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_onOffset_month_or_quarter_or_year_end[gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_onOffset_month_or_quarter_or_year_end[proleptic_gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_onOffset_month_or_quarter_or_year_end[standard-(1,\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[365_day-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[365_day-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[365_day-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[365_day-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[365_day-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[365_day-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[365_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[365_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[365_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[365_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[365_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[365_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[360_day-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[360_day-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[360_day-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[360_day-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[360_day-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[360_day-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[360_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[360_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[360_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[360_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[360_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[360_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[julian-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[julian-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[julian-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[julian-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[julian-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[julian-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[julian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[julian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[julian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[julian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[julian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[julian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[all_leap-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[all_leap-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[all_leap-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[all_leap-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[all_leap-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[all_leap-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[all_leap-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[all_leap-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[all_leap-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[all_leap-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[all_leap-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[all_leap-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[366_day-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[366_day-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[366_day-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[366_day-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[366_day-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[366_day-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[366_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[366_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[366_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[366_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[366_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[366_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[gregorian-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[gregorian-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[gregorian-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[gregorian-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[gregorian-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[gregorian-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[gregorian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[gregorian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[gregorian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[gregorian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[gregorian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[gregorian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[proleptic_gregorian-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[proleptic_gregorian-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[proleptic_gregorian-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[proleptic_gregorian-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[proleptic_gregorian-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[proleptic_gregorian-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[proleptic_gregorian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[proleptic_gregorian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[proleptic_gregorian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[proleptic_gregorian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[proleptic_gregorian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[proleptic_gregorian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[standard-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[standard-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[standard-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[standard-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[standard-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[standard-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[standard-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[standard-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[standard-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[standard-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[standard-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollforward[standard-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[365_day-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[365_day-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[365_day-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[365_day-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[365_day-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[365_day-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[365_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[365_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[365_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[365_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[365_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[365_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[360_day-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[360_day-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[360_day-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[360_day-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[360_day-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[360_day-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[360_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[360_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[360_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[360_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[360_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[360_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[julian-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[julian-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[julian-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[julian-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[julian-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[julian-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[julian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[julian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[julian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[julian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[julian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[julian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[all_leap-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[all_leap-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[all_leap-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[all_leap-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[all_leap-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[all_leap-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[all_leap-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[all_leap-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[all_leap-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[all_leap-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[all_leap-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[all_leap-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[366_day-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[366_day-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[366_day-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[366_day-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[366_day-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[366_day-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[366_day-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[366_day-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[366_day-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[366_day-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[366_day-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[366_day-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[gregorian-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[gregorian-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[gregorian-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[gregorian-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[gregorian-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[gregorian-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[gregorian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[gregorian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[gregorian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[gregorian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[gregorian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[gregorian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[proleptic_gregorian-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[proleptic_gregorian-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[proleptic_gregorian-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[proleptic_gregorian-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[proleptic_gregorian-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[proleptic_gregorian-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[proleptic_gregorian-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[proleptic_gregorian-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[proleptic_gregorian-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[proleptic_gregorian-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[proleptic_gregorian-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[proleptic_gregorian-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[standard-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[standard-<YearEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[standard-<QuarterBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[standard-<QuarterEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[standard-<MonthBegin:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[standard-<MonthEnd:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[standard-<Day:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[standard-<Hour:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[standard-<Minute:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[standard-<Second:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[standard-<Millisecond:\", \"xarray/tests/test_cftime_offsets.py::test_rollback[standard-<Microsecond:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[365_day-0001-01-01-0001-01-04-None-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[365_day-0001-01-01-0001-01-04-None-D-left-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[365_day-0001-01-01-0001-01-04-None-D-right-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[365_day-0001-01-01T01:00:00-0001-01-04-None-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[365_day-0001-01-01\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[365_day-0001-01-01T01:00:00-0001-01-04-None-D-None-True-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[365_day-0001-01-01-None-4-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[365_day-None-0001-01-04-4-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[365_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[365_day-0001-01-30-0011-02-01-None-3AS-JUN-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[365_day-0001-01-04-0001-01-01-None-D-None-False-[]]\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[365_day-0010-None-4-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[365_day-0001-01-01-0001-01-04-4-None-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[365_day-0001-06-01-None-4-3QS-JUN-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[360_day-0001-01-01-0001-01-04-None-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[360_day-0001-01-01-0001-01-04-None-D-left-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[360_day-0001-01-01-0001-01-04-None-D-right-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[360_day-0001-01-01T01:00:00-0001-01-04-None-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[360_day-0001-01-01\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[360_day-0001-01-01T01:00:00-0001-01-04-None-D-None-True-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[360_day-0001-01-01-None-4-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[360_day-None-0001-01-04-4-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[360_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[360_day-0001-01-30-0011-02-01-None-3AS-JUN-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[360_day-0001-01-04-0001-01-01-None-D-None-False-[]]\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[360_day-0010-None-4-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[360_day-0001-01-01-0001-01-04-4-None-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[360_day-0001-06-01-None-4-3QS-JUN-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[julian-0001-01-01-0001-01-04-None-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[julian-0001-01-01-0001-01-04-None-D-left-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[julian-0001-01-01-0001-01-04-None-D-right-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[julian-0001-01-01T01:00:00-0001-01-04-None-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[julian-0001-01-01\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[julian-0001-01-01T01:00:00-0001-01-04-None-D-None-True-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[julian-0001-01-01-None-4-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[julian-None-0001-01-04-4-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[julian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[julian-0001-01-30-0011-02-01-None-3AS-JUN-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[julian-0001-01-04-0001-01-01-None-D-None-False-[]]\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[julian-0010-None-4-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[julian-0001-01-01-0001-01-04-4-None-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[julian-0001-06-01-None-4-3QS-JUN-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[all_leap-0001-01-01-0001-01-04-None-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[all_leap-0001-01-01-0001-01-04-None-D-left-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[all_leap-0001-01-01-0001-01-04-None-D-right-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[all_leap-0001-01-01T01:00:00-0001-01-04-None-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[all_leap-0001-01-01\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[all_leap-0001-01-01T01:00:00-0001-01-04-None-D-None-True-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[all_leap-0001-01-01-None-4-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[all_leap-None-0001-01-04-4-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[all_leap-(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[all_leap-0001-01-30-0011-02-01-None-3AS-JUN-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[all_leap-0001-01-04-0001-01-01-None-D-None-False-[]]\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[all_leap-0010-None-4-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[all_leap-0001-01-01-0001-01-04-4-None-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[all_leap-0001-06-01-None-4-3QS-JUN-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[366_day-0001-01-01-0001-01-04-None-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[366_day-0001-01-01-0001-01-04-None-D-left-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[366_day-0001-01-01-0001-01-04-None-D-right-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[366_day-0001-01-01T01:00:00-0001-01-04-None-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[366_day-0001-01-01\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[366_day-0001-01-01T01:00:00-0001-01-04-None-D-None-True-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[366_day-0001-01-01-None-4-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[366_day-None-0001-01-04-4-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[366_day-(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[366_day-0001-01-30-0011-02-01-None-3AS-JUN-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[366_day-0001-01-04-0001-01-01-None-D-None-False-[]]\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[366_day-0010-None-4-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[366_day-0001-01-01-0001-01-04-4-None-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[366_day-0001-06-01-None-4-3QS-JUN-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[gregorian-0001-01-01-0001-01-04-None-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[gregorian-0001-01-01-0001-01-04-None-D-left-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[gregorian-0001-01-01-0001-01-04-None-D-right-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[gregorian-0001-01-01T01:00:00-0001-01-04-None-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[gregorian-0001-01-01\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[gregorian-0001-01-01T01:00:00-0001-01-04-None-D-None-True-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[gregorian-0001-01-01-None-4-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[gregorian-None-0001-01-04-4-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[gregorian-0001-01-30-0011-02-01-None-3AS-JUN-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[gregorian-0001-01-04-0001-01-01-None-D-None-False-[]]\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[gregorian-0010-None-4-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[gregorian-0001-01-01-0001-01-04-4-None-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[gregorian-0001-06-01-None-4-3QS-JUN-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[proleptic_gregorian-0001-01-01-0001-01-04-None-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[proleptic_gregorian-0001-01-01-0001-01-04-None-D-left-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[proleptic_gregorian-0001-01-01-0001-01-04-None-D-right-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[proleptic_gregorian-0001-01-01T01:00:00-0001-01-04-None-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[proleptic_gregorian-0001-01-01\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[proleptic_gregorian-0001-01-01T01:00:00-0001-01-04-None-D-None-True-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[proleptic_gregorian-0001-01-01-None-4-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[proleptic_gregorian-None-0001-01-04-4-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[proleptic_gregorian-(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[proleptic_gregorian-0001-01-30-0011-02-01-None-3AS-JUN-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[proleptic_gregorian-0001-01-04-0001-01-01-None-D-None-False-[]]\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[proleptic_gregorian-0010-None-4-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[proleptic_gregorian-0001-01-01-0001-01-04-4-None-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[proleptic_gregorian-0001-06-01-None-4-3QS-JUN-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[standard-0001-01-01-0001-01-04-None-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[standard-0001-01-01-0001-01-04-None-D-left-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[standard-0001-01-01-0001-01-04-None-D-right-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[standard-0001-01-01T01:00:00-0001-01-04-None-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[standard-0001-01-01\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[standard-0001-01-01T01:00:00-0001-01-04-None-D-None-True-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[standard-0001-01-01-None-4-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[standard-None-0001-01-04-4-D-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[standard-(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[standard-0001-01-30-0011-02-01-None-3AS-JUN-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[standard-0001-01-04-0001-01-01-None-D-None-False-[]]\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[standard-0010-None-4-<YearBegin:\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[standard-0001-01-01-0001-01-04-4-None-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range[standard-0001-06-01-None-4-3QS-JUN-None-False-[(1,\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range_name\", \"xarray/tests/test_cftime_offsets.py::test_invalid_cftime_range_inputs[None-None-5-A-None]\", \"xarray/tests/test_cftime_offsets.py::test_invalid_cftime_range_inputs[2000-None-None-A-None]\", \"xarray/tests/test_cftime_offsets.py::test_invalid_cftime_range_inputs[None-2000-None-A-None]\", \"xarray/tests/test_cftime_offsets.py::test_invalid_cftime_range_inputs[2000-2001-None-None-None]\", \"xarray/tests/test_cftime_offsets.py::test_invalid_cftime_range_inputs[None-None-None-None-None]\", \"xarray/tests/test_cftime_offsets.py::test_invalid_cftime_range_inputs[2000-2001-None-A-up]\", \"xarray/tests/test_cftime_offsets.py::test_invalid_cftime_range_inputs[2000-2001-5-A-None]\", \"xarray/tests/test_cftime_offsets.py::test_calendar_specific_month_end[2M-noleap-[(2,\", \"xarray/tests/test_cftime_offsets.py::test_calendar_specific_month_end[2M-all_leap-[(2,\", \"xarray/tests/test_cftime_offsets.py::test_calendar_specific_month_end[2M-360_day-[(2,\", \"xarray/tests/test_cftime_offsets.py::test_calendar_specific_month_end[2M-standard-[(2,\", \"xarray/tests/test_cftime_offsets.py::test_calendar_specific_month_end[2M-gregorian-[(2,\", \"xarray/tests/test_cftime_offsets.py::test_calendar_specific_month_end[2M-julian-[(2,\", \"xarray/tests/test_cftime_offsets.py::test_calendar_year_length[noleap-2000-2001-365]\", \"xarray/tests/test_cftime_offsets.py::test_calendar_year_length[all_leap-2000-2001-366]\", \"xarray/tests/test_cftime_offsets.py::test_calendar_year_length[360_day-2000-2001-360]\", \"xarray/tests/test_cftime_offsets.py::test_calendar_year_length[standard-2000-2001-366]\", \"xarray/tests/test_cftime_offsets.py::test_calendar_year_length[gregorian-2000-2001-366]\", \"xarray/tests/test_cftime_offsets.py::test_calendar_year_length[julian-2000-2001-366]\", \"xarray/tests/test_cftime_offsets.py::test_calendar_year_length[noleap-2001-2002-365]\", \"xarray/tests/test_cftime_offsets.py::test_calendar_year_length[all_leap-2001-2002-366]\", \"xarray/tests/test_cftime_offsets.py::test_calendar_year_length[360_day-2001-2002-360]\", \"xarray/tests/test_cftime_offsets.py::test_calendar_year_length[standard-2001-2002-365]\", \"xarray/tests/test_cftime_offsets.py::test_calendar_year_length[gregorian-2001-2002-365]\", \"xarray/tests/test_cftime_offsets.py::test_calendar_year_length[julian-2001-2002-365]\", \"xarray/tests/test_cftime_offsets.py::test_dayofweek_after_cftime_range[A]\", \"xarray/tests/test_cftime_offsets.py::test_dayofweek_after_cftime_range[M]\", \"xarray/tests/test_cftime_offsets.py::test_dayofweek_after_cftime_range[D]\", \"xarray/tests/test_cftime_offsets.py::test_dayofyear_after_cftime_range[A]\", \"xarray/tests/test_cftime_offsets.py::test_dayofyear_after_cftime_range[M]\", \"xarray/tests/test_cftime_offsets.py::test_dayofyear_after_cftime_range[D]\", \"xarray/tests/test_cftime_offsets.py::test_cftime_range_standard_calendar_refers_to_gregorian\", \"xarray/tests/test_cftime_offsets.py::test_date_range[1990-01-01-standard-None-DatetimeIndex]\", \"xarray/tests/test_cftime_offsets.py::test_date_range[1990-01-01-proleptic_gregorian-True-CFTimeIndex]\", \"xarray/tests/test_cftime_offsets.py::test_date_range[1990-01-01-noleap-None-CFTimeIndex]\", \"xarray/tests/test_cftime_offsets.py::test_date_range[1990-01-01-gregorian-False-DatetimeIndex]\", \"xarray/tests/test_cftime_offsets.py::test_date_range[1400-01-01-standard-None-CFTimeIndex]\", \"xarray/tests/test_cftime_offsets.py::test_date_range[3400-01-01-standard-None-CFTimeIndex]\", \"xarray/tests/test_cftime_offsets.py::test_date_range_errors\", \"xarray/tests/test_cftime_offsets.py::test_date_range_like[2020-02-01-4M-standard-noleap-None-2020-02-28-False]\", \"xarray/tests/test_cftime_offsets.py::test_date_range_like[2020-02-01-M-noleap-gregorian-True-2020-02-29-True]\", \"xarray/tests/test_cftime_offsets.py::test_date_range_like[2020-02-28-3H-all_leap-gregorian-False-2020-02-28-True]\", \"xarray/tests/test_cftime_offsets.py::test_date_range_like[2020-03-30-M-360_day-gregorian-False-2020-03-31-True]\", \"xarray/tests/test_cftime_offsets.py::test_date_range_like[2020-03-31-M-gregorian-360_day-None-2020-03-30-False]\", \"xarray/tests/test_cftime_offsets.py::test_date_range_like_same_calendar\", \"xarray/tests/test_cftime_offsets.py::test_date_range_like_errors\", \"xarray/tests/test_cftimeindex.py::test_constructor_with_name[365_day-bar-bar]\", \"xarray/tests/test_cftimeindex.py::test_constructor_with_name[365_day-None-foo]\", \"xarray/tests/test_cftimeindex.py::test_constructor_with_name[360_day-bar-bar]\", \"xarray/tests/test_cftimeindex.py::test_constructor_with_name[360_day-None-foo]\", \"xarray/tests/test_cftimeindex.py::test_constructor_with_name[julian-bar-bar]\", \"xarray/tests/test_cftimeindex.py::test_constructor_with_name[julian-None-foo]\", \"xarray/tests/test_cftimeindex.py::test_constructor_with_name[all_leap-bar-bar]\", \"xarray/tests/test_cftimeindex.py::test_constructor_with_name[all_leap-None-foo]\", \"xarray/tests/test_cftimeindex.py::test_constructor_with_name[366_day-bar-bar]\", \"xarray/tests/test_cftimeindex.py::test_constructor_with_name[366_day-None-foo]\", \"xarray/tests/test_cftimeindex.py::test_constructor_with_name[gregorian-bar-bar]\", \"xarray/tests/test_cftimeindex.py::test_constructor_with_name[gregorian-None-foo]\", \"xarray/tests/test_cftimeindex.py::test_constructor_with_name[proleptic_gregorian-bar-bar]\", \"xarray/tests/test_cftimeindex.py::test_constructor_with_name[proleptic_gregorian-None-foo]\", \"xarray/tests/test_cftimeindex.py::test_assert_all_valid_date_type[365_day]\", \"xarray/tests/test_cftimeindex.py::test_assert_all_valid_date_type[360_day]\", \"xarray/tests/test_cftimeindex.py::test_assert_all_valid_date_type[julian]\", \"xarray/tests/test_cftimeindex.py::test_assert_all_valid_date_type[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_assert_all_valid_date_type[366_day]\", \"xarray/tests/test_cftimeindex.py::test_assert_all_valid_date_type[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_assert_all_valid_date_type[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[365_day-year-expected0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[365_day-month-expected1]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[365_day-day-expected2]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[365_day-hour-expected3]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[365_day-minute-expected4]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[365_day-second-expected5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[365_day-microsecond-expected6]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[360_day-year-expected0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[360_day-month-expected1]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[360_day-day-expected2]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[360_day-hour-expected3]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[360_day-minute-expected4]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[360_day-second-expected5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[360_day-microsecond-expected6]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[julian-year-expected0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[julian-month-expected1]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[julian-day-expected2]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[julian-hour-expected3]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[julian-minute-expected4]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[julian-second-expected5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[julian-microsecond-expected6]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[all_leap-year-expected0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[all_leap-month-expected1]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[all_leap-day-expected2]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[all_leap-hour-expected3]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[all_leap-minute-expected4]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[all_leap-second-expected5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[all_leap-microsecond-expected6]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[366_day-year-expected0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[366_day-month-expected1]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[366_day-day-expected2]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[366_day-hour-expected3]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[366_day-minute-expected4]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[366_day-second-expected5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[366_day-microsecond-expected6]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[gregorian-year-expected0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[gregorian-month-expected1]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[gregorian-day-expected2]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[gregorian-hour-expected3]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[gregorian-minute-expected4]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[gregorian-second-expected5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[gregorian-microsecond-expected6]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[proleptic_gregorian-year-expected0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[proleptic_gregorian-month-expected1]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[proleptic_gregorian-day-expected2]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[proleptic_gregorian-hour-expected3]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[proleptic_gregorian-minute-expected4]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[proleptic_gregorian-second-expected5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_field_accessors[proleptic_gregorian-microsecond-expected6]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_dayofyear_accessor[365_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_dayofyear_accessor[360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_dayofyear_accessor[julian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_dayofyear_accessor[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_dayofyear_accessor[366_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_dayofyear_accessor[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_dayofyear_accessor[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_dayofweek_accessor[365_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_dayofweek_accessor[360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_dayofweek_accessor[julian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_dayofweek_accessor[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_dayofweek_accessor[366_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_dayofweek_accessor[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_dayofweek_accessor[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_days_in_month_accessor[365_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_days_in_month_accessor[360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_days_in_month_accessor[julian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_days_in_month_accessor[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_days_in_month_accessor[366_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_days_in_month_accessor[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_days_in_month_accessor[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[365_day-1999-date_args0-year]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[365_day-199902-date_args1-month]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[365_day-19990202-date_args2-day]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[365_day-19990202T01-date_args3-hour]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[365_day-19990202T0101-date_args4-minute]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[365_day-19990202T010156-date_args5-second]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[360_day-1999-date_args0-year]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[360_day-199902-date_args1-month]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[360_day-19990202-date_args2-day]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[360_day-19990202T01-date_args3-hour]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[360_day-19990202T0101-date_args4-minute]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[360_day-19990202T010156-date_args5-second]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[julian-1999-date_args0-year]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[julian-199902-date_args1-month]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[julian-19990202-date_args2-day]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[julian-19990202T01-date_args3-hour]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[julian-19990202T0101-date_args4-minute]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[julian-19990202T010156-date_args5-second]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[all_leap-1999-date_args0-year]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[all_leap-199902-date_args1-month]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[all_leap-19990202-date_args2-day]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[all_leap-19990202T01-date_args3-hour]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[all_leap-19990202T0101-date_args4-minute]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[all_leap-19990202T010156-date_args5-second]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[366_day-1999-date_args0-year]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[366_day-199902-date_args1-month]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[366_day-19990202-date_args2-day]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[366_day-19990202T01-date_args3-hour]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[366_day-19990202T0101-date_args4-minute]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[366_day-19990202T010156-date_args5-second]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[gregorian-1999-date_args0-year]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[gregorian-199902-date_args1-month]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[gregorian-19990202-date_args2-day]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[gregorian-19990202T01-date_args3-hour]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[gregorian-19990202T0101-date_args4-minute]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[gregorian-19990202T010156-date_args5-second]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[proleptic_gregorian-1999-date_args0-year]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[proleptic_gregorian-199902-date_args1-month]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[proleptic_gregorian-19990202-date_args2-day]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[proleptic_gregorian-19990202T01-date_args3-hour]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[proleptic_gregorian-19990202T0101-date_args4-minute]\", \"xarray/tests/test_cftimeindex.py::test_parse_iso8601_with_reso[proleptic_gregorian-19990202T010156-date_args5-second]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_year[365_day]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_year[360_day]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_year[julian]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_year[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_year[366_day]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_year[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_year[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_month_feb[365_day]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_month_feb[360_day]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_month_feb[julian]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_month_feb[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_month_feb[366_day]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_month_feb[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_month_feb[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_month_dec[365_day]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_month_dec[360_day]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_month_dec[julian]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_month_dec[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_month_dec[366_day]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_month_dec[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_parse_string_to_bounds_month_dec[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[365_day-day-ex_start_args0-ex_end_args0]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[365_day-hour-ex_start_args1-ex_end_args1]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[365_day-minute-ex_start_args2-ex_end_args2]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[365_day-second-ex_start_args3-ex_end_args3]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[360_day-day-ex_start_args0-ex_end_args0]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[360_day-hour-ex_start_args1-ex_end_args1]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[360_day-minute-ex_start_args2-ex_end_args2]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[360_day-second-ex_start_args3-ex_end_args3]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[julian-day-ex_start_args0-ex_end_args0]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[julian-hour-ex_start_args1-ex_end_args1]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[julian-minute-ex_start_args2-ex_end_args2]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[julian-second-ex_start_args3-ex_end_args3]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[all_leap-day-ex_start_args0-ex_end_args0]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[all_leap-hour-ex_start_args1-ex_end_args1]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[all_leap-minute-ex_start_args2-ex_end_args2]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[all_leap-second-ex_start_args3-ex_end_args3]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[366_day-day-ex_start_args0-ex_end_args0]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[366_day-hour-ex_start_args1-ex_end_args1]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[366_day-minute-ex_start_args2-ex_end_args2]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[366_day-second-ex_start_args3-ex_end_args3]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[gregorian-day-ex_start_args0-ex_end_args0]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[gregorian-hour-ex_start_args1-ex_end_args1]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[gregorian-minute-ex_start_args2-ex_end_args2]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[gregorian-second-ex_start_args3-ex_end_args3]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[proleptic_gregorian-day-ex_start_args0-ex_end_args0]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[proleptic_gregorian-hour-ex_start_args1-ex_end_args1]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[proleptic_gregorian-minute-ex_start_args2-ex_end_args2]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_sub_monthly[proleptic_gregorian-second-ex_start_args3-ex_end_args3]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_raises[365_day]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_raises[360_day]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_raises[julian]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_raises[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_raises[366_day]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_raises[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_parsed_string_to_bounds_raises[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_get_loc[365_day]\", \"xarray/tests/test_cftimeindex.py::test_get_loc[360_day]\", \"xarray/tests/test_cftimeindex.py::test_get_loc[julian]\", \"xarray/tests/test_cftimeindex.py::test_get_loc[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_get_loc[366_day]\", \"xarray/tests/test_cftimeindex.py::test_get_loc[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_get_loc[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound[365_day]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound[360_day]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound[julian]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound[366_day]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound_decreasing_index[365_day]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound_decreasing_index[360_day]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound_decreasing_index[julian]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound_decreasing_index[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound_decreasing_index[366_day]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound_decreasing_index[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound_decreasing_index[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound_length_one_index[365_day]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound_length_one_index[360_day]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound_length_one_index[julian]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound_length_one_index[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound_length_one_index[366_day]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound_length_one_index[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_get_slice_bound_length_one_index[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_string_slice_length_one_index[365_day]\", \"xarray/tests/test_cftimeindex.py::test_string_slice_length_one_index[360_day]\", \"xarray/tests/test_cftimeindex.py::test_string_slice_length_one_index[julian]\", \"xarray/tests/test_cftimeindex.py::test_string_slice_length_one_index[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_string_slice_length_one_index[366_day]\", \"xarray/tests/test_cftimeindex.py::test_string_slice_length_one_index[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_string_slice_length_one_index[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_date_type_property[365_day]\", \"xarray/tests/test_cftimeindex.py::test_date_type_property[360_day]\", \"xarray/tests/test_cftimeindex.py::test_date_type_property[julian]\", \"xarray/tests/test_cftimeindex.py::test_date_type_property[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_date_type_property[366_day]\", \"xarray/tests/test_cftimeindex.py::test_date_type_property[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_date_type_property[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_contains[365_day]\", \"xarray/tests/test_cftimeindex.py::test_contains[360_day]\", \"xarray/tests/test_cftimeindex.py::test_contains[julian]\", \"xarray/tests/test_cftimeindex.py::test_contains[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_contains[366_day]\", \"xarray/tests/test_cftimeindex.py::test_contains[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_contains[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_groupby[365_day]\", \"xarray/tests/test_cftimeindex.py::test_groupby[360_day]\", \"xarray/tests/test_cftimeindex.py::test_groupby[julian]\", \"xarray/tests/test_cftimeindex.py::test_groupby[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_groupby[366_day]\", \"xarray/tests/test_cftimeindex.py::test_groupby[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_groupby[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[365_day-string]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[365_day-string-slice]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[365_day-bool-list]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[360_day-string]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[360_day-string-slice]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[360_day-bool-list]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[julian-string]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[julian-string-slice]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[julian-bool-list]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[all_leap-string]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[all_leap-string-slice]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[all_leap-bool-list]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[366_day-string]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[366_day-string-slice]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[366_day-bool-list]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[gregorian-string]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[gregorian-string-slice]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[gregorian-bool-list]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[proleptic_gregorian-string]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[proleptic_gregorian-string-slice]\", \"xarray/tests/test_cftimeindex.py::test_sel_string_or_list[proleptic_gregorian-bool-list]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_slice_or_list[365_day]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_slice_or_list[360_day]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_slice_or_list[julian]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_slice_or_list[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_slice_or_list[366_day]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_slice_or_list[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_slice_or_list[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar[365_day]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar[360_day]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar[julian]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar[366_day]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_distant_date[365_day]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_distant_date[360_day]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_distant_date[julian]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_distant_date[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_distant_date[366_day]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_distant_date[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_distant_date[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[365_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[365_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[365_day-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[360_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[360_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[360_day-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[julian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[julian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[julian-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[all_leap-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[all_leap-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[all_leap-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[366_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[366_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[366_day-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[gregorian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[gregorian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[gregorian-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[proleptic_gregorian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[proleptic_gregorian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_nearest[proleptic_gregorian-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_pad[365_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_pad[365_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_pad[360_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_pad[360_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_pad[julian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_pad[julian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_pad[all_leap-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_pad[all_leap-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_pad[366_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_pad[366_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_pad[gregorian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_pad[gregorian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_pad[proleptic_gregorian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_pad[proleptic_gregorian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_backfill[365_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_backfill[365_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_backfill[360_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_backfill[360_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_backfill[julian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_backfill[julian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_backfill[all_leap-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_backfill[all_leap-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_backfill[366_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_backfill[366_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_backfill[gregorian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_backfill[gregorian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_backfill[proleptic_gregorian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_backfill[proleptic_gregorian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[365_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[365_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[365_day-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[360_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[360_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[360_day-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[julian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[julian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[julian-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[all_leap-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[all_leap-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[all_leap-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[366_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[366_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[366_day-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[gregorian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[gregorian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[gregorian-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[proleptic_gregorian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[proleptic_gregorian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_scalar_tolerance_raises[proleptic_gregorian-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_nearest[365_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_nearest[365_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_nearest[360_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_nearest[360_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_nearest[julian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_nearest[julian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_nearest[all_leap-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_nearest[all_leap-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_nearest[366_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_nearest[366_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_nearest[gregorian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_nearest[gregorian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_nearest[proleptic_gregorian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_nearest[proleptic_gregorian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_pad[365_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_pad[365_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_pad[360_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_pad[360_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_pad[julian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_pad[julian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_pad[all_leap-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_pad[all_leap-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_pad[366_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_pad[366_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_pad[gregorian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_pad[gregorian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_pad[proleptic_gregorian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_pad[proleptic_gregorian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_backfill[365_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_backfill[365_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_backfill[360_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_backfill[360_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_backfill[julian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_backfill[julian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_backfill[all_leap-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_backfill[all_leap-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_backfill[366_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_backfill[366_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_backfill[gregorian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_backfill[gregorian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_backfill[proleptic_gregorian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_backfill[proleptic_gregorian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[365_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[365_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[365_day-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[360_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[360_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[360_day-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[julian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[julian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[julian-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[all_leap-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[all_leap-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[all_leap-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[366_day-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[366_day-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[366_day-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[gregorian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[gregorian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[gregorian-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[proleptic_gregorian-sel_kwargs0]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[proleptic_gregorian-sel_kwargs1]\", \"xarray/tests/test_cftimeindex.py::test_sel_date_list_tolerance_raises[proleptic_gregorian-sel_kwargs2]\", \"xarray/tests/test_cftimeindex.py::test_isel[365_day]\", \"xarray/tests/test_cftimeindex.py::test_isel[360_day]\", \"xarray/tests/test_cftimeindex.py::test_isel[julian]\", \"xarray/tests/test_cftimeindex.py::test_isel[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_isel[366_day]\", \"xarray/tests/test_cftimeindex.py::test_isel[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_isel[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_getitem[365_day]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_getitem[360_day]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_getitem[julian]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_getitem[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_getitem[366_day]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_getitem[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_getitem[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_loc[365_day]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_loc[360_day]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_loc[julian]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_loc[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_loc[366_day]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_loc[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_loc[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_iloc[365_day]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_iloc[360_day]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_iloc[julian]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_iloc[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_iloc[366_day]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_iloc[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_series_iloc[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_series_dropna[365_day]\", \"xarray/tests/test_cftimeindex.py::test_series_dropna[360_day]\", \"xarray/tests/test_cftimeindex.py::test_series_dropna[julian]\", \"xarray/tests/test_cftimeindex.py::test_series_dropna[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_series_dropna[366_day]\", \"xarray/tests/test_cftimeindex.py::test_series_dropna[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_series_dropna[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_dataframe_loc[365_day]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_dataframe_loc[360_day]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_dataframe_loc[julian]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_dataframe_loc[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_dataframe_loc[366_day]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_dataframe_loc[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_dataframe_loc[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_dataframe_iloc[365_day]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_dataframe_iloc[360_day]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_dataframe_iloc[julian]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_dataframe_iloc[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_dataframe_iloc[366_day]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_dataframe_iloc[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_indexing_in_dataframe_iloc[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_concat_cftimeindex[365_day]\", \"xarray/tests/test_cftimeindex.py::test_concat_cftimeindex[360_day]\", \"xarray/tests/test_cftimeindex.py::test_concat_cftimeindex[julian]\", \"xarray/tests/test_cftimeindex.py::test_concat_cftimeindex[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_concat_cftimeindex[366_day]\", \"xarray/tests/test_cftimeindex.py::test_concat_cftimeindex[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_concat_cftimeindex[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_empty_cftimeindex\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_add[365_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_add[360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_add[julian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_add[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_add[366_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_add[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_add[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_add_timedeltaindex[365_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_add_timedeltaindex[360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_add_timedeltaindex[julian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_add_timedeltaindex[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_add_timedeltaindex[366_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_add_timedeltaindex[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_add_timedeltaindex[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[365_day-D-D-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[365_day-D-D-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[365_day-H-H-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[365_day-H-H-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[365_day-T-min-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[365_day-T-min-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[365_day-S-S-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[365_day-S-S-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[365_day-L-ms-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[365_day-L-ms-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[360_day-D-D-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[360_day-D-D-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[360_day-H-H-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[360_day-H-H-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[360_day-T-min-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[360_day-T-min-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[360_day-S-S-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[360_day-S-S-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[360_day-L-ms-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[360_day-L-ms-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[julian-D-D-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[julian-D-D-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[julian-H-H-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[julian-H-H-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[julian-T-min-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[julian-T-min-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[julian-S-S-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[julian-S-S-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[julian-L-ms-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[julian-L-ms-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[all_leap-D-D-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[all_leap-D-D-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[all_leap-H-H-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[all_leap-H-H-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[all_leap-T-min-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[all_leap-T-min-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[all_leap-S-S-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[all_leap-S-S-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[all_leap-L-ms-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[all_leap-L-ms-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[366_day-D-D-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[366_day-D-D-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[366_day-H-H-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[366_day-H-H-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[366_day-T-min-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[366_day-T-min-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[366_day-S-S-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[366_day-S-S-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[366_day-L-ms-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[366_day-L-ms-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[gregorian-D-D-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[gregorian-D-D-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[gregorian-H-H-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[gregorian-H-H-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[gregorian-T-min-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[gregorian-T-min-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[gregorian-S-S-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[gregorian-S-S-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[gregorian-L-ms-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[gregorian-L-ms-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[proleptic_gregorian-D-D-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[proleptic_gregorian-D-D-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[proleptic_gregorian-H-H-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[proleptic_gregorian-H-H-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[proleptic_gregorian-T-min-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[proleptic_gregorian-T-min-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[proleptic_gregorian-S-S-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[proleptic_gregorian-S-S-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[proleptic_gregorian-L-ms-2.0]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float[proleptic_gregorian-L-ms-1.5]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float_us\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float_fails_for_non_tick_freqs[AS]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float_fails_for_non_tick_freqs[A]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float_fails_for_non_tick_freqs[YS]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float_fails_for_non_tick_freqs[Y]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float_fails_for_non_tick_freqs[QS]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float_fails_for_non_tick_freqs[Q]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float_fails_for_non_tick_freqs[MS]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_float_fails_for_non_tick_freqs[M]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_radd[365_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_radd[360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_radd[julian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_radd[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_radd[366_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_radd[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_radd[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_timedeltaindex_add_cftimeindex[365_day]\", \"xarray/tests/test_cftimeindex.py::test_timedeltaindex_add_cftimeindex[360_day]\", \"xarray/tests/test_cftimeindex.py::test_timedeltaindex_add_cftimeindex[julian]\", \"xarray/tests/test_cftimeindex.py::test_timedeltaindex_add_cftimeindex[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_timedeltaindex_add_cftimeindex[366_day]\", \"xarray/tests/test_cftimeindex.py::test_timedeltaindex_add_cftimeindex[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_timedeltaindex_add_cftimeindex[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta[365_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta[360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta[julian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta[366_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta_array[365_day-1d-array]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta_array[365_day-scalar-array]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta_array[360_day-1d-array]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta_array[360_day-scalar-array]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta_array[julian-1d-array]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta_array[julian-scalar-array]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta_array[all_leap-1d-array]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta_array[all_leap-scalar-array]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta_array[366_day-1d-array]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta_array[366_day-scalar-array]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta_array[gregorian-1d-array]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta_array[gregorian-scalar-array]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta_array[proleptic_gregorian-1d-array]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedelta_array[proleptic_gregorian-scalar-array]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_cftimeindex[365_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_cftimeindex[360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_cftimeindex[julian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_cftimeindex[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_cftimeindex[366_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_cftimeindex[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_cftimeindex[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_cftime_datetime[365_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_cftime_datetime[360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_cftime_datetime[julian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_cftime_datetime[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_cftime_datetime[366_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_cftime_datetime[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_cftime_datetime[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftime_datetime_sub_cftimeindex[365_day]\", \"xarray/tests/test_cftimeindex.py::test_cftime_datetime_sub_cftimeindex[360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftime_datetime_sub_cftimeindex[julian]\", \"xarray/tests/test_cftimeindex.py::test_cftime_datetime_sub_cftimeindex[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_cftime_datetime_sub_cftimeindex[366_day]\", \"xarray/tests/test_cftimeindex.py::test_cftime_datetime_sub_cftimeindex[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftime_datetime_sub_cftimeindex[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_distant_cftime_datetime_sub_cftimeindex[365_day]\", \"xarray/tests/test_cftimeindex.py::test_distant_cftime_datetime_sub_cftimeindex[360_day]\", \"xarray/tests/test_cftimeindex.py::test_distant_cftime_datetime_sub_cftimeindex[julian]\", \"xarray/tests/test_cftimeindex.py::test_distant_cftime_datetime_sub_cftimeindex[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_distant_cftime_datetime_sub_cftimeindex[366_day]\", \"xarray/tests/test_cftimeindex.py::test_distant_cftime_datetime_sub_cftimeindex[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_distant_cftime_datetime_sub_cftimeindex[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedeltaindex[365_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedeltaindex[360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedeltaindex[julian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedeltaindex[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedeltaindex[366_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedeltaindex[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_timedeltaindex[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_index_of_cftime_datetimes[365_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_index_of_cftime_datetimes[360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_index_of_cftime_datetimes[julian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_index_of_cftime_datetimes[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_index_of_cftime_datetimes[366_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_index_of_cftime_datetimes[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_index_of_cftime_datetimes[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_not_implemented[365_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_not_implemented[360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_not_implemented[julian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_not_implemented[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_not_implemented[366_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_not_implemented[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_sub_not_implemented[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_rsub[365_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_rsub[360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_rsub[julian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_rsub[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_rsub[366_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_rsub[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_rsub[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift[365_day-D]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift[365_day-freq1]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift[360_day-D]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift[360_day-freq1]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift[julian-D]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift[julian-freq1]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift[all_leap-D]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift[all_leap-freq1]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift[366_day-D]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift[366_day-freq1]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift[gregorian-D]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift[gregorian-freq1]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift[proleptic_gregorian-D]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift[proleptic_gregorian-freq1]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_invalid_n\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_shift_invalid_freq\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_calendar_property[noleap-noleap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_calendar_property[365_day-noleap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_calendar_property[360_day-360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_calendar_property[julian-julian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_calendar_property[gregorian-standard]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_calendar_property[standard-standard]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_calendar_property[proleptic_gregorian-proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_calendar_repr[noleap-noleap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_calendar_repr[365_day-noleap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_calendar_repr[360_day-360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_calendar_repr[julian-julian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_calendar_repr[gregorian-standard]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_calendar_repr[standard-standard]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_calendar_repr[proleptic_gregorian-proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_periods_repr[2]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_periods_repr[40]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_freq_in_repr[D-noleap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_freq_in_repr[D-360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_freq_in_repr[D-standard]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_freq_in_repr[H-noleap]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_freq_in_repr[H-360_day]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_freq_in_repr[H-standard]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting[2-CFTimeIndex([2000-01-01\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting[4-CFTimeIndex([2000-01-01\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting[101-CFTimeIndex([2000-01-01\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting_width[2-40]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting_width[2-80]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting_width[2-100]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting_width[3-40]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting_width[3-80]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting_width[3-100]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting_width[4-40]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting_width[4-80]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting_width[4-100]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting_width[100-40]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting_width[100-80]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting_width[100-100]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting_width[101-40]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting_width[101-80]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_formatting_width[101-100]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_101_shorter[22]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_101_shorter[50]\", \"xarray/tests/test_cftimeindex.py::test_cftimeindex_repr_101_shorter[100]\", \"xarray/tests/test_cftimeindex.py::test_parse_array_of_cftime_strings\", \"xarray/tests/test_cftimeindex.py::test_strftime_of_cftime_array[360_day]\", \"xarray/tests/test_cftimeindex.py::test_strftime_of_cftime_array[365_day]\", \"xarray/tests/test_cftimeindex.py::test_strftime_of_cftime_array[366_day]\", \"xarray/tests/test_cftimeindex.py::test_strftime_of_cftime_array[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_strftime_of_cftime_array[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_strftime_of_cftime_array[julian]\", \"xarray/tests/test_cftimeindex.py::test_strftime_of_cftime_array[noleap]\", \"xarray/tests/test_cftimeindex.py::test_strftime_of_cftime_array[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_strftime_of_cftime_array[standard]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[False-360_day]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[False-365_day]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[False-366_day]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[False-all_leap]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[False-gregorian]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[False-julian]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[False-noleap]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[False-proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[False-standard]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[True-360_day]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[True-365_day]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[True-366_day]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[True-all_leap]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[True-gregorian]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[True-julian]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[True-noleap]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[True-proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex[True-standard]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex_out_of_range[360_day]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex_out_of_range[365_day]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex_out_of_range[366_day]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex_out_of_range[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex_out_of_range[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex_out_of_range[julian]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex_out_of_range[noleap]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex_out_of_range[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex_out_of_range[standard]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex_feb_29[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_to_datetimeindex_feb_29[360_day]\", \"xarray/tests/test_cftimeindex.py::test_rounding_methods_against_datetimeindex[floor-3663S]\", \"xarray/tests/test_cftimeindex.py::test_rounding_methods_against_datetimeindex[floor-33T]\", \"xarray/tests/test_cftimeindex.py::test_rounding_methods_against_datetimeindex[floor-2H]\", \"xarray/tests/test_cftimeindex.py::test_rounding_methods_against_datetimeindex[ceil-3663S]\", \"xarray/tests/test_cftimeindex.py::test_rounding_methods_against_datetimeindex[ceil-33T]\", \"xarray/tests/test_cftimeindex.py::test_rounding_methods_against_datetimeindex[ceil-2H]\", \"xarray/tests/test_cftimeindex.py::test_rounding_methods_against_datetimeindex[round-3663S]\", \"xarray/tests/test_cftimeindex.py::test_rounding_methods_against_datetimeindex[round-33T]\", \"xarray/tests/test_cftimeindex.py::test_rounding_methods_against_datetimeindex[round-2H]\", \"xarray/tests/test_cftimeindex.py::test_rounding_methods_invalid_freq[floor]\", \"xarray/tests/test_cftimeindex.py::test_rounding_methods_invalid_freq[ceil]\", \"xarray/tests/test_cftimeindex.py::test_rounding_methods_invalid_freq[round]\", \"xarray/tests/test_cftimeindex.py::test_ceil[365_day]\", \"xarray/tests/test_cftimeindex.py::test_ceil[360_day]\", \"xarray/tests/test_cftimeindex.py::test_ceil[julian]\", \"xarray/tests/test_cftimeindex.py::test_ceil[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_ceil[366_day]\", \"xarray/tests/test_cftimeindex.py::test_ceil[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_ceil[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_floor[365_day]\", \"xarray/tests/test_cftimeindex.py::test_floor[360_day]\", \"xarray/tests/test_cftimeindex.py::test_floor[julian]\", \"xarray/tests/test_cftimeindex.py::test_floor[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_floor[366_day]\", \"xarray/tests/test_cftimeindex.py::test_floor[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_floor[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_round[365_day]\", \"xarray/tests/test_cftimeindex.py::test_round[360_day]\", \"xarray/tests/test_cftimeindex.py::test_round[julian]\", \"xarray/tests/test_cftimeindex.py::test_round[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_round[366_day]\", \"xarray/tests/test_cftimeindex.py::test_round[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_round[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_asi8[365_day]\", \"xarray/tests/test_cftimeindex.py::test_asi8[360_day]\", \"xarray/tests/test_cftimeindex.py::test_asi8[julian]\", \"xarray/tests/test_cftimeindex.py::test_asi8[all_leap]\", \"xarray/tests/test_cftimeindex.py::test_asi8[366_day]\", \"xarray/tests/test_cftimeindex.py::test_asi8[gregorian]\", \"xarray/tests/test_cftimeindex.py::test_asi8[proleptic_gregorian]\", \"xarray/tests/test_cftimeindex.py::test_asi8_distant_date\", \"xarray/tests/test_cftimeindex.py::test_infer_freq_valid_types\", \"xarray/tests/test_cftimeindex.py::test_infer_freq_invalid_inputs\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[365_day-300AS-JAN]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[365_day-A-DEC]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[365_day-AS-JUL]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[365_day-2AS-FEB]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[365_day-Q-NOV]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[365_day-3QS-DEC]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[365_day-MS]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[365_day-4M]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[365_day-7D]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[365_day-D]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[365_day-30H]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[365_day-5T]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[365_day-40S]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[360_day-300AS-JAN]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[360_day-A-DEC]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[360_day-AS-JUL]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[360_day-2AS-FEB]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[360_day-Q-NOV]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[360_day-3QS-DEC]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[360_day-MS]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[360_day-4M]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[360_day-7D]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[360_day-D]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[360_day-30H]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[360_day-5T]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[360_day-40S]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[julian-300AS-JAN]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[julian-A-DEC]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[julian-AS-JUL]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[julian-2AS-FEB]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[julian-Q-NOV]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[julian-3QS-DEC]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[julian-MS]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[julian-4M]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[julian-7D]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[julian-D]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[julian-30H]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[julian-5T]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[julian-40S]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[all_leap-300AS-JAN]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[all_leap-A-DEC]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[all_leap-AS-JUL]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[all_leap-2AS-FEB]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[all_leap-Q-NOV]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[all_leap-3QS-DEC]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[all_leap-MS]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[all_leap-4M]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[all_leap-7D]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[all_leap-D]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[all_leap-30H]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[all_leap-5T]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[all_leap-40S]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[366_day-300AS-JAN]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[366_day-A-DEC]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[366_day-AS-JUL]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[366_day-2AS-FEB]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[366_day-Q-NOV]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[366_day-3QS-DEC]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[366_day-MS]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[366_day-4M]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[366_day-7D]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[366_day-D]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[366_day-30H]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[366_day-5T]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[366_day-40S]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[gregorian-300AS-JAN]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[gregorian-A-DEC]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[gregorian-AS-JUL]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[gregorian-2AS-FEB]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[gregorian-Q-NOV]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[gregorian-3QS-DEC]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[gregorian-MS]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[gregorian-4M]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[gregorian-7D]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[gregorian-D]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[gregorian-30H]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[gregorian-5T]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[gregorian-40S]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[proleptic_gregorian-300AS-JAN]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[proleptic_gregorian-A-DEC]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[proleptic_gregorian-AS-JUL]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[proleptic_gregorian-2AS-FEB]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[proleptic_gregorian-Q-NOV]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[proleptic_gregorian-3QS-DEC]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[proleptic_gregorian-MS]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[proleptic_gregorian-4M]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[proleptic_gregorian-7D]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[proleptic_gregorian-D]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[proleptic_gregorian-30H]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[proleptic_gregorian-5T]\", \"xarray/tests/test_cftimeindex.py::test_infer_freq[proleptic_gregorian-40S]\"]",
  "environment_setup_commit": "8f42bfd3a5fd0b1a351b535be207ed4771b02c8b",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.891396",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}