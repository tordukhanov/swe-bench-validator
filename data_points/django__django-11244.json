{
  "repo": "django/django",
  "instance_id": "django__django-11244",
  "base_commit": "0c916255eb4d94e06e123fafec93efdba45b1259",
  "patch": "diff --git a/django/core/checks/translation.py b/django/core/checks/translation.py\n--- a/django/core/checks/translation.py\n+++ b/django/core/checks/translation.py\n@@ -24,12 +24,6 @@\n     id='translation.E004',\n )\n \n-E005 = Error(\n-    'You have provided values in the LANGUAGES_BIDI setting that are not in '\n-    'the LANGUAGES setting.',\n-    id='translation.E005',\n-)\n-\n \n @register(Tags.translation)\n def check_setting_language_code(app_configs, **kwargs):\n@@ -62,9 +56,6 @@ def check_setting_languages_bidi(app_configs, **kwargs):\n def check_language_settings_consistent(app_configs, **kwargs):\n     \"\"\"Error if language settings are not consistent with each other.\"\"\"\n     available_tags = {i for i, _ in settings.LANGUAGES} | {'en-us'}\n-    messages = []\n     if settings.LANGUAGE_CODE not in available_tags:\n-        messages.append(E004)\n-    if not available_tags.issuperset(settings.LANGUAGES_BIDI):\n-        messages.append(E005)\n-    return messages\n+        return [E004]\n+    return []\n",
  "test_patch": "diff --git a/tests/check_framework/test_translation.py b/tests/check_framework/test_translation.py\n--- a/tests/check_framework/test_translation.py\n+++ b/tests/check_framework/test_translation.py\n@@ -80,15 +80,7 @@ def test_inconsistent_language_settings(self):\n             'You have provided a value for the LANGUAGE_CODE setting that is '\n             'not in the LANGUAGES setting.'\n         )\n-        with self.settings(LANGUAGE_CODE='fr', LANGUAGES=[('en', 'English')], LANGUAGES_BIDI=[]):\n+        with self.settings(LANGUAGE_CODE='fr', LANGUAGES=[('en', 'English')]):\n             self.assertEqual(check_language_settings_consistent(None), [\n                 Error(msg, id='translation.E004'),\n             ])\n-        msg = (\n-            'You have provided values in the LANGUAGES_BIDI setting that are '\n-            'not in the LANGUAGES setting.'\n-        )\n-        with self.settings(LANGUAGE_CODE='en', LANGUAGES=[('en', 'English')], LANGUAGES_BIDI=['he']):\n-            self.assertEqual(check_language_settings_consistent(None), [\n-                Error(msg, id='translation.E005'),\n-            ])\n",
  "problem_statement": "Remove the LANGUAGES_BIDI<=LANGUAGES check.\nDescription\n\t\n(Adding Nick Pope to Cc: as author of the commit referenced below)\nSince ​https://github.com/django/django/commit/4400d8296d268f5a8523cd02ddc33b12219b2535 there is a system check which verifies that LANGUAGES_BIDI is a subset of LANGUAGES. This breaks almost all installations of Django using a custom LANGUAGES list which do not also override LANGUAGES_BIDI -- probably many installations.\nAll of them will either have to add a LANGUAGES_BIDI override or silence translation.E005 when updating. If this is intentional then this change has to be mentioned in the release notes and documented somewhere.\nHowever, I don't really see the need to verify that LANGUAGES_BIDI is a subset of LANGUAGES and propose that the easiest and also the best way to solve this is to remove the translation.E005 check again.\nHere's a test which currently fails but shouldn't in my opinion:\ndiff --git a/tests/check_framework/test_translation.py b/tests/check_framework/test_translation.py\nindex 9a34b65c06..cea844988d 100644\n--- a/tests/check_framework/test_translation.py\n+++ b/tests/check_framework/test_translation.py\n@@ -92,3 +92,7 @@ class TranslationCheckTests(SimpleTestCase):\n\t\t\t self.assertEqual(check_language_settings_consistent(None), [\n\t\t\t\t Error(msg, id='translation.E005'),\n\t\t\t ])\n+\n+\tdef test_languages_without_bidi(self):\n+\t\twith self.settings(LANGUAGE_CODE='en', LANGUAGES=[('en', 'English')]):\n+\t\t\tself.assertEqual(check_language_settings_consistent(None), [])\nRemove the LANGUAGES_BIDI<=LANGUAGES check.\nDescription\n\t\n(Adding Nick Pope to Cc: as author of the commit referenced below)\nSince ​https://github.com/django/django/commit/4400d8296d268f5a8523cd02ddc33b12219b2535 there is a system check which verifies that LANGUAGES_BIDI is a subset of LANGUAGES. This breaks almost all installations of Django using a custom LANGUAGES list which do not also override LANGUAGES_BIDI -- probably many installations.\nAll of them will either have to add a LANGUAGES_BIDI override or silence translation.E005 when updating. If this is intentional then this change has to be mentioned in the release notes and documented somewhere.\nHowever, I don't really see the need to verify that LANGUAGES_BIDI is a subset of LANGUAGES and propose that the easiest and also the best way to solve this is to remove the translation.E005 check again.\nHere's a test which currently fails but shouldn't in my opinion:\ndiff --git a/tests/check_framework/test_translation.py b/tests/check_framework/test_translation.py\nindex 9a34b65c06..cea844988d 100644\n--- a/tests/check_framework/test_translation.py\n+++ b/tests/check_framework/test_translation.py\n@@ -92,3 +92,7 @@ class TranslationCheckTests(SimpleTestCase):\n\t\t\t self.assertEqual(check_language_settings_consistent(None), [\n\t\t\t\t Error(msg, id='translation.E005'),\n\t\t\t ])\n+\n+\tdef test_languages_without_bidi(self):\n+\t\twith self.settings(LANGUAGE_CODE='en', LANGUAGES=[('en', 'English')]):\n+\t\t\tself.assertEqual(check_language_settings_consistent(None), [])\n",
  "hints_text": "Thanks for the report, however there is not a valid use case for using LANGUAGES_BIDI that are not in LANGUAGES, that's why we added this check. I don't think that it is a big issue to override LANGUAGES_BIDI (when you override LANGUAGES) or silence this checks. We do not put system checks into release notes normally, IMO it's necessary.\nReopening, based on the ​django-developers discussion. I also think that backwards compatibility has priority over the check framework, so a solution has to be found.\nThanks for the report, however there is not a valid use case for using LANGUAGES_BIDI that are not in LANGUAGES, that's why we added this check. I don't think that it is a big issue to override LANGUAGES_BIDI (when you override LANGUAGES) or silence this checks. We do not put system checks into release notes normally, IMO it's necessary.\nReopening, based on the ​django-developers discussion. I also think that backwards compatibility has priority over the check framework, so a solution has to be found.",
  "created_at": "2019-04-17T06:51:04Z",
  "version": "3.0",
  "FAIL_TO_PASS": "[\"test_inconsistent_language_settings (check_framework.test_translation.TranslationCheckTests)\"]",
  "PASS_TO_PASS": "[\"test_invalid_language_code (check_framework.test_translation.TranslationCheckTests)\", \"test_invalid_languages (check_framework.test_translation.TranslationCheckTests)\", \"test_invalid_languages_bidi (check_framework.test_translation.TranslationCheckTests)\", \"test_valid_language_code (check_framework.test_translation.TranslationCheckTests)\", \"test_valid_languages (check_framework.test_translation.TranslationCheckTests)\", \"test_valid_languages_bidi (check_framework.test_translation.TranslationCheckTests)\"]",
  "environment_setup_commit": "419a78300f7cd27611196e1e464d50fd0385ff27",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.565475",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}