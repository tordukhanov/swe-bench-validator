{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-9999",
  "base_commit": "4e8bca2f2ffd6e3f1a4de4403de9e4600497fc61",
  "patch": "diff --git a/sphinx/writers/latex.py b/sphinx/writers/latex.py\n--- a/sphinx/writers/latex.py\n+++ b/sphinx/writers/latex.py\n@@ -1092,8 +1092,8 @@ def visit_term(self, node: Element) -> None:\n             ctx = r'\\phantomsection'\n             for node_id in node['ids']:\n                 ctx += self.hypertarget(node_id, anchor=False)\n-        ctx += r'}] \\leavevmode'\n-        self.body.append(r'\\item[{')\n+        ctx += r'}'\n+        self.body.append(r'\\sphinxlineitem{')\n         self.context.append(ctx)\n \n     def depart_term(self, node: Element) -> None:\n",
  "test_patch": "diff --git a/tests/test_build_latex.py b/tests/test_build_latex.py\n--- a/tests/test_build_latex.py\n+++ b/tests/test_build_latex.py\n@@ -834,18 +834,18 @@ def test_latex_show_urls_is_inline(app, status, warning):\n             'Footnote inside footnote\\n%\\n\\\\end{footnotetext}\\\\ignorespaces') in result\n     assert ('\\\\sphinxhref{http://sphinx-doc.org/~test/}{URL including tilde} '\n             '(http://sphinx\\\\sphinxhyphen{}doc.org/\\\\textasciitilde{}test/)') in result\n-    assert ('\\\\item[{\\\\sphinxhref{http://sphinx-doc.org/}{URL in term} '\n-            '(http://sphinx\\\\sphinxhyphen{}doc.org/)}] '\n-            '\\\\leavevmode\\n\\\\sphinxAtStartPar\\nDescription' in result)\n-    assert ('\\\\item[{Footnote in term \\\\sphinxfootnotemark[6]}] '\n-            '\\\\leavevmode%\\n\\\\begin{footnotetext}[6]'\n+    assert ('\\\\sphinxlineitem{\\\\sphinxhref{http://sphinx-doc.org/}{URL in term} '\n+            '(http://sphinx\\\\sphinxhyphen{}doc.org/)}'\n+            '\\n\\\\sphinxAtStartPar\\nDescription' in result)\n+    assert ('\\\\sphinxlineitem{Footnote in term \\\\sphinxfootnotemark[6]}'\n+            '%\\n\\\\begin{footnotetext}[6]'\n             '\\\\phantomsection\\\\label{\\\\thesphinxscope.6}%\\n'\n             '\\\\sphinxAtStartFootnote\\n'\n             'Footnote in term\\n%\\n\\\\end{footnotetext}\\\\ignorespaces '\n             '\\n\\\\sphinxAtStartPar\\nDescription') in result\n-    assert ('\\\\item[{\\\\sphinxhref{http://sphinx-doc.org/}{Term in deflist} '\n-            '(http://sphinx\\\\sphinxhyphen{}doc.org/)}] '\n-            '\\\\leavevmode\\n\\\\sphinxAtStartPar\\nDescription') in result\n+    assert ('\\\\sphinxlineitem{\\\\sphinxhref{http://sphinx-doc.org/}{Term in deflist} '\n+            '(http://sphinx\\\\sphinxhyphen{}doc.org/)}'\n+            '\\n\\\\sphinxAtStartPar\\nDescription') in result\n     assert '\\\\sphinxurl{https://github.com/sphinx-doc/sphinx}\\n' in result\n     assert ('\\\\sphinxhref{mailto:sphinx-dev@googlegroups.com}'\n             '{sphinx\\\\sphinxhyphen{}dev@googlegroups.com}') in result\n@@ -893,22 +893,22 @@ def test_latex_show_urls_is_footnote(app, status, warning):\n     assert ('\\\\sphinxhref{http://sphinx-doc.org/~test/}{URL including tilde}'\n             '%\\n\\\\begin{footnote}[5]\\\\sphinxAtStartFootnote\\n'\n             '\\\\sphinxnolinkurl{http://sphinx-doc.org/~test/}\\n%\\n\\\\end{footnote}') in result\n-    assert ('\\\\item[{\\\\sphinxhref{http://sphinx-doc.org/}'\n-            '{URL in term}\\\\sphinxfootnotemark[9]}] '\n-            '\\\\leavevmode%\\n\\\\begin{footnotetext}[9]'\n+    assert ('\\\\sphinxlineitem{\\\\sphinxhref{http://sphinx-doc.org/}'\n+            '{URL in term}\\\\sphinxfootnotemark[9]}'\n+            '%\\n\\\\begin{footnotetext}[9]'\n             '\\\\phantomsection\\\\label{\\\\thesphinxscope.9}%\\n'\n             '\\\\sphinxAtStartFootnote\\n'\n             '\\\\sphinxnolinkurl{http://sphinx-doc.org/}\\n%\\n'\n             '\\\\end{footnotetext}\\\\ignorespaces \\n\\\\sphinxAtStartPar\\nDescription') in result\n-    assert ('\\\\item[{Footnote in term \\\\sphinxfootnotemark[11]}] '\n-            '\\\\leavevmode%\\n\\\\begin{footnotetext}[11]'\n+    assert ('\\\\sphinxlineitem{Footnote in term \\\\sphinxfootnotemark[11]}'\n+            '%\\n\\\\begin{footnotetext}[11]'\n             '\\\\phantomsection\\\\label{\\\\thesphinxscope.11}%\\n'\n             '\\\\sphinxAtStartFootnote\\n'\n             'Footnote in term\\n%\\n\\\\end{footnotetext}\\\\ignorespaces '\n             '\\n\\\\sphinxAtStartPar\\nDescription') in result\n-    assert ('\\\\item[{\\\\sphinxhref{http://sphinx-doc.org/}{Term in deflist}'\n-            '\\\\sphinxfootnotemark[10]}] '\n-            '\\\\leavevmode%\\n\\\\begin{footnotetext}[10]'\n+    assert ('\\\\sphinxlineitem{\\\\sphinxhref{http://sphinx-doc.org/}{Term in deflist}'\n+            '\\\\sphinxfootnotemark[10]}'\n+            '%\\n\\\\begin{footnotetext}[10]'\n             '\\\\phantomsection\\\\label{\\\\thesphinxscope.10}%\\n'\n             '\\\\sphinxAtStartFootnote\\n'\n             '\\\\sphinxnolinkurl{http://sphinx-doc.org/}\\n%\\n'\n@@ -955,16 +955,16 @@ def test_latex_show_urls_is_no(app, status, warning):\n             '\\\\sphinxAtStartFootnote\\n'\n             'Footnote inside footnote\\n%\\n\\\\end{footnotetext}\\\\ignorespaces') in result\n     assert '\\\\sphinxhref{http://sphinx-doc.org/~test/}{URL including tilde}' in result\n-    assert ('\\\\item[{\\\\sphinxhref{http://sphinx-doc.org/}{URL in term}}] '\n-            '\\\\leavevmode\\n\\\\sphinxAtStartPar\\nDescription') in result\n-    assert ('\\\\item[{Footnote in term \\\\sphinxfootnotemark[6]}] '\n-            '\\\\leavevmode%\\n\\\\begin{footnotetext}[6]'\n+    assert ('\\\\sphinxlineitem{\\\\sphinxhref{http://sphinx-doc.org/}{URL in term}}'\n+            '\\n\\\\sphinxAtStartPar\\nDescription') in result\n+    assert ('\\\\sphinxlineitem{Footnote in term \\\\sphinxfootnotemark[6]}'\n+            '%\\n\\\\begin{footnotetext}[6]'\n             '\\\\phantomsection\\\\label{\\\\thesphinxscope.6}%\\n'\n             '\\\\sphinxAtStartFootnote\\n'\n             'Footnote in term\\n%\\n\\\\end{footnotetext}\\\\ignorespaces '\n             '\\n\\\\sphinxAtStartPar\\nDescription') in result\n-    assert ('\\\\item[{\\\\sphinxhref{http://sphinx-doc.org/}{Term in deflist}}] '\n-            '\\\\leavevmode\\n\\\\sphinxAtStartPar\\nDescription') in result\n+    assert ('\\\\sphinxlineitem{\\\\sphinxhref{http://sphinx-doc.org/}{Term in deflist}}'\n+            '\\n\\\\sphinxAtStartPar\\nDescription') in result\n     assert ('\\\\sphinxurl{https://github.com/sphinx-doc/sphinx}\\n' in result)\n     assert ('\\\\sphinxhref{mailto:sphinx-dev@googlegroups.com}'\n             '{sphinx\\\\sphinxhyphen{}dev@googlegroups.com}\\n') in result\n@@ -1454,23 +1454,23 @@ def test_latex_glossary(app, status, warning):\n     app.builder.build_all()\n \n     result = (app.outdir / 'python.tex').read_text()\n-    assert ('\\\\item[{ähnlich\\\\index{ähnlich@\\\\spxentry{ähnlich}|spxpagem}'\n+    assert (r'\\sphinxlineitem{ähnlich\\index{ähnlich@\\spxentry{ähnlich}|spxpagem}'\n             r'\\phantomsection'\n-            r'\\label{\\detokenize{index:term-ahnlich}}}] \\leavevmode' in result)\n-    assert (r'\\item[{boson\\index{boson@\\spxentry{boson}|spxpagem}\\phantomsection'\n-            r'\\label{\\detokenize{index:term-boson}}}] \\leavevmode' in result)\n-    assert (r'\\item[{\\sphinxstyleemphasis{fermion}'\n+            r'\\label{\\detokenize{index:term-ahnlich}}}' in result)\n+    assert (r'\\sphinxlineitem{boson\\index{boson@\\spxentry{boson}|spxpagem}\\phantomsection'\n+            r'\\label{\\detokenize{index:term-boson}}}' in result)\n+    assert (r'\\sphinxlineitem{\\sphinxstyleemphasis{fermion}'\n             r'\\index{fermion@\\spxentry{fermion}|spxpagem}'\n             r'\\phantomsection'\n-            r'\\label{\\detokenize{index:term-fermion}}}] \\leavevmode' in result)\n-    assert (r'\\item[{tauon\\index{tauon@\\spxentry{tauon}|spxpagem}\\phantomsection'\n-            r'\\label{\\detokenize{index:term-tauon}}}] \\leavevmode'\n-            r'\\item[{myon\\index{myon@\\spxentry{myon}|spxpagem}\\phantomsection'\n-            r'\\label{\\detokenize{index:term-myon}}}] \\leavevmode'\n-            r'\\item[{electron\\index{electron@\\spxentry{electron}|spxpagem}\\phantomsection'\n-            r'\\label{\\detokenize{index:term-electron}}}] \\leavevmode' in result)\n-    assert ('\\\\item[{über\\\\index{über@\\\\spxentry{über}|spxpagem}\\\\phantomsection'\n-            r'\\label{\\detokenize{index:term-uber}}}] \\leavevmode' in result)\n+            r'\\label{\\detokenize{index:term-fermion}}}' in result)\n+    assert (r'\\sphinxlineitem{tauon\\index{tauon@\\spxentry{tauon}|spxpagem}\\phantomsection'\n+            r'\\label{\\detokenize{index:term-tauon}}}'\n+            r'\\sphinxlineitem{myon\\index{myon@\\spxentry{myon}|spxpagem}\\phantomsection'\n+            r'\\label{\\detokenize{index:term-myon}}}'\n+            r'\\sphinxlineitem{electron\\index{electron@\\spxentry{electron}|spxpagem}\\phantomsection'\n+            r'\\label{\\detokenize{index:term-electron}}}' in result)\n+    assert (r'\\sphinxlineitem{über\\index{über@\\spxentry{über}|spxpagem}\\phantomsection'\n+            r'\\label{\\detokenize{index:term-uber}}}' in result)\n \n \n @pytest.mark.sphinx('latex', testroot='latex-labels')\n",
  "problem_statement": "Latex: terms are not separated by a newline\n### Describe the bug\n\nI use simple indentations for terms and their explanation:\r\n\r\nExample:\r\n```rst\r\nListing:\r\n\r\n:samp:`{file}.cc` :samp:`{file}.cp` :samp:`{file}.cxx` :samp:`{file}.cpp` :samp:`{file}.CPP` :samp:`{file}.c++` :samp:`{file}.C`\r\n  C++ source code that must be preprocessed.  Note that in :samp:`.cxx`,\r\n  the last two letters must both be literally :samp:`x`.  Likewise,\r\n  :samp:`.C` refers to a literal capital C.\r\n\r\n:samp:`{file}.mm` :samp:`{file}.M`\r\n  Objective-C++ source code that must be preprocessed.\r\n\r\n:samp:`{file}.mii`\r\n  Objective-C++ source code that should not be preprocessed.\r\n\r\n:samp:`{file}.hh` :samp:`{file}.H` :samp:`{file}.hp` :samp:`{file}.hxx` :samp:`{file}.hpp` :samp:`{file}.HPP` :samp:`{file}.h++` :samp:`{file}.tcc`\r\n  C++ header file to be turned into a precompiled header or Ada spec\r\n```\r\n\r\nWhich results in the following HTML output:\r\n\r\nAlabaster:\r\n\r\n![Screenshot from 2021-12-17 12-49-36](https://user-images.githubusercontent.com/2658545/146541051-3d7144ca-e155-41a9-a6f3-3b7ee48efb8e.png)\r\n\r\nRTD theme:\r\n\r\n![Screenshot from 2021-12-17 12-49-50](https://user-images.githubusercontent.com/2658545/146541053-a8164c2b-5ed7-48b2-b5bb-2ec304eefea4.png)\r\n\r\nWhile xelatex output does not contain a new line:\r\n\r\n![Screenshot from 2021-12-17 12-50-53](https://user-images.githubusercontent.com/2658545/146541114-0d1ebd78-1ae3-4fed-b06d-7ed45fe1db33.png)\r\n\r\n@jfbu\n\n### How to Reproduce\n\nBuild the snippet.\n\n### Expected behavior\n\n_No response_\n\n### Your project\n\nBuild the snippet\n\n### Screenshots\n\n_No response_\n\n### OS\n\nLinux\n\n### Python version\n\n3.8\n\n### Sphinx version\n\n4.3.0\n\n### Sphinx extensions\n\n_No response_\n\n### Extra tools\n\n_No response_\n\n### Additional context\n\n_No response_\nLatex: terms are not separated by a newline\n### Describe the bug\n\nI use simple indentations for terms and their explanation:\r\n\r\nExample:\r\n```rst\r\nListing:\r\n\r\n:samp:`{file}.cc` :samp:`{file}.cp` :samp:`{file}.cxx` :samp:`{file}.cpp` :samp:`{file}.CPP` :samp:`{file}.c++` :samp:`{file}.C`\r\n  C++ source code that must be preprocessed.  Note that in :samp:`.cxx`,\r\n  the last two letters must both be literally :samp:`x`.  Likewise,\r\n  :samp:`.C` refers to a literal capital C.\r\n\r\n:samp:`{file}.mm` :samp:`{file}.M`\r\n  Objective-C++ source code that must be preprocessed.\r\n\r\n:samp:`{file}.mii`\r\n  Objective-C++ source code that should not be preprocessed.\r\n\r\n:samp:`{file}.hh` :samp:`{file}.H` :samp:`{file}.hp` :samp:`{file}.hxx` :samp:`{file}.hpp` :samp:`{file}.HPP` :samp:`{file}.h++` :samp:`{file}.tcc`\r\n  C++ header file to be turned into a precompiled header or Ada spec\r\n```\r\n\r\nWhich results in the following HTML output:\r\n\r\nAlabaster:\r\n\r\n![Screenshot from 2021-12-17 12-49-36](https://user-images.githubusercontent.com/2658545/146541051-3d7144ca-e155-41a9-a6f3-3b7ee48efb8e.png)\r\n\r\nRTD theme:\r\n\r\n![Screenshot from 2021-12-17 12-49-50](https://user-images.githubusercontent.com/2658545/146541053-a8164c2b-5ed7-48b2-b5bb-2ec304eefea4.png)\r\n\r\nWhile xelatex output does not contain a new line:\r\n\r\n![Screenshot from 2021-12-17 12-50-53](https://user-images.githubusercontent.com/2658545/146541114-0d1ebd78-1ae3-4fed-b06d-7ed45fe1db33.png)\r\n\r\n@jfbu\n\n### How to Reproduce\n\nBuild the snippet.\n\n### Expected behavior\n\n_No response_\n\n### Your project\n\nBuild the snippet\n\n### Screenshots\n\n_No response_\n\n### OS\n\nLinux\n\n### Python version\n\n3.8\n\n### Sphinx version\n\n4.3.0\n\n### Sphinx extensions\n\n_No response_\n\n### Extra tools\n\n_No response_\n\n### Additional context\n\n_No response_\nLaTeX: glossary terms with common definition are rendered with too much vertical whitespace\n### Describe the bug\r\n\r\nas in title\r\n\r\n### How to Reproduce\r\n\r\n```\r\n.. glossary::\r\n   :sorted:\r\n\r\n   boson\r\n      Particle with integer spin.\r\n\r\n   *fermion*\r\n      Particle with half-integer spin.\r\n\r\n   tauon\r\n   myon\r\n   electron\r\n      Examples for fermions.\r\n\r\n   über\r\n      Gewisse\r\n\r\n```\r\n\r\nand `make latexpdf`\r\n\r\n### Expected behavior\r\n\r\n_No response_\r\n\r\n### Your project\r\n\r\nsee code snippet\r\n\r\n### Screenshots\r\n\r\n![Capture d’écran 2021-12-20 à 12 09 48](https://user-images.githubusercontent.com/2589111/146820019-b58a287e-ec41-483a-8013-85e347b221db.png)\r\n\r\n\r\n### OS\r\n\r\nMac\r\n\r\n### Python version\r\n\r\n3.8.0\r\n\r\n### Sphinx version\r\n\r\n4.3.2\r\n\r\n\r\n\nLatex: terms are not separated by a newline\n### Describe the bug\n\nI use simple indentations for terms and their explanation:\r\n\r\nExample:\r\n```rst\r\nListing:\r\n\r\n:samp:`{file}.cc` :samp:`{file}.cp` :samp:`{file}.cxx` :samp:`{file}.cpp` :samp:`{file}.CPP` :samp:`{file}.c++` :samp:`{file}.C`\r\n  C++ source code that must be preprocessed.  Note that in :samp:`.cxx`,\r\n  the last two letters must both be literally :samp:`x`.  Likewise,\r\n  :samp:`.C` refers to a literal capital C.\r\n\r\n:samp:`{file}.mm` :samp:`{file}.M`\r\n  Objective-C++ source code that must be preprocessed.\r\n\r\n:samp:`{file}.mii`\r\n  Objective-C++ source code that should not be preprocessed.\r\n\r\n:samp:`{file}.hh` :samp:`{file}.H` :samp:`{file}.hp` :samp:`{file}.hxx` :samp:`{file}.hpp` :samp:`{file}.HPP` :samp:`{file}.h++` :samp:`{file}.tcc`\r\n  C++ header file to be turned into a precompiled header or Ada spec\r\n```\r\n\r\nWhich results in the following HTML output:\r\n\r\nAlabaster:\r\n\r\n![Screenshot from 2021-12-17 12-49-36](https://user-images.githubusercontent.com/2658545/146541051-3d7144ca-e155-41a9-a6f3-3b7ee48efb8e.png)\r\n\r\nRTD theme:\r\n\r\n![Screenshot from 2021-12-17 12-49-50](https://user-images.githubusercontent.com/2658545/146541053-a8164c2b-5ed7-48b2-b5bb-2ec304eefea4.png)\r\n\r\nWhile xelatex output does not contain a new line:\r\n\r\n![Screenshot from 2021-12-17 12-50-53](https://user-images.githubusercontent.com/2658545/146541114-0d1ebd78-1ae3-4fed-b06d-7ed45fe1db33.png)\r\n\r\n@jfbu\n\n### How to Reproduce\n\nBuild the snippet.\n\n### Expected behavior\n\n_No response_\n\n### Your project\n\nBuild the snippet\n\n### Screenshots\n\n_No response_\n\n### OS\n\nLinux\n\n### Python version\n\n3.8\n\n### Sphinx version\n\n4.3.0\n\n### Sphinx extensions\n\n_No response_\n\n### Extra tools\n\n_No response_\n\n### Additional context\n\n_No response_\n",
  "hints_text": "I don't think this is not a bug. It's not promised a term and description of the definition list are displayed as line-folded.\r\n\r\nBut I agree it's better to fold them as HTML does.\nGreat, thanks for the suggested pull request!\n@marxin It may take some time before a solution is found because the natural #9988 approach breaks some numpy's LaTeX hack. As a work-around you may try to add to your project their hack\r\n```\r\nlatex_elements = {\r\n    'preamble': r'''\r\n% In the parameters section, place a newline after the Parameters\r\n% header\r\n\\usepackage{expdlist}\r\n\\let\\latexdescription=\\description\r\n\\def\\description{\\latexdescription{}{} \\breaklabel}\r\n% but expdlist old LaTeX package requires fixes:\r\n% 1) remove extra space\r\n\\usepackage{etoolbox}\r\n\\makeatletter\r\n\\patchcmd\\@item{{\\@breaklabel} }{{\\@breaklabel}}{}{}\r\n\\makeatother\r\n% 2) fix bug in expdlist's way of breaking the line after long item label\r\n\\makeatletter\r\n\\def\\breaklabel{%\r\n    \\def\\@breaklabel{%\r\n        \\leavevmode\\par\r\n        % now a hack because Sphinx inserts \\leavevmode after term node\r\n        \\def\\leavevmode{\\def\\leavevmode{\\unhbox\\voidb@x}}%\r\n    }%\r\n}\r\n\\makeatother\r\n''',\r\n}\r\n```\r\nI am not completely happy with the resulting looks (see https://github.com/sphinx-doc/sphinx/pull/9988#issuecomment-997227939) but it may serve temporarily.\nI don't think this is not a bug. It's not promised a term and description of the definition list are displayed as line-folded.\r\n\r\nBut I agree it's better to fold them as HTML does.\nGreat, thanks for the suggested pull request!\n@marxin It may take some time before a solution is found because the natural #9988 approach breaks some numpy's LaTeX hack. As a work-around you may try to add to your project their hack\r\n```\r\nlatex_elements = {\r\n    'preamble': r'''\r\n% In the parameters section, place a newline after the Parameters\r\n% header\r\n\\usepackage{expdlist}\r\n\\let\\latexdescription=\\description\r\n\\def\\description{\\latexdescription{}{} \\breaklabel}\r\n% but expdlist old LaTeX package requires fixes:\r\n% 1) remove extra space\r\n\\usepackage{etoolbox}\r\n\\makeatletter\r\n\\patchcmd\\@item{{\\@breaklabel} }{{\\@breaklabel}}{}{}\r\n\\makeatother\r\n% 2) fix bug in expdlist's way of breaking the line after long item label\r\n\\makeatletter\r\n\\def\\breaklabel{%\r\n    \\def\\@breaklabel{%\r\n        \\leavevmode\\par\r\n        % now a hack because Sphinx inserts \\leavevmode after term node\r\n        \\def\\leavevmode{\\def\\leavevmode{\\unhbox\\voidb@x}}%\r\n    }%\r\n}\r\n\\makeatother\r\n''',\r\n}\r\n```\r\nI am not completely happy with the resulting looks (see https://github.com/sphinx-doc/sphinx/pull/9988#issuecomment-997227939) but it may serve temporarily.\n\nI don't think this is not a bug. It's not promised a term and description of the definition list are displayed as line-folded.\r\n\r\nBut I agree it's better to fold them as HTML does.\nGreat, thanks for the suggested pull request!\n@marxin It may take some time before a solution is found because the natural #9988 approach breaks some numpy's LaTeX hack. As a work-around you may try to add to your project their hack\r\n```\r\nlatex_elements = {\r\n    'preamble': r'''\r\n% In the parameters section, place a newline after the Parameters\r\n% header\r\n\\usepackage{expdlist}\r\n\\let\\latexdescription=\\description\r\n\\def\\description{\\latexdescription{}{} \\breaklabel}\r\n% but expdlist old LaTeX package requires fixes:\r\n% 1) remove extra space\r\n\\usepackage{etoolbox}\r\n\\makeatletter\r\n\\patchcmd\\@item{{\\@breaklabel} }{{\\@breaklabel}}{}{}\r\n\\makeatother\r\n% 2) fix bug in expdlist's way of breaking the line after long item label\r\n\\makeatletter\r\n\\def\\breaklabel{%\r\n    \\def\\@breaklabel{%\r\n        \\leavevmode\\par\r\n        % now a hack because Sphinx inserts \\leavevmode after term node\r\n        \\def\\leavevmode{\\def\\leavevmode{\\unhbox\\voidb@x}}%\r\n    }%\r\n}\r\n\\makeatother\r\n''',\r\n}\r\n```\r\nI am not completely happy with the resulting looks (see https://github.com/sphinx-doc/sphinx/pull/9988#issuecomment-997227939) but it may serve temporarily.",
  "created_at": "2021-12-20T18:28:24Z",
  "version": "5.0",
  "FAIL_TO_PASS": "[\"tests/test_build_latex.py::test_latex_show_urls_is_inline\", \"tests/test_build_latex.py::test_latex_show_urls_is_footnote\", \"tests/test_build_latex.py::test_latex_show_urls_is_no\", \"tests/test_build_latex.py::test_latex_show_urls_footnote_and_substitutions\", \"tests/test_build_latex.py::test_latex_glossary\"]",
  "PASS_TO_PASS": "[\"tests/test_build_latex.py::test_writer\", \"tests/test_build_latex.py::test_latex_warnings\", \"tests/test_build_latex.py::test_latex_basic\", \"tests/test_build_latex.py::test_latex_basic_manual\", \"tests/test_build_latex.py::test_latex_basic_howto\", \"tests/test_build_latex.py::test_latex_basic_manual_ja\", \"tests/test_build_latex.py::test_latex_basic_howto_ja\", \"tests/test_build_latex.py::test_latex_theme\", \"tests/test_build_latex.py::test_latex_theme_papersize\", \"tests/test_build_latex.py::test_latex_theme_options\", \"tests/test_build_latex.py::test_latex_additional_settings_for_language_code\", \"tests/test_build_latex.py::test_latex_additional_settings_for_greek\", \"tests/test_build_latex.py::test_latex_title_after_admonitions\", \"tests/test_build_latex.py::test_latex_release\", \"tests/test_build_latex.py::test_numref\", \"tests/test_build_latex.py::test_numref_with_prefix1\", \"tests/test_build_latex.py::test_numref_with_prefix2\", \"tests/test_build_latex.py::test_numref_with_language_ja\", \"tests/test_build_latex.py::test_latex_obey_numfig_is_false\", \"tests/test_build_latex.py::test_latex_obey_numfig_secnum_depth_is_zero\", \"tests/test_build_latex.py::test_latex_obey_numfig_secnum_depth_is_two\", \"tests/test_build_latex.py::test_latex_obey_numfig_but_math_numfig_false\", \"tests/test_build_latex.py::test_latex_add_latex_package\", \"tests/test_build_latex.py::test_babel_with_no_language_settings\", \"tests/test_build_latex.py::test_babel_with_language_de\", \"tests/test_build_latex.py::test_babel_with_language_ru\", \"tests/test_build_latex.py::test_babel_with_language_tr\", \"tests/test_build_latex.py::test_babel_with_language_ja\", \"tests/test_build_latex.py::test_babel_with_unknown_language\", \"tests/test_build_latex.py::test_polyglossia_with_language_de\", \"tests/test_build_latex.py::test_polyglossia_with_language_de_1901\", \"tests/test_build_latex.py::test_footnote\", \"tests/test_build_latex.py::test_reference_in_caption_and_codeblock_in_footnote\", \"tests/test_build_latex.py::test_image_in_section\", \"tests/test_build_latex.py::test_latex_logo_if_not_found\", \"tests/test_build_latex.py::test_toctree_maxdepth_manual\", \"tests/test_build_latex.py::test_toctree_maxdepth_howto\", \"tests/test_build_latex.py::test_toctree_not_found\", \"tests/test_build_latex.py::test_toctree_without_maxdepth\", \"tests/test_build_latex.py::test_toctree_with_deeper_maxdepth\", \"tests/test_build_latex.py::test_latex_toplevel_sectioning_is_None\", \"tests/test_build_latex.py::test_latex_toplevel_sectioning_is_part\", \"tests/test_build_latex.py::test_latex_toplevel_sectioning_is_part_with_howto\", \"tests/test_build_latex.py::test_latex_toplevel_sectioning_is_chapter\", \"tests/test_build_latex.py::test_latex_toplevel_sectioning_is_chapter_with_howto\", \"tests/test_build_latex.py::test_latex_toplevel_sectioning_is_section\", \"tests/test_build_latex.py::test_latex_table_tabulars\", \"tests/test_build_latex.py::test_latex_table_longtable\", \"tests/test_build_latex.py::test_latex_table_complex_tables\", \"tests/test_build_latex.py::test_latex_table_custom_template_caseA\", \"tests/test_build_latex.py::test_latex_table_custom_template_caseB\", \"tests/test_build_latex.py::test_latex_table_custom_template_caseC\", \"tests/test_build_latex.py::test_latex_raw_directive\", \"tests/test_build_latex.py::test_latex_images\", \"tests/test_build_latex.py::test_latex_index\", \"tests/test_build_latex.py::test_latex_equations\", \"tests/test_build_latex.py::test_latex_image_in_parsed_literal\", \"tests/test_build_latex.py::test_latex_nested_enumerated_list\", \"tests/test_build_latex.py::test_latex_thebibliography\", \"tests/test_build_latex.py::test_latex_labels\", \"tests/test_build_latex.py::test_latex_figure_in_admonition\", \"tests/test_build_latex.py::test_default_latex_documents\", \"tests/test_build_latex.py::test_index_on_title\", \"tests/test_build_latex.py::test_texescape_for_non_unicode_supported_engine\", \"tests/test_build_latex.py::test_texescape_for_unicode_supported_engine\", \"tests/test_build_latex.py::test_latex_elements_extrapackages\", \"tests/test_build_latex.py::test_latex_nested_tables\", \"tests/test_build_latex.py::test_latex_container\"]",
  "environment_setup_commit": "60775ec4c4ea08509eee4b564cbf90f316021aff",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.071432",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}