{
  "repo": "django/django",
  "instance_id": "django__django-16569",
  "base_commit": "278881e37619278789942513916acafaa88d26f3",
  "patch": "diff --git a/django/forms/formsets.py b/django/forms/formsets.py\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -490,7 +490,9 @@ def add_fields(self, form, index):\n                     required=False,\n                     widget=self.get_ordering_widget(),\n                 )\n-        if self.can_delete and (self.can_delete_extra or index < initial_form_count):\n+        if self.can_delete and (\n+            self.can_delete_extra or (index is not None and index < initial_form_count)\n+        ):\n             form.fields[DELETION_FIELD_NAME] = BooleanField(\n                 label=_(\"Delete\"),\n                 required=False,\n",
  "test_patch": "diff --git a/tests/forms_tests/tests/test_formsets.py b/tests/forms_tests/tests/test_formsets.py\n--- a/tests/forms_tests/tests/test_formsets.py\n+++ b/tests/forms_tests/tests/test_formsets.py\n@@ -1480,6 +1480,7 @@ def test_disable_delete_extra_formset_forms(self):\n         self.assertIn(\"DELETE\", formset.forms[0].fields)\n         self.assertNotIn(\"DELETE\", formset.forms[1].fields)\n         self.assertNotIn(\"DELETE\", formset.forms[2].fields)\n+        self.assertNotIn(\"DELETE\", formset.empty_form.fields)\n \n         formset = ChoiceFormFormset(\n             data={\n",
  "problem_statement": "Formsets' add_fields() method fails in some circumstances if the argument index is None.\nDescription\n\t\nFormsets' add_fields() method fails in some circumstances if the argument index is None.\nWhen a FormSet has the attributes self.can_delete == True and self.can_delete_extra == False, calling the add_fields() method on that FormSet fails if the argument index is None. This occurs for example when calling FormSet.empty_form(). The result is that the method raises the exception TypeError: '<' not supported between instances of 'NoneType' and 'int'. \nCode example:\nMyFormSet = forms.formset_factory(\n\tform=MyForm,\n\tcan_delete=True,\n\tcan_delete_extra=False,\n)\nmy_formset = MyFormSet(\n\tinitial=None,\n)\nprint(my_formset.empty_form)\nThe reason this happens is that in in line 493 of [django.forms.formsets](â€‹https://github.com/django/django/blob/main/django/forms/formsets.py) index is compared to initial_form_count:\nif self.can_delete and (self.can_delete_extra or index < initial_form_count):\nChecking for index not None should fix the issue:\nif self.can_delete and (self.can_delete_extra or (index is not None and index < initial_form_count)):\nHow to Reproduce\nA self-contained example to reproduce this bug is as follows:\n#!/usr/bin/env python3\nimport os\nimport django\nfrom django import forms\nclass MyForm(forms.Form):\n\tmy_field = forms.CharField()\nif __name__ == \"__main__\":\n\tsettings_file = os.path.splitext(os.path.basename(__file__))[0]\n\tdjango.conf.settings.configure(\n\t\tDEBUG=True,\n\t\tMIDDLEWARE_CLASSES=[],\n\t\tROOT_URLCONF=settings_file,\n\t)\n\tdjango.setup()\n\tMyFormSet = forms.formset_factory(\n\t\tform=MyForm,\n\t\tcan_delete=True,\n\t\tcan_delete_extra=False,\n\t)\n\tmy_formset = MyFormSet(\n\t\tinitial=None,\n\t)\n\tprint(my_formset.empty_form)\n",
  "hints_text": "",
  "created_at": "2023-02-17T20:11:38Z",
  "version": "5.0",
  "FAIL_TO_PASS": "[\"test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_disable_delete_extra_formset_forms)\", \"test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_disable_delete_extra_formset_forms)\"]",
  "PASS_TO_PASS": "[\"all_valid() validates all forms, even when some are invalid.\", \"test_valid (forms_tests.tests.test_formsets.AllValidTests.test_valid)\", \"is_multipart() works with an empty formset.\", \"An empty formset still calls clean()\", \"Media is available on empty formset.\", \"test_as_div (forms_tests.tests.test_formsets.FormsetAsTagTests.test_as_div)\", \"test_as_p (forms_tests.tests.test_formsets.FormsetAsTagTests.test_as_p)\", \"test_as_table (forms_tests.tests.test_formsets.FormsetAsTagTests.test_as_table)\", \"test_as_ul (forms_tests.tests.test_formsets.FormsetAsTagTests.test_as_ul)\", \"test_as_div (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests.test_as_div)\", \"test_as_p (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests.test_as_p)\", \"test_as_table (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests.test_as_table)\", \"test_as_ul (forms_tests.tests.test_formsets.Jinja2FormsetAsTagTests.test_as_ul)\", \"test_customize_management_form_error (forms_tests.tests.test_formsets.TestIsBoundBehavior.test_customize_management_form_error)\", \"test_empty_forms_are_unbound (forms_tests.tests.test_formsets.TestIsBoundBehavior.test_empty_forms_are_unbound)\", \"test_form_errors_are_caught_by_formset (forms_tests.tests.test_formsets.TestIsBoundBehavior.test_form_errors_are_caught_by_formset)\", \"test_management_form_invalid_data (forms_tests.tests.test_formsets.TestIsBoundBehavior.test_management_form_invalid_data)\", \"test_no_data_error (forms_tests.tests.test_formsets.TestIsBoundBehavior.test_no_data_error)\", \"test_with_management_data_attrs_work_fine (forms_tests.tests.test_formsets.TestIsBoundBehavior.test_with_management_data_attrs_work_fine)\", \"test_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_absolute_max)\", \"test_absolute_max_invalid (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_absolute_max_invalid)\", \"test_absolute_max_with_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_absolute_max_with_max_num)\", \"A FormSet constructor takes the same arguments as Form. Create a\", \"A form that's displayed as blank may be submitted as blank.\", \"test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_can_delete_extra_formset_forms)\", \"FormSets have a clean() hook for doing extra validation that isn't tied\", \"A custom renderer passed to a formset_factory() is passed to all forms\", \"test_default_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_default_absolute_max)\", \"Deleting prefilled data is an error. Removing data from form fields\", \"More than 1 empty form can be displayed using formset_factory's\", \"Ordering fields are allowed to be left blank. If they are left blank,\", \"test_empty_permitted_ignored_empty_form (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_empty_permitted_ignored_empty_form)\", \"test_form_kwargs_empty_form (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_form_kwargs_empty_form)\", \"Custom kwargs set on the formset instance are passed to the\", \"Form kwargs can be passed dynamically in a formset.\", \"Formsets call is_valid() on each form.\", \"Formset's forms use the formset's error_class.\", \"FormSet.has_changed() is True if any data is passed to its forms, even\", \"A FormSet can be prefilled with existing data by providing a list of\", \"Formset instances are iterable.\", \"A formsets without any forms evaluates as True.\", \"Formset works with SplitDateTimeField(initial=datetime.datetime.now).\", \"A valid formset should have 0 total errors.\", \"test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_formset_total_error_count_with_non_form_errors)\", \"If validate_max is set and max_num is less than TOTAL_FORMS in the\", \"test_formset_validate_max_flag_custom_error (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_formset_validate_max_flag_custom_error)\", \"test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_formset_validate_min_excludes_empty_forms)\", \"If validate_min is set and min_num is more than TOTAL_FORMS in the\", \"test_formset_validate_min_flag_custom_formatted_error (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_formset_validate_min_flag_custom_formatted_error)\", \"min_num validation doesn't consider unchanged forms with initial data\", \"test_formset_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_formset_validation)\", \"A formset's ManagementForm is validated once per FormSet.is_valid()\", \"formset_factory's can_delete argument adds a boolean \\\"delete\\\" field to\", \"test_formset_with_deletion_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_formset_with_deletion_custom_widget)\", \"deleted_forms works on a valid formset even if a deleted form would\", \"If a form is filled with something and can_delete is also checked, that\", \"FormSets with ordering + deletion.\", \"formset_factory's can_order argument adds an integer field to each\", \"test_formsets_with_ordering_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_formsets_with_ordering_custom_widget)\", \"A formset has a hard limit on the number of forms instantiated.\", \"test_html_safe (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_html_safe)\", \"Can increase the built-in forms limit via a higher max_num.\", \"Can get ordered_forms from a valid formset even if a deleted form\", \"test_limited_max_forms_two (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_limited_max_forms_two)\", \"max_num has no effect when extra is less than max_num.\", \"Limiting the maximum number of forms with max_num.\", \"The management form class has field names matching the constants.\", \"The management form has the correct prefix.\", \"test_max_num_with_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_max_num_with_initial_data)\", \"If max_num is 0 then no form is rendered at all, regardless of extra,\", \"test_max_num_zero_with_initial (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_max_num_zero_with_initial)\", \"More than 1 empty form can also be displayed using formset_factory's\", \"More than 1 empty form can be displayed using min_num.\", \"The extra argument works when the formset is pre-filled with initial\", \"One form from initial and extra=3 with max_num=2 results in the one\", \"More initial forms than max_num results in all initial forms being\", \"test_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_non_form_errors)\", \"If non_form_errors() is called without calling is_valid() first,\", \"Ordering works with blank fieldsets.\", \"test_repr (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_repr)\", \"test_repr_do_not_trigger_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_repr_do_not_trigger_validation)\", \"If at least one field is filled out on a blank form, it will be\", \"A partially completed form is invalid.\", \"Just one form may be completed.\", \"test_template_name_can_be_overridden (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_template_name_can_be_overridden)\", \"test_template_name_uses_renderer_value (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_template_name_uses_renderer_value)\", \"test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase.test_validate_max_ignores_forms_marked_for_deletion)\", \"test_absolute_max (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_absolute_max)\", \"test_absolute_max_invalid (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_absolute_max_invalid)\", \"test_absolute_max_with_max_num (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_absolute_max_with_max_num)\", \"test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_can_delete_extra_formset_forms)\", \"test_default_absolute_max (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_default_absolute_max)\", \"test_empty_permitted_ignored_empty_form (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_empty_permitted_ignored_empty_form)\", \"test_form_kwargs_empty_form (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_form_kwargs_empty_form)\", \"test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_formset_total_error_count_with_non_form_errors)\", \"test_formset_validate_max_flag_custom_error (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_formset_validate_max_flag_custom_error)\", \"test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_formset_validate_min_excludes_empty_forms)\", \"test_formset_validate_min_flag_custom_formatted_error (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_formset_validate_min_flag_custom_formatted_error)\", \"test_formset_validation (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_formset_validation)\", \"test_formset_with_deletion_custom_widget (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_formset_with_deletion_custom_widget)\", \"test_formsets_with_ordering_custom_widget (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_formsets_with_ordering_custom_widget)\", \"test_html_safe (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_html_safe)\", \"test_limited_max_forms_two (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_limited_max_forms_two)\", \"test_max_num_with_initial_data (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_max_num_with_initial_data)\", \"test_max_num_zero_with_initial (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_max_num_zero_with_initial)\", \"test_non_form_errors (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_non_form_errors)\", \"test_repr (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_repr)\", \"test_repr_do_not_trigger_validation (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_repr_do_not_trigger_validation)\", \"test_template_name_can_be_overridden (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_template_name_can_be_overridden)\", \"test_template_name_uses_renderer_value (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_template_name_uses_renderer_value)\", \"test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.Jinja2FormsFormsetTestCase.test_validate_max_ignores_forms_marked_for_deletion)\"]",
  "environment_setup_commit": "4a72da71001f154ea60906a2f74898d32b7322a7",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.762244",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}