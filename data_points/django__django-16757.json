{
  "repo": "django/django",
  "instance_id": "django__django-16757",
  "base_commit": "83c9765f45e4622e4a5af3adcd92263a28b13624",
  "patch": "diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py\n--- a/django/contrib/admin/checks.py\n+++ b/django/contrib/admin/checks.py\n@@ -916,10 +916,13 @@ def _check_list_display_item(self, obj, item, label):\n                         id=\"admin.E108\",\n                     )\n                 ]\n-        if isinstance(field, models.ManyToManyField):\n+        if isinstance(field, models.ManyToManyField) or (\n+            getattr(field, \"rel\", None) and field.rel.field.many_to_one\n+        ):\n             return [\n                 checks.Error(\n-                    \"The value of '%s' must not be a ManyToManyField.\" % label,\n+                    f\"The value of '{label}' must not be a many-to-many field or a \"\n+                    f\"reverse foreign key.\",\n                     obj=obj.__class__,\n                     id=\"admin.E109\",\n                 )\n",
  "test_patch": "diff --git a/tests/modeladmin/test_checks.py b/tests/modeladmin/test_checks.py\n--- a/tests/modeladmin/test_checks.py\n+++ b/tests/modeladmin/test_checks.py\n@@ -537,7 +537,20 @@ class TestModelAdmin(ModelAdmin):\n         self.assertIsInvalid(\n             TestModelAdmin,\n             ValidationTestModel,\n-            \"The value of 'list_display[0]' must not be a ManyToManyField.\",\n+            \"The value of 'list_display[0]' must not be a many-to-many field or a \"\n+            \"reverse foreign key.\",\n+            \"admin.E109\",\n+        )\n+\n+    def test_invalid_reverse_related_field(self):\n+        class TestModelAdmin(ModelAdmin):\n+            list_display = [\"song_set\"]\n+\n+        self.assertIsInvalid(\n+            TestModelAdmin,\n+            Band,\n+            \"The value of 'list_display[0]' must not be a many-to-many field or a \"\n+            \"reverse foreign key.\",\n             \"admin.E109\",\n         )\n \n",
  "problem_statement": "Admin check for reversed foreign key used in \"list_display\"\nDescription\n\t\nCurrently the admin site checks and reports an admin.E109 system check error when a ManyToManyField is declared within the list_display values.\nBut, when a reversed foreign key is used there is no system error reported:\nSystem check identified no issues (0 silenced).\nApril 10, 2023 - 19:04:29\nDjango version 5.0.dev20230410064954, using settings 'projectfromrepo.settings'\nStarting development server at http://0.0.0.0:8000/\nQuit the server with CONTROL-C.\nand visiting the admin site for the relevant model results in the following error:\nTypeError: create_reverse_many_to_one_manager.<locals>.RelatedManager.__call__() missing 1 required keyword-only argument: 'manager'\n[10/Apr/2023 19:30:40] \"GET /admin/testapp/question/ HTTP/1.1\" 500 415926\nIdeally, using a reversed foreign key would also result in a system check error instead of a 500 response.\nTo reproduce, follow the Question and Choice models from the Django Tutorial and add the following to the QuestionAdmin:\nlist_display = [\"question_text\", \"choice_set\"]\nThen, visit /admin/testapp/question/ and the following traceback is returned:\nInternal Server Error: /admin/testapp/question/\nTraceback (most recent call last):\n File \"/some/path/django/django/db/models/options.py\", line 681, in get_field\n\treturn self.fields_map[field_name]\n\t\t ~~~~~~~~~~~~~~~^^^^^^^^^^^^\nKeyError: 'choice_set'\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n File \"/some/path/django/django/contrib/admin/utils.py\", line 288, in lookup_field\n\tf = _get_non_gfk_field(opts, name)\n\t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/contrib/admin/utils.py\", line 319, in _get_non_gfk_field\n\tfield = opts.get_field(name)\n\t\t\t^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/db/models/options.py\", line 683, in get_field\n\traise FieldDoesNotExist(\ndjango.core.exceptions.FieldDoesNotExist: Question has no field named 'choice_set'\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n File \"/some/path/django/django/core/handlers/exception.py\", line 55, in inner\n\tresponse = get_response(request)\n\t\t\t ^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/core/handlers/base.py\", line 220, in _get_response\n\tresponse = response.render()\n\t\t\t ^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/response.py\", line 111, in render\n\tself.content = self.rendered_content\n\t\t\t\t ^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/response.py\", line 89, in rendered_content\n\treturn template.render(context, self._request)\n\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/backends/django.py\", line 61, in render\n\treturn self.template.render(context)\n\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 171, in render\n\treturn self._render(context)\n\t\t ^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 163, in _render\n\treturn self.nodelist.render(context)\n\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 1001, in render\n\treturn SafeString(\"\".join([node.render_annotated(context) for node in self]))\n\t\t\t\t\t\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 1001, in <listcomp>\n\treturn SafeString(\"\".join([node.render_annotated(context) for node in self]))\n\t\t\t\t\t\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 962, in render_annotated\n\treturn self.render(context)\n\t\t ^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/loader_tags.py\", line 157, in render\n\treturn compiled_parent._render(context)\n\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 163, in _render\n\treturn self.nodelist.render(context)\n\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 1001, in render\n\treturn SafeString(\"\".join([node.render_annotated(context) for node in self]))\n\t\t\t\t\t\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 1001, in <listcomp>\n\treturn SafeString(\"\".join([node.render_annotated(context) for node in self]))\n\t\t\t\t\t\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 962, in render_annotated\n\treturn self.render(context)\n\t\t ^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/loader_tags.py\", line 157, in render\n\treturn compiled_parent._render(context)\n\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 163, in _render\n\treturn self.nodelist.render(context)\n\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 1001, in render\n\treturn SafeString(\"\".join([node.render_annotated(context) for node in self]))\n\t\t\t\t\t\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 1001, in <listcomp>\n\treturn SafeString(\"\".join([node.render_annotated(context) for node in self]))\n\t\t\t\t\t\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 962, in render_annotated\n\treturn self.render(context)\n\t\t ^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/loader_tags.py\", line 63, in render\n\tresult = block.nodelist.render(context)\n\t\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 1001, in render\n\treturn SafeString(\"\".join([node.render_annotated(context) for node in self]))\n\t\t\t\t\t\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 1001, in <listcomp>\n\treturn SafeString(\"\".join([node.render_annotated(context) for node in self]))\n\t\t\t\t\t\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 962, in render_annotated\n\treturn self.render(context)\n\t\t ^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/loader_tags.py\", line 63, in render\n\tresult = block.nodelist.render(context)\n\t\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 1001, in render\n\treturn SafeString(\"\".join([node.render_annotated(context) for node in self]))\n\t\t\t\t\t\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 1001, in <listcomp>\n\treturn SafeString(\"\".join([node.render_annotated(context) for node in self]))\n\t\t\t\t\t\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/base.py\", line 962, in render_annotated\n\treturn self.render(context)\n\t\t ^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/contrib/admin/templatetags/base.py\", line 45, in render\n\treturn super().render(context)\n\t\t ^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/template/library.py\", line 258, in render\n\t_dict = self.func(*resolved_args, **resolved_kwargs)\n\t\t\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/contrib/admin/templatetags/admin_list.py\", line 340, in result_list\n\t\"results\": list(results(cl)),\n\t\t\t ^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/contrib/admin/templatetags/admin_list.py\", line 316, in results\n\tyield ResultList(None, items_for_result(cl, res, None))\n\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/contrib/admin/templatetags/admin_list.py\", line 307, in __init__\n\tsuper().__init__(*items)\n File \"/some/path/django/django/contrib/admin/templatetags/admin_list.py\", line 217, in items_for_result\n\tf, attr, value = lookup_field(field_name, result, cl.model_admin)\n\t\t\t\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/some/path/django/django/contrib/admin/utils.py\", line 301, in lookup_field\n\tvalue = attr()\n\t\t\t^^^^^^\nTypeError: create_reverse_many_to_one_manager.<locals>.RelatedManager.__call__() missing 1 required keyword-only argument: 'manager'\n[10/Apr/2023 19:30:40] \"GET /admin/testapp/question/ HTTP/1.1\" 500 415926\n",
  "hints_text": "Thanks for the report.",
  "created_at": "2023-04-12T15:09:26Z",
  "version": "5.0",
  "FAIL_TO_PASS": "[\"test_invalid_field_type (modeladmin.test_checks.ListDisplayTests.test_invalid_field_type)\", \"test_invalid_reverse_related_field (modeladmin.test_checks.ListDisplayTests.test_invalid_reverse_related_field)\"]",
  "PASS_TO_PASS": "[\"test_actions_not_unique (modeladmin.test_checks.ActionsCheckTests.test_actions_not_unique)\", \"test_actions_unique (modeladmin.test_checks.ActionsCheckTests.test_actions_unique)\", \"test_custom_permissions_require_matching_has_method (modeladmin.test_checks.ActionsCheckTests.test_custom_permissions_require_matching_has_method)\", \"test_duplicate_fields_in_fields (modeladmin.test_checks.FieldsCheckTests.test_duplicate_fields_in_fields)\", \"test_inline (modeladmin.test_checks.FieldsCheckTests.test_inline)\", \"test_invalid_field_type (modeladmin.test_checks.FilterHorizontalCheckTests.test_invalid_field_type)\", \"test_missing_field (modeladmin.test_checks.FilterHorizontalCheckTests.test_missing_field)\", \"test_not_iterable (modeladmin.test_checks.FilterHorizontalCheckTests.test_not_iterable)\", \"test_valid_case (modeladmin.test_checks.FilterHorizontalCheckTests.test_valid_case)\", \"test_inline_without_formset_class (modeladmin.test_checks.FormsetCheckTests.test_inline_without_formset_class)\", \"test_invalid_type (modeladmin.test_checks.FormsetCheckTests.test_invalid_type)\", \"test_valid_case (modeladmin.test_checks.FormsetCheckTests.test_valid_case)\", \"test_invalid_field_type (modeladmin.test_checks.FilterVerticalCheckTests.test_invalid_field_type)\", \"test_missing_field (modeladmin.test_checks.FilterVerticalCheckTests.test_missing_field)\", \"test_not_iterable (modeladmin.test_checks.FilterVerticalCheckTests.test_not_iterable)\", \"test_valid_case (modeladmin.test_checks.FilterVerticalCheckTests.test_valid_case)\", \"test_not_integer (modeladmin.test_checks.ExtraCheckTests.test_not_integer)\", \"test_valid_case (modeladmin.test_checks.ExtraCheckTests.test_valid_case)\", \"test_invalid_callable (modeladmin.test_checks.InlinesCheckTests.test_invalid_callable)\", \"test_invalid_model (modeladmin.test_checks.InlinesCheckTests.test_invalid_model)\", \"test_invalid_model_type (modeladmin.test_checks.InlinesCheckTests.test_invalid_model_type)\", \"test_missing_model_field (modeladmin.test_checks.InlinesCheckTests.test_missing_model_field)\", \"test_not_correct_inline_field (modeladmin.test_checks.InlinesCheckTests.test_not_correct_inline_field)\", \"test_not_iterable (modeladmin.test_checks.InlinesCheckTests.test_not_iterable)\", \"test_not_model_admin (modeladmin.test_checks.InlinesCheckTests.test_not_model_admin)\", \"test_valid_case (modeladmin.test_checks.InlinesCheckTests.test_valid_case)\", \"test_invalid_field_type (modeladmin.test_checks.DateHierarchyCheckTests.test_invalid_field_type)\", \"test_missing_field (modeladmin.test_checks.DateHierarchyCheckTests.test_missing_field)\", \"test_related_invalid_field_type (modeladmin.test_checks.DateHierarchyCheckTests.test_related_invalid_field_type)\", \"test_related_valid_case (modeladmin.test_checks.DateHierarchyCheckTests.test_related_valid_case)\", \"test_valid_case (modeladmin.test_checks.DateHierarchyCheckTests.test_valid_case)\", \"test_fieldsets_with_custom_form_validation (modeladmin.test_checks.FormCheckTests.test_fieldsets_with_custom_form_validation)\", \"test_invalid_type (modeladmin.test_checks.FormCheckTests.test_invalid_type)\", \"test_valid_case (modeladmin.test_checks.FormCheckTests.test_valid_case)\", \"test_duplicate_fields (modeladmin.test_checks.FieldsetsCheckTests.test_duplicate_fields)\", \"test_duplicate_fields_in_fieldsets (modeladmin.test_checks.FieldsetsCheckTests.test_duplicate_fields_in_fieldsets)\", \"test_fieldsets_with_custom_form_validation (modeladmin.test_checks.FieldsetsCheckTests.test_fieldsets_with_custom_form_validation)\", \"test_item_not_a_pair (modeladmin.test_checks.FieldsetsCheckTests.test_item_not_a_pair)\", \"test_missing_fields_key (modeladmin.test_checks.FieldsetsCheckTests.test_missing_fields_key)\", \"test_non_iterable_item (modeladmin.test_checks.FieldsetsCheckTests.test_non_iterable_item)\", \"test_not_iterable (modeladmin.test_checks.FieldsetsCheckTests.test_not_iterable)\", \"test_second_element_of_item_not_a_dict (modeladmin.test_checks.FieldsetsCheckTests.test_second_element_of_item_not_a_dict)\", \"test_specified_both_fields_and_fieldsets (modeladmin.test_checks.FieldsetsCheckTests.test_specified_both_fields_and_fieldsets)\", \"test_valid_case (modeladmin.test_checks.FieldsetsCheckTests.test_valid_case)\", \"test_autocomplete_e036 (modeladmin.test_checks.AutocompleteFieldsTests.test_autocomplete_e036)\", \"test_autocomplete_e037 (modeladmin.test_checks.AutocompleteFieldsTests.test_autocomplete_e037)\", \"test_autocomplete_e039 (modeladmin.test_checks.AutocompleteFieldsTests.test_autocomplete_e039)\", \"test_autocomplete_e040 (modeladmin.test_checks.AutocompleteFieldsTests.test_autocomplete_e040)\", \"test_autocomplete_e38 (modeladmin.test_checks.AutocompleteFieldsTests.test_autocomplete_e38)\", \"test_autocomplete_is_onetoone (modeladmin.test_checks.AutocompleteFieldsTests.test_autocomplete_is_onetoone)\", \"test_autocomplete_is_valid (modeladmin.test_checks.AutocompleteFieldsTests.test_autocomplete_is_valid)\", \"test_missing_field (modeladmin.test_checks.FkNameCheckTests.test_missing_field)\", \"test_proxy_model_parent (modeladmin.test_checks.FkNameCheckTests.test_proxy_model_parent)\", \"test_valid_case (modeladmin.test_checks.FkNameCheckTests.test_valid_case)\", \"test_both_list_editable_and_list_display_links (modeladmin.test_checks.ListDisplayEditableTests.test_both_list_editable_and_list_display_links)\", \"The first item in list_display can be in list_editable as long as\", \"The first item in list_display cannot be in list_editable if\", \"The first item in list_display can be the same as the first in\", \"The first item in list_display cannot be the same as the first item\", \"list_display and list_editable can contain the same values\", \"test_not_integer (modeladmin.test_checks.ListMaxShowAllCheckTests.test_not_integer)\", \"test_valid_case (modeladmin.test_checks.ListMaxShowAllCheckTests.test_valid_case)\", \"test_not_integer (modeladmin.test_checks.ListPerPageCheckTests.test_not_integer)\", \"test_valid_case (modeladmin.test_checks.ListPerPageCheckTests.test_valid_case)\", \"test_invalid_type (modeladmin.test_checks.ListSelectRelatedCheckTests.test_invalid_type)\", \"test_valid_case (modeladmin.test_checks.ListSelectRelatedCheckTests.test_valid_case)\", \"test_not_integer (modeladmin.test_checks.MinNumCheckTests.test_not_integer)\", \"test_valid_case (modeladmin.test_checks.MinNumCheckTests.test_valid_case)\", \"test_None_is_valid_case (modeladmin.test_checks.ListDisplayLinksCheckTests.test_None_is_valid_case)\", \"list_display_links is checked for list/tuple/None even if\", \"list_display_links check is skipped if get_list_display() is overridden.\", \"test_missing_field (modeladmin.test_checks.ListDisplayLinksCheckTests.test_missing_field)\", \"test_missing_in_list_display (modeladmin.test_checks.ListDisplayLinksCheckTests.test_missing_in_list_display)\", \"test_not_iterable (modeladmin.test_checks.ListDisplayLinksCheckTests.test_not_iterable)\", \"test_valid_case (modeladmin.test_checks.ListDisplayLinksCheckTests.test_valid_case)\", \"test_not_integer (modeladmin.test_checks.MaxNumCheckTests.test_not_integer)\", \"test_valid_case (modeladmin.test_checks.MaxNumCheckTests.test_valid_case)\", \"test_callable (modeladmin.test_checks.ListFilterTests.test_callable)\", \"test_list_filter_is_func (modeladmin.test_checks.ListFilterTests.test_list_filter_is_func)\", \"test_list_filter_validation (modeladmin.test_checks.ListFilterTests.test_list_filter_validation)\", \"test_missing_field (modeladmin.test_checks.ListFilterTests.test_missing_field)\", \"test_not_associated_with_field_name (modeladmin.test_checks.ListFilterTests.test_not_associated_with_field_name)\", \"test_not_callable (modeladmin.test_checks.ListFilterTests.test_not_callable)\", \"test_not_filter (modeladmin.test_checks.ListFilterTests.test_not_filter)\", \"test_not_filter_again (modeladmin.test_checks.ListFilterTests.test_not_filter_again)\", \"test_not_filter_again_again (modeladmin.test_checks.ListFilterTests.test_not_filter_again_again)\", \"test_not_list_filter_class (modeladmin.test_checks.ListFilterTests.test_not_list_filter_class)\", \"test_valid_case (modeladmin.test_checks.ListFilterTests.test_valid_case)\", \"test_not_boolean (modeladmin.test_checks.SaveOnTopCheckTests.test_not_boolean)\", \"test_valid_case (modeladmin.test_checks.SaveOnTopCheckTests.test_valid_case)\", \"test_invalid_field_type (modeladmin.test_checks.PrepopulatedFieldsCheckTests.test_invalid_field_type)\", \"test_missing_field (modeladmin.test_checks.PrepopulatedFieldsCheckTests.test_missing_field)\", \"test_missing_field_again (modeladmin.test_checks.PrepopulatedFieldsCheckTests.test_missing_field_again)\", \"test_not_dictionary (modeladmin.test_checks.PrepopulatedFieldsCheckTests.test_not_dictionary)\", \"test_not_list_or_tuple (modeladmin.test_checks.PrepopulatedFieldsCheckTests.test_not_list_or_tuple)\", \"test_one_to_one_field (modeladmin.test_checks.PrepopulatedFieldsCheckTests.test_one_to_one_field)\", \"test_valid_case (modeladmin.test_checks.PrepopulatedFieldsCheckTests.test_valid_case)\", \"test_missing_field (modeladmin.test_checks.ListDisplayTests.test_missing_field)\", \"test_not_iterable (modeladmin.test_checks.ListDisplayTests.test_not_iterable)\", \"test_valid_case (modeladmin.test_checks.ListDisplayTests.test_valid_case)\", \"test_valid_field_accessible_via_instance (modeladmin.test_checks.ListDisplayTests.test_valid_field_accessible_via_instance)\", \"test_not_boolean (modeladmin.test_checks.SaveAsCheckTests.test_not_boolean)\", \"test_valid_case (modeladmin.test_checks.SaveAsCheckTests.test_valid_case)\", \"test_not_iterable (modeladmin.test_checks.SearchFieldsCheckTests.test_not_iterable)\", \"test_field_attname (modeladmin.test_checks.RawIdCheckTests.test_field_attname)\", \"test_invalid_field_type (modeladmin.test_checks.RawIdCheckTests.test_invalid_field_type)\", \"test_missing_field (modeladmin.test_checks.RawIdCheckTests.test_missing_field)\", \"test_not_iterable (modeladmin.test_checks.RawIdCheckTests.test_not_iterable)\", \"test_valid_case (modeladmin.test_checks.RawIdCheckTests.test_valid_case)\", \"test_invalid_expression (modeladmin.test_checks.OrderingCheckTests.test_invalid_expression)\", \"test_not_iterable (modeladmin.test_checks.OrderingCheckTests.test_not_iterable)\", \"test_random_marker_not_alone (modeladmin.test_checks.OrderingCheckTests.test_random_marker_not_alone)\", \"test_valid_case (modeladmin.test_checks.OrderingCheckTests.test_valid_case)\", \"test_valid_complex_case (modeladmin.test_checks.OrderingCheckTests.test_valid_complex_case)\", \"test_valid_expression (modeladmin.test_checks.OrderingCheckTests.test_valid_expression)\", \"test_valid_random_marker_case (modeladmin.test_checks.OrderingCheckTests.test_valid_random_marker_case)\", \"test_invalid_field_type (modeladmin.test_checks.RadioFieldsCheckTests.test_invalid_field_type)\", \"test_invalid_value (modeladmin.test_checks.RadioFieldsCheckTests.test_invalid_value)\", \"test_missing_field (modeladmin.test_checks.RadioFieldsCheckTests.test_missing_field)\", \"test_not_dictionary (modeladmin.test_checks.RadioFieldsCheckTests.test_not_dictionary)\", \"test_valid_case (modeladmin.test_checks.RadioFieldsCheckTests.test_valid_case)\"]",
  "environment_setup_commit": "4a72da71001f154ea60906a2f74898d32b7322a7",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.770597",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}