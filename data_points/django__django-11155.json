{
  "repo": "django/django",
  "instance_id": "django__django-11155",
  "base_commit": "cef3f2d3c64055c9fc1757fd61dba24b557a2add",
  "patch": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -154,6 +154,9 @@ def gettext_noop(s):\n LANGUAGE_COOKIE_AGE = None\n LANGUAGE_COOKIE_DOMAIN = None\n LANGUAGE_COOKIE_PATH = '/'\n+LANGUAGE_COOKIE_SECURE = False\n+LANGUAGE_COOKIE_HTTPONLY = False\n+LANGUAGE_COOKIE_SAMESITE = None\n \n \n # If you set this to True, Django will format dates, numbers and calendars\ndiff --git a/django/views/i18n.py b/django/views/i18n.py\n--- a/django/views/i18n.py\n+++ b/django/views/i18n.py\n@@ -55,6 +55,9 @@ def set_language(request):\n                 max_age=settings.LANGUAGE_COOKIE_AGE,\n                 path=settings.LANGUAGE_COOKIE_PATH,\n                 domain=settings.LANGUAGE_COOKIE_DOMAIN,\n+                secure=settings.LANGUAGE_COOKIE_SECURE,\n+                httponly=settings.LANGUAGE_COOKIE_HTTPONLY,\n+                samesite=settings.LANGUAGE_COOKIE_SAMESITE,\n             )\n     return response\n \n",
  "test_patch": "diff --git a/tests/view_tests/tests/test_i18n.py b/tests/view_tests/tests/test_i18n.py\n--- a/tests/view_tests/tests/test_i18n.py\n+++ b/tests/view_tests/tests/test_i18n.py\n@@ -45,6 +45,9 @@ def test_setlang(self):\n         self.assertEqual(language_cookie['domain'], '')\n         self.assertEqual(language_cookie['path'], '/')\n         self.assertEqual(language_cookie['max-age'], '')\n+        self.assertEqual(language_cookie['httponly'], '')\n+        self.assertEqual(language_cookie['samesite'], '')\n+        self.assertEqual(language_cookie['secure'], '')\n \n     def test_setlang_unsafe_next(self):\n         \"\"\"\n@@ -175,6 +178,9 @@ def test_setlang_cookie(self):\n             'LANGUAGE_COOKIE_AGE': 3600 * 7 * 2,\n             'LANGUAGE_COOKIE_DOMAIN': '.example.com',\n             'LANGUAGE_COOKIE_PATH': '/test/',\n+            'LANGUAGE_COOKIE_HTTPONLY': True,\n+            'LANGUAGE_COOKIE_SAMESITE': 'Strict',\n+            'LANGUAGE_COOKIE_SECURE': True,\n         }\n         with self.settings(**test_settings):\n             post_data = {'language': 'pl', 'next': '/views/'}\n@@ -184,6 +190,9 @@ def test_setlang_cookie(self):\n             self.assertEqual(language_cookie['domain'], '.example.com')\n             self.assertEqual(language_cookie['path'], '/test/')\n             self.assertEqual(language_cookie['max-age'], 3600 * 7 * 2)\n+            self.assertEqual(language_cookie['httponly'], True)\n+            self.assertEqual(language_cookie['samesite'], 'Strict')\n+            self.assertEqual(language_cookie['secure'], True)\n \n     def test_setlang_decodes_http_referer_url(self):\n         \"\"\"\n",
  "problem_statement": "Support setting Secure, HttpOnly, SameSite on the language cookie\nDescription\n\t\nI propose to add the following settings, with the following default values:\nLANGUAGE_COOKIE_SECURE = False\nLANGUAGE_COOKIE_HTTPONLY = False\nLANGUAGE_COOKIE_SAMESITE = None\nThe default values maintain the current behavior.\nThese settings do not provide much security value, since the language is not secret or sensitive. This was also discussed briefly here: ​https://github.com/django/django/pull/8380#discussion_r112448195. The reasons I'd like to add them are:\nSometimes auditors require them.\nI personally prefer to set them unless I have a reason *not* to.\nBrowsers are starting to strongly nudge toward HttpOnly and Secure when possible, e.g. ​https://webkit.org/blog/8613/intelligent-tracking-prevention-2-1/.\n",
  "hints_text": "",
  "created_at": "2019-04-01T10:04:40Z",
  "version": "3.0",
  "FAIL_TO_PASS": "[\"test_setlang_cookie (view_tests.tests.test_i18n.SetLanguageTests)\"]",
  "PASS_TO_PASS": "[\"test_lang_from_translated_i18n_pattern (view_tests.tests.test_i18n.SetLanguageTests)\", \"test_session_langauge_deprecation (view_tests.tests.test_i18n.SetLanguageTests)\", \"test_setlang (view_tests.tests.test_i18n.SetLanguageTests)\", \"test_setlang_decodes_http_referer_url (view_tests.tests.test_i18n.SetLanguageTests)\", \"test_setlang_default_redirect (view_tests.tests.test_i18n.SetLanguageTests)\", \"test_setlang_doesnt_perform_a_default_redirect_for_ajax (view_tests.tests.test_i18n.SetLanguageTests)\", \"test_setlang_doesnt_perform_a_redirect_to_referer_for_ajax (view_tests.tests.test_i18n.SetLanguageTests)\", \"test_setlang_http_next (view_tests.tests.test_i18n.SetLanguageTests)\", \"test_setlang_performs_redirect_for_ajax_if_explicitly_requested (view_tests.tests.test_i18n.SetLanguageTests)\", \"test_setlang_redirect_to_referer (view_tests.tests.test_i18n.SetLanguageTests)\", \"test_setlang_reversal (view_tests.tests.test_i18n.SetLanguageTests)\", \"test_setlang_unsafe_next (view_tests.tests.test_i18n.SetLanguageTests)\", \"test_setlang_unsafe_next_for_ajax (view_tests.tests.test_i18n.SetLanguageTests)\", \"test_escaping (view_tests.tests.test_i18n.I18NViewTests)\", \"test_get_formats (view_tests.tests.test_i18n.I18NViewTests)\", \"test_i18n_different_non_english_languages (view_tests.tests.test_i18n.I18NViewTests)\", \"test_i18n_english_variant (view_tests.tests.test_i18n.I18NViewTests)\", \"test_i18n_fallback_language_plural (view_tests.tests.test_i18n.I18NViewTests)\", \"test_i18n_language_english_default (view_tests.tests.test_i18n.I18NViewTests)\", \"test_i18n_language_non_english_default (view_tests.tests.test_i18n.I18NViewTests)\", \"test_i18n_language_non_english_fallback (view_tests.tests.test_i18n.I18NViewTests)\", \"test_i18n_unknown_package_error (view_tests.tests.test_i18n.I18NViewTests)\", \"test_i18n_with_locale_paths (view_tests.tests.test_i18n.I18NViewTests)\", \"The javascript_catalog can be deployed with language settings\", \"test_jsi18n_USE_I18N_False (view_tests.tests.test_i18n.I18NViewTests)\", \"test_jsi18n_fallback_language (view_tests.tests.test_i18n.I18NViewTests)\", \"test_jsi18n_with_missing_en_files (view_tests.tests.test_i18n.I18NViewTests)\", \"test_jsoni18n (view_tests.tests.test_i18n.I18NViewTests)\", \"test_jsoni18n_with_missing_en_files (view_tests.tests.test_i18n.I18NViewTests)\", \"test_non_BMP_char (view_tests.tests.test_i18n.I18NViewTests)\", \"test_non_english_default_english_userpref (view_tests.tests.test_i18n.I18NViewTests)\"]",
  "environment_setup_commit": "419a78300f7cd27611196e1e464d50fd0385ff27",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.562109",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}