{
  "repo": "pallets/flask",
  "instance_id": "pallets__flask-4169",
  "base_commit": "66d9d4fa8d07dd50e4cb3036a9ae5f92c4693b84",
  "patch": "diff --git a/src/flask/cli.py b/src/flask/cli.py\n--- a/src/flask/cli.py\n+++ b/src/flask/cli.py\n@@ -312,7 +312,7 @@ def __init__(self, loader, use_eager_loading=None):\n         self.loader = loader\n         self._app = None\n         self._lock = Lock()\n-        self._bg_loading_exc_info = None\n+        self._bg_loading_exc = None\n \n         if use_eager_loading is None:\n             use_eager_loading = os.environ.get(\"WERKZEUG_RUN_MAIN\") != \"true\"\n@@ -328,23 +328,24 @@ def _load_app():\n             with self._lock:\n                 try:\n                     self._load_unlocked()\n-                except Exception:\n-                    self._bg_loading_exc_info = sys.exc_info()\n+                except Exception as e:\n+                    self._bg_loading_exc = e\n \n         t = Thread(target=_load_app, args=())\n         t.start()\n \n     def _flush_bg_loading_exception(self):\n         __traceback_hide__ = True  # noqa: F841\n-        exc_info = self._bg_loading_exc_info\n-        if exc_info is not None:\n-            self._bg_loading_exc_info = None\n-            raise exc_info\n+        exc = self._bg_loading_exc\n+\n+        if exc is not None:\n+            self._bg_loading_exc = None\n+            raise exc\n \n     def _load_unlocked(self):\n         __traceback_hide__ = True  # noqa: F841\n         self._app = rv = self.loader()\n-        self._bg_loading_exc_info = None\n+        self._bg_loading_exc = None\n         return rv\n \n     def __call__(self, environ, start_response):\n",
  "test_patch": "diff --git a/tests/test_cli.py b/tests/test_cli.py\n--- a/tests/test_cli.py\n+++ b/tests/test_cli.py\n@@ -17,6 +17,7 @@\n from flask import current_app\n from flask import Flask\n from flask.cli import AppGroup\n+from flask.cli import DispatchingApp\n from flask.cli import dotenv\n from flask.cli import find_best_app\n from flask.cli import FlaskGroup\n@@ -310,6 +311,23 @@ def create_app():\n     assert app.name == \"testapp\"\n \n \n+def test_lazy_load_error(monkeypatch):\n+    \"\"\"When using lazy loading, the correct exception should be\n+    re-raised.\n+    \"\"\"\n+\n+    class BadExc(Exception):\n+        pass\n+\n+    def bad_load():\n+        raise BadExc\n+\n+    lazy = DispatchingApp(bad_load, use_eager_loading=False)\n+\n+    with pytest.raises(BadExc):\n+        lazy._flush_bg_loading_exception()\n+\n+\n def test_with_appcontext(runner):\n     @click.command()\n     @with_appcontext\n",
  "problem_statement": "Exceptions are sometimes replaced with \"TypeError: exceptions must derive from BaseException\"\n```python\r\n# a.py\r\ndef create_app(): raise RuntimeError()\r\n```\r\n```\r\n$ FLASK_APP=a.py flask run --lazy-loading\r\n$ curl http://127.0.0.1:5000\r\n[...]\r\nTraceback (most recent call last):\r\n  File \"[...]/lib/python3.9/site-packages/flask/cli.py\", line 356, in __call__\r\n    self._flush_bg_loading_exception()\r\n  File \"[...]/lib/python3.9/site-packages/flask/cli.py\", line 344, in _flush_bg_loading_exception\r\n    raise exc_info\r\nTypeError: exceptions must derive from BaseException\r\n```\r\n\r\nI expected something about a RuntimeError.  `raise exc_info[1]` here worked for me https://github.com/pallets/flask/blob/7161776824734fc2797fe2b4fc974d183487ebf8/src/flask/cli.py#L342\r\n\r\n\r\nEnvironment:\r\n\r\n- Python version: 3.9.5\r\n- Flask version: 2.0.1\r\n\n",
  "hints_text": "I am seeing this too. I just started a new flask project.\nfor me it was because i had the same function names for the same endpoint",
  "created_at": "2021-06-22T23:57:43Z",
  "version": "2.0",
  "FAIL_TO_PASS": "[\"tests/test_cli.py::test_lazy_load_error\"]",
  "PASS_TO_PASS": "[\"tests/test_cli.py::test_prepare_import[test-path0-test]\", \"tests/test_cli.py::test_prepare_import[test.py-path1-test]\", \"tests/test_cli.py::test_prepare_import[a/test-path2-test]\", \"tests/test_cli.py::test_prepare_import[test/__init__.py-path3-test]\", \"tests/test_cli.py::test_prepare_import[test/__init__-path4-test]\", \"tests/test_cli.py::test_prepare_import[value5-path5-cliapp.inner1]\", \"tests/test_cli.py::test_prepare_import[value6-path6-cliapp.inner1.inner2]\", \"tests/test_cli.py::test_prepare_import[test.a.b-path7-test.a.b]\", \"tests/test_cli.py::test_prepare_import[value8-path8-cliapp.app]\", \"tests/test_cli.py::test_prepare_import[value9-path9-cliapp.message.txt]\", \"tests/test_cli.py::test_with_appcontext\", \"tests/test_cli.py::test_appgroup\", \"tests/test_cli.py::TestRoutes::test_sort\", \"tests/test_cli.py::test_load_dotenv\", \"tests/test_cli.py::test_dotenv_path\", \"tests/test_cli.py::test_dotenv_optional\", \"tests/test_cli.py::test_disable_dotenv_from_env\", \"tests/test_cli.py::test_run_cert_path\", \"tests/test_cli.py::test_run_cert_adhoc\", \"tests/test_cli.py::test_run_cert_import\", \"tests/test_cli.py::test_run_cert_no_ssl\", \"tests/test_cli.py::test_cli_blueprints\", \"tests/test_cli.py::test_cli_empty\", \"tests/test_cli.py::test_click_7_deprecated\"]",
  "environment_setup_commit": "4346498c85848c53843b810537b83a8f6124c9d3",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.842327",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}