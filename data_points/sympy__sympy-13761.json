{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-13761",
  "base_commit": "a5e6a101869e027e7930e694f8b1cfb082603453",
  "patch": "diff --git a/sympy/functions/elementary/trigonometric.py b/sympy/functions/elementary/trigonometric.py\n--- a/sympy/functions/elementary/trigonometric.py\n+++ b/sympy/functions/elementary/trigonometric.py\n@@ -1742,7 +1742,7 @@ def taylor_term(n, x, *previous_terms):\n                     bernoulli(2*k)*x**(2*k - 1)/factorial(2*k))\n \n \n-class sinc(TrigonometricFunction):\n+class sinc(Function):\n     r\"\"\"Represents unnormalized sinc function\n \n     Examples\n",
  "test_patch": "diff --git a/sympy/simplify/tests/test_simplify.py b/sympy/simplify/tests/test_simplify.py\n--- a/sympy/simplify/tests/test_simplify.py\n+++ b/sympy/simplify/tests/test_simplify.py\n@@ -1,11 +1,11 @@\n from sympy import (\n     Abs, acos, Add, atan, Basic, binomial, besselsimp, collect,cos, cosh, cot,\n-    coth, count_ops, Derivative, diff, E, Eq, erf, exp, exp_polar, expand,\n+    coth, count_ops, csch, Derivative, diff, E, Eq, erf, exp, exp_polar, expand,\n     expand_multinomial, factor, factorial, Float, fraction, Function,\n     gamma, GoldenRatio, hyper, hypersimp, I, Integral, integrate, log,\n     logcombine, Matrix, MatrixSymbol, Mul, nsimplify, O, oo, pi, Piecewise,\n     posify, rad, Rational, root, S, separatevars, signsimp, simplify,\n-    sin, sinh, solve, sqrt, Symbol, symbols, sympify, tan, tanh, zoo,\n+    sin, sinc, sinh, solve, sqrt, Symbol, symbols, sympify, tan, tanh, zoo,\n     Sum, Lt, sign)\n from sympy.core.mul import _keep_coeff\n from sympy.simplify.simplify import nthroot\n@@ -676,6 +676,11 @@ def test_issue_9324_simplify():\n     assert simplify(e) == e\n \n \n+def test_issue_13474():\n+    x = Symbol('x')\n+    assert simplify(x + csch(sinc(1))) == x + csch(sinc(1))\n+\n+\n def test_simplify_function_inverse():\n     x, y = symbols('x, y')\n     g = Function('g')\n",
  "problem_statement": "Cannot simplify x + csch(sinc(1))\n    >>> from sympy import *\r\n    >>> x = Symbol('x')\r\n    >>> print(simplify(x + csch(sinc(1))))\r\n    ...\r\n    File \"C:\\Users\\E\\Desktop\\sympy-master\\sympy\\simplify\\fu.py\", line 433, in f\r\n    rv = fmap[rv.func](S.Pi/2 - rv.args[0])\r\n    KeyError: sinc\r\n\r\n(I should have said: cannot apply the simplification function, since I'm not expecting any simplification to  actually take place).\n",
  "hints_text": "",
  "created_at": "2017-12-18T14:24:24Z",
  "version": "1.1",
  "FAIL_TO_PASS": "[\"test_issue_13474\"]",
  "PASS_TO_PASS": "[\"test_issue_3557\", \"test_simplify_complex\", \"test_simplify_ratio\", \"test_simplify_measure\", \"test_simplify_rational\", \"test_simplify_issue_1308\", \"test_issue_5652\", \"test_simplify_fail1\", \"test_hypersimp\", \"test_nsimplify\", \"test_issue_9448\", \"test_extract_minus_sign\", \"test_logcombine_complex_coeff\", \"test_posify\", \"test_issue_4194\", \"test_as_content_primitive\", \"test_signsimp\", \"test_Piecewise\", \"test_polymorphism\", \"test_issue_6811\", \"test_issue_6920\", \"test_issue_7001\", \"test_inequality_no_auto_simplify\", \"test_issue_9398\", \"test_issue_9324_simplify\", \"test_simplify_function_inverse\"]",
  "environment_setup_commit": "ec9e3c0436fbff934fa84e22bf07f1b3ef5bfac3",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.086897",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}