{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-13369",
  "base_commit": "61eaf5c15ba9248881de0a22afbe12bf10e3f342",
  "patch": "diff --git a/sympy/polys/polyroots.py b/sympy/polys/polyroots.py\n--- a/sympy/polys/polyroots.py\n+++ b/sympy/polys/polyroots.py\n@@ -1012,6 +1012,9 @@ def _try_heuristics(f):\n                             if not result:\n                                 for root in _try_decompose(f):\n                                     _update_dict(result, root, 1)\n+                        else:\n+                            for r in _try_heuristics(f):\n+                                _update_dict(result, r, 1)\n                     else:\n                         for root in _try_decompose(f):\n                             _update_dict(result, root, 1)\n",
  "test_patch": "diff --git a/sympy/polys/tests/test_polyroots.py b/sympy/polys/tests/test_polyroots.py\n--- a/sympy/polys/tests/test_polyroots.py\n+++ b/sympy/polys/tests/test_polyroots.py\n@@ -97,6 +97,12 @@ def test_issue_8289():\n     assert roots == _nsort(roots)\n \n \n+def test_issue_13340():\n+    eq = Poly(y**3 + exp(x)*y + x, y, domain='EX')\n+    roots_d = roots(eq)\n+    assert len(roots_d) == 3\n+\n+\n def test_roots_cubic():\n     assert roots_cubic(Poly(2*x**3, x)) == [0, 0, 0]\n     assert roots_cubic(Poly(x**3 - 3*x**2 + 3*x - 1, x)) == [1, 1, 1]\n",
  "problem_statement": "Eigenvalues of a 3 by 3 symbolic matrix are not found by .eigenvals\n```\r\nfrom sympy import *\r\nx = Symbol('x')\r\nM = Matrix([[x, 0, 1], [x, 0, 2], [exp(x), 1, 0]])\r\nM.eigenvals()\r\n```\r\n\r\nthrows \r\n\r\n>  sympy.matrices.common.MatrixError: Could not compute eigenvalues for Matrix([[x, 0, 1], [x, 0, 2], [exp(x), 1, 0]])\r\n\r\nSince the characteristic polynomial is cubic, it can be solved explicitly:\r\n\r\n```\r\nlam = Symbol('lambda')\r\nsolve(det(lam*eye(3) -M), lam) \r\n```\r\n\r\nreturns three roots of the characteristic polynomial. I do not understand why these are not found by `roots(M.charpoly())` which returns `{}` (hence the failure of `eigenvals` method). Declaring x as a real symbol does not help. \r\n\r\nBased on Stack Overflow post [Computation of symbolic eigenvalues with sympy](https://stackoverflow.com/q/46361388#46374276)\n",
  "hints_text": "The initial problem occurs on line 1005 of polys.polyroots.py, since to_rational_coeffs fails. I do not know why it is necessary to have rational coefficients to solve a cubic.\nIt seems to me that the treatment of polynomials with `EX` domain has not been completed. Transforming the equation to one with rational coefficients will succeed only rarely. It should be possible to continue with `_try_heuristics` in case the coefficients cannot be made rational.",
  "created_at": "2017-09-29T17:19:03Z",
  "version": "1.1",
  "FAIL_TO_PASS": "[\"test_issue_13340\"]",
  "PASS_TO_PASS": "[\"test_roots_linear\", \"test_roots_quadratic\", \"test_issue_8438\", \"test_roots_cubic\", \"test_roots_preprocessing\", \"test_roots_slow\", \"test_roots_inexact\", \"test_roots_preprocessed\", \"test_roots_mixed\", \"test_nroots2\"]",
  "environment_setup_commit": "ec9e3c0436fbff934fa84e22bf07f1b3ef5bfac3",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.083325",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}