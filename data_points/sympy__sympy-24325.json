{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-24325",
  "base_commit": "cdef6fcbfc12008d0de65ecd8ed21d1912e77e5d",
  "patch": "diff --git a/sympy/physics/units/systems/cgs.py b/sympy/physics/units/systems/cgs.py\n--- a/sympy/physics/units/systems/cgs.py\n+++ b/sympy/physics/units/systems/cgs.py\n@@ -56,16 +56,16 @@\n cgs_gauss.set_quantity_scale_factor(maxwell, sqrt(centimeter**3*gram)/second)\n \n # SI units expressed in CGS-gaussian units:\n-cgs_gauss.set_quantity_scale_factor(coulomb, speed_of_light*statcoulomb/10)\n-cgs_gauss.set_quantity_scale_factor(ampere, speed_of_light*statcoulomb/second/10)\n-cgs_gauss.set_quantity_scale_factor(volt, speed_of_light*statvolt/10**6)\n+cgs_gauss.set_quantity_scale_factor(coulomb, 10*speed_of_light*statcoulomb)\n+cgs_gauss.set_quantity_scale_factor(ampere, 10*speed_of_light*statcoulomb/second)\n+cgs_gauss.set_quantity_scale_factor(volt, 10**6/speed_of_light*statvolt)\n cgs_gauss.set_quantity_scale_factor(weber, 10**8*maxwell)\n cgs_gauss.set_quantity_scale_factor(tesla, 10**4*gauss)\n cgs_gauss.set_quantity_scale_factor(debye, One/10**18*statcoulomb*centimeter)\n cgs_gauss.set_quantity_scale_factor(oersted, sqrt(gram/centimeter)/second)\n-cgs_gauss.set_quantity_scale_factor(ohm, 10**9/speed_of_light**2*second/centimeter)\n-cgs_gauss.set_quantity_scale_factor(farad, One/10**9*speed_of_light**2*centimeter)\n-cgs_gauss.set_quantity_scale_factor(henry, 10**9/speed_of_light**2/centimeter*second**2)\n+cgs_gauss.set_quantity_scale_factor(ohm, 10**5/speed_of_light**2*second/centimeter)\n+cgs_gauss.set_quantity_scale_factor(farad, One/10**5*speed_of_light**2*centimeter)\n+cgs_gauss.set_quantity_scale_factor(henry, 10**5/speed_of_light**2/centimeter*second**2)\n \n # Coulomb's constant:\n cgs_gauss.set_quantity_dimension(coulomb_constant, 1)\n",
  "test_patch": "diff --git a/sympy/physics/units/tests/test_unit_system_cgs_gauss.py b/sympy/physics/units/tests/test_unit_system_cgs_gauss.py\n--- a/sympy/physics/units/tests/test_unit_system_cgs_gauss.py\n+++ b/sympy/physics/units/tests/test_unit_system_cgs_gauss.py\n@@ -4,17 +4,16 @@\n from sympy.functions.elementary.miscellaneous import sqrt\n from sympy.physics.units import convert_to, coulomb_constant, elementary_charge, gravitational_constant, planck\n from sympy.physics.units.definitions.unit_definitions import statcoulomb, coulomb, second, gram, centimeter, erg, \\\n-    newton, joule, dyne, speed_of_light, meter\n+    newton, joule, dyne, speed_of_light, meter, farad, henry, statvolt, volt, ohm\n from sympy.physics.units.systems import SI\n from sympy.physics.units.systems.cgs import cgs_gauss\n \n \n def test_conversion_to_from_si():\n-\n-    assert convert_to(statcoulomb, coulomb, cgs_gauss) == 5*coulomb/149896229\n-    assert convert_to(coulomb, statcoulomb, cgs_gauss) == 149896229*statcoulomb/5\n+    assert convert_to(statcoulomb, coulomb, cgs_gauss) == coulomb/2997924580\n+    assert convert_to(coulomb, statcoulomb, cgs_gauss) == 2997924580*statcoulomb\n     assert convert_to(statcoulomb, sqrt(gram*centimeter**3)/second, cgs_gauss) == centimeter**(S(3)/2)*sqrt(gram)/second\n-    assert convert_to(coulomb, sqrt(gram*centimeter**3)/second, cgs_gauss) == 149896229*centimeter**(S(3)/2)*sqrt(gram)/(5*second)\n+    assert convert_to(coulomb, sqrt(gram*centimeter**3)/second, cgs_gauss) == 2997924580*centimeter**(S(3)/2)*sqrt(gram)/second\n \n     # SI units have an additional base unit, no conversion in case of electromagnetism:\n     assert convert_to(coulomb, statcoulomb, SI) == coulomb\n@@ -26,6 +25,7 @@ def test_conversion_to_from_si():\n     assert convert_to(joule, erg, SI) == 10**7*erg\n     assert convert_to(joule, erg, cgs_gauss) == 10**7*erg\n \n+\n     assert convert_to(dyne, newton, SI) == newton/10**5\n     assert convert_to(dyne, newton, cgs_gauss) == newton/10**5\n     assert convert_to(newton, dyne, SI) == 10**5*dyne\n@@ -37,7 +37,7 @@ def test_cgs_gauss_convert_constants():\n     assert convert_to(speed_of_light, centimeter/second, cgs_gauss) == 29979245800*centimeter/second\n \n     assert convert_to(coulomb_constant, 1, cgs_gauss) == 1\n-    assert convert_to(coulomb_constant, newton*meter**2/coulomb**2, cgs_gauss) == 22468879468420441*meter**2*newton/(25000000000*coulomb**2)\n+    assert convert_to(coulomb_constant, newton*meter**2/coulomb**2, cgs_gauss) == 22468879468420441*meter**2*newton/(2500000*coulomb**2)\n     assert convert_to(coulomb_constant, newton*meter**2/coulomb**2, SI) == 22468879468420441*meter**2*newton/(2500000*coulomb**2)\n     assert convert_to(coulomb_constant, dyne*centimeter**2/statcoulomb**2, cgs_gauss) == centimeter**2*dyne/statcoulomb**2\n     assert convert_to(coulomb_constant, 1, SI) == coulomb_constant\n@@ -46,3 +46,9 @@ def test_cgs_gauss_convert_constants():\n     assert convert_to(elementary_charge, statcoulomb, cgs_gauss)\n     assert convert_to(gravitational_constant, dyne*centimeter**2/gram**2, cgs_gauss)\n     assert NS(convert_to(planck, erg*second, cgs_gauss)) == '6.62607015e-27*erg*second'\n+\n+    spc = 25000*second/(22468879468420441*centimeter)\n+    assert convert_to(ohm, second/centimeter, cgs_gauss) == spc\n+    assert convert_to(henry, second**2/centimeter, cgs_gauss) == spc*second\n+    assert convert_to(volt, statvolt, cgs_gauss) == 10**6*statvolt/299792458\n+    assert convert_to(farad, centimeter, cgs_gauss) == 299792458**2*centimeter/10**5\n",
  "problem_statement": "Numerical error on conversion of coulomb to statcoulomb \n```python\r\nIn[2]: from sympy.physics.units import convert_to\r\nIn[3]: from sympy.physics.units.systems.cgs import cgs_gauss\r\nIn[4]: from sympy.physics.units.definitions.unit_definitions import statcoulomb, coulomb, second, gram, centimeter, erg\r\nIn[5]: convert_to(coulomb, statcoulomb, unit_system='cgs_gauss').n()\r\n\r\nOut[5]:29979245.8*statcoulomb\r\n```\r\n`Expected Output : 1 C ≘ 2997924580 statC ≈ 3.00×109 statC`\r\n```python \r\ndef test_conversion_to_from_si():\r\n         assert convert_to(statcoulomb, coulomb, cgs_gauss) == 5*coulomb/149896229\r\n         assert convert_to(coulomb, statcoulomb, cgs_gauss) == 149896229*statcoulomb/5\r\n```\r\nIt should be fixed as :\r\n```python \r\ndef test_conversion_to_from_si():\r\n         assert convert_to(statcoulomb, coulomb, cgs_gauss) == coulomb/2997924580\r\n         assert convert_to(coulomb, statcoulomb, cgs_gauss) ==  2997924580*statcoulomb\r\n```\r\n\nNumerical error on conversion of coulomb to statcoulomb \n```python\r\nIn[2]: from sympy.physics.units import convert_to\r\nIn[3]: from sympy.physics.units.systems.cgs import cgs_gauss\r\nIn[4]: from sympy.physics.units.definitions.unit_definitions import statcoulomb, coulomb, second, gram, centimeter, erg\r\nIn[5]: convert_to(coulomb, statcoulomb, unit_system='cgs_gauss').n()\r\n\r\nOut[5]:29979245.8*statcoulomb\r\n```\r\n`Expected Output : 1 C ≘ 2997924580 statC ≈ 3.00×109 statC`\r\n```python \r\ndef test_conversion_to_from_si():\r\n         assert convert_to(statcoulomb, coulomb, cgs_gauss) == 5*coulomb/149896229\r\n         assert convert_to(coulomb, statcoulomb, cgs_gauss) == 149896229*statcoulomb/5\r\n```\r\nIt should be fixed as :\r\n```python \r\ndef test_conversion_to_from_si():\r\n         assert convert_to(statcoulomb, coulomb, cgs_gauss) == coulomb/2997924580\r\n         assert convert_to(coulomb, statcoulomb, cgs_gauss) ==  2997924580*statcoulomb\r\n```\r\n\n",
  "hints_text": "Can I open the PR for that ?\r\n\nCan I open the PR for that ?\r\n",
  "created_at": "2022-11-29T10:29:14Z",
  "version": "1.12",
  "FAIL_TO_PASS": "[\"test_conversion_to_from_si\"]",
  "PASS_TO_PASS": "[]",
  "environment_setup_commit": "c6cb7c5602fa48034ab1bd43c2347a7e8488f12e",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.155665",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}