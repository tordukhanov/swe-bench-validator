{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-13001",
  "base_commit": "2f3eba1cd616166d3b11c7a0aa2bdb4d453093e5",
  "patch": "diff --git a/sympy/simplify/cse_main.py b/sympy/simplify/cse_main.py\n--- a/sympy/simplify/cse_main.py\n+++ b/sympy/simplify/cse_main.py\n@@ -399,18 +399,16 @@ def _rebuild(expr):\n             reduced_e = e\n         reduced_exprs.append(reduced_e)\n \n-    # don't allow hollow nesting\n+    # don't allow hollow nesting; restore expressions that were\n+    # subject to \"advantageous grouping\"\n     # e.g if p = [b + 2*d + e + f, b + 2*d + f + g, a + c + d + f + g]\n     # and R, C = cse(p) then\n     #     R = [(x0, d + f), (x1, b + d)]\n     #     C = [e + x0 + x1, g + x0 + x1, a + c + d + f + g]\n     # but the args of C[-1] should not be `(a + c, d + f + g)`\n-    for i in range(len(exprs)):\n-        F = reduced_exprs[i].func\n-        if not (F is Mul or F is Add):\n-            continue\n-        if any(isinstance(a, F) for a in reduced_exprs[i].args):\n-            reduced_exprs[i] = F(*reduced_exprs[i].args)\n+    subs_opt = list(ordered([(v, k) for k, v in opt_subs.items()]))\n+    for i, e in enumerate(reduced_exprs):\n+        reduced_exprs[i] = e.subs(subs_opt)\n     return replacements, reduced_exprs\n \n \ndiff --git a/sympy/solvers/ode.py b/sympy/solvers/ode.py\n--- a/sympy/solvers/ode.py\n+++ b/sympy/solvers/ode.py\n@@ -3408,12 +3408,12 @@ def ode_Riccati_special_minus2(eq, func, order, match):\n     >>> genform = a*y.diff(x) - (b*y**2 + c*y/x + d/x**2)\n     >>> sol = dsolve(genform, y)\n     >>> pprint(sol, wrap_line=False)\n-            /                                 /        __________________       \\\\\n-            |           __________________    |       /                2        ||\n-            |          /                2     |     \\/  4*b*d - (a + c)  *log(x)||\n-           -|a + c - \\/  4*b*d - (a + c)  *tan|C1 + ----------------------------||\n-            \\                                 \\                 2*a             //\n-    f(x) = ------------------------------------------------------------------------\n+                                             /        __________________       \\\n+                       __________________    |       /                2        |\n+                      /                2     |     \\/  4*b*d - (a + c)  *log(x)|\n+           -a - c + \\/  4*b*d - (a + c)  *tan|C1 + ----------------------------|\n+                                             \\                 2*a             /\n+    f(x) = ---------------------------------------------------------------------\n                                             2*b*x\n \n     >>> checkodesol(genform, sol, order=1)[0]\n",
  "test_patch": "diff --git a/sympy/simplify/tests/test_cse.py b/sympy/simplify/tests/test_cse.py\n--- a/sympy/simplify/tests/test_cse.py\n+++ b/sympy/simplify/tests/test_cse.py\n@@ -511,7 +511,13 @@ def test_cse__performance():\n \n \n def test_issue_12070():\n-    exprs = [x+y,2+x+y,x+y+z,3+x+y+z]\n+    exprs = [x + y, 2 + x + y, x + y + z, 3 + x + y + z]\n     subst, red = cse(exprs)\n     assert 6 >= (len(subst) + sum([v.count_ops() for k, v in subst]) +\n                  count_ops(red))\n+\n+\n+def test_issue_13000():\n+    eq = x/(-4*x**2 + y**2)\n+    cse_eq = cse(eq)[1][0]\n+    assert cse_eq == eq\ndiff --git a/sympy/solvers/tests/test_ode.py b/sympy/solvers/tests/test_ode.py\n--- a/sympy/solvers/tests/test_ode.py\n+++ b/sympy/solvers/tests/test_ode.py\n@@ -2589,7 +2589,7 @@ def test_user_infinitesimals():\n \n def test_issue_7081():\n     eq = x*(f(x).diff(x)) + 1 - f(x)**2\n-    assert dsolve(eq) == Eq(f(x), -((C1 + x**2)/(-C1 + x**2)))\n+    assert dsolve(eq) == Eq(f(x), (C1 - x**2)/(C1 + x**2))\n \n \n def test_2nd_power_series_ordinary():\n",
  "problem_statement": "cse leaves behind hollow Mul\n```\r\n>>> eq = a/(-4*a**2 + s**2)\r\n>>> cse_eq = cse(eq)[1][0]; cse_eq\r\n>>> cse_eq\r\na/(-4*a**2 + s**2)\r\n>>> cse_eq == eq\r\nFalse\r\n```\r\n\r\nThis fails because `-4*a**2` comes back as `Mul(-1, 4, a**2, evaluate=False)`.\n",
  "hints_text": "",
  "created_at": "2017-07-19T10:01:56Z",
  "version": "1.1",
  "FAIL_TO_PASS": "[\"test_issue_4785\"]",
  "PASS_TO_PASS": "[\"test_numbered_symbols\", \"test_preprocess_for_cse\", \"test_postprocess_for_cse\", \"test_cse_single\", \"test_cse_single2\", \"test_cse_not_possible\", \"test_nested_substitution\", \"test_subtraction_opt\", \"test_multiple_expressions\", \"test_bypass_non_commutatives\", \"test_issue_4498\", \"test_issue_4020\", \"test_issue_4203\", \"test_issue_6263\", \"test_dont_cse_tuples\", \"test_pow_invpow\", \"test_postprocess\", \"test_issue_4499\", \"test_issue_6169\", \"test_cse_MatrixSymbol\", \"test_cse_MatrixExpr\", \"test_Piecewise\", \"test_name_conflict\", \"test_name_conflict_cust_symbols\", \"test_symbols_exhausted_error\", \"test_issue_7840\", \"test_issue_8891\", \"test_issue_11230\", \"test_hollow_rejection\", \"test_cse_ignore\", \"test_cse__performance\", \"test_issue_12070\", \"test_linear_2eq_order1_nonhomog_linear\", \"test_linear_2eq_order1_nonhomog\", \"test_linear_2eq_order1_type2_degen\", \"test_dsolve_linear_2eq_order1_diag_triangular\", \"test_linear_3eq_order1_nonhomog\", \"test_classify_sysode\", \"test_ode_order\", \"test_Bernoulli\", \"test_separable4\", \"test_separable_1_5_checkodesol\", \"test_1st_homogeneous_coeff_ode_check2\", \"test_1st_homogeneous_coeff_ode2_check3\", \"test_nth_linear_constant_coeff_homogeneous_rootof\", \"test_undetermined_coefficients_match\", \"test_issue_4825\", \"test_constant_renumber_order_issue_5308\", \"test_nth_order_linear_euler_eq_homogeneous\", \"test_issue_5095\", \"test_separable_reduced\", \"test_linear_coeff_match\", \"test_constantsimp_take_problem\", \"test_issue_6879\", \"test_issue_6989\", \"test_heuristic2\", \"test_heuristic_4\", \"test_heuristic_function_sum\", \"test_heuristic_abaco2_similar\", \"test_heuristic_linear\", \"test_dsolve_linsystem_symbol\", \"test_C1_function_9239\", \"test_issue_10867\"]",
  "environment_setup_commit": "ec9e3c0436fbff934fa84e22bf07f1b3ef5bfac3",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.079091",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}