{
  "repo": "django/django",
  "instance_id": "django__django-12469",
  "base_commit": "8bebb8f126aae3334da78339ccc4ded0f35692df",
  "patch": "diff --git a/django/contrib/admin/templatetags/admin_list.py b/django/contrib/admin/templatetags/admin_list.py\n--- a/django/contrib/admin/templatetags/admin_list.py\n+++ b/django/contrib/admin/templatetags/admin_list.py\n@@ -2,7 +2,8 @@\n \n from django.contrib.admin.templatetags.admin_urls import add_preserved_filters\n from django.contrib.admin.utils import (\n-    display_for_field, display_for_value, label_for_field, lookup_field,\n+    display_for_field, display_for_value, get_fields_from_path,\n+    label_for_field, lookup_field,\n )\n from django.contrib.admin.views.main import (\n     ALL_VAR, ORDER_VAR, PAGE_VAR, SEARCH_VAR,\n@@ -13,7 +14,7 @@\n from django.template.loader import get_template\n from django.templatetags.static import static\n from django.urls import NoReverseMatch\n-from django.utils import formats\n+from django.utils import formats, timezone\n from django.utils.html import format_html\n from django.utils.safestring import mark_safe\n from django.utils.text import capfirst\n@@ -359,6 +360,13 @@ def date_hierarchy(cl):\n     \"\"\"\n     if cl.date_hierarchy:\n         field_name = cl.date_hierarchy\n+        field = get_fields_from_path(cl.model, field_name)[-1]\n+        if isinstance(field, models.DateTimeField):\n+            dates_or_datetimes = 'datetimes'\n+            qs_kwargs = {'is_dst': True}\n+        else:\n+            dates_or_datetimes = 'dates'\n+            qs_kwargs = {}\n         year_field = '%s__year' % field_name\n         month_field = '%s__month' % field_name\n         day_field = '%s__day' % field_name\n@@ -374,6 +382,11 @@ def link(filters):\n             # select appropriate start level\n             date_range = cl.queryset.aggregate(first=models.Min(field_name),\n                                                last=models.Max(field_name))\n+            if dates_or_datetimes == 'datetimes':\n+                date_range = {\n+                    k: timezone.localtime(v) if timezone.is_aware(v) else v\n+                    for k, v in date_range.items()\n+                }\n             if date_range['first'] and date_range['last']:\n                 if date_range['first'].year == date_range['last'].year:\n                     year_lookup = date_range['first'].year\n@@ -391,7 +404,7 @@ def link(filters):\n                 'choices': [{'title': capfirst(formats.date_format(day, 'MONTH_DAY_FORMAT'))}]\n             }\n         elif year_lookup and month_lookup:\n-            days = getattr(cl.queryset, 'dates')(field_name, 'day')\n+            days = getattr(cl.queryset, dates_or_datetimes)(field_name, 'day', **qs_kwargs)\n             return {\n                 'show': True,\n                 'back': {\n@@ -404,7 +417,7 @@ def link(filters):\n                 } for day in days]\n             }\n         elif year_lookup:\n-            months = getattr(cl.queryset, 'dates')(field_name, 'month')\n+            months = getattr(cl.queryset, dates_or_datetimes)(field_name, 'month', **qs_kwargs)\n             return {\n                 'show': True,\n                 'back': {\n@@ -417,7 +430,7 @@ def link(filters):\n                 } for month in months]\n             }\n         else:\n-            years = getattr(cl.queryset, 'dates')(field_name, 'year')\n+            years = getattr(cl.queryset, dates_or_datetimes)(field_name, 'year', **qs_kwargs)\n             return {\n                 'show': True,\n                 'back': None,\n",
  "test_patch": "diff --git a/tests/admin_views/test_templatetags.py b/tests/admin_views/test_templatetags.py\n--- a/tests/admin_views/test_templatetags.py\n+++ b/tests/admin_views/test_templatetags.py\n@@ -128,3 +128,45 @@ def test_choice_links(self):\n                 ]\n                 expected_choices = [('?' + choice) if choice else '' for choice in expected_choices]\n                 self.assertEqual(choices, expected_choices)\n+\n+    def test_choice_links_datetime(self):\n+        modeladmin = ModelAdmin(Question, site)\n+        modeladmin.date_hierarchy = 'expires'\n+        Question.objects.bulk_create([\n+            Question(question='q1', expires=datetime.datetime(2017, 10, 1)),\n+            Question(question='q2', expires=datetime.datetime(2017, 10, 1)),\n+            Question(question='q3', expires=datetime.datetime(2017, 12, 15)),\n+            Question(question='q4', expires=datetime.datetime(2017, 12, 15)),\n+            Question(question='q5', expires=datetime.datetime(2017, 12, 31)),\n+            Question(question='q6', expires=datetime.datetime(2018, 2, 1)),\n+        ])\n+        tests = [\n+            ({}, [['year=2017'], ['year=2018']]),\n+            ({'year': 2016}, []),\n+            (\n+                {'year': 2017}, [\n+                    ['month=10', 'year=2017'],\n+                    ['month=12', 'year=2017'],\n+                ],\n+            ),\n+            ({'year': 2017, 'month': 9}, []),\n+            (\n+                {'year': 2017, 'month': 12}, [\n+                    ['day=15', 'month=12', 'year=2017'],\n+                    ['day=31', 'month=12', 'year=2017'],\n+                ],\n+            ),\n+        ]\n+        for query, expected_choices in tests:\n+            with self.subTest(query=query):\n+                query = {'expires__%s' % q: val for q, val in query.items()}\n+                request = self.factory.get('/', query)\n+                request.user = self.superuser\n+                changelist = modeladmin.get_changelist_instance(request)\n+                spec = date_hierarchy(changelist)\n+                choices = [choice['link'] for choice in spec['choices']]\n+                expected_choices = [\n+                    '?' + '&'.join('expires__%s' % c for c in choice)\n+                    for choice in expected_choices\n+                ]\n+                self.assertEqual(choices, expected_choices)\ndiff --git a/tests/admin_views/tests.py b/tests/admin_views/tests.py\n--- a/tests/admin_views/tests.py\n+++ b/tests/admin_views/tests.py\n@@ -981,6 +981,18 @@ def test_date_hierarchy_timezone_dst(self):\n         self.assertContains(response, 'question__expires__month=10')\n         self.assertContains(response, 'question__expires__year=2016')\n \n+    @override_settings(TIME_ZONE='America/Los_Angeles', USE_TZ=True)\n+    def test_date_hierarchy_local_date_differ_from_utc(self):\n+        # This datetime is 2017-01-01 in UTC.\n+        date = pytz.timezone('America/Los_Angeles').localize(datetime.datetime(2016, 12, 31, 16))\n+        q = Question.objects.create(question='Why?', expires=date)\n+        Answer2.objects.create(question=q, answer='Because.')\n+        response = self.client.get(reverse('admin:admin_views_answer2_changelist'))\n+        self.assertEqual(response.status_code, 200)\n+        self.assertContains(response, 'question__expires__day=31')\n+        self.assertContains(response, 'question__expires__month=12')\n+        self.assertContains(response, 'question__expires__year=2016')\n+\n     def test_sortable_by_columns_subset(self):\n         expected_sortable_fields = ('date', 'callable_year')\n         expected_not_sortable_fields = (\n",
  "problem_statement": "Admin date_hierarchy filter by month displays an extra day at timezone boundary.\nDescription\n\t \n\t\t(last modified by Lavrenov Ivan)\n\t \nWhen I authorized by user with not-UTC timezone, like America/Los_Angeles , and open filter by date in month, I see one extra day, that follows to the first day of the previous month\n",
  "hints_text": "representation of bug\nCould you be more specific about how to reproduce this? I thought you meant TIME_ZONE = 'Los-Angeles/America' but I get \"Incorrect timezone setting\". Which database are you using?\nThe timezone is America/Los_Angeles, sorry for inaccuracy. I'm using Mysql database. I think it is something сonnected with converstion to local time. I have a record, which in UTC in the 1st September, but in local time it is still in the 31 August. P.S. Values stored in UTC format\nReplying to Tim Graham: Could you be more specific about how to reproduce this? I thought you meant TIME_ZONE = 'Los-Angeles/America' but I get \"Incorrect timezone setting\". Which database are you using? The timezone is America/Los_Angeles, sorry for inaccuracy. I'm using Mysql database. I think it is something сonnected with converstion to local time. I have a record, which in UTC in the 1st September, but in local time it is still in the 31 August. P.S. Values stored in UTC format\nYes. I can reproduce this. Have a DateTimeField in date_hierarchy (and optionally `list_display) Create an object in the DB for midnight 1st Sep (UTC). Set project TIME_ZONE = 'America/Los_Angeles' Test object is show in list at Aug 31 5PM. Date hierarchy choice is created for 1st September Link for that is incorrect: ?<field>__day=1&<field>__month=8&<field>__year=2018, i.e. Aug 1st. Presumably error is in ​`date_hierarchy()` template tag function.\n​PR\nDuplicate reported in #30749\nTwo distinct date_hierarchy bugs : one relate to TZ effects and one related to DST effects : #29724 (TZ matter) It may be solved modifying django/contrib/admin/templatetags/admin_list.py using queryset.filter instead of queryset.dates and creating a tz-aware days list : from django.utils.timezone import make_naive from django.conf import settings def link (filters): month_filter=field_name+'__month' year_filter=field_name+'__year' dates_or_datetimes = cl.model.objects.filter(**{year_filter:year_lookup, month_filter:month_lookup}).values_list(field_name, flat=True) days = [] if dates_or_datetimes.count()>0 and isinstance(dates_or_datetimes.first(), datetime.datetime) and settings.USE_TZ: for day in dates_or_datetimes: if make_naive(day).date() not in days: days.append(make_naive(day).date()) else: for day in dates_or_datetimes: if day not in days: days.append(day) ###30749 (DST matter) In Europe/Paris timezone, on the October DST change, the from_date + timedelta(days=32)).replace(day=1) used in django/contrib/admin/views/main.py to get next month's first day does not select objects of October 31th. They are not shown in the change list when October is selected through date_hierarchy. (steps to reproduce : sqlite, DateField, USE_TZ, TIMEZONE='Europe/Paris', Object date 2019-10-31 or 2018-10-31...). It seems to be resolved by adding make_aware and tzinfo=None to to_date : django/contrib/admin/views/main.py: elif month: to_date = (from_date + timedelta(days=32)).replace(day=1) if settings.USE_TZ: to_date = make_aware(to_date.replace(tzinfo=None))\nOK, thanks for the follow-up yab. TBH I'm still inclined to view these as the same issue: incorrect collection of items at time-period boundaries (demonstrated with DST and TZ examples). However... one-ticket/two-tickets is not so important. More is that, we need to make sure we have test cases for both these types of example, and then we can make sure any fix addresses both of those. Super. 👍\nOK, my proposal passes existing tests. Not sure how to create specific test cases for that purpose. My proposal is above and there : ​https://github.com/yab228/django/blob/master/django/contrib/admin/templatetags/admin_list.py\nyab: please make a pull request with your suggested changes. (See the ​contributing guide.) For tests, please add a test case with the example(s) here. Presumably they should fail with the exisiting code, showing the bug, and then pass with your patch applied.\nThe tests I made at home were OK. But several of the automatic same tests on github (in djangoci) were not OK. Especially test_date_hierarchy_timezone_dst. Thoses automatic tests in many environments are too hard for a newbie like me. Too much time that I have not. I am giving up. One last thing before I vanish : do the django programers plan to modify the hole behaviour of date_hierarchy ? I read it should stick more to result_list... If you can \"just\" tell me where I can see the discussions about that, I'm interested in reading. It seems to me date_hierarchy has to have two branches, on in case of datetimes+TZ_USE, one in other cases. Thanks, anyway, to all the django-project team.\n#30922 was also a duplicate related.\n​PR\nIn 53b6a466: Refs #29724 -- Added is_dst parameter to QuerySet.datetimes(). Thanks Simon Charette for the review and Mariusz Felisiak for tests.",
  "created_at": "2020-02-18T14:18:28Z",
  "version": "3.1",
  "FAIL_TO_PASS": "[\"test_date_hierarchy_local_date_differ_from_utc (admin_views.tests.AdminViewBasicTest)\"]",
  "PASS_TO_PASS": "[\"test_choice_links (admin_views.test_templatetags.DateHierarchyTests)\", \"test_choice_links_datetime (admin_views.test_templatetags.DateHierarchyTests)\", \"test_should_be_able_to_edit_related_objects_on_add_view (admin_views.tests.AdminCustomSaveRelatedTests)\", \"test_should_be_able_to_edit_related_objects_on_change_view (admin_views.tests.AdminCustomSaveRelatedTests)\", \"test_should_be_able_to_edit_related_objects_on_changelist_view (admin_views.tests.AdminCustomSaveRelatedTests)\", \"test_explicitly_provided_pk (admin_views.tests.GetFormsetsWithInlinesArgumentTest)\", \"test_implicitly_generated_pk (admin_views.tests.GetFormsetsWithInlinesArgumentTest)\", \"The right link is displayed if view_on_site is a callable\", \"The 'View on site' button is not displayed if view_on_site is False\", \"The 'View on site' button is displayed if view_on_site is True\", \"Admin index views don't break when user's ModelAdmin removes standard urls\", \"test_custom_changelist (admin_views.tests.TestCustomChangeList)\", \"test_custom_admin_site_app_index_view_and_template (admin_views.tests.CustomModelAdminTest)\", \"test_custom_admin_site_index_view_and_template (admin_views.tests.CustomModelAdminTest)\", \"test_custom_admin_site_login_form (admin_views.tests.CustomModelAdminTest)\", \"test_custom_admin_site_login_template (admin_views.tests.CustomModelAdminTest)\", \"test_custom_admin_site_logout_template (admin_views.tests.CustomModelAdminTest)\", \"test_custom_admin_site_password_change_done_template (admin_views.tests.CustomModelAdminTest)\", \"test_custom_admin_site_password_change_template (admin_views.tests.CustomModelAdminTest)\", \"test_custom_admin_site_password_change_with_extra_context (admin_views.tests.CustomModelAdminTest)\", \"test_custom_admin_site_view (admin_views.tests.CustomModelAdminTest)\", \"test_pwd_change_custom_template (admin_views.tests.CustomModelAdminTest)\", \"Regression test for 14880\", \"Regression test for 20182\", \"test_list_display_method_same_name_as_reverse_accessor (admin_views.tests.RawIdFieldsTest)\", \"test_GET_parent_add (admin_views.tests.TestInlineNotEditable)\", \"test_secure_view_shows_login_if_not_logged_in (admin_views.tests.SecureViewTests)\", \"test_staff_member_required_decorator_works_with_argument (admin_views.tests.SecureViewTests)\", \"test_generic_content_object_in_list_display (admin_views.tests.TestGenericRelations)\", \"test_prepopulated_maxlength_localized (admin_views.tests.PrePopulatedTest)\", \"test_prepopulated_off (admin_views.tests.PrePopulatedTest)\", \"test_prepopulated_on (admin_views.tests.PrePopulatedTest)\", \"test_view_only_add_form (admin_views.tests.PrePopulatedTest)\", \"test_view_only_change_form (admin_views.tests.PrePopulatedTest)\", \"test_lang_name_present (admin_views.tests.ValidXHTMLTests)\", \"test_client_logout_url_can_be_used_to_login (admin_views.tests.AdminViewLogoutTests)\", \"test_logout (admin_views.tests.AdminViewLogoutTests)\", \"Test for ticket 2445 changes to admin.\", \"test_inline (admin_views.tests.AdminInheritedInlinesTest)\", \"test_unicode_delete (admin_views.tests.AdminViewUnicodeTest)\", \"test_unicode_edit (admin_views.tests.AdminViewUnicodeTest)\", \"test_all_fields_hidden (admin_views.tests.TestLabelVisibility)\", \"test_all_fields_visible (admin_views.tests.TestLabelVisibility)\", \"test_mixin (admin_views.tests.TestLabelVisibility)\", \"test_form_has_multipart_enctype (admin_views.tests.AdminInlineFileUploadTest)\", \"test_inline_file_upload_edit_validation_error_post (admin_views.tests.AdminInlineFileUploadTest)\", \"test_group_permission_performance (admin_views.tests.GroupAdminTest)\", \"test_save_button (admin_views.tests.GroupAdminTest)\", \"test_beginning_matches (admin_views.tests.AdminSearchTest)\", \"test_exact_matches (admin_views.tests.AdminSearchTest)\", \"test_no_total_count (admin_views.tests.AdminSearchTest)\", \"test_pluggable_search (admin_views.tests.AdminSearchTest)\", \"test_reset_link (admin_views.tests.AdminSearchTest)\", \"A search that mentions sibling models\", \"test_with_fk_to_field (admin_views.tests.AdminSearchTest)\", \"test_add (admin_views.tests.AdminViewProxyModelPermissionsTests)\", \"test_change (admin_views.tests.AdminViewProxyModelPermissionsTests)\", \"test_delete (admin_views.tests.AdminViewProxyModelPermissionsTests)\", \"test_view (admin_views.tests.AdminViewProxyModelPermissionsTests)\", \"test_save_as_continue_false (admin_views.tests.SaveAsTests)\", \"'save as' creates a new person\", \"test_save_as_new_with_inlines_with_validation_errors (admin_views.tests.SaveAsTests)\", \"test_save_as_new_with_validation_errors (admin_views.tests.SaveAsTests)\", \"test_save_as_new_with_validation_errors_with_inlines (admin_views.tests.SaveAsTests)\", \"test_js_minified_only_if_debug_is_false (admin_views.tests.AdminJavaScriptTest)\", \"test_change_form_URL_has_correct_value (admin_views.tests.AdminViewFormUrlTest)\", \"test_initial_data_can_be_overridden (admin_views.tests.AdminViewFormUrlTest)\", \"test_override_change_form_template_tags (admin_views.test_templatetags.AdminTemplateTagsTest)\", \"test_override_change_list_template_tags (admin_views.test_templatetags.AdminTemplateTagsTest)\", \"test_override_show_save_and_add_another (admin_views.test_templatetags.AdminTemplateTagsTest)\", \"test_submit_row (admin_views.test_templatetags.AdminTemplateTagsTest)\", \"test_message_debug (admin_views.tests.AdminUserMessageTest)\", \"test_message_error (admin_views.tests.AdminUserMessageTest)\", \"test_message_extra_tags (admin_views.tests.AdminUserMessageTest)\", \"test_message_info (admin_views.tests.AdminUserMessageTest)\", \"test_message_success (admin_views.tests.AdminUserMessageTest)\", \"test_message_warning (admin_views.tests.AdminUserMessageTest)\", \"test_add_view_form_and_formsets_run_validation (admin_views.tests.AdminViewOnSiteTests)\", \"test_change_view_form_and_formsets_run_validation (admin_views.tests.AdminViewOnSiteTests)\", \"The view_on_site value is either a boolean or a callable\", \"None is returned if model doesn't have get_absolute_url\", \"The default behavior is followed if view_on_site is True\", \"test_app_model_in_app_index_body_class (admin_views.tests.CSSTest)\", \"test_app_model_in_delete_confirmation_body_class (admin_views.tests.CSSTest)\", \"test_app_model_in_delete_selected_confirmation_body_class (admin_views.tests.CSSTest)\", \"test_app_model_in_form_body_class (admin_views.tests.CSSTest)\", \"test_app_model_in_list_body_class (admin_views.tests.CSSTest)\", \"test_changelist_field_classes (admin_views.tests.CSSTest)\", \"test_field_prefix_css_classes (admin_views.tests.CSSTest)\", \"test_index_css_classes (admin_views.tests.CSSTest)\", \"Object history button link should work and contain the pk value quoted.\", \"Link to the changeform of the object in changelist should use reverse() and be quoted -- #18072\", \"The link from the delete confirmation page referring back to the changeform of the object should be quoted\", \"Retrieving the object using urlencoded form of primary key should work\", \"test_get_history_view (admin_views.tests.AdminViewStringPrimaryKeyTest)\", \"The link from the recent actions list referring to the changeform of the object should be quoted\", \"As soon as an object is added using \\\"Save and continue editing\\\"\", \"'View on site should' work properly with char fields\", \"A model with a primary key that ends with add or is `add` should be visible\", \"A model with a primary key that ends with delete should be visible\", \"A model with a primary key that ends with history should be visible\", \"test_empty (admin_views.tests.DateHierarchyTests)\", \"test_multiple_years (admin_views.tests.DateHierarchyTests)\", \"test_related_field (admin_views.tests.DateHierarchyTests)\", \"test_single (admin_views.tests.DateHierarchyTests)\", \"test_within_month (admin_views.tests.DateHierarchyTests)\", \"test_within_year (admin_views.tests.DateHierarchyTests)\", \"Check the never-cache status of the JavaScript i18n view\", \"Check the never-cache status of the main index\", \"Check the never-cache status of an application index\", \"Check the never-cache status of login views\", \"Check the never-cache status of logout view\", \"Check the never-cache status of a model add page\", \"Check the never-cache status of a model delete page\", \"Check the never-cache status of a model history page\", \"Check the never-cache status of a model index\", \"Check the never-cache status of a model edit page\", \"Check the never-cache status of the password change view\", \"Check the never-cache status of the password change done view\", \"test_cyclic (admin_views.tests.AdminViewDeletedObjectsTest)\", \"The delete view uses ModelAdmin.get_deleted_objects().\", \"test_generic_relations (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_generic_relations_with_related_query_name (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_inheritance (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_multiple_fkeys_to_same_instance (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_multiple_fkeys_to_same_model (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_nesting (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_not_registered (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_perms_needed (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_post_delete_protected (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_post_delete_restricted (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_protected (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_restricted (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_add_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)\", \"test_add_view_without_preserved_filters (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)\", \"test_assert_url_equal (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)\", \"test_change_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)\", \"test_change_view_without_preserved_filters (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)\", \"test_changelist_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)\", \"test_delete_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)\", \"test_url_prefix (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)\", \"test_changelist_input_html (admin_views.tests.AdminViewListEditable)\", \"test_custom_pk (admin_views.tests.AdminViewListEditable)\", \"test_inheritance (admin_views.tests.AdminViewListEditable)\", \"test_inheritance_2 (admin_views.tests.AdminViewListEditable)\", \"test_list_editable_action_choices (admin_views.tests.AdminViewListEditable)\", \"test_list_editable_action_submit (admin_views.tests.AdminViewListEditable)\", \"test_list_editable_ordering (admin_views.tests.AdminViewListEditable)\", \"test_list_editable_pagination (admin_views.tests.AdminViewListEditable)\", \"test_list_editable_popup (admin_views.tests.AdminViewListEditable)\", \"test_non_field_errors (admin_views.tests.AdminViewListEditable)\", \"test_non_form_errors (admin_views.tests.AdminViewListEditable)\", \"test_non_form_errors_is_errorlist (admin_views.tests.AdminViewListEditable)\", \"test_pk_hidden_fields (admin_views.tests.AdminViewListEditable)\", \"Similarly as test_pk_hidden_fields, but when the hidden pk fields are\", \"test_post_messages (admin_views.tests.AdminViewListEditable)\", \"test_post_submission (admin_views.tests.AdminViewListEditable)\", \"test_change_password_template (admin_views.tests.AdminCustomTemplateTests)\", \"test_custom_model_admin_templates (admin_views.tests.AdminCustomTemplateTests)\", \"test_extended_bodyclass_change_list (admin_views.tests.AdminCustomTemplateTests)\", \"test_extended_bodyclass_template_change_form (admin_views.tests.AdminCustomTemplateTests)\", \"test_extended_bodyclass_template_delete_confirmation (admin_views.tests.AdminCustomTemplateTests)\", \"test_extended_bodyclass_template_delete_selected_confirmation (admin_views.tests.AdminCustomTemplateTests)\", \"test_extended_bodyclass_template_index (admin_views.tests.AdminCustomTemplateTests)\", \"test_extended_bodyclass_template_login (admin_views.tests.AdminCustomTemplateTests)\", \"test_filter_with_custom_template (admin_views.tests.AdminCustomTemplateTests)\", \"test_add_model_modeladmin_defer_qs (admin_views.tests.AdminCustomQuerysetTest)\", \"test_add_model_modeladmin_only_qs (admin_views.tests.AdminCustomQuerysetTest)\", \"test_change_view (admin_views.tests.AdminCustomQuerysetTest)\", \"test_changelist_view (admin_views.tests.AdminCustomQuerysetTest)\", \"test_changelist_view_count_queries (admin_views.tests.AdminCustomQuerysetTest)\", \"test_edit_model_modeladmin_defer_qs (admin_views.tests.AdminCustomQuerysetTest)\", \"test_edit_model_modeladmin_only_qs (admin_views.tests.AdminCustomQuerysetTest)\", \"test_history_view_custom_qs (admin_views.tests.AdminCustomQuerysetTest)\", \"test_change_form_renders_correct_null_choice_value (admin_views.tests.ReadonlyTest)\", \"test_correct_autoescaping (admin_views.tests.ReadonlyTest)\", \"test_label_suffix_translated (admin_views.tests.ReadonlyTest)\", \"test_readonly_field_overrides (admin_views.tests.ReadonlyTest)\", \"test_readonly_get (admin_views.tests.ReadonlyTest)\", \"Regression test for #13004\", \"test_readonly_manytomany_backwards_ref (admin_views.tests.ReadonlyTest)\", \"test_readonly_manytomany_forwards_ref (admin_views.tests.ReadonlyTest)\", \"test_readonly_onetoone_backwards_ref (admin_views.tests.ReadonlyTest)\", \"test_readonly_post (admin_views.tests.ReadonlyTest)\", \"test_readonly_text_field (admin_views.tests.ReadonlyTest)\", \"test_user_password_change_limited_queryset (admin_views.tests.ReadonlyTest)\", \"A model with a character PK can be saved as inlines. Regression for #10992\", \"A model with an explicit autofield primary key can be saved as inlines. Regression for #8093\", \"An inherited model can be saved as inlines. Regression for #11042\", \"A model with an integer PK can be saved as inlines. Regression for #10992\", \"test_ordered_inline (admin_views.tests.AdminInlineTests)\", \"A simple model can be saved as inlines\", \"test_form_url_present_in_context (admin_views.tests.UserAdminTest)\", \"test_password_mismatch (admin_views.tests.UserAdminTest)\", \"test_save_add_another_button (admin_views.tests.UserAdminTest)\", \"test_save_button (admin_views.tests.UserAdminTest)\", \"test_save_continue_editing_button (admin_views.tests.UserAdminTest)\", \"User addition through a FK popup should return the appropriate JavaScript response.\", \"User change through a FK popup should return the appropriate JavaScript response.\", \"User deletion through a FK popup should return the appropriate JavaScript response.\", \"test_user_permission_performance (admin_views.tests.UserAdminTest)\", \"test_add_view (admin_views.tests.AdminKeepChangeListFiltersTests)\", \"test_add_view_without_preserved_filters (admin_views.tests.AdminKeepChangeListFiltersTests)\", \"test_assert_url_equal (admin_views.tests.AdminKeepChangeListFiltersTests)\", \"test_change_view (admin_views.tests.AdminKeepChangeListFiltersTests)\", \"test_change_view_without_preserved_filters (admin_views.tests.AdminKeepChangeListFiltersTests)\", \"test_changelist_view (admin_views.tests.AdminKeepChangeListFiltersTests)\", \"test_delete_view (admin_views.tests.AdminKeepChangeListFiltersTests)\", \"test_url_prefix (admin_views.tests.AdminKeepChangeListFiltersTests)\", \"test_filters (admin_views.tests.AdminDocsTest)\", \"test_tags (admin_views.tests.AdminDocsTest)\", \"Test add view restricts access and actually adds items.\", \"User with add permission to a section but view-only for inlines.\", \"test_app_list_permissions (admin_views.tests.AdminViewPermissionsTest)\", \"Change view should restrict access and allow users to edit items.\", \"test_change_view_save_as_new (admin_views.tests.AdminViewPermissionsTest)\", \"User has view and add permissions on the inline model.\", \"User has view and delete permissions on the inline model.\", \"test_change_view_with_view_only_inlines (admin_views.tests.AdminViewPermissionsTest)\", \"test_change_view_without_object_change_permission (admin_views.tests.AdminViewPermissionsTest)\", \"test_conditionally_show_add_section_link (admin_views.tests.AdminViewPermissionsTest)\", \"test_conditionally_show_change_section_link (admin_views.tests.AdminViewPermissionsTest)\", \"test_conditionally_show_delete_section_link (admin_views.tests.AdminViewPermissionsTest)\", \"Delete view should restrict access and actually delete items.\", \"test_delete_view_nonexistent_obj (admin_views.tests.AdminViewPermissionsTest)\", \"test_delete_view_with_no_default_permissions (admin_views.tests.AdminViewPermissionsTest)\", \"test_disabled_permissions_when_logged_in (admin_views.tests.AdminViewPermissionsTest)\", \"test_disabled_staff_permissions_when_logged_in (admin_views.tests.AdminViewPermissionsTest)\", \"Regression test for #19327\", \"test_has_module_permission (admin_views.tests.AdminViewPermissionsTest)\", \"History view should restrict access.\", \"test_history_view_bad_url (admin_views.tests.AdminViewPermissionsTest)\", \"test_login (admin_views.tests.AdminViewPermissionsTest)\", \"test_login_has_permission (admin_views.tests.AdminViewPermissionsTest)\", \"test_login_page_notice_for_non_staff_users (admin_views.tests.AdminViewPermissionsTest)\", \"test_login_redirect_for_direct_get (admin_views.tests.AdminViewPermissionsTest)\", \"test_login_successfully_redirects_to_original_URL (admin_views.tests.AdminViewPermissionsTest)\", \"test_overriding_has_module_permission (admin_views.tests.AdminViewPermissionsTest)\", \"test_post_save_message_no_forbidden_links_visible (admin_views.tests.AdminViewPermissionsTest)\", \"test_shortcut_view_only_available_to_staff (admin_views.tests.AdminViewPermissionsTest)\", \"test_L10N_deactivated (admin_views.tests.AdminViewBasicTest)\", \"test_add_with_GET_args (admin_views.tests.AdminViewBasicTest)\", \"test_adminsite_display_site_url (admin_views.tests.AdminViewBasicTest)\", \"test_allowed_filtering_15103 (admin_views.tests.AdminViewBasicTest)\", \"test_allows_attributeerror_to_bubble_up (admin_views.tests.AdminViewBasicTest)\", \"test_basic_add_GET (admin_views.tests.AdminViewBasicTest)\", \"test_basic_add_POST (admin_views.tests.AdminViewBasicTest)\", \"test_basic_edit_GET (admin_views.tests.AdminViewBasicTest)\", \"test_basic_edit_GET_old_url_redirect (admin_views.tests.AdminViewBasicTest)\", \"test_basic_edit_GET_string_PK (admin_views.tests.AdminViewBasicTest)\", \"test_basic_edit_POST (admin_views.tests.AdminViewBasicTest)\", \"test_basic_inheritance_GET_string_PK (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_column_field_classes (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_null_boolean_display (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_callable (admin_views.tests.AdminViewBasicTest)\", \"Query expressions may be used for admin_order_field.\", \"test_change_list_sorting_callable_query_expression_reverse (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_model (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_model_admin (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_model_admin_reverse (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_model_meta (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_multiple (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_override_model_admin (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_preserve_queryset_ordering (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_property (admin_views.tests.AdminViewBasicTest)\", \"Changes to ManyToManyFields are included in the object's history.\", \"test_change_view_with_show_delete_extra_context (admin_views.tests.AdminViewBasicTest)\", \"test_changelist_with_no_change_url (admin_views.tests.AdminViewBasicTest)\", \"test_date_hierarchy_timezone_dst (admin_views.tests.AdminViewBasicTest)\", \"test_disallowed_filtering (admin_views.tests.AdminViewBasicTest)\", \"test_disallowed_to_field (admin_views.tests.AdminViewBasicTest)\", \"test_edit_save_as (admin_views.tests.AdminViewBasicTest)\", \"test_edit_save_as_delete_inline (admin_views.tests.AdminViewBasicTest)\", \"test_get_sortable_by_columns_subset (admin_views.tests.AdminViewBasicTest)\", \"test_get_sortable_by_no_column (admin_views.tests.AdminViewBasicTest)\", \"Joins shouldn't be performed for <FK>_id fields in list display.\", \"Joins shouldn't be performed for <O2O>_id fields in list display.\", \"test_hide_change_password (admin_views.tests.AdminViewBasicTest)\", \"test_i18n_language_non_english_default (admin_views.tests.AdminViewBasicTest)\", \"test_i18n_language_non_english_fallback (admin_views.tests.AdminViewBasicTest)\", \"Ensure incorrect lookup parameters are handled gracefully.\", \"test_invalid_appindex_url (admin_views.tests.AdminViewBasicTest)\", \"Ensure is_null is handled correctly.\", \"test_jsi18n_with_context (admin_views.tests.AdminViewBasicTest)\", \"Ensure admin changelist filters do not contain objects excluded via limit_choices_to.\", \"test_logout_and_password_change_URLs (admin_views.tests.AdminViewBasicTest)\", \"test_multiple_sort_same_field (admin_views.tests.AdminViewBasicTest)\", \"test_named_group_field_choices_change_list (admin_views.tests.AdminViewBasicTest)\", \"test_named_group_field_choices_filter (admin_views.tests.AdminViewBasicTest)\", \"test_popup_add_POST (admin_views.tests.AdminViewBasicTest)\", \"test_popup_dismiss_related (admin_views.tests.AdminViewBasicTest)\", \"test_relation_spanning_filters (admin_views.tests.AdminViewBasicTest)\", \"test_resolve_admin_views (admin_views.tests.AdminViewBasicTest)\", \"test_sort_indicators_admin_order (admin_views.tests.AdminViewBasicTest)\", \"test_sortable_by_columns_subset (admin_views.tests.AdminViewBasicTest)\", \"test_sortable_by_no_column (admin_views.tests.AdminViewBasicTest)\", \"test_trailing_slash_required (admin_views.tests.AdminViewBasicTest)\"]",
  "environment_setup_commit": "0668164b4ac93a5be79f5b87fae83c657124d9ab",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.626045",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}