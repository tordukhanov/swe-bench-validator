{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-18744",
  "base_commit": "2ad6b40353bf11270ccb21d07162ecbb064f898a",
  "patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -332,11 +332,16 @@ def _print_Mul(self, expr):\n \n     def _print_MatMul(self, expr):\n         c, m = expr.as_coeff_mmul()\n-        if c.is_number and c < 0:\n-            expr = _keep_coeff(-c, m)\n-            sign = \"-\"\n-        else:\n-            sign = \"\"\n+\n+        sign = \"\"\n+        if c.is_number:\n+            re, im = c.as_real_imag()\n+            if im.is_zero and re.is_negative:\n+                expr = _keep_coeff(-c, m)\n+                sign = \"-\"\n+            elif re.is_zero and im.is_negative:\n+                expr = _keep_coeff(-c, m)\n+                sign = \"-\"\n \n         return sign + '*'.join(\n             [self.parenthesize(arg, precedence(expr)) for arg in expr.args]\n",
  "test_patch": "diff --git a/sympy/printing/tests/test_str.py b/sympy/printing/tests/test_str.py\n--- a/sympy/printing/tests/test_str.py\n+++ b/sympy/printing/tests/test_str.py\n@@ -767,8 +767,14 @@ def test_issue_6387():\n \n def test_MatMul_MatAdd():\n     from sympy import MatrixSymbol\n-    assert str(2*(MatrixSymbol(\"X\", 2, 2) + MatrixSymbol(\"Y\", 2, 2))) == \\\n-        \"2*(X + Y)\"\n+\n+    X, Y = MatrixSymbol(\"X\", 2, 2), MatrixSymbol(\"Y\", 2, 2)\n+    assert str(2*(X + Y)) == \"2*(X + Y)\"\n+\n+    assert str(I*X) == \"I*X\"\n+    assert str(-I*X) == \"-I*X\"\n+    assert str((1 + I)*X) == '(1 + I)*X'\n+    assert str(-(1 + I)*X) == '(-1 - I)*X'\n \n def test_MatrixSlice():\n     from sympy.matrices.expressions import MatrixSymbol\n",
  "problem_statement": "TypeError printing I*MatrixSymbol\nFrom https://stackoverflow.com/questions/60435146/imaginary-matrices-in-sympy-using-matrixsymbol\r\n\r\n```py\r\n>>> MatrixSymbol('M', 2, 2)\r\nM\r\n>>> print(I*M)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"./sympy/core/basic.py\", line 413, in __str__\r\n    return sstr(self, order=None)\r\n  File \"./sympy/printing/str.py\", line 899, in sstr\r\n    s = p.doprint(expr)\r\n  File \"./sympy/printing/printer.py\", line 251, in doprint\r\n    return self._str(self._print(expr))\r\n  File \"./sympy/printing/printer.py\", line 289, in _print\r\n    return getattr(self, printmethod)(expr, **kwargs)\r\n  File \"./sympy/printing/str.py\", line 335, in _print_MatMul\r\n    if c.is_number and c < 0:\r\n  File \"./sympy/core/expr.py\", line 407, in __lt__\r\n    return self._cmp(other, \"<\", StrictLessThan)\r\n  File \"./sympy/core/expr.py\", line 348, in _cmp\r\n    raise TypeError(\"Invalid comparison of non-real %s\" % me)\r\nTypeError: Invalid comparison of non-real I\r\n```\r\n\n",
  "hints_text": "",
  "created_at": "2020-02-29T07:54:42Z",
  "version": "1.6",
  "FAIL_TO_PASS": "[\"test_MatMul_MatAdd\"]",
  "PASS_TO_PASS": "[\"test_printmethod\", \"test_Abs\", \"test_Add\", \"test_Catalan\", \"test_ComplexInfinity\", \"test_Derivative\", \"test_dict\", \"test_Dict\", \"test_Dummy\", \"test_EulerGamma\", \"test_Exp\", \"test_factorial\", \"test_Function\", \"test_Geometry\", \"test_GoldenRatio\", \"test_TribonacciConstant\", \"test_ImaginaryUnit\", \"test_Infinity\", \"test_Integer\", \"test_Integral\", \"test_Interval\", \"test_AccumBounds\", \"test_Lambda\", \"test_Limit\", \"test_list\", \"test_Matrix_str\", \"test_Mul\", \"test_NaN\", \"test_NegativeInfinity\", \"test_Order\", \"test_Permutation_Cycle\", \"test_Pi\", \"test_Poly\", \"test_PolyRing\", \"test_FracField\", \"test_PolyElement\", \"test_FracElement\", \"test_Pow\", \"test_sqrt\", \"test_Rational\", \"test_Float\", \"test_Relational\", \"test_CRootOf\", \"test_RootSum\", \"test_GroebnerBasis\", \"test_set\", \"test_SparseMatrix\", \"test_Sum\", \"test_Symbol\", \"test_tuple\", \"test_Quaternion_str_printer\", \"test_Quantity_str\", \"test_wild_str\", \"test_zeta\", \"test_issue_3101\", \"test_issue_3103\", \"test_issue_4021\", \"test_sstrrepr\", \"test_infinity\", \"test_full_prec\", \"test_noncommutative\", \"test_empty_printer\", \"test_settings\", \"test_RandomDomain\", \"test_FiniteSet\", \"test_UniversalSet\", \"test_PrettyPoly\", \"test_categories\", \"test_Tr\", \"test_issue_6387\", \"test_MatrixSlice\", \"test_true_false\", \"test_Equivalent\", \"test_Xor\", \"test_Complement\", \"test_SymmetricDifference\", \"test_UnevaluatedExpr\", \"test_MatrixElement_printing\", \"test_MatrixSymbol_printing\", \"test_MatrixExpressions\", \"test_Subs_printing\", \"test_issue_15716\", \"test_str_special_matrices\"]",
  "environment_setup_commit": "28b41c73c12b70d6ad9f6e45109a80649c4456da",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.126943",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}