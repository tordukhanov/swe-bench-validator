{
  "repo": "scikit-learn/scikit-learn",
  "instance_id": "scikit-learn__scikit-learn-26194",
  "base_commit": "e886ce4e1444c61b865e7839c9cff5464ee20ace",
  "patch": "diff --git a/sklearn/metrics/_ranking.py b/sklearn/metrics/_ranking.py\n--- a/sklearn/metrics/_ranking.py\n+++ b/sklearn/metrics/_ranking.py\n@@ -1016,10 +1016,10 @@ def roc_curve(\n         Increasing true positive rates such that element `i` is the true\n         positive rate of predictions with score >= `thresholds[i]`.\n \n-    thresholds : ndarray of shape = (n_thresholds,)\n+    thresholds : ndarray of shape (n_thresholds,)\n         Decreasing thresholds on the decision function used to compute\n         fpr and tpr. `thresholds[0]` represents no instances being predicted\n-        and is arbitrarily set to `max(y_score) + 1`.\n+        and is arbitrarily set to `np.inf`.\n \n     See Also\n     --------\n@@ -1036,6 +1036,10 @@ def roc_curve(\n     are reversed upon returning them to ensure they correspond to both ``fpr``\n     and ``tpr``, which are sorted in reversed order during their calculation.\n \n+    An arbritrary threshold is added for the case `tpr=0` and `fpr=0` to\n+    ensure that the curve starts at `(0, 0)`. This threshold corresponds to the\n+    `np.inf`.\n+\n     References\n     ----------\n     .. [1] `Wikipedia entry for the Receiver operating characteristic\n@@ -1056,7 +1060,7 @@ def roc_curve(\n     >>> tpr\n     array([0. , 0.5, 0.5, 1. , 1. ])\n     >>> thresholds\n-    array([1.8 , 0.8 , 0.4 , 0.35, 0.1 ])\n+    array([ inf, 0.8 , 0.4 , 0.35, 0.1 ])\n     \"\"\"\n     fps, tps, thresholds = _binary_clf_curve(\n         y_true, y_score, pos_label=pos_label, sample_weight=sample_weight\n@@ -1083,7 +1087,8 @@ def roc_curve(\n     # to make sure that the curve starts at (0, 0)\n     tps = np.r_[0, tps]\n     fps = np.r_[0, fps]\n-    thresholds = np.r_[thresholds[0] + 1, thresholds]\n+    # get dtype of `y_score` even if it is an array-like\n+    thresholds = np.r_[np.inf, thresholds]\n \n     if fps[-1] <= 0:\n         warnings.warn(\n",
  "test_patch": "diff --git a/sklearn/metrics/tests/test_ranking.py b/sklearn/metrics/tests/test_ranking.py\n--- a/sklearn/metrics/tests/test_ranking.py\n+++ b/sklearn/metrics/tests/test_ranking.py\n@@ -418,13 +418,13 @@ def test_roc_curve_drop_intermediate():\n     y_true = [0, 0, 0, 0, 1, 1]\n     y_score = [0.0, 0.2, 0.5, 0.6, 0.7, 1.0]\n     tpr, fpr, thresholds = roc_curve(y_true, y_score, drop_intermediate=True)\n-    assert_array_almost_equal(thresholds, [2.0, 1.0, 0.7, 0.0])\n+    assert_array_almost_equal(thresholds, [np.inf, 1.0, 0.7, 0.0])\n \n     # Test dropping thresholds with repeating scores\n     y_true = [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1]\n     y_score = [0.0, 0.1, 0.6, 0.6, 0.7, 0.8, 0.9, 0.6, 0.7, 0.8, 0.9, 0.9, 1.0]\n     tpr, fpr, thresholds = roc_curve(y_true, y_score, drop_intermediate=True)\n-    assert_array_almost_equal(thresholds, [2.0, 1.0, 0.9, 0.7, 0.6, 0.0])\n+    assert_array_almost_equal(thresholds, [np.inf, 1.0, 0.9, 0.7, 0.6, 0.0])\n \n \n def test_roc_curve_fpr_tpr_increasing():\n@@ -2199,3 +2199,17 @@ def test_ranking_metric_pos_label_types(metric, classes):\n         assert not np.isnan(metric_1).any()\n         assert not np.isnan(metric_2).any()\n         assert not np.isnan(thresholds).any()\n+\n+\n+def test_roc_curve_with_probablity_estimates(global_random_seed):\n+    \"\"\"Check that thresholds do not exceed 1.0 when `y_score` is a probability\n+    estimate.\n+\n+    Non-regression test for:\n+    https://github.com/scikit-learn/scikit-learn/issues/26193\n+    \"\"\"\n+    rng = np.random.RandomState(global_random_seed)\n+    y_true = rng.randint(0, 2, size=10)\n+    y_score = rng.rand(10)\n+    _, _, thresholds = roc_curve(y_true, y_score)\n+    assert np.isinf(thresholds[0])\n",
  "problem_statement": "Thresholds can exceed 1 in `roc_curve` while providing probability estimate\nWhile working on https://github.com/scikit-learn/scikit-learn/pull/26120, I found out that something was odd with `roc_curve` that returns a threshold greater than 1. A non-regression test (that could be part of `sklearn/metrics/tests/test_ranking.py`) could be as follow:\r\n\r\n```python\r\ndef test_roc_curve_with_probablity_estimates():\r\n    rng = np.random.RandomState(42)\r\n    y_true = rng.randint(0, 2, size=10)\r\n    y_score = rng.rand(10)\r\n    _, _, thresholds = roc_curve(y_true, y_score)\r\n    assert np.logical_or(thresholds <= 1, thresholds >= 0).all()\r\n```\r\n\r\nThe reason is due to the following:\r\n\r\nhttps://github.com/scikit-learn/scikit-learn/blob/e886ce4e1444c61b865e7839c9cff5464ee20ace/sklearn/metrics/_ranking.py#L1086\r\n\r\nBasically, this is to add a point for `fpr=0` and `tpr=0`. However, the `+ 1` rule does not make sense in the case `y_score` is a probability estimate.\r\n\r\nI am not sure what would be the best fix here. A potential workaround would be to check `thresholds.max() <= 1` in which case we should clip `thresholds` to not be above 1.\n",
  "hints_text": "",
  "created_at": "2023-04-17T16:33:08Z",
  "version": "1.3",
  "FAIL_TO_PASS": "[\"sklearn/metrics/tests/test_ranking.py::test_roc_curve_drop_intermediate\", \"sklearn/metrics/tests/test_ranking.py::test_roc_curve_with_probablity_estimates[42]\"]",
  "PASS_TO_PASS": "[\"sklearn/metrics/tests/test_ranking.py::test_roc_curve[True]\", \"sklearn/metrics/tests/test_ranking.py::test_roc_curve[False]\", \"sklearn/metrics/tests/test_ranking.py::test_roc_curve_end_points\", \"sklearn/metrics/tests/test_ranking.py::test_roc_returns_consistency\", \"sklearn/metrics/tests/test_ranking.py::test_roc_curve_multi\", \"sklearn/metrics/tests/test_ranking.py::test_roc_curve_confidence\", \"sklearn/metrics/tests/test_ranking.py::test_roc_curve_hard\", \"sklearn/metrics/tests/test_ranking.py::test_roc_curve_one_label\", \"sklearn/metrics/tests/test_ranking.py::test_roc_curve_toydata\", \"sklearn/metrics/tests/test_ranking.py::test_roc_curve_fpr_tpr_increasing\", \"sklearn/metrics/tests/test_ranking.py::test_auc\", \"sklearn/metrics/tests/test_ranking.py::test_auc_errors\", \"sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true0-labels0]\", \"sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true1-None]\", \"sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true2-labels2]\", \"sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata[y_true3-None]\", \"sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata_binary[y_true0-labels0]\", \"sklearn/metrics/tests/test_ranking.py::test_multiclass_ovo_roc_auc_toydata_binary[y_true1-labels1]\", \"sklearn/metrics/tests/test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true0-None]\", \"sklearn/metrics/tests/test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true1-None]\", \"sklearn/metrics/tests/test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true2-labels2]\", \"sklearn/metrics/tests/test_ranking.py::test_multiclass_ovr_roc_auc_toydata[y_true3-labels3]\", \"sklearn/metrics/tests/test_ranking.py::test_perfect_imperfect_chance_multiclass_roc_auc[ovr-macro]\", \"sklearn/metrics/tests/test_ranking.py::test_perfect_imperfect_chance_multiclass_roc_auc[ovr-micro]\", \"sklearn/metrics/tests/test_ranking.py::test_perfect_imperfect_chance_multiclass_roc_auc[ovo-macro]\", \"sklearn/metrics/tests/test_ranking.py::test_micro_averaged_ovr_roc_auc[42]\", \"sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Parameter\", \"sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-Number\", \"sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovo-'y_true'\", \"sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Parameter\", \"sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-Number\", \"sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_labels_error[ovr-'y_true'\", \"sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[average\", \"sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[sample_weight\", \"sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[Partial\", \"sklearn/metrics/tests/test_ranking.py::test_roc_auc_score_multiclass_error[multi_class\", \"sklearn/metrics/tests/test_ranking.py::test_auc_score_non_binary_class\", \"sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_multiclass_error[det_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_multiclass_error[precision_recall_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_multiclass_error[roc_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_pos_label[det_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_pos_label[precision_recall_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_implicit_pos_label[roc_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_zero_sample_weight[det_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_zero_sample_weight[precision_recall_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_binary_clf_curve_zero_sample_weight[roc_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve[True]\", \"sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve[False]\", \"sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve_toydata[True]\", \"sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve_toydata[False]\", \"sklearn/metrics/tests/test_ranking.py::test_precision_recall_curve_drop_intermediate\", \"sklearn/metrics/tests/test_ranking.py::test_average_precision_constant_values\", \"sklearn/metrics/tests/test_ranking.py::test_average_precision_score_pos_label_errors\", \"sklearn/metrics/tests/test_ranking.py::test_score_scale_invariance\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true0-y_score0-expected_fpr0-expected_fnr0]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true1-y_score1-expected_fpr1-expected_fnr1]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true2-y_score2-expected_fpr2-expected_fnr2]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true3-y_score3-expected_fpr3-expected_fnr3]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true4-y_score4-expected_fpr4-expected_fnr4]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true5-y_score5-expected_fpr5-expected_fnr5]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true6-y_score6-expected_fpr6-expected_fnr6]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true7-y_score7-expected_fpr7-expected_fnr7]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true8-y_score8-expected_fpr8-expected_fnr8]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true9-y_score9-expected_fpr9-expected_fnr9]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true10-y_score10-expected_fpr10-expected_fnr10]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true11-y_score11-expected_fpr11-expected_fnr11]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true12-y_score12-expected_fpr12-expected_fnr12]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true13-y_score13-expected_fpr13-expected_fnr13]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true14-y_score14-expected_fpr14-expected_fnr14]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true15-y_score15-expected_fpr15-expected_fnr15]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true16-y_score16-expected_fpr16-expected_fnr16]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true17-y_score17-expected_fpr17-expected_fnr17]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true18-y_score18-expected_fpr18-expected_fnr18]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_toydata[y_true19-y_score19-expected_fpr19-expected_fnr19]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true0-y_score0-expected_fpr0-expected_fnr0]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true1-y_score1-expected_fpr1-expected_fnr1]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true2-y_score2-expected_fpr2-expected_fnr2]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true3-y_score3-expected_fpr3-expected_fnr3]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true4-y_score4-expected_fpr4-expected_fnr4]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true5-y_score5-expected_fpr5-expected_fnr5]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true6-y_score6-expected_fpr6-expected_fnr6]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_tie_handling[y_true7-y_score7-expected_fpr7-expected_fnr7]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_sanity_check\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.25]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.5]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[0.75]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_constant_scores[1]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true0]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true1]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true2]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true3]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_perfect_scores[y_true4]\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true0-y_pred0-inconsistent\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true1-y_pred1-inconsistent\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true2-y_pred2-Only\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true3-y_pred3-Only\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_bad_input[y_true4-y_pred4-pos_label\", \"sklearn/metrics/tests/test_ranking.py::test_det_curve_pos_label\", \"sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_lrap_toy]\", \"sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_lrap_without_tie_and_increasing_score]\", \"sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_lrap_only_ties]\", \"sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[label_ranking_average_precision_score-check_zero_or_all_relevant_labels]\", \"sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[_my_lrap-check_lrap_toy]\", \"sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[_my_lrap-check_lrap_without_tie_and_increasing_score]\", \"sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[_my_lrap-check_lrap_only_ties]\", \"sklearn/metrics/tests/test_ranking.py::test_label_ranking_avp[_my_lrap-check_zero_or_all_relevant_labels]\", \"sklearn/metrics/tests/test_ranking.py::test_lrap_error_raised\", \"sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-2-1]\", \"sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-2-2]\", \"sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-2-8]\", \"sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-2-20]\", \"sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-5-1]\", \"sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-5-2]\", \"sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-5-8]\", \"sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-5-20]\", \"sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-10-1]\", \"sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-10-2]\", \"sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-10-8]\", \"sklearn/metrics/tests/test_ranking.py::test_alternative_lrap_implementation[0-10-20]\", \"sklearn/metrics/tests/test_ranking.py::test_lrap_sample_weighting_zero_labels\", \"sklearn/metrics/tests/test_ranking.py::test_coverage_error\", \"sklearn/metrics/tests/test_ranking.py::test_coverage_tie_handling\", \"sklearn/metrics/tests/test_ranking.py::test_coverage_1d_error_message[y_true0-y_score0]\", \"sklearn/metrics/tests/test_ranking.py::test_coverage_1d_error_message[y_true1-y_score1]\", \"sklearn/metrics/tests/test_ranking.py::test_coverage_1d_error_message[y_true2-y_score2]\", \"sklearn/metrics/tests/test_ranking.py::test_label_ranking_loss\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_appropriate_input_shape\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_loss_ties_handling\", \"sklearn/metrics/tests/test_ranking.py::test_dcg_score\", \"sklearn/metrics/tests/test_ranking.py::test_dcg_ties\", \"sklearn/metrics/tests/test_ranking.py::test_ndcg_ignore_ties_with_k\", \"sklearn/metrics/tests/test_ranking.py::test_ndcg_negative_ndarray_warn\", \"sklearn/metrics/tests/test_ranking.py::test_ndcg_invariant\", \"sklearn/metrics/tests/test_ranking.py::test_ndcg_toy_examples[True]\", \"sklearn/metrics/tests/test_ranking.py::test_ndcg_toy_examples[False]\", \"sklearn/metrics/tests/test_ranking.py::test_ndcg_error_single_document\", \"sklearn/metrics/tests/test_ranking.py::test_ndcg_score\", \"sklearn/metrics/tests/test_ranking.py::test_partial_roc_auc_score\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score[y_true0-1-0.25]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score[y_true1-2-0.5]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score[y_true2-3-0.75]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score0-1-1]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score1-1-0.5]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score2-2-1]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score3-1-1]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score4-1-0.5]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_binary[y_score5-2-1]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true0-0.75-labels0]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true1-0.5-labels1]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true2-0.5-labels2]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[True-y_true3-0.75-labels3]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true0-0.75-labels0]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true1-0.5-labels1]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true2-0.5-labels2]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_multiclass_with_labels[False-y_true3-0.75-labels3]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_increasing\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_ties[y_true0-1-0.25]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_ties[y_true1-2-0.5]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_ties[y_true2-3-1]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_warning[y_true0-4]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_warning[y_true1-5]\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true0-y_score0-None-y\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true1-y_score1-None-Number\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true2-y_score2-labels2-Parameter\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true3-y_score3-labels3-Parameter\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true4-y_score4-labels4-Number\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true5-y_score5-labels5-'y_true'\", \"sklearn/metrics/tests/test_ranking.py::test_top_k_accuracy_score_error[y_true6-y_score6-None-`y_true`\", \"sklearn/metrics/tests/test_ranking.py::test_label_ranking_avg_precision_score_should_allow_csr_matrix_for_y_true_input\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes0-average_precision_score]\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes0-det_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes0-precision_recall_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes0-roc_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes1-average_precision_score]\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes1-det_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes1-precision_recall_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes1-roc_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes2-average_precision_score]\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes2-det_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes2-precision_recall_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes2-roc_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-average_precision_score]\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-det_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-precision_recall_curve]\", \"sklearn/metrics/tests/test_ranking.py::test_ranking_metric_pos_label_types[classes3-roc_curve]\"]",
  "environment_setup_commit": "1e8a5b833d1b58f3ab84099c4582239af854b23a",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.024419",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}