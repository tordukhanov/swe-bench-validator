{
  "repo": "django/django",
  "instance_id": "django__django-11891",
  "base_commit": "3cd3bebe8921e14b911b36b2a1cbceef8fb6294e",
  "patch": "diff --git a/django/utils/cache.py b/django/utils/cache.py\n--- a/django/utils/cache.py\n+++ b/django/utils/cache.py\n@@ -98,7 +98,7 @@ def get_max_age(response):\n \n \n def set_response_etag(response):\n-    if not response.streaming:\n+    if not response.streaming and response.content:\n         response['ETag'] = quote_etag(hashlib.md5(response.content).hexdigest())\n     return response\n \n",
  "test_patch": "diff --git a/tests/middleware/tests.py b/tests/middleware/tests.py\n--- a/tests/middleware/tests.py\n+++ b/tests/middleware/tests.py\n@@ -452,6 +452,12 @@ def test_no_etag_streaming_response(self):\n         res = StreamingHttpResponse(['content'])\n         self.assertFalse(ConditionalGetMiddleware().process_response(self.req, res).has_header('ETag'))\n \n+    def test_no_etag_response_empty_content(self):\n+        res = HttpResponse()\n+        self.assertFalse(\n+            ConditionalGetMiddleware().process_response(self.req, res).has_header('ETag')\n+        )\n+\n     def test_no_etag_no_store_cache(self):\n         self.resp['Cache-Control'] = 'No-Cache, No-Store, Max-age=0'\n         self.assertFalse(ConditionalGetMiddleware().process_response(self.req, self.resp).has_header('ETag'))\n",
  "problem_statement": "ConditionalGetMiddleware returns 304 if ETag is the same but Last-Modified has changed.\nDescription\n\t \n\t\t(last modified by Mariusz Felisiak)\n\t \nConditionalGetMiddleware in combination with apache x-sendfile (django-sendfile) doesn't work properly.\nEach response gets a ETag generated based on response.content which is an empty string in the case of a x-sendfile response, so each time the file is accessed, the ETag generated by ConditionalGetMiddleware is the same. Regardless of the changed file/changed mtime. In get_conditional_response() the ETag (which is always the same hash of empty string) is checked first and returns a 304 because it ignores Last-Modified time. Django shouldn't return 304 if ETag is the same but Last-Modified has changed.\nRelated with #29241.\n",
  "hints_text": "Thanks for the ticket (please try to add more descriptive description in the future).\nHello! Please, check my pull request. I dont know is it django \"right\" way, but its works. So my solution was to check x-sendfile header and if it exists ignore etag comparison, because in this situation etag does not matter. ​https://github.com/django/django/pull/11878\n​https://github.com/django/django/pull/11879 Fixed small issues\nThanks for this patch, however I don't think that it is a right solution. This issue is not about nginx, it is about ConditionalGetMiddleware and how it behaves with the same Etag and changed Last-Modified time (see ​https://tools.ietf.org/html/rfc7232).\nOne possible solution would be to not generate an Etag for empty content. I didn't find documentation about that specific case, but for me, it does not make much sense to cache (return 304) empty responses. As for the precedence between Etag and Last modified conditions, I think Django is respecting the specs.\nSo as i see there two posible solutions: remove generation etag from middleware if empty content exists or add one more attributes for generation etag No matter from rfc-7232: An origin server SHOULD send an ETag for any selected representation for which detection of changes can be reasonably and consistently determined, since the entity-tag's use in conditional requests and evaluating cache freshness ([RFC7234]) can result in a substantial reduction of HTTP network traffic and can be a significant factor in improving service scalability and reliability. Or we can do nothing and rely on customer understanding",
  "created_at": "2019-10-09T09:20:50Z",
  "version": "3.1",
  "FAIL_TO_PASS": "[\"test_no_etag_response_empty_content (middleware.tests.ConditionalGetMiddlewareTest)\"]",
  "PASS_TO_PASS": "[\"test_etag_match (middleware.tests.ETagGZipMiddlewareTest)\", \"test_strong_etag_modified (middleware.tests.ETagGZipMiddlewareTest)\", \"test_weak_etag_not_modified (middleware.tests.ETagGZipMiddlewareTest)\", \"test_defaults_sameorigin (middleware.tests.XFrameOptionsMiddlewareTest)\", \"test_deny (middleware.tests.XFrameOptionsMiddlewareTest)\", \"test_dont_set_if_set (middleware.tests.XFrameOptionsMiddlewareTest)\", \"test_is_extendable (middleware.tests.XFrameOptionsMiddlewareTest)\", \"test_response_exempt (middleware.tests.XFrameOptionsMiddlewareTest)\", \"test_same_origin (middleware.tests.XFrameOptionsMiddlewareTest)\", \"test_compress_deterministic (middleware.tests.GZipMiddlewareTest)\", \"test_compress_file_response (middleware.tests.GZipMiddlewareTest)\", \"test_compress_non_200_response (middleware.tests.GZipMiddlewareTest)\", \"test_compress_response (middleware.tests.GZipMiddlewareTest)\", \"test_compress_streaming_response (middleware.tests.GZipMiddlewareTest)\", \"test_compress_streaming_response_unicode (middleware.tests.GZipMiddlewareTest)\", \"test_no_compress_compressed_response (middleware.tests.GZipMiddlewareTest)\", \"test_no_compress_incompressible_response (middleware.tests.GZipMiddlewareTest)\", \"test_no_compress_short_response (middleware.tests.GZipMiddlewareTest)\", \"test_append_slash_disabled (middleware.tests.CommonMiddlewareTest)\", \"test_append_slash_disabled_custom_urlconf (middleware.tests.CommonMiddlewareTest)\", \"test_append_slash_have_slash (middleware.tests.CommonMiddlewareTest)\", \"test_append_slash_have_slash_custom_urlconf (middleware.tests.CommonMiddlewareTest)\", \"test_append_slash_leading_slashes (middleware.tests.CommonMiddlewareTest)\", \"test_append_slash_no_redirect_on_POST_in_DEBUG (middleware.tests.CommonMiddlewareTest)\", \"test_append_slash_no_redirect_on_POST_in_DEBUG_custom_urlconf (middleware.tests.CommonMiddlewareTest)\", \"test_append_slash_quoted (middleware.tests.CommonMiddlewareTest)\", \"test_append_slash_quoted_custom_urlconf (middleware.tests.CommonMiddlewareTest)\", \"test_append_slash_redirect (middleware.tests.CommonMiddlewareTest)\", \"test_append_slash_redirect_custom_urlconf (middleware.tests.CommonMiddlewareTest)\", \"test_append_slash_redirect_querystring (middleware.tests.CommonMiddlewareTest)\", \"test_append_slash_redirect_querystring_have_slash (middleware.tests.CommonMiddlewareTest)\", \"test_append_slash_slashless_resource (middleware.tests.CommonMiddlewareTest)\", \"test_append_slash_slashless_resource_custom_urlconf (middleware.tests.CommonMiddlewareTest)\", \"test_append_slash_slashless_unknown (middleware.tests.CommonMiddlewareTest)\", \"test_append_slash_slashless_unknown_custom_urlconf (middleware.tests.CommonMiddlewareTest)\", \"test_content_length_header_added (middleware.tests.CommonMiddlewareTest)\", \"test_content_length_header_not_added_for_streaming_response (middleware.tests.CommonMiddlewareTest)\", \"test_content_length_header_not_changed (middleware.tests.CommonMiddlewareTest)\", \"test_disallowed_user_agents (middleware.tests.CommonMiddlewareTest)\", \"Regression test for #15152\", \"test_prepend_www (middleware.tests.CommonMiddlewareTest)\", \"test_prepend_www_append_slash_have_slash (middleware.tests.CommonMiddlewareTest)\", \"test_prepend_www_append_slash_have_slash_custom_urlconf (middleware.tests.CommonMiddlewareTest)\", \"test_prepend_www_append_slash_slashless (middleware.tests.CommonMiddlewareTest)\", \"test_prepend_www_append_slash_slashless_custom_urlconf (middleware.tests.CommonMiddlewareTest)\", \"test_prepend_www_custom_urlconf (middleware.tests.CommonMiddlewareTest)\", \"test_response_redirect_class (middleware.tests.CommonMiddlewareTest)\", \"test_response_redirect_class_subclass (middleware.tests.CommonMiddlewareTest)\", \"test_etag_extended_cache_control (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_if_modified_since_and_client_error (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_if_modified_since_and_last_modified_in_the_future (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_if_modified_since_and_last_modified_in_the_past (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_if_modified_since_and_no_last_modified (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_if_modified_since_and_redirect (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_if_modified_since_and_same_last_modified (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_if_none_match_and_client_error (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_if_none_match_and_different_etag (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_if_none_match_and_no_etag (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_if_none_match_and_redirect (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_if_none_match_and_same_etag (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_middleware_calculates_etag (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_middleware_wont_overwrite_etag (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_no_etag_no_store_cache (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_no_etag_streaming_response (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_no_head (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_no_if_modified_since_and_last_modified (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_no_if_none_match_and_etag (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_no_unsafe (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_not_modified_headers (middleware.tests.ConditionalGetMiddlewareTest)\", \"test_404_error_reporting (middleware.tests.BrokenLinkEmailsMiddlewareTest)\", \"test_404_error_reporting_ignored_url (middleware.tests.BrokenLinkEmailsMiddlewareTest)\", \"test_404_error_reporting_no_referer (middleware.tests.BrokenLinkEmailsMiddlewareTest)\", \"test_custom_request_checker (middleware.tests.BrokenLinkEmailsMiddlewareTest)\", \"test_referer_equal_to_requested_url (middleware.tests.BrokenLinkEmailsMiddlewareTest)\", \"test_referer_equal_to_requested_url_on_another_domain (middleware.tests.BrokenLinkEmailsMiddlewareTest)\", \"test_referer_equal_to_requested_url_without_trailing_slash_when_append_slash_is_set (middleware.tests.BrokenLinkEmailsMiddlewareTest)\", \"test_referer_equal_to_requested_url_without_trailing_slash_when_append_slash_is_unset (middleware.tests.BrokenLinkEmailsMiddlewareTest)\"]",
  "environment_setup_commit": "0668164b4ac93a5be79f5b87fae83c657124d9ab",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.587182",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}