{
  "repo": "django/django",
  "instance_id": "django__django-16920",
  "base_commit": "649262a406168709686f97694493aa1f717c6c96",
  "patch": "diff --git a/django/forms/boundfield.py b/django/forms/boundfield.py\n--- a/django/forms/boundfield.py\n+++ b/django/forms/boundfield.py\n@@ -287,6 +287,13 @@ def build_widget_attrs(self, attrs, widget=None):\n                 attrs[\"required\"] = True\n         if self.field.disabled:\n             attrs[\"disabled\"] = True\n+        # If a custom aria-describedby attribute is given and help_text is\n+        # used, the custom aria-described by is preserved so user can set the\n+        # desired order.\n+        if custom_aria_described_by_id := widget.attrs.get(\"aria-describedby\"):\n+            attrs[\"aria-describedby\"] = custom_aria_described_by_id\n+        elif self.field.help_text and self.id_for_label:\n+            attrs[\"aria-describedby\"] = f\"{self.id_for_label}_helptext\"\n         return attrs\n \n     @property\n",
  "test_patch": "diff --git a/tests/admin_inlines/tests.py b/tests/admin_inlines/tests.py\n--- a/tests/admin_inlines/tests.py\n+++ b/tests/admin_inlines/tests.py\n@@ -452,7 +452,7 @@ def test_non_related_name_inline(self):\n         self.assertContains(\n             response,\n             '<input id=\"id_-1-0-name\" type=\"text\" class=\"vTextField\" name=\"-1-0-name\" '\n-            'maxlength=\"100\">',\n+            'maxlength=\"100\" aria-describedby=\"id_-1-0-name_helptext\">',\n             html=True,\n         )\n         self.assertContains(\ndiff --git a/tests/forms_tests/tests/test_forms.py b/tests/forms_tests/tests/test_forms.py\n--- a/tests/forms_tests/tests/test_forms.py\n+++ b/tests/forms_tests/tests/test_forms.py\n@@ -3016,6 +3016,72 @@ class UserRegistration(Form):\n             \"</td></tr>\",\n         )\n \n+    def test_widget_attrs_custom_aria_describedby(self):\n+        # aria-describedby provided to the widget overrides the default.\n+\n+        class UserRegistration(Form):\n+            username = CharField(\n+                max_length=255,\n+                help_text=\"e.g., user@example.com\",\n+                widget=TextInput(attrs={\"aria-describedby\": \"custom-description\"}),\n+            )\n+            password = CharField(\n+                widget=PasswordInput, help_text=\"Wählen Sie mit Bedacht.\"\n+            )\n+\n+        p = UserRegistration()\n+        self.assertHTMLEqual(\n+            p.as_div(),\n+            '<div><label for=\"id_username\">Username:</label>'\n+            '<div class=\"helptext\" id=\"id_username_helptext\">e.g., user@example.com'\n+            '</div><input type=\"text\" name=\"username\" maxlength=\"255\" required '\n+            'aria-describedby=\"custom-description\" id=\"id_username\">'\n+            \"</div><div>\"\n+            '<label for=\"id_password\">Password:</label>'\n+            '<div class=\"helptext\" id=\"id_password_helptext\">Wählen Sie mit Bedacht.'\n+            '</div><input type=\"password\" name=\"password\" required '\n+            'aria-describedby=\"id_password_helptext\" id=\"id_password\"></div>',\n+        )\n+        self.assertHTMLEqual(\n+            p.as_ul(),\n+            '<li><label for=\"id_username\">Username:</label><input type=\"text\" '\n+            'name=\"username\" maxlength=\"255\" required '\n+            'aria-describedby=\"custom-description\" id=\"id_username\">'\n+            '<span class=\"helptext\" id=\"id_username_helptext\">e.g., user@example.com'\n+            \"</span></li><li>\"\n+            '<label for=\"id_password\">Password:</label>'\n+            '<input type=\"password\" name=\"password\" required '\n+            'aria-describedby=\"id_password_helptext\" id=\"id_password\">'\n+            '<span class=\"helptext\" id=\"id_password_helptext\">Wählen Sie mit Bedacht.'\n+            \"</span></li>\",\n+        )\n+        self.assertHTMLEqual(\n+            p.as_p(),\n+            '<p><label for=\"id_username\">Username:</label><input type=\"text\" '\n+            'name=\"username\" maxlength=\"255\" required '\n+            'aria-describedby=\"custom-description\" id=\"id_username\">'\n+            '<span class=\"helptext\" id=\"id_username_helptext\">e.g., user@example.com'\n+            \"</span></p><p>\"\n+            '<label for=\"id_password\">Password:</label>'\n+            '<input type=\"password\" name=\"password\" required '\n+            'aria-describedby=\"id_password_helptext\" id=\"id_password\">'\n+            '<span class=\"helptext\" id=\"id_password_helptext\">Wählen Sie mit Bedacht.'\n+            \"</span></p>\",\n+        )\n+        self.assertHTMLEqual(\n+            p.as_table(),\n+            '<tr><th><label for=\"id_username\">Username:</label></th><td>'\n+            '<input type=\"text\" name=\"username\" maxlength=\"255\" required '\n+            'aria-describedby=\"custom-description\" id=\"id_username\"><br>'\n+            '<span class=\"helptext\" id=\"id_username_helptext\">e.g., user@example.com'\n+            \"</span></td></tr><tr><th>\"\n+            '<label for=\"id_password\">Password:</label></th><td>'\n+            '<input type=\"password\" name=\"password\" required '\n+            'aria-describedby=\"id_password_helptext\" id=\"id_password\"><br>'\n+            '<span class=\"helptext\" id=\"id_password_helptext\">Wählen Sie mit Bedacht.'\n+            \"</span></td></tr>\",\n+        )\n+\n     def test_subclassing_forms(self):\n         # You can subclass a Form to add fields. The resulting form subclass will have\n         # all of the fields of the parent Form, plus whichever fields you define in the\n@@ -4796,7 +4862,7 @@ def clean(self):\n             \"<form>\"\n             '<p><label for=\"id_username\">Username:</label>'\n             '<input id=\"id_username\" type=\"text\" name=\"username\" maxlength=\"10\" '\n-            \"required></p>\"\n+            'aria-describedby=\"id_username_helptext\" required></p>'\n             '<p><label for=\"id_password1\">Password1:</label>'\n             '<input type=\"password\" name=\"password1\" id=\"id_password1\" required></p>'\n             '<p><label for=\"id_password2\">Password2:</label>'\n@@ -4833,7 +4899,7 @@ def clean(self):\n             \"<form>\"\n             '<p><legend for=\"id_username\">Username:</legend>'\n             '<input id=\"id_username\" type=\"text\" name=\"username\" maxlength=\"10\" '\n-            \"required></p>\"\n+            'aria-describedby=\"id_username_helptext\" required></p>'\n             '<p><legend for=\"id_password1\">Password1:</legend>'\n             '<input type=\"password\" name=\"password1\" id=\"id_password1\" required></p>'\n             '<p><legend for=\"id_password2\">Password2:</legend>'\ndiff --git a/tests/model_forms/tests.py b/tests/model_forms/tests.py\n--- a/tests/model_forms/tests.py\n+++ b/tests/model_forms/tests.py\n@@ -958,7 +958,8 @@ def test_widget_overrides(self):\n         )\n         self.assertHTMLEqual(\n             str(form[\"slug\"]),\n-            '<input id=\"id_slug\" type=\"text\" name=\"slug\" maxlength=\"20\" required>',\n+            '<input id=\"id_slug\" type=\"text\" name=\"slug\" maxlength=\"20\" '\n+            'aria-describedby=\"id_slug_helptext\" required>',\n         )\n \n     def test_label_overrides(self):\n",
  "problem_statement": "Fields’ help text and errors should be associated with input\nDescription\n\t \n\t\t(last modified by Thibaud Colas)\n\t \nWith Django’s default field rendering, all field errors are rendered as a list above the field’s label, and help text is rendered after the field’s form element. Example with as_p:\n<ul class=\"errorlist\">\n <li>This field is required.</li>\n</ul>\n<p>\n <label for=\"id_duration_required\">Duration required:</label>\n <input type=\"text\" name=\"duration_required\" required=\"\" id=\"id_duration_required\">\n <span class=\"helptext\">Help</span>\n</p>\nOne problem for screen reader users is that the association between the errors and the field, and between the help text and the field, is only communicated visually. This is a failure of either WCAG 2.1 level A ​SC 1.3.1: Info and Relationships, or ​SC 3.3.2: Labels or Instructions. More importantly, it just makes it harder than necessary for screen reader users to make use of help text, and to identify error messages.\nThe fix is relatively straightforward – using aria-describedby, as documented in the (non-normative) ​ARIA1 Using the aria-describedby property to provide a descriptive label for user interface controls technique. Here is another well-known accessibility-oriented UI library that implements this technique: ​GOV.UK design system – text input with error message.\nHere is what implementing aria-describedby would look like in the same example as above:\n<div class=\"errorlist\" id=\"id_duration_required_errorlist\">\n <p>This field is required.</p>\n</div>\n<p>\n <label for=\"id_duration_required\">Duration required:</label>\n <input type=\"text\" name=\"duration_required\" required=\"\" id=\"id_duration_required\" aria-describedby=\"id_duration_required_errorlist id_duration_required_helptext\">\n <span class=\"helptext\" id=\"id_duration_required_helptext\">Help</span>\n</p>\nWe have additional id attributes, aria-describedby, and errorlist is no longer a <ul>. Result in VoiceOver:\nUnfortunately I tried to have this with the errorlist kept as a ul, but it wasn’t announced by VoiceOver. I haven’t heard of this limitation before so am not sure why that might be the case – I’d appreciate others taking a look if possible.\n",
  "hints_text": "Screen recording of the VoiceOver text-to-speech output, announcing the field label, then error message, then help text.\nThanks. Ideally, we should avoid changing <ul> to <div>. Maybe <ul> could be wrapped by <div>.\nI created a draft ​PR. @Mariusz, Could you please check it and let me know if I choose the right direction to fix the problem? If so, I can continue with test adjustment. @Thibaud, It would be great if you can if it will produce your desired output.\n​PR",
  "created_at": "2023-06-01T14:53:32Z",
  "version": "5.0",
  "FAIL_TO_PASS": "[\"test_widget_overrides (model_forms.tests.TestFieldOverridesByFormMeta.test_widget_overrides)\", \"test_templates_with_forms (forms_tests.tests.test_forms.TemplateTests.test_templates_with_forms)\", \"Multiple inlines with related_name='+' have correct form prefixes.\"]",
  "PASS_TO_PASS": "[\"test_modelform_factory_metaclass (model_forms.tests.CustomMetaclassTestCase.test_modelform_factory_metaclass)\", \"Regression test for #12960. Make sure the cleaned_data returned from\", \"Regression for #12596: Calling super from ModelForm.clean() should be\", \"test_field_removal (model_forms.tests.ModelFormInheritanceTests.test_field_removal)\", \"Form fields can be removed in subclasses by setting them to None\", \"test_form_subclass_inheritance (model_forms.tests.ModelFormInheritanceTests.test_form_subclass_inheritance)\", \"test_bad_callback (model_forms.tests.FormFieldCallbackTests.test_bad_callback)\", \"Using base forms with widgets defined in Meta should not raise errors.\", \"A custom formfield_callback is used if provided\", \"test_custom_callback_from_base_form_meta (model_forms.tests.FormFieldCallbackTests.test_custom_callback_from_base_form_meta)\", \"test_custom_callback_in_meta (model_forms.tests.FormFieldCallbackTests.test_custom_callback_in_meta)\", \"Regression for #15315: modelform_factory should accept widgets\", \"test_inherit_after_custom_callback (model_forms.tests.FormFieldCallbackTests.test_inherit_after_custom_callback)\", \"Regression for #19733\", \"test_attribute_class (forms_tests.tests.test_forms.RendererTests.test_attribute_class)\", \"test_attribute_instance (forms_tests.tests.test_forms.RendererTests.test_attribute_instance)\", \"test_attribute_override (forms_tests.tests.test_forms.RendererTests.test_attribute_override)\", \"test_default (forms_tests.tests.test_forms.RendererTests.test_default)\", \"test_kwarg_class (forms_tests.tests.test_forms.RendererTests.test_kwarg_class)\", \"test_kwarg_instance (forms_tests.tests.test_forms.RendererTests.test_kwarg_instance)\", \"test_notrequired_overrides_notblank (model_forms.tests.ValidationTest.test_notrequired_overrides_notblank)\", \"test_validates_with_replaced_field_excluded (model_forms.tests.ValidationTest.test_validates_with_replaced_field_excluded)\", \"test_validates_with_replaced_field_not_specified (model_forms.tests.ValidationTest.test_validates_with_replaced_field_not_specified)\", \"A model ValidationError using the dict form should put the error\", \"A model ValidationError not using the dict form should put the error\", \"Data for a ManyToManyField is a list rather than a lazy QuerySet.\", \"test_model_form_applies_localize_to_all_fields (model_forms.tests.LocalizedModelFormTest.test_model_form_applies_localize_to_all_fields)\", \"test_model_form_applies_localize_to_some_fields (model_forms.tests.LocalizedModelFormTest.test_model_form_applies_localize_to_some_fields)\", \"test_model_form_refuses_arbitrary_string (model_forms.tests.LocalizedModelFormTest.test_model_form_refuses_arbitrary_string)\", \"Regression for #9362\", \"test_callable_called_each_time_form_is_instantiated (model_forms.tests.LimitChoicesToTests.test_callable_called_each_time_form_is_instantiated)\", \"A custom field with a `queryset` attribute but no `limit_choices_to`\", \"test_fields_for_model_applies_limit_choices_to (model_forms.tests.LimitChoicesToTests.test_fields_for_model_applies_limit_choices_to)\", \"A ForeignKey can use limit_choices_to as a callable (#2554).\", \"A ManyToManyField can use limit_choices_to as a callable (#2554).\", \"test_limit_choices_to_m2m_through (model_forms.tests.LimitChoicesToTests.test_limit_choices_to_m2m_through)\", \"test_limit_choices_to_no_duplicates (model_forms.tests.LimitChoicesToTests.test_limit_choices_to_no_duplicates)\", \"test_big_integer_field (model_forms.tests.ModelOtherFieldTests.test_big_integer_field)\", \"If the https:// prefix is omitted on form input, the field adds it\", \"When explicitly including a non-editable field in a ModelForm, the\", \"test_url_modelform_assume_scheme_warning (model_forms.tests.ModelOtherFieldTests.test_url_modelform_assume_scheme_warning)\", \"Check basic URL field validation on model forms\", \"test_abstract_inherited_unique (model_forms.tests.UniqueTest.test_abstract_inherited_unique)\", \"test_abstract_inherited_unique_together (model_forms.tests.UniqueTest.test_abstract_inherited_unique_together)\", \"Ensure keys and blank character strings are tested for uniqueness.\", \"Test for primary_key being in the form and failing validation.\", \"test_inherited_unique (model_forms.tests.UniqueTest.test_inherited_unique)\", \"test_inherited_unique_for_date (model_forms.tests.UniqueTest.test_inherited_unique_for_date)\", \"test_inherited_unique_together (model_forms.tests.UniqueTest.test_inherited_unique_together)\", \"When the same field is involved in multiple unique_together\", \"test_override_unique_for_date_message (model_forms.tests.UniqueTest.test_override_unique_for_date_message)\", \"test_override_unique_message (model_forms.tests.UniqueTest.test_override_unique_message)\", \"test_override_unique_together_message (model_forms.tests.UniqueTest.test_override_unique_together_message)\", \"test_simple_unique (model_forms.tests.UniqueTest.test_simple_unique)\", \"test_unique_for_date (model_forms.tests.UniqueTest.test_unique_for_date)\", \"If the date for unique_for_* constraints is excluded from the\", \"test_unique_for_date_with_nullable_date (model_forms.tests.UniqueTest.test_unique_for_date_with_nullable_date)\", \"test_unique_null (model_forms.tests.UniqueTest.test_unique_null)\", \"ModelForm test of unique_together constraint\", \"Forms don't validate unique_together constraints when only part of the\", \"test_error_messages_overrides (model_forms.tests.TestFieldOverridesByFormMeta.test_error_messages_overrides)\", \"test_field_type_overrides (model_forms.tests.TestFieldOverridesByFormMeta.test_field_type_overrides)\", \"test_help_text_overrides (model_forms.tests.TestFieldOverridesByFormMeta.test_help_text_overrides)\", \"test_label_overrides (model_forms.tests.TestFieldOverridesByFormMeta.test_label_overrides)\", \"test_custom_error_messages (model_forms.tests.ModelFormCustomErrorTests.test_custom_error_messages)\", \"test_model_clean_error_messages (model_forms.tests.ModelFormCustomErrorTests.test_model_clean_error_messages)\", \"test_assignment_of_none (model_forms.tests.ModelOneToOneFieldTests.test_assignment_of_none)\", \"test_assignment_of_none_null_false (model_forms.tests.ModelOneToOneFieldTests.test_assignment_of_none_null_false)\", \"test_modelform_onetoonefield (model_forms.tests.ModelOneToOneFieldTests.test_modelform_onetoonefield)\", \"test_modelform_subclassed_model (model_forms.tests.ModelOneToOneFieldTests.test_modelform_subclassed_model)\", \"test_onetoonefield (model_forms.tests.ModelOneToOneFieldTests.test_onetoonefield)\", \"test_custom_renderer_field_template_name (forms_tests.tests.test_forms.OverrideTests.test_custom_renderer_field_template_name)\", \"test_custom_renderer_template_name (forms_tests.tests.test_forms.OverrideTests.test_custom_renderer_template_name)\", \"test_cyclic_context_boundfield_render (forms_tests.tests.test_forms.OverrideTests.test_cyclic_context_boundfield_render)\", \"test_errorlist_override (forms_tests.tests.test_forms.OverrideTests.test_errorlist_override)\", \"test_legend_tag (forms_tests.tests.test_forms.OverrideTests.test_legend_tag)\", \"test_per_form_template_name (forms_tests.tests.test_forms.OverrideTests.test_per_form_template_name)\", \"test_basic_processing_in_view (forms_tests.tests.test_forms.TemplateTests.test_basic_processing_in_view)\", \"test_custom_field_render_template (forms_tests.tests.test_forms.TemplateTests.test_custom_field_render_template)\", \"test_custom_field_template (forms_tests.tests.test_forms.TemplateTests.test_custom_field_template)\", \"test_iterate_checkboxes (forms_tests.tests.test_forms.TemplateTests.test_iterate_checkboxes)\", \"test_iterate_radios (forms_tests.tests.test_forms.TemplateTests.test_iterate_radios)\", \"test_callable_field_default (model_forms.tests.OtherModelFormTests.test_callable_field_default)\", \"test_choices_type (model_forms.tests.OtherModelFormTests.test_choices_type)\", \"test_foreignkeys_which_use_to_field (model_forms.tests.OtherModelFormTests.test_foreignkeys_which_use_to_field)\", \"test_iterable_model_m2m (model_forms.tests.OtherModelFormTests.test_iterable_model_m2m)\", \"test_media_on_modelform (model_forms.tests.OtherModelFormTests.test_media_on_modelform)\", \"test_model_field_that_returns_none_to_exclude_itself_with_explicit_fields (model_forms.tests.OtherModelFormTests.test_model_field_that_returns_none_to_exclude_itself_with_explicit_fields)\", \"ModelChoiceField should respect a prefetch_related() on its queryset.\", \"test_article_form (model_forms.tests.ModelFormBaseTest.test_article_form)\", \"test_bad_form (model_forms.tests.ModelFormBaseTest.test_bad_form)\", \"test_base_form (model_forms.tests.ModelFormBaseTest.test_base_form)\", \"A ModelForm with a model having ForeignKey(blank=False, null=True)\", \"test_blank_foreign_key_with_radio (model_forms.tests.ModelFormBaseTest.test_blank_foreign_key_with_radio)\", \"#13776 -- ModelForm's with models having a FK set to null=False and\", \"test_confused_form (model_forms.tests.ModelFormBaseTest.test_confused_form)\", \"test_default_filefield (model_forms.tests.ModelFormBaseTest.test_default_filefield)\", \"test_default_not_populated_on_checkboxselectmultiple (model_forms.tests.ModelFormBaseTest.test_default_not_populated_on_checkboxselectmultiple)\", \"test_default_not_populated_on_non_empty_value_in_cleaned_data (model_forms.tests.ModelFormBaseTest.test_default_not_populated_on_non_empty_value_in_cleaned_data)\", \"test_default_not_populated_on_optional_checkbox_input (model_forms.tests.ModelFormBaseTest.test_default_not_populated_on_optional_checkbox_input)\", \"test_default_not_populated_on_selectmultiple (model_forms.tests.ModelFormBaseTest.test_default_not_populated_on_selectmultiple)\", \"test_default_populated_on_optional_field (model_forms.tests.ModelFormBaseTest.test_default_populated_on_optional_field)\", \"test_default_selectdatewidget (model_forms.tests.ModelFormBaseTest.test_default_selectdatewidget)\", \"test_default_splitdatetime_field (model_forms.tests.ModelFormBaseTest.test_default_splitdatetime_field)\", \"No fields on a ModelForm should actually result in no fields.\", \"No fields should be set on a model instance if construct_instance\", \"An argument of fields=() to fields_for_model should return an empty dictionary\", \"test_exclude_and_validation (model_forms.tests.ModelFormBaseTest.test_exclude_and_validation)\", \"test_exclude_fields (model_forms.tests.ModelFormBaseTest.test_exclude_fields)\", \"test_exclude_fields_with_string (model_forms.tests.ModelFormBaseTest.test_exclude_fields_with_string)\", \"test_exclude_nonexistent_field (model_forms.tests.ModelFormBaseTest.test_exclude_nonexistent_field)\", \"test_extra_declared_field_model_form (model_forms.tests.ModelFormBaseTest.test_extra_declared_field_model_form)\", \"test_extra_field_model_form (model_forms.tests.ModelFormBaseTest.test_extra_field_model_form)\", \"test_extra_field_modelform_factory (model_forms.tests.ModelFormBaseTest.test_extra_field_modelform_factory)\", \"test_extra_fields (model_forms.tests.ModelFormBaseTest.test_extra_fields)\", \"test_fields_for_model_form_fields (model_forms.tests.ModelFormBaseTest.test_fields_for_model_form_fields)\", \"test_invalid_meta_model (model_forms.tests.ModelFormBaseTest.test_invalid_meta_model)\", \"test_limit_fields_with_string (model_forms.tests.ModelFormBaseTest.test_limit_fields_with_string)\", \"test_limit_nonexistent_field (model_forms.tests.ModelFormBaseTest.test_limit_nonexistent_field)\", \"test_missing_fields_attribute (model_forms.tests.ModelFormBaseTest.test_missing_fields_attribute)\", \"test_mixmodel_form (model_forms.tests.ModelFormBaseTest.test_mixmodel_form)\", \"test_no_model_class (model_forms.tests.ModelFormBaseTest.test_no_model_class)\", \"test_non_blank_foreign_key_with_radio (model_forms.tests.ModelFormBaseTest.test_non_blank_foreign_key_with_radio)\", \"test_orderfields2_form (model_forms.tests.ModelFormBaseTest.test_orderfields2_form)\", \"test_orderfields_form (model_forms.tests.ModelFormBaseTest.test_orderfields_form)\", \"test_override_field (model_forms.tests.ModelFormBaseTest.test_override_field)\", \"test_prefixed_form_with_default_field (model_forms.tests.ModelFormBaseTest.test_prefixed_form_with_default_field)\", \"test_renderer_kwarg (model_forms.tests.ModelFormBaseTest.test_renderer_kwarg)\", \"test_replace_field (model_forms.tests.ModelFormBaseTest.test_replace_field)\", \"test_replace_field_variant_2 (model_forms.tests.ModelFormBaseTest.test_replace_field_variant_2)\", \"test_replace_field_variant_3 (model_forms.tests.ModelFormBaseTest.test_replace_field_variant_3)\", \"A ModelForm with a model with a field set to blank=False and the form\", \"test_save_blank_null_unique_charfield_saves_null (model_forms.tests.ModelFormBaseTest.test_save_blank_null_unique_charfield_saves_null)\", \"test_subcategory_form (model_forms.tests.ModelFormBaseTest.test_subcategory_form)\", \"test_subclassmeta_form (model_forms.tests.ModelFormBaseTest.test_subclassmeta_form)\", \"test_clean_does_deduplicate_values (model_forms.tests.ModelMultipleChoiceFieldTests.test_clean_does_deduplicate_values)\", \"test_model_multiple_choice_field (model_forms.tests.ModelMultipleChoiceFieldTests.test_model_multiple_choice_field)\", \"#22745 -- Make sure that ModelMultipleChoiceField with\", \"ModelMultipleChoiceField does O(1) queries instead of O(n) (#10156).\", \"test_model_multiple_choice_required_false (model_forms.tests.ModelMultipleChoiceFieldTests.test_model_multiple_choice_required_false)\", \"ModelMultipleChoiceField run given validators (#14144).\", \"Test support of show_hidden_initial by ModelMultipleChoiceField.\", \"test_show_hidden_initial_changed_queries_efficiently (model_forms.tests.ModelMultipleChoiceFieldTests.test_show_hidden_initial_changed_queries_efficiently)\", \"test_to_field_name_with_initial_data (model_forms.tests.ModelMultipleChoiceFieldTests.test_to_field_name_with_initial_data)\", \"test_auto_id (model_forms.tests.ModelFormBasicTests.test_auto_id)\", \"test_base_form (model_forms.tests.ModelFormBasicTests.test_base_form)\", \"test_basic_creation (model_forms.tests.ModelFormBasicTests.test_basic_creation)\", \"test_custom_form_fields (model_forms.tests.ModelFormBasicTests.test_custom_form_fields)\", \"test_initial_values (model_forms.tests.ModelFormBasicTests.test_initial_values)\", \"test_m2m_editing (model_forms.tests.ModelFormBasicTests.test_m2m_editing)\", \"A callable can be provided as the initial value for an m2m field.\", \"test_multi_fields (model_forms.tests.ModelFormBasicTests.test_multi_fields)\", \"Re-cleaning an instance that was added via a ModelForm shouldn't raise\", \"test_runtime_choicefield_populated (model_forms.tests.ModelFormBasicTests.test_runtime_choicefield_populated)\", \"test_save_commit_false (model_forms.tests.ModelFormBasicTests.test_save_commit_false)\", \"test_save_with_data_errors (model_forms.tests.ModelFormBasicTests.test_save_with_data_errors)\", \"test_subset_fields (model_forms.tests.ModelFormBasicTests.test_subset_fields)\", \"test_validate_foreign_key_to_model_with_overridden_manager (model_forms.tests.ModelFormBasicTests.test_validate_foreign_key_to_model_with_overridden_manager)\", \"test_validate_foreign_key_uses_default_manager (model_forms.tests.ModelFormBasicTests.test_validate_foreign_key_uses_default_manager)\", \"test_accessing_clean (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_accessing_clean)\", \"test_auto_id (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_auto_id)\", \"test_auto_id_false (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_auto_id_false)\", \"test_auto_id_on_form_and_field (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_auto_id_on_form_and_field)\", \"test_auto_id_true (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_auto_id_true)\", \"BaseForm.__repr__() should contain some basic information about the\", \"BaseForm.__repr__() shouldn't trigger the form validation.\", \"BoundField without any choices (subwidgets) evaluates to True.\", \"test_boundfield_css_classes (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_boundfield_css_classes)\", \"test_boundfield_empty_label (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_boundfield_empty_label)\", \"test_boundfield_id_for_label (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_boundfield_id_for_label)\", \"If an id is provided in `Widget.attrs`, it overrides the generated ID,\", \"Multiple calls to BoundField().value() in an unbound form should return\", \"test_boundfield_invalid_index (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_boundfield_invalid_index)\", \"test_boundfield_label_tag (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_boundfield_label_tag)\", \"test_boundfield_label_tag_custom_widget_id_for_label (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_boundfield_label_tag_custom_widget_id_for_label)\", \"If a widget has no id, label_tag() and legend_tag() return the text\", \"test_boundfield_slice (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_boundfield_slice)\", \"If auto_id is provided when initializing the form, the generated ID in\", \"test_boundfield_value_disabled_callable_initial (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_boundfield_value_disabled_callable_initial)\", \"test_boundfield_values (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_boundfield_values)\", \"test_boundfield_widget_type (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_boundfield_widget_type)\", \"test_callable_initial_data (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_callable_initial_data)\", \"test_changed_data (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_changed_data)\", \"test_changing_cleaned_data_in_clean (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_changing_cleaned_data_in_clean)\", \"test_changing_cleaned_data_nothing_returned (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_changing_cleaned_data_nothing_returned)\", \"test_checkbox_auto_id (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_checkbox_auto_id)\", \"test_class_prefix (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_class_prefix)\", \"test_cleaned_data_only_fields (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_cleaned_data_only_fields)\", \"test_custom_boundfield (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_custom_boundfield)\", \"Form fields can customize what is considered as an empty value\", \"test_datetime_changed_data_callable_with_microseconds (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_datetime_changed_data_callable_with_microseconds)\", \"The cleaned value for a form with a disabled DateTimeField and callable\", \"Cleaning a form with a disabled DateTimeField and callable initial\", \"test_dynamic_construction (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_dynamic_construction)\", \"test_dynamic_initial_data (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_dynamic_initial_data)\", \"test_empty_data_files_multi_value_dict (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_empty_data_files_multi_value_dict)\", \"test_empty_dict (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_empty_dict)\", \"test_empty_permitted (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_empty_permitted)\", \"test_empty_permitted_and_use_required_attribute (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_empty_permitted_and_use_required_attribute)\", \"test_empty_querydict_args (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_empty_querydict_args)\", \"test_error_dict (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_error_dict)\", \"#21962 - adding html escape flag to ErrorDict\", \"test_error_escaping (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_error_escaping)\", \"test_error_html_required_html_classes (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_error_html_required_html_classes)\", \"test_error_list (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_error_list)\", \"test_error_list_class_has_one_class_specified (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_error_list_class_has_one_class_specified)\", \"test_error_list_class_not_specified (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_error_list_class_not_specified)\", \"test_error_list_with_hidden_field_errors_has_correct_class (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_error_list_with_hidden_field_errors_has_correct_class)\", \"test_error_list_with_non_field_errors_has_correct_class (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_error_list_with_non_field_errors_has_correct_class)\", \"test_escaping (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_escaping)\", \"test_explicit_field_order (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_explicit_field_order)\", \"test_extracting_hidden_and_visible (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_extracting_hidden_and_visible)\", \"test_field_deep_copy_error_messages (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_field_deep_copy_error_messages)\", \"test_field_named_data (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_field_named_data)\", \"test_field_order (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_field_order)\", \"test_filefield_initial_callable (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_filefield_initial_callable)\", \"test_filefield_with_fileinput_required (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_filefield_with_fileinput_required)\", \"test_form (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_form)\", \"test_form_html_attributes (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_form_html_attributes)\", \"test_form_with_disabled_fields (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_form_with_disabled_fields)\", \"test_form_with_iterable_boundfield (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_form_with_iterable_boundfield)\", \"test_form_with_iterable_boundfield_id (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_form_with_iterable_boundfield_id)\", \"test_form_with_noniterable_boundfield (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_form_with_noniterable_boundfield)\", \"test_forms_with_choices (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_forms_with_choices)\", \"test_forms_with_file_fields (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_forms_with_file_fields)\", \"test_forms_with_multiple_choice (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_forms_with_multiple_choice)\", \"test_forms_with_null_boolean (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_forms_with_null_boolean)\", \"test_forms_with_prefixes (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_forms_with_prefixes)\", \"test_forms_with_radio (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_forms_with_radio)\", \"test_get_initial_for_field (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_get_initial_for_field)\", \"test_has_error (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_has_error)\", \"test_help_text (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_help_text)\", \"help_text should not be escaped.\", \"test_hidden_data (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_hidden_data)\", \"test_hidden_initial_gets_id (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_hidden_initial_gets_id)\", \"test_hidden_widget (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_hidden_widget)\", \"test_html_output_with_hidden_input_field_errors (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_html_output_with_hidden_input_field_errors)\", \"test_html_safe (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_html_safe)\", \"test_id_on_field (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_id_on_field)\", \"test_initial_data (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_initial_data)\", \"test_initial_datetime_values (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_initial_datetime_values)\", \"test_iterable_boundfield_select (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_iterable_boundfield_select)\", \"test_label_attrs_not_localized (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_label_attrs_not_localized)\", \"test_label_does_not_include_new_line (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_label_does_not_include_new_line)\", \"required_css_class is added to label_tag() and legend_tag() of required\", \"test_label_split_datetime_not_displayed (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_label_split_datetime_not_displayed)\", \"test_label_suffix (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_label_suffix)\", \"BoundField label_suffix (if provided) overrides Form label_suffix\", \"test_multipart_encoded_form (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_multipart_encoded_form)\", \"test_multiple_checkbox_render (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_multiple_checkbox_render)\", \"test_multiple_choice_checkbox (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_multiple_choice_checkbox)\", \"test_multiple_choice_list_data (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_multiple_choice_list_data)\", \"test_multiple_hidden (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_multiple_hidden)\", \"#19298 -- MultiValueField needs to override the default as it needs\", \"test_multivalue_field_validation (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_multivalue_field_validation)\", \"#23674 -- invalid initial data should not break form.changed_data()\", \"test_multivalue_optional_subfields (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_multivalue_optional_subfields)\", \"test_multivalue_optional_subfields_rendering (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_multivalue_optional_subfields_rendering)\", \"test_only_hidden_fields (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_only_hidden_fields)\", \"test_optional_data (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_optional_data)\", \"test_remove_cached_field (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_remove_cached_field)\", \"test_specifying_labels (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_specifying_labels)\", \"test_subclassing_forms (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_subclassing_forms)\", \"test_unbound_form (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_unbound_form)\", \"test_unicode_values (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_unicode_values)\", \"test_update_error_dict (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_update_error_dict)\", \"test_use_required_attribute_false (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_use_required_attribute_false)\", \"test_use_required_attribute_true (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_use_required_attribute_true)\", \"test_validating_multiple_fields (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_validating_multiple_fields)\", \"The list of form field validators can be modified without polluting\", \"test_various_boolean_values (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_various_boolean_values)\", \"test_widget_output (forms_tests.tests.test_forms.Jinja2FormsTestCase.test_widget_output)\", \"test_deleting_inline_with_protected_delete_does_not_validate (admin_inlines.tests.TestInlineProtectedOnDelete.test_deleting_inline_with_protected_delete_does_not_validate)\", \"If the ``clean`` method on a non-required FileField receives False as\", \"If the ``clean`` method on a required FileField receives False as the\", \"If the user submits a new file upload AND checks the clear checkbox,\", \"Regression for #11149: save_form_data should be called only once\", \"test_file_field_data (model_forms.tests.FileAndImageFieldTests.test_file_field_data)\", \"Simulate a file upload and check how many times Model.save() gets\", \"FilePathField(blank=True) includes the empty option.\", \"test_filefield_required_false (model_forms.tests.FileAndImageFieldTests.test_filefield_required_false)\", \"Integration happy-path test that a model FileField can actually be set\", \"test_image_field (model_forms.tests.FileAndImageFieldTests.test_image_field)\", \"test_render_empty_file_field (model_forms.tests.FileAndImageFieldTests.test_render_empty_file_field)\", \"test_both_verbose_names_inline (admin_inlines.tests.TestVerboseNameInlineForms.test_both_verbose_names_inline)\", \"test_verbose_name_inline (admin_inlines.tests.TestVerboseNameInlineForms.test_verbose_name_inline)\", \"test_verbose_name_plural_inline (admin_inlines.tests.TestVerboseNameInlineForms.test_verbose_name_plural_inline)\", \"test_add_url_not_allowed (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions.test_add_url_not_allowed)\", \"test_extra_inlines_are_not_shown (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions.test_extra_inlines_are_not_shown)\", \"test_get_to_change_url_is_allowed (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions.test_get_to_change_url_is_allowed)\", \"test_inline_delete_buttons_are_not_shown (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions.test_inline_delete_buttons_are_not_shown)\", \"test_inlines_are_rendered_as_read_only (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions.test_inlines_are_rendered_as_read_only)\", \"test_main_model_is_rendered_as_read_only (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions.test_main_model_is_rendered_as_read_only)\", \"test_post_to_change_url_not_allowed (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions.test_post_to_change_url_not_allowed)\", \"test_submit_line_shows_only_close_button (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions.test_submit_line_shows_only_close_button)\", \"test_all_inline_media (admin_inlines.tests.TestInlineMedia.test_all_inline_media)\", \"test_inline_media_only_base (admin_inlines.tests.TestInlineMedia.test_inline_media_only_base)\", \"test_inline_media_only_inline (admin_inlines.tests.TestInlineMedia.test_inline_media_only_inline)\", \"test_accessing_clean (forms_tests.tests.test_forms.FormsTestCase.test_accessing_clean)\", \"test_auto_id (forms_tests.tests.test_forms.FormsTestCase.test_auto_id)\", \"test_auto_id_false (forms_tests.tests.test_forms.FormsTestCase.test_auto_id_false)\", \"test_auto_id_on_form_and_field (forms_tests.tests.test_forms.FormsTestCase.test_auto_id_on_form_and_field)\", \"test_auto_id_true (forms_tests.tests.test_forms.FormsTestCase.test_auto_id_true)\", \"test_boundfield_css_classes (forms_tests.tests.test_forms.FormsTestCase.test_boundfield_css_classes)\", \"test_boundfield_empty_label (forms_tests.tests.test_forms.FormsTestCase.test_boundfield_empty_label)\", \"test_boundfield_id_for_label (forms_tests.tests.test_forms.FormsTestCase.test_boundfield_id_for_label)\", \"test_boundfield_invalid_index (forms_tests.tests.test_forms.FormsTestCase.test_boundfield_invalid_index)\", \"test_boundfield_label_tag (forms_tests.tests.test_forms.FormsTestCase.test_boundfield_label_tag)\", \"test_boundfield_label_tag_custom_widget_id_for_label (forms_tests.tests.test_forms.FormsTestCase.test_boundfield_label_tag_custom_widget_id_for_label)\", \"test_boundfield_slice (forms_tests.tests.test_forms.FormsTestCase.test_boundfield_slice)\", \"test_boundfield_value_disabled_callable_initial (forms_tests.tests.test_forms.FormsTestCase.test_boundfield_value_disabled_callable_initial)\", \"test_boundfield_values (forms_tests.tests.test_forms.FormsTestCase.test_boundfield_values)\", \"test_boundfield_widget_type (forms_tests.tests.test_forms.FormsTestCase.test_boundfield_widget_type)\", \"test_callable_initial_data (forms_tests.tests.test_forms.FormsTestCase.test_callable_initial_data)\", \"test_changed_data (forms_tests.tests.test_forms.FormsTestCase.test_changed_data)\", \"test_changing_cleaned_data_in_clean (forms_tests.tests.test_forms.FormsTestCase.test_changing_cleaned_data_in_clean)\", \"test_changing_cleaned_data_nothing_returned (forms_tests.tests.test_forms.FormsTestCase.test_changing_cleaned_data_nothing_returned)\", \"test_checkbox_auto_id (forms_tests.tests.test_forms.FormsTestCase.test_checkbox_auto_id)\", \"test_class_prefix (forms_tests.tests.test_forms.FormsTestCase.test_class_prefix)\", \"test_cleaned_data_only_fields (forms_tests.tests.test_forms.FormsTestCase.test_cleaned_data_only_fields)\", \"test_custom_boundfield (forms_tests.tests.test_forms.FormsTestCase.test_custom_boundfield)\", \"test_datetime_changed_data_callable_with_microseconds (forms_tests.tests.test_forms.FormsTestCase.test_datetime_changed_data_callable_with_microseconds)\", \"test_dynamic_construction (forms_tests.tests.test_forms.FormsTestCase.test_dynamic_construction)\", \"test_dynamic_initial_data (forms_tests.tests.test_forms.FormsTestCase.test_dynamic_initial_data)\", \"test_empty_data_files_multi_value_dict (forms_tests.tests.test_forms.FormsTestCase.test_empty_data_files_multi_value_dict)\", \"test_empty_dict (forms_tests.tests.test_forms.FormsTestCase.test_empty_dict)\", \"test_empty_permitted (forms_tests.tests.test_forms.FormsTestCase.test_empty_permitted)\", \"test_empty_permitted_and_use_required_attribute (forms_tests.tests.test_forms.FormsTestCase.test_empty_permitted_and_use_required_attribute)\", \"test_empty_querydict_args (forms_tests.tests.test_forms.FormsTestCase.test_empty_querydict_args)\", \"test_error_dict (forms_tests.tests.test_forms.FormsTestCase.test_error_dict)\", \"test_error_escaping (forms_tests.tests.test_forms.FormsTestCase.test_error_escaping)\", \"test_error_html_required_html_classes (forms_tests.tests.test_forms.FormsTestCase.test_error_html_required_html_classes)\", \"test_error_list (forms_tests.tests.test_forms.FormsTestCase.test_error_list)\", \"test_error_list_class_has_one_class_specified (forms_tests.tests.test_forms.FormsTestCase.test_error_list_class_has_one_class_specified)\", \"test_error_list_class_not_specified (forms_tests.tests.test_forms.FormsTestCase.test_error_list_class_not_specified)\", \"test_error_list_with_hidden_field_errors_has_correct_class (forms_tests.tests.test_forms.FormsTestCase.test_error_list_with_hidden_field_errors_has_correct_class)\", \"test_error_list_with_non_field_errors_has_correct_class (forms_tests.tests.test_forms.FormsTestCase.test_error_list_with_non_field_errors_has_correct_class)\", \"test_escaping (forms_tests.tests.test_forms.FormsTestCase.test_escaping)\", \"test_explicit_field_order (forms_tests.tests.test_forms.FormsTestCase.test_explicit_field_order)\", \"test_extracting_hidden_and_visible (forms_tests.tests.test_forms.FormsTestCase.test_extracting_hidden_and_visible)\", \"test_field_deep_copy_error_messages (forms_tests.tests.test_forms.FormsTestCase.test_field_deep_copy_error_messages)\", \"test_field_named_data (forms_tests.tests.test_forms.FormsTestCase.test_field_named_data)\", \"test_field_order (forms_tests.tests.test_forms.FormsTestCase.test_field_order)\", \"test_filefield_initial_callable (forms_tests.tests.test_forms.FormsTestCase.test_filefield_initial_callable)\", \"test_filefield_with_fileinput_required (forms_tests.tests.test_forms.FormsTestCase.test_filefield_with_fileinput_required)\", \"test_form (forms_tests.tests.test_forms.FormsTestCase.test_form)\", \"test_form_html_attributes (forms_tests.tests.test_forms.FormsTestCase.test_form_html_attributes)\", \"test_form_with_disabled_fields (forms_tests.tests.test_forms.FormsTestCase.test_form_with_disabled_fields)\", \"test_form_with_iterable_boundfield (forms_tests.tests.test_forms.FormsTestCase.test_form_with_iterable_boundfield)\", \"test_form_with_iterable_boundfield_id (forms_tests.tests.test_forms.FormsTestCase.test_form_with_iterable_boundfield_id)\", \"test_form_with_noniterable_boundfield (forms_tests.tests.test_forms.FormsTestCase.test_form_with_noniterable_boundfield)\", \"test_forms_with_choices (forms_tests.tests.test_forms.FormsTestCase.test_forms_with_choices)\", \"test_forms_with_file_fields (forms_tests.tests.test_forms.FormsTestCase.test_forms_with_file_fields)\", \"test_forms_with_multiple_choice (forms_tests.tests.test_forms.FormsTestCase.test_forms_with_multiple_choice)\", \"test_forms_with_null_boolean (forms_tests.tests.test_forms.FormsTestCase.test_forms_with_null_boolean)\", \"test_forms_with_prefixes (forms_tests.tests.test_forms.FormsTestCase.test_forms_with_prefixes)\", \"test_forms_with_radio (forms_tests.tests.test_forms.FormsTestCase.test_forms_with_radio)\", \"test_get_initial_for_field (forms_tests.tests.test_forms.FormsTestCase.test_get_initial_for_field)\", \"test_has_error (forms_tests.tests.test_forms.FormsTestCase.test_has_error)\", \"test_help_text (forms_tests.tests.test_forms.FormsTestCase.test_help_text)\", \"test_hidden_data (forms_tests.tests.test_forms.FormsTestCase.test_hidden_data)\", \"test_hidden_initial_gets_id (forms_tests.tests.test_forms.FormsTestCase.test_hidden_initial_gets_id)\", \"test_hidden_widget (forms_tests.tests.test_forms.FormsTestCase.test_hidden_widget)\", \"test_html_output_with_hidden_input_field_errors (forms_tests.tests.test_forms.FormsTestCase.test_html_output_with_hidden_input_field_errors)\", \"test_html_safe (forms_tests.tests.test_forms.FormsTestCase.test_html_safe)\", \"test_id_on_field (forms_tests.tests.test_forms.FormsTestCase.test_id_on_field)\", \"test_initial_data (forms_tests.tests.test_forms.FormsTestCase.test_initial_data)\", \"test_initial_datetime_values (forms_tests.tests.test_forms.FormsTestCase.test_initial_datetime_values)\", \"test_iterable_boundfield_select (forms_tests.tests.test_forms.FormsTestCase.test_iterable_boundfield_select)\", \"test_label_attrs_not_localized (forms_tests.tests.test_forms.FormsTestCase.test_label_attrs_not_localized)\", \"test_label_does_not_include_new_line (forms_tests.tests.test_forms.FormsTestCase.test_label_does_not_include_new_line)\", \"test_label_split_datetime_not_displayed (forms_tests.tests.test_forms.FormsTestCase.test_label_split_datetime_not_displayed)\", \"test_label_suffix (forms_tests.tests.test_forms.FormsTestCase.test_label_suffix)\", \"test_multipart_encoded_form (forms_tests.tests.test_forms.FormsTestCase.test_multipart_encoded_form)\", \"test_multiple_checkbox_render (forms_tests.tests.test_forms.FormsTestCase.test_multiple_checkbox_render)\", \"test_multiple_choice_checkbox (forms_tests.tests.test_forms.FormsTestCase.test_multiple_choice_checkbox)\", \"test_multiple_choice_list_data (forms_tests.tests.test_forms.FormsTestCase.test_multiple_choice_list_data)\", \"test_multiple_hidden (forms_tests.tests.test_forms.FormsTestCase.test_multiple_hidden)\", \"test_multivalue_field_validation (forms_tests.tests.test_forms.FormsTestCase.test_multivalue_field_validation)\", \"test_multivalue_optional_subfields (forms_tests.tests.test_forms.FormsTestCase.test_multivalue_optional_subfields)\", \"test_multivalue_optional_subfields_rendering (forms_tests.tests.test_forms.FormsTestCase.test_multivalue_optional_subfields_rendering)\", \"test_only_hidden_fields (forms_tests.tests.test_forms.FormsTestCase.test_only_hidden_fields)\", \"test_optional_data (forms_tests.tests.test_forms.FormsTestCase.test_optional_data)\", \"test_remove_cached_field (forms_tests.tests.test_forms.FormsTestCase.test_remove_cached_field)\", \"test_specifying_labels (forms_tests.tests.test_forms.FormsTestCase.test_specifying_labels)\", \"test_subclassing_forms (forms_tests.tests.test_forms.FormsTestCase.test_subclassing_forms)\", \"test_unbound_form (forms_tests.tests.test_forms.FormsTestCase.test_unbound_form)\", \"test_unicode_values (forms_tests.tests.test_forms.FormsTestCase.test_unicode_values)\", \"test_update_error_dict (forms_tests.tests.test_forms.FormsTestCase.test_update_error_dict)\", \"test_use_required_attribute_false (forms_tests.tests.test_forms.FormsTestCase.test_use_required_attribute_false)\", \"test_use_required_attribute_true (forms_tests.tests.test_forms.FormsTestCase.test_use_required_attribute_true)\", \"test_validating_multiple_fields (forms_tests.tests.test_forms.FormsTestCase.test_validating_multiple_fields)\", \"test_various_boolean_values (forms_tests.tests.test_forms.FormsTestCase.test_various_boolean_values)\", \"test_widget_output (forms_tests.tests.test_forms.FormsTestCase.test_widget_output)\", \"test_inline_add_fk_add_perm (admin_inlines.tests.TestInlinePermissions.test_inline_add_fk_add_perm)\", \"test_inline_add_fk_noperm (admin_inlines.tests.TestInlinePermissions.test_inline_add_fk_noperm)\", \"test_inline_add_m2m_add_perm (admin_inlines.tests.TestInlinePermissions.test_inline_add_m2m_add_perm)\", \"test_inline_add_m2m_noperm (admin_inlines.tests.TestInlinePermissions.test_inline_add_m2m_noperm)\", \"test_inline_add_m2m_view_only_perm (admin_inlines.tests.TestInlinePermissions.test_inline_add_m2m_view_only_perm)\", \"test_inline_change_fk_add_change_perm (admin_inlines.tests.TestInlinePermissions.test_inline_change_fk_add_change_perm)\", \"test_inline_change_fk_add_perm (admin_inlines.tests.TestInlinePermissions.test_inline_change_fk_add_perm)\", \"test_inline_change_fk_all_perms (admin_inlines.tests.TestInlinePermissions.test_inline_change_fk_all_perms)\", \"test_inline_change_fk_change_del_perm (admin_inlines.tests.TestInlinePermissions.test_inline_change_fk_change_del_perm)\", \"test_inline_change_fk_change_perm (admin_inlines.tests.TestInlinePermissions.test_inline_change_fk_change_perm)\", \"test_inline_change_fk_noperm (admin_inlines.tests.TestInlinePermissions.test_inline_change_fk_noperm)\", \"test_inline_change_m2m_add_perm (admin_inlines.tests.TestInlinePermissions.test_inline_change_m2m_add_perm)\", \"test_inline_change_m2m_change_perm (admin_inlines.tests.TestInlinePermissions.test_inline_change_m2m_change_perm)\", \"test_inline_change_m2m_noperm (admin_inlines.tests.TestInlinePermissions.test_inline_change_m2m_noperm)\", \"test_inline_change_m2m_view_only_perm (admin_inlines.tests.TestInlinePermissions.test_inline_change_m2m_view_only_perm)\", \"Admin inline should invoke local callable when its name is listed in\", \"can_delete should be passed to inlineformset factory.\", \"An object can be created with inlines when it inherits another class.\", \"test_custom_form_tabular_inline_extra_field_label (admin_inlines.tests.TestInline.test_custom_form_tabular_inline_extra_field_label)\", \"A model form with a form field specified (TitleForm.title1) should have\", \"SomeChildModelForm.__init__() overrides the label of a form field.\", \"test_custom_get_extra_form (admin_inlines.tests.TestInline.test_custom_get_extra_form)\", \"test_custom_min_num (admin_inlines.tests.TestInline.test_custom_min_num)\", \"The \\\"View on Site\\\" link is correct for models with a custom primary key\", \"The inlines' model field help texts are displayed when using both the\", \"test_inline_editable_pk (admin_inlines.tests.TestInline.test_inline_editable_pk)\", \"#18263 -- Make sure hidden fields don't get a column in tabular inlines\", \"test_inline_nonauto_noneditable_inherited_pk (admin_inlines.tests.TestInline.test_inline_nonauto_noneditable_inherited_pk)\", \"test_inline_nonauto_noneditable_pk (admin_inlines.tests.TestInline.test_inline_nonauto_noneditable_pk)\", \"test_inline_primary (admin_inlines.tests.TestInline.test_inline_primary)\", \"test_inlines_based_on_model_state (admin_inlines.tests.TestInline.test_inlines_based_on_model_state)\", \"test_inlines_plural_heading_foreign_key (admin_inlines.tests.TestInline.test_inlines_plural_heading_foreign_key)\", \"Inlines `show_change_link` for registered models when enabled.\", \"Inlines `show_change_link` disabled for unregistered models.\", \"test_inlines_singular_heading_one_to_one (admin_inlines.tests.TestInline.test_inlines_singular_heading_one_to_one)\", \"The \\\"View on Site\\\" link is correct for locales that use thousand\", \"Autogenerated many-to-many inlines are displayed correctly (#13407)\", \"min_num and extra determine number of forms.\", \"test_model_error_inline_with_readonly_field (admin_inlines.tests.TestInline.test_model_error_inline_with_readonly_field)\", \"Admin inline `readonly_field` shouldn't invoke parent ModelAdmin callable\", \"test_non_editable_custom_form_tabular_inline_extra_field_label (admin_inlines.tests.TestInline.test_non_editable_custom_form_tabular_inline_extra_field_label)\", \"Inlines without change permission shows field inputs on add form.\", \"Bug #13174.\", \"test_stacked_inline_edit_form_contains_has_original_class (admin_inlines.tests.TestInline.test_stacked_inline_edit_form_contains_has_original_class)\", \"Content of hidden field is not visible in stacked inline when user has\", \"Field names are included in the context to output a field-specific\", \"Content of hidden field is not visible in tabular inline when user has\", \"Inlines `show_change_link` disabled by default.\", \"In tabular inlines, when a form has non-field errors, those errors\", \"Tabular inlines use ModelForm.Meta.help_texts and labels for read-only\", \"non_field_errors are displayed correctly, including the correct value\"]",
  "environment_setup_commit": "4a72da71001f154ea60906a2f74898d32b7322a7",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.775864",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}