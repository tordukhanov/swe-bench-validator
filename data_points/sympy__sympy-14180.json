{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-14180",
  "base_commit": "2c0a3a103baa547de12e332382d44ee3733d485f",
  "patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -134,6 +134,7 @@ class LatexPrinter(Printer):\n         \"mat_str\": None,\n         \"mat_delim\": \"[\",\n         \"symbol_names\": {},\n+        \"ln_notation\": False,\n     }\n \n     def __init__(self, settings=None):\n@@ -846,6 +847,17 @@ def _print_ceiling(self, expr, exp=None):\n         else:\n             return tex\n \n+    def _print_log(self, expr, exp=None):\n+        if not self._settings[\"ln_notation\"]:\n+            tex = r\"\\log{\\left (%s \\right )}\" % self._print(expr.args[0])\n+        else:\n+            tex = r\"\\ln{\\left (%s \\right )}\" % self._print(expr.args[0])\n+\n+        if exp is not None:\n+            return r\"%s^{%s}\" % (tex, exp)\n+        else:\n+            return tex\n+\n     def _print_Abs(self, expr, exp=None):\n         tex = r\"\\left|{%s}\\right|\" % self._print(expr.args[0])\n \n@@ -2123,7 +2135,7 @@ def latex(expr, **settings):\n     r\"\"\"\n     Convert the given expression to LaTeX representation.\n \n-    >>> from sympy import latex, pi, sin, asin, Integral, Matrix, Rational\n+    >>> from sympy import latex, pi, sin, asin, Integral, Matrix, Rational, log\n     >>> from sympy.abc import x, y, mu, r, tau\n \n     >>> print(latex((2*tau)**Rational(7,2)))\n@@ -2242,6 +2254,14 @@ def latex(expr, **settings):\n     >>> print(latex([2/x, y], mode='inline'))\n     $\\left [ 2 / x, \\quad y\\right ]$\n \n+    ln_notation: If set to ``True`` \"\\ln\" is used instead of default \"\\log\"\n+\n+    >>> print(latex(log(10)))\n+    \\log{\\left (10 \\right )}\n+\n+    >>> print(latex(log(10), ln_notation=True))\n+    \\ln{\\left (10 \\right )}\n+\n     \"\"\"\n \n     return LatexPrinter(settings).doprint(expr)\n",
  "test_patch": "diff --git a/sympy/printing/tests/test_latex.py b/sympy/printing/tests/test_latex.py\n--- a/sympy/printing/tests/test_latex.py\n+++ b/sympy/printing/tests/test_latex.py\n@@ -35,7 +35,7 @@\n from sympy.core.trace import Tr\n from sympy.core.compatibility import range\n from sympy.combinatorics.permutations import Cycle, Permutation\n-from sympy import MatrixSymbol\n+from sympy import MatrixSymbol, ln\n from sympy.vector import CoordSys3D, Cross, Curl, Dot, Divergence, Gradient\n from sympy.sets.setexpr import SetExpr\n \n@@ -830,6 +830,16 @@ def test_latex_limits():\n     assert latex(Limit(f(x), x, 0, dir='+-')) == r\"\\lim_{x \\to 0} f{\\left (x \\right )}\"\n \n \n+def test_latex_log():\n+    assert latex(log(x)) == r\"\\log{\\left (x \\right )}\"\n+    assert latex(ln(x)) == r\"\\log{\\left (x \\right )}\"\n+    assert latex(log(x), ln_notation=True) == r\"\\ln{\\left (x \\right )}\"\n+    assert latex(log(x)+log(y)) == r\"\\log{\\left (x \\right )} + \\log{\\left (y \\right )}\"\n+    assert latex(log(x)+log(y), ln_notation=True) == r\"\\ln{\\left (x \\right )} + \\ln{\\left (y \\right )}\"\n+    assert latex(pow(log(x),x)) == r\"\\log{\\left (x \\right )}^{x}\"\n+    assert latex(pow(log(x),x), ln_notation=True) == r\"\\ln{\\left (x \\right )}^{x}\"\n+\n+\n def test_issue_3568():\n     beta = Symbol(r'\\beta')\n     y = beta + x\n",
  "problem_statement": "Converting to LaTeX \n`latex(ln(10))` was converted to `log{\\left(10\\right)}` which is in some fields is log10(10) or log2(10).\r\nThere is '\\ln' in LaTeX and `ln(10)` should be converted to  it not to `log{\\left(10\\right)}`\n",
  "hints_text": "I would like to work on this. Can someone please guide me?",
  "created_at": "2018-02-12T16:43:31Z",
  "version": "1.1",
  "FAIL_TO_PASS": "[\"test_latex_log\"]",
  "PASS_TO_PASS": "[\"test_printmethod\", \"test_latex_basic\", \"test_latex_builtins\", \"test_latex_SingularityFunction\", \"test_latex_cycle\", \"test_latex_permutation\", \"test_latex_Float\", \"test_latex_vector_expressions\", \"test_latex_symbols\", \"test_latex_functions\", \"test_function_subclass_different_name\", \"test_hyper_printing\", \"test_latex_bessel\", \"test_latex_fresnel\", \"test_latex_brackets\", \"test_latex_indexed\", \"test_latex_derivatives\", \"test_latex_subs\", \"test_latex_integrals\", \"test_latex_sets\", \"test_latex_SetExpr\", \"test_latex_Range\", \"test_latex_sequences\", \"test_latex_FourierSeries\", \"test_latex_FormalPowerSeries\", \"test_latex_intervals\", \"test_latex_AccumuBounds\", \"test_latex_emptyset\", \"test_latex_commutator\", \"test_latex_union\", \"test_latex_symmetric_difference\", \"test_latex_Complement\", \"test_latex_Complexes\", \"test_latex_productset\", \"test_latex_Naturals\", \"test_latex_Naturals0\", \"test_latex_Integers\", \"test_latex_ImageSet\", \"test_latex_ConditionSet\", \"test_latex_ComplexRegion\", \"test_latex_Contains\", \"test_latex_sum\", \"test_latex_product\", \"test_latex_limits\", \"test_issue_3568\", \"test_latex\", \"test_latex_dict\", \"test_latex_list\", \"test_latex_rational\", \"test_latex_inverse\", \"test_latex_DiracDelta\", \"test_latex_Heaviside\", \"test_latex_KroneckerDelta\", \"test_latex_LeviCivita\", \"test_mode\", \"test_latex_Piecewise\", \"test_latex_Matrix\", \"test_latex_matrix_with_functions\", \"test_latex_NDimArray\", \"test_latex_mul_symbol\", \"test_latex_issue_4381\", \"test_latex_issue_4576\", \"test_latex_pow_fraction\", \"test_noncommutative\", \"test_latex_order\", \"test_latex_Lambda\", \"test_latex_PolyElement\", \"test_latex_FracElement\", \"test_latex_Poly\", \"test_latex_ComplexRootOf\", \"test_latex_RootSum\", \"test_settings\", \"test_latex_numbers\", \"test_latex_euler\", \"test_lamda\", \"test_custom_symbol_names\", \"test_matAdd\", \"test_matMul\", \"test_latex_MatrixSlice\", \"test_latex_RandomDomain\", \"test_PrettyPoly\", \"test_integral_transforms\", \"test_PolynomialRingBase\", \"test_categories\", \"test_Modules\", \"test_QuotientRing\", \"test_Tr\", \"test_Adjoint\", \"test_Hadamard\", \"test_ZeroMatrix\", \"test_boolean_args_order\", \"test_imaginary\", \"test_builtins_without_args\", \"test_latex_greek_functions\", \"test_translate\", \"test_other_symbols\", \"test_modifiers\", \"test_greek_symbols\", \"test_builtin_no_args\", \"test_issue_6853\", \"test_Mul\", \"test_Pow\", \"test_issue_7180\", \"test_issue_8409\", \"test_issue_7117\", \"test_issue_2934\", \"test_issue_10489\", \"test_issue_12886\", \"test_issue_13651\", \"test_latex_UnevaluatedExpr\", \"test_MatrixElement_printing\", \"test_Quaternion_latex_printing\", \"test_TensorProduct_printing\"]",
  "environment_setup_commit": "ec9e3c0436fbff934fa84e22bf07f1b3ef5bfac3",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.092554",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}