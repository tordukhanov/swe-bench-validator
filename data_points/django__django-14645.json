{
  "repo": "django/django",
  "instance_id": "django__django-14645",
  "base_commit": "fd999318ad78613227cdb7c5656345d9e216802b",
  "patch": "diff --git a/django/forms/fields.py b/django/forms/fields.py\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -349,6 +349,17 @@ def to_python(self, value):\n             raise ValidationError(self.error_messages['invalid'], code='invalid')\n         return value\n \n+    def validate(self, value):\n+        super().validate(value)\n+        if value in self.empty_values:\n+            return\n+        if not value.is_finite():\n+            raise ValidationError(\n+                self.error_messages['invalid'],\n+                code='invalid',\n+                params={'value': value},\n+            )\n+\n     def widget_attrs(self, widget):\n         attrs = super().widget_attrs(widget)\n         if isinstance(widget, NumberInput) and 'step' not in widget.attrs:\n",
  "test_patch": "diff --git a/tests/forms_tests/field_tests/test_decimalfield.py b/tests/forms_tests/field_tests/test_decimalfield.py\n--- a/tests/forms_tests/field_tests/test_decimalfield.py\n+++ b/tests/forms_tests/field_tests/test_decimalfield.py\n@@ -49,7 +49,7 @@ def test_decimalfield_1(self):\n         self.assertIsNone(f.min_value)\n \n     def test_enter_a_number_error(self):\n-        f = DecimalField(max_digits=4, decimal_places=2)\n+        f = DecimalField(max_value=1, max_digits=4, decimal_places=2)\n         values = (\n             '-NaN', 'NaN', '+NaN',\n             '-sNaN', 'sNaN', '+sNaN',\n",
  "problem_statement": "decimal.InvalidOperation error on DecimalField form field\nDescription\n\t\nI have a form with DecimalField and max_value argument:\nclass OrderForm(forms.ModelForm):\n\tsum = DecimalField(max_value=12)\n\tclass Meta:\n\t\tmodel = Order\n\t\tfields = ['sum']\n# model\nclass Order(models.Model):\n\tsum = models.DecimalField(\n\t\t'Sum',\n\t\tmax_digits=18,\n\t\tdecimal_places=2,\n\t\tdefault=0\n\t)\nIf I pass \"NaN\" value to this form it will fail with decimal.InvalidOperation error.\nâ€‹https://github.com/django/django/pull/14645\n",
  "hints_text": "",
  "created_at": "2021-07-15T18:35:39Z",
  "version": "4.0",
  "FAIL_TO_PASS": "[\"test_enter_a_number_error (forms_tests.field_tests.test_decimalfield.DecimalFieldTest)\"]",
  "PASS_TO_PASS": "[\"test_decimalfield_1 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest)\", \"test_decimalfield_2 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest)\", \"test_decimalfield_3 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest)\", \"test_decimalfield_4 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest)\", \"test_decimalfield_5 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest)\", \"test_decimalfield_6 (forms_tests.field_tests.test_decimalfield.DecimalFieldTest)\", \"test_decimalfield_changed (forms_tests.field_tests.test_decimalfield.DecimalFieldTest)\", \"A localized DecimalField's widget renders to a text input without\", \"test_decimalfield_scientific (forms_tests.field_tests.test_decimalfield.DecimalFieldTest)\", \"test_decimalfield_support_decimal_separator (forms_tests.field_tests.test_decimalfield.DecimalFieldTest)\", \"test_decimalfield_support_thousands_separator (forms_tests.field_tests.test_decimalfield.DecimalFieldTest)\", \"test_decimalfield_widget_attrs (forms_tests.field_tests.test_decimalfield.DecimalFieldTest)\"]",
  "environment_setup_commit": "475cffd1d64c690cdad16ede4d5e81985738ceb4",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.699082",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}