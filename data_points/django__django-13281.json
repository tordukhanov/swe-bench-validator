{
  "repo": "django/django",
  "instance_id": "django__django-13281",
  "base_commit": "63300f7e686c2c452763cb512df9abf7734fd588",
  "patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -546,7 +546,10 @@ def __reduce__(self):\n \n     def __getstate__(self):\n         \"\"\"Hook to allow choosing the attributes to pickle.\"\"\"\n-        return self.__dict__\n+        state = self.__dict__.copy()\n+        state['_state'] = copy.copy(state['_state'])\n+        state['_state'].fields_cache = state['_state'].fields_cache.copy()\n+        return state\n \n     def __setstate__(self, state):\n         pickled_version = state.get(DJANGO_VERSION_PICKLE_KEY)\n",
  "test_patch": "diff --git a/tests/model_regress/tests.py b/tests/model_regress/tests.py\n--- a/tests/model_regress/tests.py\n+++ b/tests/model_regress/tests.py\n@@ -1,3 +1,4 @@\n+import copy\n import datetime\n from operator import attrgetter\n \n@@ -256,3 +257,17 @@ def test_model_with_evaluate_method(self):\n         dept = Department.objects.create(pk=1, name='abc')\n         dept.evaluate = 'abc'\n         Worker.objects.filter(department=dept)\n+\n+\n+class ModelFieldsCacheTest(TestCase):\n+    def test_fields_cache_reset_on_copy(self):\n+        department1 = Department.objects.create(id=1, name='department1')\n+        department2 = Department.objects.create(id=2, name='department2')\n+        worker1 = Worker.objects.create(name='worker', department=department1)\n+        worker2 = copy.copy(worker1)\n+\n+        self.assertEqual(worker2.department, department1)\n+        # Changing related fields doesn't mutate the base object.\n+        worker2.department = department2\n+        self.assertEqual(worker2.department, department2)\n+        self.assertEqual(worker1.department, department1)\n",
  "problem_statement": "FK field caching behavior change between 1.11.x and 2.x\nDescription\n\t\nWhilst upgrading a codebase from 1.11.x to 2.0/2.2 I noticed a weird change in behavior of FK fields when copying model instances.\nAt the bottom of the post there is a testcase that succeeds on 1.11.x and fails on 2.x\nI think the commit that changed the behavior is bfb746f983aa741afa3709794e70f1e0ab6040b5\nSo my question is two fold:\nIs the behavior in >=2.0 correct? It seems quite unexpected.\nWhat is the recommended way to clone a model instance? To date we have been using copy() in a similar fashion to the test without issue. deepcopy seems to work fine in >=2.0 but we haven’t done too much testing yet.\nTest (placed in tests/model_fields/test_field_caching_change.py):\nimport copy\nfrom django.test import TestCase\nfrom .models import Bar, Foo\nclass ForeignKeyCachingBehaviorTest(TestCase):\n\tdef test_copy(self):\n\t\tfoo1 = Foo.objects.create(a='foo1', d=1)\n\t\tfoo2 = Foo.objects.create(a='foo2', d=2)\n\t\tbar1 = Bar.objects.create(a=foo1, b='bar1')\n\t\tbar2 = copy.copy(bar1)\n\t\tbar2.pk = None\n\t\tbar2.a = foo2\n\t\t# bar2 points to foo2\n\t\tself.assertEqual(bar2.a, foo2)\n\t\tself.assertEqual(bar2.a.id, bar2.a_id)\n\t\t# bar1 is unchanged and must still point to foo1\n\t\t# These fail on Django >= 2.0\n\t\tself.assertEqual(bar1.a, foo1)\n\t\tself.assertEqual(bar1.a.id, bar1.a_id)\nand executed that via:\npython3.6 tests/runtests.py --parallel 1 model_fields\nIn ​https://groups.google.com/g/django-developers/c/QMhVPIqVVP4/m/mbezfaBEAwAJ Simon suggests:\n..... Model.copy should make sure to make a deep-copy of self._state now that fields are cached in self._state.fields_cache.\nwhich I will attempt to implement.\n",
  "hints_text": "",
  "created_at": "2020-08-07T08:42:11Z",
  "version": "3.2",
  "FAIL_TO_PASS": "[\"test_fields_cache_reset_on_copy (model_regress.tests.ModelFieldsCacheTest)\"]",
  "PASS_TO_PASS": "[\"test_model_with_evaluate_method (model_regress.tests.EvaluateMethodTest)\", \"test_pk_validation (model_regress.tests.ModelValidationTest)\", \"test_chained_fks (model_regress.tests.ModelTests)\", \"test_date_filter_null (model_regress.tests.ModelTests)\", \"test_date_lookup (model_regress.tests.ModelTests)\", \"test_empty_choice (model_regress.tests.ModelTests)\", \"test_get_next_prev_by_field (model_regress.tests.ModelTests)\", \"test_get_next_prev_by_field_unsaved (model_regress.tests.ModelTests)\", \"test_long_textfield (model_regress.tests.ModelTests)\", \"test_long_unicode_textfield (model_regress.tests.ModelTests)\", \"test_metaclass_can_access_attribute_dict (model_regress.tests.ModelTests)\", \"test_model_init_too_many_args (model_regress.tests.ModelTests)\", \"test_primary_key_foreign_key_types (model_regress.tests.ModelTests)\", \"test_related_gte_lookup (model_regress.tests.ModelTests)\", \"test_related_lte_lookup (model_regress.tests.ModelTests)\", \"test_sql_insert_compiler_return_id_attribute (model_regress.tests.ModelTests)\"]",
  "environment_setup_commit": "65dfb06a1ab56c238cc80f5e1c31f61210c4577d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.650920",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}