{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-23049",
  "base_commit": "17a7aca12399311f6252c55db0ece3694c5758b2",
  "patch": "diff --git a/lib/matplotlib/pyplot.py b/lib/matplotlib/pyplot.py\n--- a/lib/matplotlib/pyplot.py\n+++ b/lib/matplotlib/pyplot.py\n@@ -1751,7 +1751,7 @@ def ylim(*args, **kwargs):\n     return ret\n \n \n-def xticks(ticks=None, labels=None, **kwargs):\n+def xticks(ticks=None, labels=None, *, minor=False, **kwargs):\n     \"\"\"\n     Get or set the current tick locations and labels of the x-axis.\n \n@@ -1764,6 +1764,9 @@ def xticks(ticks=None, labels=None, **kwargs):\n     labels : array-like, optional\n         The labels to place at the given *ticks* locations.  This argument can\n         only be passed if *ticks* is passed as well.\n+    minor : bool, default: False\n+        If ``False``, get/set the major ticks/labels; if ``True``, the minor\n+        ticks/labels.\n     **kwargs\n         `.Text` properties can be used to control the appearance of the labels.\n \n@@ -1794,24 +1797,24 @@ def xticks(ticks=None, labels=None, **kwargs):\n     ax = gca()\n \n     if ticks is None:\n-        locs = ax.get_xticks()\n+        locs = ax.get_xticks(minor=minor)\n         if labels is not None:\n             raise TypeError(\"xticks(): Parameter 'labels' can't be set \"\n                             \"without setting 'ticks'\")\n     else:\n-        locs = ax.set_xticks(ticks)\n+        locs = ax.set_xticks(ticks, minor=minor)\n \n     if labels is None:\n-        labels = ax.get_xticklabels()\n+        labels = ax.get_xticklabels(minor=minor)\n         for l in labels:\n             l._internal_update(kwargs)\n     else:\n-        labels = ax.set_xticklabels(labels, **kwargs)\n+        labels = ax.set_xticklabels(labels, minor=minor, **kwargs)\n \n     return locs, labels\n \n \n-def yticks(ticks=None, labels=None, **kwargs):\n+def yticks(ticks=None, labels=None, *, minor=False, **kwargs):\n     \"\"\"\n     Get or set the current tick locations and labels of the y-axis.\n \n@@ -1824,6 +1827,9 @@ def yticks(ticks=None, labels=None, **kwargs):\n     labels : array-like, optional\n         The labels to place at the given *ticks* locations.  This argument can\n         only be passed if *ticks* is passed as well.\n+    minor : bool, default: False\n+        If ``False``, get/set the major ticks/labels; if ``True``, the minor\n+        ticks/labels.\n     **kwargs\n         `.Text` properties can be used to control the appearance of the labels.\n \n@@ -1854,19 +1860,19 @@ def yticks(ticks=None, labels=None, **kwargs):\n     ax = gca()\n \n     if ticks is None:\n-        locs = ax.get_yticks()\n+        locs = ax.get_yticks(minor=minor)\n         if labels is not None:\n             raise TypeError(\"yticks(): Parameter 'labels' can't be set \"\n                             \"without setting 'ticks'\")\n     else:\n-        locs = ax.set_yticks(ticks)\n+        locs = ax.set_yticks(ticks, minor=minor)\n \n     if labels is None:\n-        labels = ax.get_yticklabels()\n+        labels = ax.get_yticklabels(minor=minor)\n         for l in labels:\n             l._internal_update(kwargs)\n     else:\n-        labels = ax.set_yticklabels(labels, **kwargs)\n+        labels = ax.set_yticklabels(labels, minor=minor, **kwargs)\n \n     return locs, labels\n \n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_pyplot.py b/lib/matplotlib/tests/test_pyplot.py\n--- a/lib/matplotlib/tests/test_pyplot.py\n+++ b/lib/matplotlib/tests/test_pyplot.py\n@@ -383,3 +383,18 @@ def test_doc_pyplot_summary():\n             f\"The following functions are listed in the pyplot documentation, \"\n             f\"but they do not exist in pyplot. \"\n             f\"Please remove them from doc/api/pyplot_summary.rst: {extra!r}\")\n+\n+\n+def test_minor_ticks():\n+    plt.figure()\n+    plt.plot(np.arange(1, 10))\n+    tick_pos, tick_labels = plt.xticks(minor=True)\n+    assert np.all(tick_labels == np.array([], dtype=np.float64))\n+    assert tick_labels == []\n+\n+    plt.yticks(ticks=[3.5, 6.5], labels=[\"a\", \"b\"], minor=True)\n+    ax = plt.gca()\n+    tick_pos = ax.get_yticks(minor=True)\n+    tick_labels = ax.get_yticklabels(minor=True)\n+    assert np.all(tick_pos == np.array([3.5, 6.5]))\n+    assert [l.get_text() for l in tick_labels] == ['a', 'b']\n",
  "problem_statement": "[MNT]: Should plt.xticks() get a minor keyword argument\n### Summary\n\nExtracted as remaining question from #15005.\r\n\r\nCurrently `plt.xticks()` does not support a *minor* kwarg, in contrast to `ax.set_xticks()`. it's not strictly necessary because pyplot may have less functionality than the OOP interface; but it doesn't hurt either.\n\n### Proposed fix\n\n_No response_\n",
  "hints_text": "I think the more consistent the better? (so yes)",
  "created_at": "2022-05-14T14:58:51Z",
  "version": "3.5",
  "FAIL_TO_PASS": "[\"lib/matplotlib/tests/test_pyplot.py::test_minor_ticks\"]",
  "PASS_TO_PASS": "[\"lib/matplotlib/tests/test_pyplot.py::test_pyplot_up_to_date\", \"lib/matplotlib/tests/test_pyplot.py::test_copy_docstring_and_deprecators\", \"lib/matplotlib/tests/test_pyplot.py::test_pyplot_box\", \"lib/matplotlib/tests/test_pyplot.py::test_stackplot_smoke\", \"lib/matplotlib/tests/test_pyplot.py::test_nrows_error\", \"lib/matplotlib/tests/test_pyplot.py::test_ioff\", \"lib/matplotlib/tests/test_pyplot.py::test_ion\", \"lib/matplotlib/tests/test_pyplot.py::test_nested_ion_ioff\", \"lib/matplotlib/tests/test_pyplot.py::test_close\", \"lib/matplotlib/tests/test_pyplot.py::test_subplot_reuse\", \"lib/matplotlib/tests/test_pyplot.py::test_axes_kwargs\", \"lib/matplotlib/tests/test_pyplot.py::test_subplot_replace_projection\", \"lib/matplotlib/tests/test_pyplot.py::test_subplot_kwarg_collision\", \"lib/matplotlib/tests/test_pyplot.py::test_gca\", \"lib/matplotlib/tests/test_pyplot.py::test_subplot_projection_reuse\", \"lib/matplotlib/tests/test_pyplot.py::test_subplot_polar_normalization\", \"lib/matplotlib/tests/test_pyplot.py::test_subplot_change_projection\", \"lib/matplotlib/tests/test_pyplot.py::test_polar_second_call\", \"lib/matplotlib/tests/test_pyplot.py::test_fallback_position\", \"lib/matplotlib/tests/test_pyplot.py::test_set_current_figure_via_subfigure\", \"lib/matplotlib/tests/test_pyplot.py::test_set_current_axes_on_subfigure\", \"lib/matplotlib/tests/test_pyplot.py::test_pylab_integration\", \"lib/matplotlib/tests/test_pyplot.py::test_doc_pyplot_summary\"]",
  "environment_setup_commit": "de98877e3dc45de8dd441d008f23d88738dc015d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.798850",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}