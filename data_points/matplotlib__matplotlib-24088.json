{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-24088",
  "base_commit": "0517187b9c91061d2ec87e70442615cf4f47b6f3",
  "patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -1253,11 +1253,13 @@ def colorbar(\n         # Store the value of gca so that we can set it back later on.\n         if cax is None:\n             if ax is None:\n-                raise ValueError(\n+                _api.warn_deprecated(\"3.6\", message=(\n                     'Unable to determine Axes to steal space for Colorbar. '\n+                    'Using gca(), but will raise in the future. '\n                     'Either provide the *cax* argument to use as the Axes for '\n                     'the Colorbar, provide the *ax* argument to steal space '\n-                    'from it, or add *mappable* to an Axes.')\n+                    'from it, or add *mappable* to an Axes.'))\n+                ax = self.gca()\n             current_ax = self.gca()\n             userax = False\n             if (use_gridspec and isinstance(ax, SubplotBase)):\n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_colorbar.py b/lib/matplotlib/tests/test_colorbar.py\n--- a/lib/matplotlib/tests/test_colorbar.py\n+++ b/lib/matplotlib/tests/test_colorbar.py\n@@ -1,10 +1,12 @@\n import numpy as np\n import pytest\n \n+from matplotlib import _api\n from matplotlib import cm\n import matplotlib.colors as mcolors\n import matplotlib as mpl\n \n+\n from matplotlib import rc_context\n from matplotlib.testing.decorators import image_comparison\n import matplotlib.pyplot as plt\n@@ -319,7 +321,8 @@ def test_parentless_mappable():\n     pc = mpl.collections.PatchCollection([], cmap=plt.get_cmap('viridis'))\n     pc.set_array([])\n \n-    with pytest.raises(ValueError, match='Unable to determine Axes to steal'):\n+    with pytest.warns(_api.MatplotlibDeprecationWarning,\n+                      match='Unable to determine Axes to steal'):\n         plt.colorbar(pc)\n \n \n",
  "problem_statement": "[Bug]: ValueError: Unable to determine Axes to steal space for Colorbar.\n### Bug summary\r\n\r\n`matplotlib==3.6.0` started raising an error when trying to add a colorbar to `plt.hist()`:\r\n\r\nValueError: Unable to determine Axes to steal space for Colorbar. Either provide the *cax* argument to use as the Axes for the Colorbar, provide the *ax* argument to steal space from it, or add *mappable* to an Axes.\r\n\r\n### Code for reproduction\r\n\r\n```python\r\nimport matplotlib.pyplot as plt\r\nimport numpy as np\r\n\r\nxs = np.random.rand(100)\r\n\r\n_, bin_edges, bars = plt.hist(xs)\r\ncolor_map = getattr(plt.cm, \"hot\")\r\nfor x_val, rect in zip(bin_edges, bars.patches):\r\n    rect.set_color(color_map(x_val))\r\n\r\ncbar = plt.colorbar(\r\n    plt.cm.ScalarMappable(cmap=color_map),\r\n    # cax=ax.inset_axes([0.95, 0.1, 0.05, 0.8]),\r\n)\r\n```\r\n\r\n### Actual outcome\r\n\r\nIn `matplotlib==3.6.0`:\r\n\r\n![mpl==3 6 0](https://user-images.githubusercontent.com/30958850/191547778-033472e7-e739-4beb-a1f4-eecdcb587e22.png)\r\n\r\n\r\n### Expected outcome\r\n\r\nIn `matplotlib==3.5.1`:\r\n\r\n![mpl==3 5 1](https://user-images.githubusercontent.com/30958850/191547733-cd4911a5-67c8-4070-a708-ce3399e8c0ba.png)\r\n\r\n### Operating system\r\n\r\nmacOS 12.6\r\n\r\n### Matplotlib Version\r\n\r\n3.6.0\r\n\r\n### Python version\r\n\r\n3.10\r\n\r\n### Installation\r\n\r\npip\n",
  "hints_text": "The error disappears in 3.6.0 by following the error message and passing `cax=ax.inset_axes([0.95, 0.1, 0.05, 0.8])`.\nIf it is ambiguous what axes to use, pass in the axes directly: \r\n\r\n```\r\ncbar = plt.colorbar(\r\n    plt.cm.ScalarMappable(cmap=color_map),\r\n    ax=plt.gca()\r\n)\r\n```\r\n\r\nYou _could_ make an axes, and use that, but you will lose some layout convenience. \nGood to know I can keep auto-layout for the color bar.\r\n\r\n> If it is ambiguous what axes to use, pass in the axes directly:\r\n\r\nWhat changed between 3.5.1 and 3.6.0? Why wasn't it ambiguous before?\nThis happened in https://github.com/matplotlib/matplotlib/pull/23740.   However, I think we were under the impression this was deprecated, but it sounds like perhaps that was not the case?\nI had the problem when trying to use create a simple SHAP plot using the [shap package](https://shap.readthedocs.io/en/latest/index.html). \r\n\r\n```python\r\nimport shap\r\n\r\n# use SHAP (SHapley Additive exPlanations) to explain the output of the generated model\r\nexplainer = shap.TreeExplainer(model)\r\nshap_values = explainer.shap_values(X)\r\nshap.summary_plot(shap_values[1], X, feature_names=X.columns, show=False, max_display=20, plot_size=(15, 10))\r\n```\r\n\r\n`ValueError: Unable to determine Axes to steal space for Colorbar. Either provide the cax argument to use as the Axes for the Colorbar, provide the ax argument to steal space from it, or add mappable to an Axes.`\r\n\r\nI had to downgrade to matplotlib 3.5.1 to fix the issue.\nPlease report to shap\n\nI will put on the agenda for next weeks call what we should do about this.  It seems we screwed up the deprecation warning somehow, or a lot of downstream packages didn't see it.  \n\n\nThere was a deprecation warning here, but it was only triggered if the mappable had an axes that was different from the current axes:\r\n\r\nhttps://github.com/matplotlib/matplotlib/blob/a86271c139a056a5c217ec5820143dca9e19f9b8/lib/matplotlib/figure.py#L1182-L1191\r\n\r\nIn the OP's case, I think the mappable has no axes.\nI guess this should get fixed for the bug release, though maybe not the most critical thing in the world.  But we have probably broken a few libraries by doing this with no notice.",
  "created_at": "2022-10-03T22:25:59Z",
  "version": "3.6",
  "FAIL_TO_PASS": "[\"lib/matplotlib/tests/test_colorbar.py::test_parentless_mappable\"]",
  "PASS_TO_PASS": "[\"lib/matplotlib/tests/test_colorbar.py::test_colorbar_extension_shape[png]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_extension_length[png]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_extension_inverted_axis[min-expected0-horizontal]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_extension_inverted_axis[min-expected0-vertical]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_extension_inverted_axis[max-expected1-horizontal]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_extension_inverted_axis[max-expected1-vertical]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_extension_inverted_axis[both-expected2-horizontal]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_extension_inverted_axis[both-expected2-vertical]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_positioning[png-True]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_positioning[png-False]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_single_ax_panchor_false\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_single_ax_panchor_east[standard]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_single_ax_panchor_east[constrained]\", \"lib/matplotlib/tests/test_colorbar.py::test_contour_colorbar[png]\", \"lib/matplotlib/tests/test_colorbar.py::test_gridspec_make_colorbar[png]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_single_scatter[png]\", \"lib/matplotlib/tests/test_colorbar.py::test_remove_from_figure[no\", \"lib/matplotlib/tests/test_colorbar.py::test_remove_from_figure[with\", \"lib/matplotlib/tests/test_colorbar.py::test_remove_from_figure_cl\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbarbase\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_closed_patch[png]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_ticks\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_minorticks_on_off\", \"lib/matplotlib/tests/test_colorbar.py::test_cbar_minorticks_for_rc_xyminortickvisible\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_autoticks\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_autotickslog\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_get_ticks\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_lognorm_extension[both]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_lognorm_extension[min]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_lognorm_extension[max]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_powernorm_extension\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_axes_kw\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_log_minortick_labels\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_renorm\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_format[%4.2e]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_format[{x:.2e}]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_scale_reset\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_get_ticks_2\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_inverted_ticks\", \"lib/matplotlib/tests/test_colorbar.py::test_mappable_no_alpha\", \"lib/matplotlib/tests/test_colorbar.py::test_mappable_2d_alpha\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_label\", \"lib/matplotlib/tests/test_colorbar.py::test_keeping_xlabel[png]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_int[clim0]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_int[clim1]\", \"lib/matplotlib/tests/test_colorbar.py::test_anchored_cbar_position_using_specgrid\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_change_lim_scale[png]\", \"lib/matplotlib/tests/test_colorbar.py::test_axes_handles_same_functions[png]\", \"lib/matplotlib/tests/test_colorbar.py::test_inset_colorbar_layout\", \"lib/matplotlib/tests/test_colorbar.py::test_twoslope_colorbar[png]\", \"lib/matplotlib/tests/test_colorbar.py::test_remove_cb_whose_mappable_has_no_figure[png]\", \"lib/matplotlib/tests/test_colorbar.py::test_aspects\", \"lib/matplotlib/tests/test_colorbar.py::test_proportional_colorbars[png]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_extend_drawedges[png]\", \"lib/matplotlib/tests/test_colorbar.py::test_negative_boundarynorm\", \"lib/matplotlib/tests/test_colorbar.py::test_boundaries[png]\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_no_warning_rcparams_grid_true\", \"lib/matplotlib/tests/test_colorbar.py::test_colorbar_set_formatter_locator\", \"lib/matplotlib/tests/test_colorbar.py::test_offset_text_loc\", \"lib/matplotlib/tests/test_colorbar.py::test_title_text_loc\"]",
  "environment_setup_commit": "73909bcb408886a22e2b84581d6b9e6d9907c813",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.807861",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}