{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-14166",
  "base_commit": "2c0a3a103baa547de12e332382d44ee3733d485f",
  "patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1329,7 +1329,7 @@ def _print_Order(self, expr):\n                 s += self._print(expr.point)\n             else:\n                 s += self._print(expr.point[0])\n-        return r\"\\mathcal{O}\\left(%s\\right)\" % s\n+        return r\"O\\left(%s\\right)\" % s\n \n     def _print_Symbol(self, expr):\n         if expr in self._settings['symbol_names']:\n",
  "test_patch": "diff --git a/sympy/printing/tests/test_latex.py b/sympy/printing/tests/test_latex.py\n--- a/sympy/printing/tests/test_latex.py\n+++ b/sympy/printing/tests/test_latex.py\n@@ -330,14 +330,14 @@ def test_latex_functions():\n     assert latex(gamma(x)) == r\"\\Gamma\\left(x\\right)\"\n     w = Wild('w')\n     assert latex(gamma(w)) == r\"\\Gamma\\left(w\\right)\"\n-    assert latex(Order(x)) == r\"\\mathcal{O}\\left(x\\right)\"\n-    assert latex(Order(x, x)) == r\"\\mathcal{O}\\left(x\\right)\"\n-    assert latex(Order(x, (x, 0))) == r\"\\mathcal{O}\\left(x\\right)\"\n-    assert latex(Order(x, (x, oo))) == r\"\\mathcal{O}\\left(x; x\\rightarrow \\infty\\right)\"\n-    assert latex(Order(x - y, (x, y))) == r\"\\mathcal{O}\\left(x - y; x\\rightarrow y\\right)\"\n-    assert latex(Order(x, x, y)) == r\"\\mathcal{O}\\left(x; \\left ( x, \\quad y\\right )\\rightarrow \\left ( 0, \\quad 0\\right )\\right)\"\n-    assert latex(Order(x, x, y)) == r\"\\mathcal{O}\\left(x; \\left ( x, \\quad y\\right )\\rightarrow \\left ( 0, \\quad 0\\right )\\right)\"\n-    assert latex(Order(x, (x, oo), (y, oo))) == r\"\\mathcal{O}\\left(x; \\left ( x, \\quad y\\right )\\rightarrow \\left ( \\infty, \\quad \\infty\\right )\\right)\"\n+    assert latex(Order(x)) == r\"O\\left(x\\right)\"\n+    assert latex(Order(x, x)) == r\"O\\left(x\\right)\"\n+    assert latex(Order(x, (x, 0))) == r\"O\\left(x\\right)\"\n+    assert latex(Order(x, (x, oo))) == r\"O\\left(x; x\\rightarrow \\infty\\right)\"\n+    assert latex(Order(x - y, (x, y))) == r\"O\\left(x - y; x\\rightarrow y\\right)\"\n+    assert latex(Order(x, x, y)) == r\"O\\left(x; \\left ( x, \\quad y\\right )\\rightarrow \\left ( 0, \\quad 0\\right )\\right)\"\n+    assert latex(Order(x, x, y)) == r\"O\\left(x; \\left ( x, \\quad y\\right )\\rightarrow \\left ( 0, \\quad 0\\right )\\right)\"\n+    assert latex(Order(x, (x, oo), (y, oo))) == r\"O\\left(x; \\left ( x, \\quad y\\right )\\rightarrow \\left ( \\infty, \\quad \\infty\\right )\\right)\"\n     assert latex(lowergamma(x, y)) == r'\\gamma\\left(x, y\\right)'\n     assert latex(uppergamma(x, y)) == r'\\Gamma\\left(x, y\\right)'\n \n",
  "problem_statement": "Typesetting of big-O symbol\nCurrently typesetting of big-O symbol uses the ordinary 'O', we can use the typesetting as defined here https://en.wikipedia.org/wiki/Big_O_notation#Typesetting .\n",
  "hints_text": "What I was saying was that we should replace the calligraphy O with a normal O, not the other way around. \nOh sorry, @asmeurer I didn't see your comment. Should I close #14164?\nI also read the issue wrong. But I just checked the master branch:\r\n```\r\n>>> pprint(series(cos(x), x, pi, 3))\r\n            2\r\n     (x - π)     ⎛       3       ⎞\r\n-1 + ──────── + O⎝(x - π) ; x → π⎠\r\n        2\r\n```\r\nThe `O` here is ordinary O only, [see](https://github.com/sympy/sympy/blob/2c0a3a103baa547de12e332382d44ee3733d485f/sympy/printing/pretty/pretty.py#L1278).\n@jashan498 The issue is about LaTeX printer, which uses calligraphic O",
  "created_at": "2018-02-11T21:58:27Z",
  "version": "1.1",
  "FAIL_TO_PASS": "[\"test_latex_functions\"]",
  "PASS_TO_PASS": "[\"test_printmethod\", \"test_latex_basic\", \"test_latex_builtins\", \"test_latex_SingularityFunction\", \"test_latex_cycle\", \"test_latex_permutation\", \"test_latex_Float\", \"test_latex_vector_expressions\", \"test_latex_symbols\", \"test_function_subclass_different_name\", \"test_hyper_printing\", \"test_latex_bessel\", \"test_latex_fresnel\", \"test_latex_brackets\", \"test_latex_indexed\", \"test_latex_derivatives\", \"test_latex_subs\", \"test_latex_integrals\", \"test_latex_sets\", \"test_latex_SetExpr\", \"test_latex_Range\", \"test_latex_sequences\", \"test_latex_FourierSeries\", \"test_latex_FormalPowerSeries\", \"test_latex_intervals\", \"test_latex_AccumuBounds\", \"test_latex_emptyset\", \"test_latex_commutator\", \"test_latex_union\", \"test_latex_symmetric_difference\", \"test_latex_Complement\", \"test_latex_Complexes\", \"test_latex_productset\", \"test_latex_Naturals\", \"test_latex_Naturals0\", \"test_latex_Integers\", \"test_latex_ImageSet\", \"test_latex_ConditionSet\", \"test_latex_ComplexRegion\", \"test_latex_Contains\", \"test_latex_sum\", \"test_latex_product\", \"test_latex_limits\", \"test_issue_3568\", \"test_latex\", \"test_latex_dict\", \"test_latex_list\", \"test_latex_rational\", \"test_latex_inverse\", \"test_latex_DiracDelta\", \"test_latex_Heaviside\", \"test_latex_KroneckerDelta\", \"test_latex_LeviCivita\", \"test_mode\", \"test_latex_Piecewise\", \"test_latex_Matrix\", \"test_latex_matrix_with_functions\", \"test_latex_NDimArray\", \"test_latex_mul_symbol\", \"test_latex_issue_4381\", \"test_latex_issue_4576\", \"test_latex_pow_fraction\", \"test_noncommutative\", \"test_latex_order\", \"test_latex_Lambda\", \"test_latex_PolyElement\", \"test_latex_FracElement\", \"test_latex_Poly\", \"test_latex_ComplexRootOf\", \"test_latex_RootSum\", \"test_settings\", \"test_latex_numbers\", \"test_latex_euler\", \"test_lamda\", \"test_custom_symbol_names\", \"test_matAdd\", \"test_matMul\", \"test_latex_MatrixSlice\", \"test_latex_RandomDomain\", \"test_PrettyPoly\", \"test_integral_transforms\", \"test_PolynomialRingBase\", \"test_categories\", \"test_Modules\", \"test_QuotientRing\", \"test_Tr\", \"test_Adjoint\", \"test_Hadamard\", \"test_ZeroMatrix\", \"test_boolean_args_order\", \"test_imaginary\", \"test_builtins_without_args\", \"test_latex_greek_functions\", \"test_translate\", \"test_other_symbols\", \"test_modifiers\", \"test_greek_symbols\", \"test_builtin_no_args\", \"test_issue_6853\", \"test_Mul\", \"test_Pow\", \"test_issue_7180\", \"test_issue_8409\", \"test_issue_7117\", \"test_issue_2934\", \"test_issue_10489\", \"test_issue_12886\", \"test_issue_13651\", \"test_latex_UnevaluatedExpr\", \"test_MatrixElement_printing\", \"test_Quaternion_latex_printing\", \"test_TensorProduct_printing\"]",
  "environment_setup_commit": "ec9e3c0436fbff934fa84e22bf07f1b3ef5bfac3",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.092336",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}