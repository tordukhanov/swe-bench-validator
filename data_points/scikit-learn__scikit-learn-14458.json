{
  "repo": "scikit-learn/scikit-learn",
  "instance_id": "scikit-learn__scikit-learn-14458",
  "base_commit": "243d0526ee921babd478d9f95390e29880db3c94",
  "patch": "diff --git a/sklearn/linear_model/base.py b/sklearn/linear_model/base.py\n--- a/sklearn/linear_model/base.py\n+++ b/sklearn/linear_model/base.py\n@@ -91,6 +91,7 @@ def make_dataset(X, y, sample_weight, random_state=None):\n                           seed=seed)\n         intercept_decay = SPARSE_INTERCEPT_DECAY\n     else:\n+        X = np.ascontiguousarray(X)\n         dataset = ArrayData(X, y, sample_weight, seed=seed)\n         intercept_decay = 1.0\n \ndiff --git a/sklearn/linear_model/ridge.py b/sklearn/linear_model/ridge.py\n--- a/sklearn/linear_model/ridge.py\n+++ b/sklearn/linear_model/ridge.py\n@@ -409,7 +409,7 @@ def _ridge_regression(X, y, alpha, sample_weight=None, solver='auto',\n         _accept_sparse = _get_valid_accept_sparse(sparse.issparse(X), solver)\n         X = check_array(X, accept_sparse=_accept_sparse, dtype=_dtype,\n                         order=\"C\")\n-        y = check_array(y, dtype=X.dtype, ensure_2d=False, order=\"C\")\n+        y = check_array(y, dtype=X.dtype, ensure_2d=False, order=None)\n     check_consistent_length(X, y)\n \n     n_samples, n_features = X.shape\n",
  "test_patch": "diff --git a/sklearn/linear_model/tests/test_ridge.py b/sklearn/linear_model/tests/test_ridge.py\n--- a/sklearn/linear_model/tests/test_ridge.py\n+++ b/sklearn/linear_model/tests/test_ridge.py\n@@ -1210,3 +1210,13 @@ def test_ridge_regression_dtype_stability(solver, seed):\n     assert results[np.float32].dtype == np.float32\n     assert results[np.float64].dtype == np.float64\n     assert_allclose(results[np.float32], results[np.float64], atol=atol)\n+\n+\n+def test_ridge_sag_with_X_fortran():\n+    # check that Fortran array are converted when using SAG solver\n+    X, y = make_regression(random_state=42)\n+    # for the order of X and y to not be C-ordered arrays\n+    X = np.asfortranarray(X)\n+    X = X[::2, :]\n+    y = y[::2]\n+    Ridge(solver='sag').fit(X, y)\n",
  "problem_statement": "Need for conversion with SAG\nRunning the following code snippet will lead to an error:\r\n\r\n```python\r\nfrom sklearn.datasets import fetch_openml                                            \r\nfrom sklearn.linear_model import Ridge                                               \r\n                                                                                     \r\ncensus = fetch_openml(data_id=534, as_frame=True)                                    \r\nX, y = census.data, census.target                                                    \r\nnumerical_cols = ['AGE', 'EDUCATION', 'EXPERIENCE']                                  \r\nmodel = Ridge(solver='sag').fit(X[numerical_cols], y) \r\n```\r\n\r\n```pytb\r\n~/Documents/code/toolbox/scikit-learn/sklearn/linear_model/base.py in make_dataset(X, y, sample_weight, random_state)\r\n     92         intercept_decay = SPARSE_INTERCEPT_DECAY\r\n     93     else:\r\n---> 94         dataset = ArrayData(X, y, sample_weight, seed=seed)\r\n     95         intercept_decay = 1.0\r\n     96 \r\n\r\n~/Documents/code/toolbox/scikit-learn/sklearn/utils/seq_dataset.pyx in sklearn.utils.seq_dataset.ArrayDataset64.__cinit__()\r\n\r\nValueError: ndarray is not C-contiguous\r\n```\r\n\r\nI am wondering if we are not to strict here, and we should include a `check_array` since that `ArrayData` will expect a C-contiguous numpy array.\n",
  "hints_text": "We have 2 solutions:\r\n\r\n* make `ArrayDataset**` more permissive to accept C and F arrays and internally call `check_array` in `__cninit__`\r\n* make a `check_array` in the `make_dataset` function\r\n\r\nWhat's best?\n> make ArrayDataset** more permissive to accept C and F arrays and internally call check_array in __cninit__\r\n\r\nI guess the problem here is not that it's F ordered, but that it's non contiguous.\r\n\r\n+1 to add `check_array` in the make_dataset function\nActually, `X[:, [1,3,4]]` is F contiguous\r\nBut `X[:, ::2]` isn't so I'm also +1 for check_array\nAlso it looks like `Ridge(solver=\"sag\")` is not run in common tests, as otherwise it would fail with another reason,\r\n<details>\r\n\r\n```\r\nIn [2]: from sklearn.linear_model import Ridge                                                                                                 \r\nIn [4]: from sklearn.utils.estimator_checks import check_estimator                                 \r\nIn [5]: check_estimator(Ridge(solver='sag'))                                                                                                   \r\n/home/rth/src/scikit-learn/sklearn/linear_model/ridge.py:558: UserWarning: \"sag\" solver requires many iterations to fit an intercept with sparse inputs. Either set the solver to \"auto\" or \"sparse_cg\", or set a low \"tol\" and a high \"max_iter\" (especially if inputs are not standardized).\r\n  '\"sag\" solver requires many iterations to fit '\r\n/home/rth/src/scikit-learn/sklearn/linear_model/ridge.py:558: UserWarning: \"sag\" solver requires many iterations to fit an intercept with sparse inputs. Either set the solver to \"auto\" or \"sparse_cg\", or set a low \"tol\" and a high \"max_iter\" (especially if inputs are not standardized).\r\n  '\"sag\" solver requires many iterations to fit '\r\n/home/rth/src/scikit-learn/sklearn/linear_model/ridge.py:558: UserWarning: \"sag\" solver requires many iterations to fit an intercept with sparse inputs. Either set the solver to \"auto\" or \"sparse_cg\", or set a low \"tol\" and a high \"max_iter\" (especially if inputs are not standardized).\r\n  '\"sag\" solver requires many iterations to fit '\r\n/home/rth/src/scikit-learn/sklearn/linear_model/ridge.py:558: UserWarning: \"sag\" solver requires many iterations to fit an intercept with sparse inputs. Either set the solver to \"auto\" or \"sparse_cg\", or set a low \"tol\" and a high \"max_iter\" (especially if inputs are not standardized).\r\n  '\"sag\" solver requires many iterations to fit '\r\n/home/rth/src/scikit-learn/sklearn/linear_model/ridge.py:558: UserWarning: \"sag\" solver requires many iterations to fit an intercept with sparse inputs. Either set the solver to \"auto\" or \"sparse_cg\", or set a low \"tol\" and a high \"max_iter\" (especially if inputs are not standardized).\r\n  '\"sag\" solver requires many iterations to fit '\r\n/home/rth/src/scikit-learn/sklearn/linear_model/ridge.py:558: UserWarning: \"sag\" solver requires many iterations to fit an intercept with sparse inputs. Either set the solver to \"auto\" or \"sparse_cg\", or set a low \"tol\" and a high \"max_iter\" (especially if inputs are not standardized).\r\n  '\"sag\" solver requires many iterations to fit '\r\n/home/rth/src/scikit-learn/sklearn/linear_model/ridge.py:558: UserWarning: \"sag\" solver requires many iterations to fit an intercept with sparse inputs. Either set the solver to \"auto\" or \"sparse_cg\", or set a low \"tol\" and a high \"max_iter\" (especially if inputs are not standardized).\r\n  '\"sag\" solver requires many iterations to fit '\r\n/home/rth/src/scikit-learn/sklearn/linear_model/ridge.py:558: UserWarning: \"sag\" solver requires many iterations to fit an intercept with sparse inputs. Either set the solver to \"auto\" or \"sparse_cg\", or set a low \"tol\" and a high \"max_iter\" (especially if inputs are not standardized).\r\n  '\"sag\" solver requires many iterations to fit '\r\n/home/rth/src/scikit-learn/sklearn/linear_model/ridge.py:558: UserWarning: \"sag\" solver requires many iterations to fit an intercept with sparse inputs. Either set the solver to \"auto\" or \"sparse_cg\", or set a low \"tol\" and a high \"max_iter\" (especially if inputs are not standardized).\r\n  '\"sag\" solver requires many iterations to fit '\r\n/home/rth/src/scikit-learn/sklearn/linear_model/ridge.py:558: UserWarning: \"sag\" solver requires many iterations to fit an intercept with sparse inputs. Either set the solver to \"auto\" or \"sparse_cg\", or set a low \"tol\" and a high \"max_iter\" (especially if inputs are not standardized).\r\n  '\"sag\" solver requires many iterations to fit '\r\n---------------------------------------------------------------------------\r\nZeroDivisionError                         Traceback (most recent call last)\r\n<ipython-input-5-79acf8fdbc1d> in <module>\r\n----> 1 check_estimator(Ridge(solver='sag'))\r\n\r\n~/src/scikit-learn/sklearn/utils/estimator_checks.py in check_estimator(Estimator)\r\n    298     for check in _yield_all_checks(name, estimator):\r\n    299         try:\r\n--> 300             check(name, estimator)\r\n    301         except SkipTest as exception:\r\n    302             # the only SkipTest thrown currently results from not\r\n\r\n~/src/scikit-learn/sklearn/utils/testing.py in wrapper(*args, **kwargs)\r\n    324             with warnings.catch_warnings():\r\n    325                 warnings.simplefilter(\"ignore\", self.category)\r\n--> 326                 return fn(*args, **kwargs)\r\n    327 \r\n    328         return wrapper\r\n\r\n~/src/scikit-learn/sklearn/utils/estimator_checks.py in check_fit2d_1sample(name, estimator_orig)\r\n    895 \r\n    896     try:\r\n--> 897         estimator.fit(X, y)\r\n    898     except ValueError as e:\r\n    899         if all(msg not in repr(e) for msg in msgs):\r\n\r\n~/src/scikit-learn/sklearn/linear_model/ridge.py in fit(self, X, y, sample_weight)\r\n    762         self : returns an instance of self.\r\n    763         \"\"\"\r\n--> 764         return super().fit(X, y, sample_weight=sample_weight)\r\n    765 \r\n    766 \r\n\r\n~/src/scikit-learn/sklearn/linear_model/ridge.py in fit(self, X, y, sample_weight)\r\n    597                 max_iter=self.max_iter, tol=self.tol, solver=solver,\r\n    598                 random_state=self.random_state, return_n_iter=True,\r\n--> 599                 return_intercept=False, check_input=False, **params)\r\n    600             self._set_intercept(X_offset, y_offset, X_scale)\r\n    601 \r\n\r\n~/src/scikit-learn/sklearn/linear_model/ridge.py in _ridge_regression(X, y, alpha, sample_weight, solver, max_iter, tol, verbose, random_state, return_n_iter, return_intercept, X_scale, X_offset, check_input)\r\n    490                 max_iter, tol, verbose, random_state, False, max_squared_sum,\r\n    491                 init,\r\n--> 492                 is_saga=solver == 'saga')\r\n    493             if return_intercept:\r\n    494                 coef[i] = coef_[:-1]\r\n\r\n~/src/scikit-learn/sklearn/linear_model/sag.py in sag_solver(X, y, sample_weight, loss, alpha, beta, max_iter, tol, verbose, random_state, check_input, max_squared_sum, warm_start_mem, is_saga)\r\n    305                                    is_saga=is_saga)\r\n    306     if step_size * alpha_scaled == 1:\r\n--> 307         raise ZeroDivisionError(\"Current sag implementation does not handle \"\r\n    308                                 \"the case step_size * alpha_scaled == 1\")\r\n    309 \r\n\r\nZeroDivisionError: Current sag implementation does not handle the case step_size * alpha_scaled == 1\r\n```\r\n\r\n</details>\r\n\r\n> Actually, X[:, [1,3,4]] is F contiguous\r\n\r\nWow, yes, I wasn't aware of that.\r\n",
  "created_at": "2019-07-24T14:39:51Z",
  "version": "0.22",
  "FAIL_TO_PASS": "[\"sklearn/linear_model/tests/test_ridge.py::test_ridge_sag_with_X_fortran\"]",
  "PASS_TO_PASS": "[\"sklearn/linear_model/tests/test_ridge.py::test_ridge[svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge[sparse_cg]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge[cholesky]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge[lsqr]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge[sag]\", \"sklearn/linear_model/tests/test_ridge.py::test_primal_dual_relationship\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_singular\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_sample_weights\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_convergence_fail\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_sample_weights\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_shapes\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_intercept\", \"sklearn/linear_model/tests/test_ridge.py::test_toy_ridge_object\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_vs_lstsq\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_individual_penalties\", \"sklearn/linear_model/tests/test_ridge.py::test_X_CenterStackOp[n_col0]\", \"sklearn/linear_model/tests/test_ridge.py::test_X_CenterStackOp[n_col1]\", \"sklearn/linear_model/tests/test_ridge.py::test_X_CenterStackOp[n_col2]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_gram[True-shape0]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_gram[True-shape1]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_gram[True-shape2]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_gram[True-shape3]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_gram[True-shape4]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_gram[False-shape0]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_gram[False-shape1]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_gram[False-shape2]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_gram[False-shape3]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_gram[False-shape4]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_covariance[True-shape0]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_covariance[True-shape1]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_covariance[True-shape2]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_covariance[True-shape3]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_covariance[True-shape4]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_covariance[False-shape0]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_covariance[False-shape1]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_covariance[False-shape2]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_covariance[False-shape3]\", \"sklearn/linear_model/tests/test_ridge.py::test_compute_covariance[False-shape4]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-20-float32-0.1-cholesky-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-20-float32-0.1-sag-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-20-float32-0.1-sparse_cg-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-20-float32-0.1-sparse_cg-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-20-float32-0.1-lsqr-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-20-float32-0.1-saga-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-20-float32-0.1-ridgecv-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-20-float32-0.1-ridgecv-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-40-float32-1.0-cholesky-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-40-float32-1.0-sag-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-40-float32-1.0-sparse_cg-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-40-float32-1.0-sparse_cg-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-40-float32-1.0-lsqr-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-40-float32-1.0-saga-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-40-float32-1.0-ridgecv-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-40-float32-1.0-ridgecv-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-20-float64-0.2-cholesky-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-20-float64-0.2-sag-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-20-float64-0.2-sparse_cg-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-20-float64-0.2-sparse_cg-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-20-float64-0.2-lsqr-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-20-float64-0.2-saga-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-20-float64-0.2-ridgecv-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed0-20-float64-0.2-ridgecv-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-20-float32-0.1-cholesky-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-20-float32-0.1-sag-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-20-float32-0.1-sparse_cg-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-20-float32-0.1-sparse_cg-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-20-float32-0.1-lsqr-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-20-float32-0.1-saga-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-20-float32-0.1-ridgecv-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-20-float32-0.1-ridgecv-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-40-float32-1.0-cholesky-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-40-float32-1.0-sag-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-40-float32-1.0-sparse_cg-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-40-float32-1.0-sparse_cg-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-40-float32-1.0-lsqr-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-40-float32-1.0-saga-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-40-float32-1.0-ridgecv-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-40-float32-1.0-ridgecv-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-20-float64-0.2-cholesky-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-20-float64-0.2-sag-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-20-float64-0.2-sparse_cg-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-20-float64-0.2-sparse_cg-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-20-float64-0.2-lsqr-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-20-float64-0.2-saga-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-20-float64-0.2-ridgecv-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed1-20-float64-0.2-ridgecv-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-20-float32-0.1-cholesky-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-20-float32-0.1-sag-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-20-float32-0.1-sparse_cg-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-20-float32-0.1-sparse_cg-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-20-float32-0.1-lsqr-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-20-float32-0.1-saga-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-20-float32-0.1-ridgecv-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-20-float32-0.1-ridgecv-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-40-float32-1.0-cholesky-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-40-float32-1.0-sag-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-40-float32-1.0-sparse_cg-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-40-float32-1.0-sparse_cg-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-40-float32-1.0-lsqr-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-40-float32-1.0-saga-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-40-float32-1.0-ridgecv-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-40-float32-1.0-ridgecv-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-20-float64-0.2-cholesky-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-20-float64-0.2-sag-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-20-float64-0.2-sparse_cg-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-20-float64-0.2-sparse_cg-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-20-float64-0.2-lsqr-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-20-float64-0.2-saga-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-20-float64-0.2-ridgecv-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_solver_consistency[seed2-20-float64-0.2-ridgecv-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape0-True-1.0-True-X_shape0-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape0-True-1.0-True-X_shape0-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape0-True-1.0-True-X_shape0-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape0-True-1.0-True-X_shape0-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape0-True-1.0-True-X_shape1-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape0-True-1.0-True-X_shape1-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape0-True-1.0-True-X_shape1-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape0-True-1.0-True-X_shape1-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape0-True-1.0-False-X_shape0-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape0-True-1.0-False-X_shape0-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape0-True-1.0-False-X_shape0-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape0-True-1.0-False-X_shape0-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape0-True-1.0-False-X_shape1-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape0-True-1.0-False-X_shape1-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape0-True-1.0-False-X_shape1-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape0-True-1.0-False-X_shape1-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape1-False-30.0-True-X_shape0-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape1-False-30.0-True-X_shape0-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape1-False-30.0-True-X_shape0-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape1-False-30.0-True-X_shape0-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape1-False-30.0-True-X_shape1-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape1-False-30.0-True-X_shape1-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape1-False-30.0-True-X_shape1-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape1-False-30.0-True-X_shape1-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape1-False-30.0-False-X_shape0-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape1-False-30.0-False-X_shape0-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape1-False-30.0-False-X_shape0-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape1-False-30.0-False-X_shape0-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape1-False-30.0-False-X_shape1-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape1-False-30.0-False-X_shape1-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape1-False-30.0-False-X_shape1-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape1-False-30.0-False-X_shape1-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape2-False-150.0-True-X_shape0-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape2-False-150.0-True-X_shape0-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape2-False-150.0-True-X_shape0-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape2-False-150.0-True-X_shape0-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape2-False-150.0-True-X_shape1-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape2-False-150.0-True-X_shape1-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape2-False-150.0-True-X_shape1-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape2-False-150.0-True-X_shape1-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape2-False-150.0-False-X_shape0-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape2-False-150.0-False-X_shape0-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape2-False-150.0-False-X_shape0-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape2-False-150.0-False-X_shape0-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape2-False-150.0-False-X_shape1-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape2-False-150.0-False-X_shape1-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape2-False-150.0-False-X_shape1-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_vs_ridge_loo_cv[y_shape2-False-150.0-False-X_shape1-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape0-True-1.0-8-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape0-True-1.0-8-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape0-True-1.0-8-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape0-True-1.0-8-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape0-True-1.0-20-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape0-True-1.0-20-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape0-True-1.0-20-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape0-True-1.0-20-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape1-True-20.0-8-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape1-True-20.0-8-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape1-True-20.0-8-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape1-True-20.0-8-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape1-True-20.0-20-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape1-True-20.0-20-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape1-True-20.0-20-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape1-True-20.0-20-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape2-True-150.0-8-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape2-True-150.0-8-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape2-True-150.0-8-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape2-True-150.0-8-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape2-True-150.0-20-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape2-True-150.0-20-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape2-True-150.0-20-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape2-True-150.0-20-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape3-False-30.0-8-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape3-False-30.0-8-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape3-False-30.0-8-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape3-False-30.0-8-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape3-False-30.0-20-asarray-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape3-False-30.0-20-asarray-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape3-False-30.0-20-csr_matrix-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_gcv_sample_weights[y_shape3-False-30.0-20-csr_matrix-eigen]\", \"sklearn/linear_model/tests/test_ridge.py::test_check_gcv_mode_error[True]\", \"sklearn/linear_model/tests/test_ridge.py::test_check_gcv_mode_error[1]\", \"sklearn/linear_model/tests/test_ridge.py::test_check_gcv_mode_error[5]\", \"sklearn/linear_model/tests/test_ridge.py::test_check_gcv_mode_error[bad]\", \"sklearn/linear_model/tests/test_ridge.py::test_check_gcv_mode_error[gcv]\", \"sklearn/linear_model/tests/test_ridge.py::test_check_gcv_mode_choice[None-svd-eigen-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_check_gcv_mode_choice[None-svd-eigen-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_check_gcv_mode_choice[auto-svd-eigen-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_check_gcv_mode_choice[auto-svd-eigen-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_check_gcv_mode_choice[eigen-eigen-eigen-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_check_gcv_mode_choice[eigen-eigen-eigen-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_check_gcv_mode_choice[svd-svd-svd-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_check_gcv_mode_choice[svd-svd-svd-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_ridge_loo]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_ridge_cv]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_ridge_cv_normalize]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_ridge_diabetes]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_multi_ridge_diabetes]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_ridge_classifiers]\", \"sklearn/linear_model/tests/test_ridge.py::test_dense_sparse[_test_tolerance]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_sparse_svd\", \"sklearn/linear_model/tests/test_ridge.py::test_class_weights\", \"sklearn/linear_model/tests/test_ridge.py::test_class_weight_vs_sample_weight[RidgeClassifier]\", \"sklearn/linear_model/tests/test_ridge.py::test_class_weight_vs_sample_weight[RidgeClassifierCV]\", \"sklearn/linear_model/tests/test_ridge.py::test_class_weights_cv\", \"sklearn/linear_model/tests/test_ridge.py::test_ridgecv_store_cv_values\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_classifier_cv_store_cv_values\", \"sklearn/linear_model/tests/test_ridge.py::test_ridgecv_sample_weight\", \"sklearn/linear_model/tests/test_ridge.py::test_raises_value_error_if_sample_weights_greater_than_1d\", \"sklearn/linear_model/tests/test_ridge.py::test_sparse_design_with_sample_weights\", \"sklearn/linear_model/tests/test_ridge.py::test_ridgecv_int_alphas\", \"sklearn/linear_model/tests/test_ridge.py::test_ridgecv_negative_alphas\", \"sklearn/linear_model/tests/test_ridge.py::test_raises_value_error_if_solver_not_supported\", \"sklearn/linear_model/tests/test_ridge.py::test_sparse_cg_max_iter\", \"sklearn/linear_model/tests/test_ridge.py::test_n_iter\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_fit_intercept_sparse[sparse_cg]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_fit_intercept_sparse[auto]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_fit_intercept_sparse_error[saga]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_fit_intercept_sparse_error[lsqr]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_fit_intercept_sparse_error[svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_fit_intercept_sparse_error[cholesky]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_fit_intercept_sparse_sag\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[auto-array-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[auto-array-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[auto-array-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[auto-array-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[auto-csr_matrix-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[auto-csr_matrix-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[auto-csr_matrix-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[auto-csr_matrix-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sparse_cg-array-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sparse_cg-array-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sparse_cg-array-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sparse_cg-array-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sparse_cg-csr_matrix-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sparse_cg-csr_matrix-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sparse_cg-csr_matrix-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sparse_cg-csr_matrix-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[cholesky-array-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[cholesky-array-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[cholesky-array-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[cholesky-array-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[cholesky-csr_matrix-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[cholesky-csr_matrix-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[cholesky-csr_matrix-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[cholesky-csr_matrix-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[lsqr-array-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[lsqr-array-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[lsqr-array-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[lsqr-array-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[lsqr-csr_matrix-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[lsqr-csr_matrix-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[lsqr-csr_matrix-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[lsqr-csr_matrix-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sag-array-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sag-array-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sag-array-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sag-array-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sag-csr_matrix-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sag-csr_matrix-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sag-csr_matrix-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[sag-csr_matrix-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[saga-array-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[saga-array-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[saga-array-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[saga-array-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[saga-csr_matrix-None-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[saga-csr_matrix-None-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[saga-csr_matrix-sample_weight1-False]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_check_arguments_validity[saga-csr_matrix-sample_weight1-True]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_classifier_no_support_multilabel\", \"sklearn/linear_model/tests/test_ridge.py::test_dtype_match[svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_dtype_match[sparse_cg]\", \"sklearn/linear_model/tests/test_ridge.py::test_dtype_match[cholesky]\", \"sklearn/linear_model/tests/test_ridge.py::test_dtype_match[lsqr]\", \"sklearn/linear_model/tests/test_ridge.py::test_dtype_match[sag]\", \"sklearn/linear_model/tests/test_ridge.py::test_dtype_match[saga]\", \"sklearn/linear_model/tests/test_ridge.py::test_dtype_match_cholesky\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_dtype_stability[0-svd]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_dtype_stability[0-cholesky]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_dtype_stability[0-lsqr]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_dtype_stability[0-sparse_cg]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_dtype_stability[0-sag]\", \"sklearn/linear_model/tests/test_ridge.py::test_ridge_regression_dtype_stability[0-saga]\"]",
  "environment_setup_commit": "7e85a6d1f038bbb932b36f18d75df6be937ed00d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.004661",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}