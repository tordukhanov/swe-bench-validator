{
  "repo": "pytest-dev/pytest",
  "instance_id": "pytest-dev__pytest-7468",
  "base_commit": "678c1a0745f1cf175c442c719906a1f13e496910",
  "patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -531,11 +531,17 @@ def __init__(self, config: Config) -> None:\n         # File logging.\n         self.log_file_level = get_log_level_for_setting(config, \"log_file_level\")\n         log_file = get_option_ini(config, \"log_file\") or os.devnull\n+        if log_file != os.devnull:\n+            directory = os.path.dirname(os.path.abspath(log_file))\n+            if not os.path.isdir(directory):\n+                os.makedirs(directory)\n+\n         self.log_file_handler = _FileHandler(log_file, mode=\"w\", encoding=\"UTF-8\")\n         log_file_format = get_option_ini(config, \"log_file_format\", \"log_format\")\n         log_file_date_format = get_option_ini(\n             config, \"log_file_date_format\", \"log_date_format\"\n         )\n+\n         log_file_formatter = logging.Formatter(\n             log_file_format, datefmt=log_file_date_format\n         )\n",
  "test_patch": "diff --git a/testing/logging/test_reporting.py b/testing/logging/test_reporting.py\n--- a/testing/logging/test_reporting.py\n+++ b/testing/logging/test_reporting.py\n@@ -5,6 +5,7 @@\n \n import pytest\n from _pytest.capture import CaptureManager\n+from _pytest.config import ExitCode\n from _pytest.pytester import Testdir\n from _pytest.terminal import TerminalReporter\n \n@@ -1152,3 +1153,11 @@ def test_bad_log(monkeypatch):\n     )\n     result = testdir.runpytest()\n     result.assert_outcomes(passed=1)\n+\n+\n+def test_log_file_cli_subdirectories_are_successfully_created(testdir):\n+    path = testdir.makepyfile(\"\"\" def test_logger(): pass \"\"\")\n+    expected = os.path.join(os.path.dirname(str(path)), \"foo\", \"bar\")\n+    result = testdir.runpytest(\"--log-file=foo/bar/logf.log\")\n+    assert \"logf.log\" in os.listdir(expected)\n+    assert result.ret == ExitCode.OK\n",
  "problem_statement": "--log-file should create subdirectories\nIf you provide a path with a subdirectory, which does not exist, it crashes with.\r\nFor example execute `pytest --log-file=subtest/test.log` produces something like this:\r\n`INTERNALERROR> FileNotFoundError: [Errno 2] No such file or directory: '/tmp/test/subtest/test.log' `\r\n\r\nMaybe someone want to add something like this\r\n```\r\ndirname = os.path.dirname(os.path.abspath(logfile))\r\nif not os.path.isdir(dirname):\r\n    os.makedirs(dirname)\r\n```\r\nHowever, there is the possibility to say that someone is not supposed to pass a directory path there.\r\n\r\n_Originally posted by @Hardy7cc in https://github.com/pytest-dev/pytest/pull/7350#issuecomment-655750453_\n",
  "hints_text": "I agree, `--junitxml` works the same way. üëç \r\n\r\nWould you like to take a stab at this @Hardy7cc?\nSorry ive been busy the past little while, I am doing some work in and around --log-file so I'm happy to build in support here also\nThanks @symonk, and no need to be sorry, we all are busy at times!\r\n\r\nFeel free to tackle this in #7350 if you like then. üëç \n@nicoddemus Thanks for creating this new issue.\r\n@symonk Thanks to take this up into your work around --log-file. I'm looking forward to see it ready, but take your time. I had this comment on my list for some days, so it does not hurry.",
  "created_at": "2020-07-08T23:11:32Z",
  "version": "5.4",
  "FAIL_TO_PASS": "[\"testing/logging/test_reporting.py::test_log_file_cli_subdirectories_are_successfully_created\"]",
  "PASS_TO_PASS": "[\"[100%]\", \"[\", \"[100%]------------------------------\", \"testing/logging/test_reporting.py::test_live_logging_suspends_capture[True]\", \"testing/logging/test_reporting.py::test_live_logging_suspends_capture[False]\", \"testing/logging/test_reporting.py::test_nothing_logged\", \"testing/logging/test_reporting.py::test_messages_logged\", \"testing/logging/test_reporting.py::test_root_logger_affected\", \"testing/logging/test_reporting.py::test_log_cli_level_log_level_interaction\", \"testing/logging/test_reporting.py::test_setup_logging\", \"testing/logging/test_reporting.py::test_teardown_logging\", \"testing/logging/test_reporting.py::test_log_cli_enabled_disabled[True]\", \"testing/logging/test_reporting.py::test_log_cli_enabled_disabled[False]\", \"testing/logging/test_reporting.py::test_log_cli_default_level\", \"testing/logging/test_reporting.py::test_log_cli_default_level_multiple_tests\", \"testing/logging/test_reporting.py::test_log_cli_default_level_sections\", \"testing/logging/test_reporting.py::test_live_logs_unknown_sections\", \"testing/logging/test_reporting.py::test_sections_single_new_line_after_test_outcome\", \"testing/logging/test_reporting.py::test_log_cli_level\", \"testing/logging/test_reporting.py::test_log_cli_ini_level\", \"testing/logging/test_reporting.py::test_log_cli_auto_enable[]\", \"testing/logging/test_reporting.py::test_log_cli_auto_enable[--log-level=WARNING]\", \"testing/logging/test_reporting.py::test_log_cli_auto_enable[--log-file-level=WARNING]\", \"testing/logging/test_reporting.py::test_log_cli_auto_enable[--log-cli-level=WARNING]\", \"testing/logging/test_reporting.py::test_log_file_cli\", \"testing/logging/test_reporting.py::test_log_file_cli_level\", \"testing/logging/test_reporting.py::test_log_level_not_changed_by_default\", \"testing/logging/test_reporting.py::test_log_file_ini\", \"testing/logging/test_reporting.py::test_log_file_ini_level\", \"testing/logging/test_reporting.py::test_log_file_unicode\", \"testing/logging/test_reporting.py::test_collection_live_logging\", \"testing/logging/test_reporting.py::test_collection_collect_only_live_logging[]\", \"testing/logging/test_reporting.py::test_collection_collect_only_live_logging[-q]\", \"testing/logging/test_reporting.py::test_collection_collect_only_live_logging[-qq]\", \"testing/logging/test_reporting.py::test_collection_logging_to_file\", \"testing/logging/test_reporting.py::test_log_in_hooks\", \"testing/logging/test_reporting.py::test_log_in_runtest_logreport\", \"testing/logging/test_reporting.py::test_log_set_path\", \"testing/logging/test_reporting.py::test_colored_captured_log\", \"testing/logging/test_reporting.py::test_colored_ansi_esc_caplogtext\", \"testing/logging/test_reporting.py::test_logging_emit_error\", \"testing/logging/test_reporting.py::test_logging_emit_error_supressed\"]",
  "environment_setup_commit": "678c1a0745f1cf175c442c719906a1f13e496910",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.936698",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}