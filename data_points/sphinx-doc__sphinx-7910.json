{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-7910",
  "base_commit": "27ac10de04697e2372d31db5548e56a7c6d9265d",
  "patch": "diff --git a/sphinx/ext/napoleon/__init__.py b/sphinx/ext/napoleon/__init__.py\n--- a/sphinx/ext/napoleon/__init__.py\n+++ b/sphinx/ext/napoleon/__init__.py\n@@ -13,6 +13,7 @@\n from sphinx import __display_version__ as __version__\n from sphinx.application import Sphinx\n from sphinx.ext.napoleon.docstring import GoogleDocstring, NumpyDocstring\n+from sphinx.util import inspect\n \n \n class Config:\n@@ -438,7 +439,7 @@ def _skip_member(app: Sphinx, what: str, name: str, obj: Any,\n                         mod_path = cls_path.split('.')\n                         cls = functools.reduce(getattr, mod_path, mod)\n                     else:\n-                        cls = obj.__globals__[cls_path]\n+                        cls = inspect.unwrap(obj).__globals__[cls_path]\n                 except Exception:\n                     cls_is_owner = False\n                 else:\n",
  "test_patch": "diff --git a/sphinx/testing/util.py b/sphinx/testing/util.py\n--- a/sphinx/testing/util.py\n+++ b/sphinx/testing/util.py\n@@ -7,6 +7,7 @@\n     :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.\n     :license: BSD, see LICENSE for details.\n \"\"\"\n+import functools\n import os\n import re\n import sys\n@@ -195,3 +196,13 @@ def find_files(root: str, suffix: bool = None) -> Generator[str, None, None]:\n \n def strip_escseq(text: str) -> str:\n     return re.sub('\\x1b.*?m', '', text)\n+\n+\n+def simple_decorator(f):\n+    \"\"\"\n+    A simple decorator that does nothing, for tests to use.\n+    \"\"\"\n+    @functools.wraps(f)\n+    def wrapper(*args, **kwargs):\n+        return f(*args, **kwargs)\n+    return wrapper\ndiff --git a/tests/test_ext_napoleon.py b/tests/test_ext_napoleon.py\n--- a/tests/test_ext_napoleon.py\n+++ b/tests/test_ext_napoleon.py\n@@ -14,6 +14,7 @@\n from unittest import TestCase, mock\n \n from sphinx.application import Sphinx\n+from sphinx.testing.util import simple_decorator\n from sphinx.ext.napoleon import _process_docstring, _skip_member, Config, setup\n \n \n@@ -50,6 +51,11 @@ def __special_doc__(self):\n     def __special_undoc__(self):\n         pass\n \n+    @simple_decorator\n+    def __decorated_func__(self):\n+        \"\"\"doc\"\"\"\n+        pass\n+\n \n class SampleError(Exception):\n     def _private_doc(self):\n@@ -130,8 +136,8 @@ def assertSkip(self, what, member, obj, expect_default_skip, config_name):\n             self.assertEqual(None, _skip_member(app, what, member, obj, skip,\n                                                 mock.Mock()))\n         else:\n-            self.assertFalse(_skip_member(app, what, member, obj, skip,\n-                                          mock.Mock()))\n+            self.assertIs(_skip_member(app, what, member, obj, skip,\n+                                       mock.Mock()), False)\n         setattr(app.config, config_name, False)\n         self.assertEqual(None, _skip_member(app, what, member, obj, skip,\n                                             mock.Mock()))\n@@ -170,6 +176,11 @@ def test_class_special_undoc(self):\n                         SampleClass.__special_undoc__, True,\n                         'napoleon_include_special_with_doc')\n \n+    def test_class_decorated_doc(self):\n+        self.assertSkip('class', '__decorated_func__',\n+                        SampleClass.__decorated_func__, False,\n+                        'napoleon_include_special_with_doc')\n+\n     def test_exception_private_doc(self):\n         self.assertSkip('exception', '_private_doc',\n                         SampleError._private_doc, False,\n",
  "problem_statement": "Decorated __init__ doesn't show up in docs\nSubject: Decorated __init__ won't be documented. I'm working on [tensorpack](github.com/ppwwyyxx/tensorpack)\r\n\r\n### Problem\r\n- I have `napoleon_include_init_with_doc = True`, so `__init__` will be documented. But if I decorate the `__init__` method, it will not show up in docs.\r\nI decorate it with `functools.wraps`, so the decorated object still has the same `__doc__`.\r\nI've found that the bug is due to this commit: https://github.com/sphinx-doc/sphinx/commit/bbfd0d058aecf85bd3b711a846c83e2fe00fa136\r\nI've printed the relevant variables in that function:\r\n```\r\nqualname='DistributedTrainerReplicated.__init__'\r\nname='__init__'\r\nobj.__doc__ has contents\r\n```\r\nAnd the root cause of the issue is in this line of code:\r\n```python\r\ncls = obj.__globals__[cls_path]\r\n```\r\nBecause `obj` now is not the method itself, but a decorated method, its `__globals__` does not contain the class anymore. This makes sphinx think it's not a method, i.e. `cls_is_owner=False`.\r\n\r\n\r\n### Environment info\r\n- OS: <Unix/Linux/Mac/Win/other with version>: ArchLinux\r\n- Python version: 3.6\r\n- Sphinx version:1.6.5\r\n\n",
  "hints_text": "I've found the same issue if you decorate the class as well.\r\n\r\nEnvironment info\r\n* OS: <Unix/Linux/Mac/Win/other with version>: Win\r\n* Python version: 3.6\r\n* Sphinx version: 1.7.5\nTwo years have passed.\r\nI can try to submit a PR, will it be considered?\nYes, it must be helpful!",
  "created_at": "2020-07-04T01:08:20Z",
  "version": "3.2",
  "FAIL_TO_PASS": "[\"tests/test_ext_napoleon.py::SkipMemberTest::test_class_decorated_doc\"]",
  "PASS_TO_PASS": "[\"tests/test_ext_napoleon.py::ProcessDocstringTest::test_modify_in_place\", \"tests/test_ext_napoleon.py::SetupTest::test_add_config_values\", \"tests/test_ext_napoleon.py::SetupTest::test_unknown_app_type\", \"tests/test_ext_napoleon.py::SkipMemberTest::test_class_private_doc\", \"tests/test_ext_napoleon.py::SkipMemberTest::test_class_private_undoc\", \"tests/test_ext_napoleon.py::SkipMemberTest::test_class_special_doc\", \"tests/test_ext_napoleon.py::SkipMemberTest::test_class_special_undoc\", \"tests/test_ext_napoleon.py::SkipMemberTest::test_exception_private_doc\", \"tests/test_ext_napoleon.py::SkipMemberTest::test_exception_private_undoc\", \"tests/test_ext_napoleon.py::SkipMemberTest::test_exception_special_doc\", \"tests/test_ext_napoleon.py::SkipMemberTest::test_exception_special_undoc\", \"tests/test_ext_napoleon.py::SkipMemberTest::test_module_private_doc\", \"tests/test_ext_napoleon.py::SkipMemberTest::test_module_private_undoc\", \"tests/test_ext_napoleon.py::SkipMemberTest::test_module_special_doc\", \"tests/test_ext_napoleon.py::SkipMemberTest::test_module_special_undoc\", \"tests/test_ext_napoleon.py::SkipMemberTest::test_namedtuple\"]",
  "environment_setup_commit": "f92fa6443fe6f457ab0c26d41eb229e825fda5e1",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.048119",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}