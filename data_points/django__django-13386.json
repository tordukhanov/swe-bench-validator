{
  "repo": "django/django",
  "instance_id": "django__django-13386",
  "base_commit": "e6b5108acc79dcff5bc90bc97500569c74a807bc",
  "patch": "diff --git a/django/http/response.py b/django/http/response.py\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -184,7 +184,7 @@ def set_cookie(self, key, value='', max_age=None, expires=None, path='/',\n         else:\n             self.cookies[key]['expires'] = ''\n         if max_age is not None:\n-            self.cookies[key]['max-age'] = max_age\n+            self.cookies[key]['max-age'] = int(max_age)\n             # IE requires expires, so set it if hasn't been already.\n             if not expires:\n                 self.cookies[key]['expires'] = http_date(time.time() + max_age)\n",
  "test_patch": "diff --git a/tests/responses/test_cookie.py b/tests/responses/test_cookie.py\n--- a/tests/responses/test_cookie.py\n+++ b/tests/responses/test_cookie.py\n@@ -65,6 +65,11 @@ def test_max_age_expiration(self):\n         self.assertEqual(max_age_cookie['max-age'], 10)\n         self.assertEqual(max_age_cookie['expires'], http_date(set_cookie_time + 10))\n \n+    def test_max_age_int(self):\n+        response = HttpResponse()\n+        response.set_cookie('max_age', max_age=10.6)\n+        self.assertEqual(response.cookies['max_age']['max-age'], 10)\n+\n     def test_httponly_cookie(self):\n         response = HttpResponse()\n         response.set_cookie('example', httponly=True)\n",
  "problem_statement": "Convert max_age to an int in set_cookie()\nDescription\n\t\nThe max-age attribute of cookie is supposed to be an integer\n​https://tools.ietf.org/html/rfc6265#page-20\nI think it would be helpful to convert the max_age parameter of set_cookie() to an integer for the user. The benefit is simply that there are some cookie parsers that don't handle decimals gracefully. It's pretty easy to pass in a float without understanding the consequences. I spent a good chunk of time today trying to track down the problem.\nThings to consider:\nDo we only convert floats where the decimal part is 0? Or do we round or truncate?\nIf we can't successfully convert to an int, do we throw an exception, or just pass in the original value?\n",
  "hints_text": "Agreed, we should also mention this in ​docs, e.g.: max_age should be an integer number of seconds, ... Replying to Matt Johnson: Do we only convert floats where the decimal part is 0? Or do we round or truncate? If we can't successfully convert to an int, do we throw an exception, or just pass in the original value? I would simply call int(max_age) without catching exceptions.\n+1 to calling int()",
  "created_at": "2020-09-04T12:06:05Z",
  "version": "3.2",
  "FAIL_TO_PASS": "[\"test_max_age_int (responses.test_cookie.SetCookieTests)\"]",
  "PASS_TO_PASS": "[\"test_default (responses.test_cookie.DeleteCookieTests)\", \"test_delete_cookie_samesite (responses.test_cookie.DeleteCookieTests)\", \"test_delete_cookie_secure_prefix (responses.test_cookie.DeleteCookieTests)\", \"test_delete_cookie_secure_samesite_none (responses.test_cookie.DeleteCookieTests)\", \"set_cookie() accepts an aware datetime as expiration time.\", \"Setting a cookie after deletion clears the expiry date.\", \"Cookie will expire when a distant expiration time is provided.\", \"test_httponly_cookie (responses.test_cookie.SetCookieTests)\", \"test_invalid_samesite (responses.test_cookie.SetCookieTests)\", \"Cookie will expire if max_age is provided.\", \"Cookie will expire when a near expiration time is provided.\", \"test_samesite (responses.test_cookie.SetCookieTests)\", \"HttpResponse.set_cookie() works with Unicode data.\"]",
  "environment_setup_commit": "65dfb06a1ab56c238cc80f5e1c31f61210c4577d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.656548",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}