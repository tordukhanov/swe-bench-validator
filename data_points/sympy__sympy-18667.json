{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-18667",
  "base_commit": "cd86e3c3335a7f43379185c239619c576522ef4a",
  "patch": "diff --git a/sympy/combinatorics/schur_number.py b/sympy/combinatorics/schur_number.py\nnew file mode 100644\n--- /dev/null\n+++ b/sympy/combinatorics/schur_number.py\n@@ -0,0 +1,152 @@\n+\"\"\"\n+The Schur number S(k) is the largest integer n for which the interval [1,n]\n+can be partitioned into k sum-free sets.(http://mathworld.wolfram.com/SchurNumber.html)\n+\"\"\"\n+import math\n+from sympy.core import S\n+from sympy.core.basic import Basic\n+from sympy.core.function import Function\n+from sympy.core.numbers import Integer\n+\n+\n+class SchurNumber(Function):\n+    \"\"\"\n+    This function creates a SchurNumber object\n+    which is evaluated for k <= 4 otherwise only\n+    the lower bound information can be retrieved.\n+\n+    Examples\n+    ========\n+\n+    >>> from sympy.combinatorics.schur_number import SchurNumber\n+\n+    Since S(3) = 13, hence the output is a number\n+    >>> SchurNumber(3)\n+    13\n+\n+    We don't know the schur number for values greater than 4, hence\n+    only the object is returned\n+    >>> SchurNumber(6)\n+    SchurNumber(6)\n+\n+    Now, the lower bound information can be retrieved using lower_bound()\n+    method\n+    >>> SchurNumber(6).lower_bound()\n+    364\n+\n+    \"\"\"\n+\n+    @classmethod\n+    def eval(cls, k):\n+        if k.is_Number:\n+            if k is S.Infinity:\n+                return S.Infinity\n+            if k.is_zero:\n+                return 0\n+            if not k.is_integer or k.is_negative:\n+                raise ValueError(\"k should be a positive integer\")\n+            first_known_schur_numbers = {1: 1, 2: 4, 3: 13, 4: 44}\n+            if k <= 4:\n+                return Integer(first_known_schur_numbers[k])\n+\n+    def lower_bound(self):\n+        f_ = self.args[0]\n+        return (3**f_ - 1)/2\n+\n+\n+def _schur_subsets_number(n):\n+\n+    if n is S.Infinity:\n+        raise ValueError(\"Input must be finite\")\n+    if n <= 0:\n+        raise ValueError(\"n must be a non-zero positive integer.\")\n+    elif n <= 3:\n+        min_k = 1\n+    else:\n+        min_k = math.ceil(math.log(2*n + 1, 3))\n+\n+    return Integer(min_k)\n+\n+\n+def schur_partition(n):\n+    \"\"\"\n+\n+    This function returns the partition in the minimum number of sum-free subsets\n+    according to the lower bound given by the Schur Number.\n+\n+    Parameters\n+    ==========\n+\n+    n: a number\n+        n is the upper limit of the range [1, n] for which we need to find and\n+        return the minimum number of free subsets according to the lower bound\n+        of schur number\n+\n+    Returns\n+    =======\n+\n+    List of lists\n+        List of the minimum number of sum-free subsets\n+\n+    Notes\n+    =====\n+\n+    It is possible for some n to make the partition into less\n+    subsets since the only known Schur numbers are:\n+    S(1) = 1, S(2) = 4 , S(3) = 13, S(4) = 44.\n+    e.g for n = 44 the lower bound from the function above is 5 subsets but it has been proven\n+    that can be done with 4 subsets.\n+\n+    Examples\n+    ========\n+\n+    For n = 1, 2, 3 the answer is the set itself\n+\n+    >>> from sympy.combinatorics.schur_number import schur_partition\n+    >>> schur_partition(2)\n+    [[1, 2]]\n+\n+    For n > 3, the answer is the minimum number of sum-free subsets:\n+\n+    >>> schur_partition(5)\n+    [[3, 2], [5], [1, 4]]\n+\n+    >>> schur_partition(8)\n+    [[3, 2], [6, 5, 8], [1, 4, 7]]\n+    \"\"\"\n+\n+    if isinstance(n, Basic) and not n.is_Number:\n+        raise ValueError(\"Input value must be a number\")\n+\n+    number_of_subsets = _schur_subsets_number(n)\n+    if n == 1:\n+        sum_free_subsets = [[1]]\n+    elif n == 2:\n+        sum_free_subsets = [[1, 2]]\n+    elif n == 3:\n+        sum_free_subsets = [[1, 2, 3]]\n+    else:\n+        sum_free_subsets = [[1, 4], [2, 3]]\n+\n+    while len(sum_free_subsets) < number_of_subsets:\n+        sum_free_subsets = _generate_next_list(sum_free_subsets, n)\n+        missed_elements = [3*k + 1 for k in range(len(sum_free_subsets), (n-1)//3 + 1)]\n+        sum_free_subsets[-1] += missed_elements\n+\n+    return sum_free_subsets\n+\n+\n+def _generate_next_list(current_list, n):\n+    new_list = []\n+\n+    for item in current_list:\n+        temp_1 = [number*3 for number in item if number*3 <= n]\n+        temp_2 = [number*3 - 1 for number in item if number*3 - 1 <= n]\n+        new_item = temp_1 + temp_2\n+        new_list.append(new_item)\n+\n+    last_list = [3*k + 1 for k in range(0, len(current_list)+1) if 3*k + 1 <= n]\n+    new_list.append(last_list)\n+    current_list = new_list\n+\n+    return current_list\n",
  "test_patch": "diff --git a/sympy/combinatorics/tests/test_schur_number.py b/sympy/combinatorics/tests/test_schur_number.py\nnew file mode 100644\n--- /dev/null\n+++ b/sympy/combinatorics/tests/test_schur_number.py\n@@ -0,0 +1,55 @@\n+from sympy.core import S, Rational\n+from sympy.combinatorics.schur_number import schur_partition, SchurNumber\n+from sympy.testing.randtest import _randint\n+from sympy.testing.pytest import raises\n+from sympy.core.symbol import symbols\n+\n+\n+def _sum_free_test(subset):\n+    \"\"\"\n+    Checks if subset is sum-free(There are no x,y,z in the subset such that\n+    x + y = z)\n+    \"\"\"\n+    for i in subset:\n+        for j in subset:\n+            assert (i + j in subset) is False\n+\n+\n+def test_schur_partition():\n+    raises(ValueError, lambda: schur_partition(S.Infinity))\n+    raises(ValueError, lambda: schur_partition(-1))\n+    raises(ValueError, lambda: schur_partition(0))\n+    assert schur_partition(2) == [[1, 2]]\n+\n+    random_number_generator = _randint(1000)\n+    for _ in range(5):\n+        n = random_number_generator(1, 1000)\n+        result = schur_partition(n)\n+        t = 0\n+        numbers = []\n+        for item in result:\n+            _sum_free_test(item)\n+            \"\"\"\n+            Checks if the occurance of all numbers  is exactly one\n+            \"\"\"\n+            t += len(item)\n+            for l in item:\n+                assert (l in numbers) is False\n+                numbers.append(l)\n+        assert n == t\n+\n+    x = symbols(\"x\")\n+    raises(ValueError, lambda: schur_partition(x))\n+\n+def test_schur_number():\n+    first_known_schur_numbers = {1: 1, 2: 4, 3: 13, 4: 44}\n+    for k in first_known_schur_numbers:\n+        assert SchurNumber(k) == first_known_schur_numbers[k]\n+\n+    assert SchurNumber(S.Infinity) == S.Infinity\n+    assert SchurNumber(0) == 0\n+    raises(ValueError, lambda: SchurNumber(0.5))\n+\n+    n = symbols(\"n\")\n+    assert SchurNumber(n).lower_bound() == 3**n/2 - Rational(1, 2)\n+    assert SchurNumber(6).lower_bound() == 364\ndiff --git a/sympy/core/tests/test_args.py b/sympy/core/tests/test_args.py\n--- a/sympy/core/tests/test_args.py\n+++ b/sympy/core/tests/test_args.py\n@@ -4921,3 +4921,7 @@ def test_sympy__integrals__rubi__utility_function__PolyGamma():\n def test_sympy__integrals__rubi__utility_function__ProductLog():\n     from sympy.integrals.rubi.utility_function import ProductLog\n     assert _test_args(ProductLog(1))\n+\n+def test_sympy__combinatorics__schur_number__SchurNumber():\n+    from sympy.combinatorics.schur_number import SchurNumber\n+    assert _test_args(SchurNumber(1))\n",
  "problem_statement": "Added new feature Schur_Number\n<!-- I have added a new feature in the combinatorics module the Schur_number -->\r\n\r\n\r\nThe Schur number S(k) is the largest integer n for which the interval  [1,n] can be partitioned into k sum-free sets.  http://mathworld.wolfram.com/SchurNumber.html\r\n\r\nI have also made the partition which can be proven by induction and I have added test cases  \r\n\r\n\r\n\n",
  "hints_text": "",
  "created_at": "2020-02-16T11:52:24Z",
  "version": "1.6",
  "FAIL_TO_PASS": "[\"test_schur_partition\"]",
  "PASS_TO_PASS": "[\"test_all_classes_are_tested\", \"test_sympy__assumptions__assume__AppliedPredicate\", \"test_sympy__assumptions__assume__Predicate\", \"test_sympy__assumptions__sathandlers__UnevaluatedOnFree\", \"test_sympy__assumptions__sathandlers__AllArgs\", \"test_sympy__assumptions__sathandlers__AnyArgs\", \"test_sympy__assumptions__sathandlers__ExactlyOneArg\", \"test_sympy__assumptions__sathandlers__CheckOldAssump\", \"test_sympy__assumptions__sathandlers__CheckIsPrime\", \"test_sympy__codegen__ast__AddAugmentedAssignment\", \"test_sympy__codegen__ast__SubAugmentedAssignment\", \"test_sympy__codegen__ast__MulAugmentedAssignment\", \"test_sympy__codegen__ast__DivAugmentedAssignment\", \"test_sympy__codegen__ast__ModAugmentedAssignment\", \"test_sympy__codegen__ast__CodeBlock\", \"test_sympy__codegen__ast__For\", \"test_sympy__codegen__ast__Token\", \"test_sympy__codegen__ast__ContinueToken\", \"test_sympy__codegen__ast__BreakToken\", \"test_sympy__codegen__ast__NoneToken\", \"test_sympy__codegen__ast__String\", \"test_sympy__codegen__ast__QuotedString\", \"test_sympy__codegen__ast__Comment\", \"test_sympy__codegen__ast__Node\", \"test_sympy__codegen__ast__Type\", \"test_sympy__codegen__ast__IntBaseType\", \"test_sympy__codegen__ast___SizedIntType\", \"test_sympy__codegen__ast__SignedIntType\", \"test_sympy__codegen__ast__UnsignedIntType\", \"test_sympy__codegen__ast__FloatBaseType\", \"test_sympy__codegen__ast__FloatType\", \"test_sympy__codegen__ast__ComplexBaseType\", \"test_sympy__codegen__ast__ComplexType\", \"test_sympy__codegen__ast__Attribute\", \"test_sympy__codegen__ast__Variable\", \"test_sympy__codegen__ast__Pointer\", \"test_sympy__codegen__ast__Declaration\", \"test_sympy__codegen__ast__While\", \"test_sympy__codegen__ast__Scope\", \"test_sympy__codegen__ast__Stream\", \"test_sympy__codegen__ast__Print\", \"test_sympy__codegen__ast__FunctionPrototype\", \"test_sympy__codegen__ast__FunctionDefinition\", \"test_sympy__codegen__ast__Return\", \"test_sympy__codegen__ast__FunctionCall\", \"test_sympy__codegen__ast__Element\", \"test_sympy__codegen__cnodes__CommaOperator\", \"test_sympy__codegen__cnodes__goto\", \"test_sympy__codegen__cnodes__Label\", \"test_sympy__codegen__cnodes__PreDecrement\", \"test_sympy__codegen__cnodes__PostDecrement\", \"test_sympy__codegen__cnodes__PreIncrement\", \"test_sympy__codegen__cnodes__PostIncrement\", \"test_sympy__codegen__cnodes__struct\", \"test_sympy__codegen__cnodes__union\", \"test_sympy__codegen__cxxnodes__using\", \"test_sympy__codegen__fnodes__Program\", \"test_sympy__codegen__fnodes__Module\", \"test_sympy__codegen__fnodes__Subroutine\", \"test_sympy__codegen__fnodes__GoTo\", \"test_sympy__codegen__fnodes__FortranReturn\", \"test_sympy__codegen__fnodes__Extent\", \"test_sympy__codegen__fnodes__use_rename\", \"test_sympy__codegen__fnodes__use\", \"test_sympy__codegen__fnodes__SubroutineCall\", \"test_sympy__codegen__fnodes__Do\", \"test_sympy__codegen__fnodes__ImpliedDoLoop\", \"test_sympy__codegen__fnodes__ArrayConstructor\", \"test_sympy__codegen__fnodes__sum_\", \"test_sympy__codegen__fnodes__product_\", \"test_sympy__combinatorics__subsets__Subset\", \"test_sympy__combinatorics__permutations__Permutation\", \"test_sympy__combinatorics__permutations__AppliedPermutation\", \"test_sympy__combinatorics__perm_groups__PermutationGroup\", \"test_sympy__combinatorics__polyhedron__Polyhedron\", \"test_sympy__combinatorics__partitions__Partition\", \"test_sympy__concrete__products__Product\", \"test_sympy__concrete__summations__Sum\", \"test_sympy__core__add__Add\", \"test_sympy__core__basic__Atom\", \"test_sympy__core__basic__Basic\", \"test_sympy__core__containers__Dict\", \"test_sympy__core__containers__Tuple\", \"test_sympy__core__expr__AtomicExpr\", \"test_sympy__core__expr__Expr\", \"test_sympy__core__expr__UnevaluatedExpr\", \"test_sympy__core__function__Application\", \"test_sympy__core__function__AppliedUndef\", \"test_sympy__core__function__Derivative\", \"test_sympy__core__function__Lambda\", \"test_sympy__core__function__Subs\", \"test_sympy__core__function__WildFunction\", \"test_sympy__core__mod__Mod\", \"test_sympy__core__mul__Mul\", \"test_sympy__core__numbers__Catalan\", \"test_sympy__core__numbers__ComplexInfinity\", \"test_sympy__core__numbers__EulerGamma\", \"test_sympy__core__numbers__Exp1\", \"test_sympy__core__numbers__Float\", \"test_sympy__core__numbers__GoldenRatio\", \"test_sympy__core__numbers__TribonacciConstant\", \"test_sympy__core__numbers__Half\", \"test_sympy__core__numbers__ImaginaryUnit\", \"test_sympy__core__numbers__Infinity\", \"test_sympy__core__numbers__Integer\", \"test_sympy__core__numbers__NaN\", \"test_sympy__core__numbers__NegativeInfinity\", \"test_sympy__core__numbers__NegativeOne\", \"test_sympy__core__numbers__Number\", \"test_sympy__core__numbers__NumberSymbol\", \"test_sympy__core__numbers__One\", \"test_sympy__core__numbers__Pi\", \"test_sympy__core__numbers__Rational\", \"test_sympy__core__numbers__Zero\", \"test_sympy__core__power__Pow\", \"test_sympy__algebras__quaternion__Quaternion\", \"test_sympy__core__relational__Equality\", \"test_sympy__core__relational__GreaterThan\", \"test_sympy__core__relational__LessThan\", \"test_sympy__core__relational__StrictGreaterThan\", \"test_sympy__core__relational__StrictLessThan\", \"test_sympy__core__relational__Unequality\", \"test_sympy__sandbox__indexed_integrals__IndexedIntegral\", \"test_sympy__calculus__util__AccumulationBounds\", \"test_sympy__sets__ordinals__OmegaPower\", \"test_sympy__sets__ordinals__Ordinal\", \"test_sympy__sets__ordinals__OrdinalOmega\", \"test_sympy__sets__ordinals__OrdinalZero\", \"test_sympy__sets__powerset__PowerSet\", \"test_sympy__sets__sets__EmptySet\", \"test_sympy__sets__sets__UniversalSet\", \"test_sympy__sets__sets__FiniteSet\", \"test_sympy__sets__sets__Interval\", \"test_sympy__sets__sets__ProductSet\", \"test_sympy__sets__sets__Intersection\", \"test_sympy__sets__sets__Union\", \"test_sympy__sets__sets__Complement\", \"test_sympy__sets__sets__SymmetricDifference\", \"test_sympy__core__trace__Tr\", \"test_sympy__sets__setexpr__SetExpr\", \"test_sympy__sets__fancysets__Rationals\", \"test_sympy__sets__fancysets__Naturals\", \"test_sympy__sets__fancysets__Naturals0\", \"test_sympy__sets__fancysets__Integers\", \"test_sympy__sets__fancysets__Reals\", \"test_sympy__sets__fancysets__Complexes\", \"test_sympy__sets__fancysets__ComplexRegion\", \"test_sympy__sets__fancysets__CartesianComplexRegion\", \"test_sympy__sets__fancysets__PolarComplexRegion\", \"test_sympy__sets__fancysets__ImageSet\", \"test_sympy__sets__fancysets__Range\", \"test_sympy__sets__conditionset__ConditionSet\", \"test_sympy__sets__contains__Contains\", \"test_sympy__stats__crv__ContinuousDomain\", \"test_sympy__stats__crv__SingleContinuousDomain\", \"test_sympy__stats__crv__ProductContinuousDomain\", \"test_sympy__stats__crv__ConditionalContinuousDomain\", \"test_sympy__stats__crv__ContinuousPSpace\", \"test_sympy__stats__crv__SingleContinuousPSpace\", \"test_sympy__stats__drv__SingleDiscreteDomain\", \"test_sympy__stats__drv__ProductDiscreteDomain\", \"test_sympy__stats__drv__SingleDiscretePSpace\", \"test_sympy__stats__drv__DiscretePSpace\", \"test_sympy__stats__drv__ConditionalDiscreteDomain\", \"test_sympy__stats__joint_rv__JointPSpace\", \"test_sympy__stats__joint_rv__JointRandomSymbol\", \"test_sympy__stats__joint_rv__JointDistributionHandmade\", \"test_sympy__stats__joint_rv__MarginalDistribution\", \"test_sympy__stats__joint_rv__CompoundDistribution\", \"test_sympy__stats__rv__RandomDomain\", \"test_sympy__stats__rv__SingleDomain\", \"test_sympy__stats__rv__ConditionalDomain\", \"test_sympy__stats__rv__PSpace\", \"test_sympy__stats__rv__RandomSymbol\", \"test_sympy__stats__rv__IndependentProductPSpace\", \"test_sympy__stats__rv__ProductDomain\", \"test_sympy__stats__symbolic_probability__Probability\", \"test_sympy__stats__symbolic_probability__Expectation\", \"test_sympy__stats__symbolic_probability__Covariance\", \"test_sympy__stats__symbolic_probability__Variance\", \"test_sympy__stats__frv_types__DiscreteUniformDistribution\", \"test_sympy__stats__frv_types__DieDistribution\", \"test_sympy__stats__frv_types__BernoulliDistribution\", \"test_sympy__stats__frv_types__BinomialDistribution\", \"test_sympy__stats__frv_types__BetaBinomialDistribution\", \"test_sympy__stats__frv_types__HypergeometricDistribution\", \"test_sympy__stats__frv_types__RademacherDistribution\", \"test_sympy__stats__frv__FiniteDomain\", \"test_sympy__stats__frv__SingleFiniteDomain\", \"test_sympy__stats__frv__ProductFiniteDomain\", \"test_sympy__stats__frv__ConditionalFiniteDomain\", \"test_sympy__stats__frv__FinitePSpace\", \"test_sympy__stats__frv__SingleFinitePSpace\", \"test_sympy__stats__frv__ProductFinitePSpace\", \"test_sympy__stats__frv_types__FiniteDistributionHandmade\", \"test_sympy__stats__crv__ContinuousDistributionHandmade\", \"test_sympy__stats__drv__DiscreteDistributionHandmade\", \"test_sympy__stats__rv__Density\", \"test_sympy__stats__crv_types__ArcsinDistribution\", \"test_sympy__stats__crv_types__BeniniDistribution\", \"test_sympy__stats__crv_types__BetaDistribution\", \"test_sympy__stats__crv_types__BetaNoncentralDistribution\", \"test_sympy__stats__crv_types__BetaPrimeDistribution\", \"test_sympy__stats__crv_types__CauchyDistribution\", \"test_sympy__stats__crv_types__ChiDistribution\", \"test_sympy__stats__crv_types__ChiNoncentralDistribution\", \"test_sympy__stats__crv_types__ChiSquaredDistribution\", \"test_sympy__stats__crv_types__DagumDistribution\", \"test_sympy__stats__crv_types__ExGaussianDistribution\", \"test_sympy__stats__crv_types__ExponentialDistribution\", \"test_sympy__stats__crv_types__ExponentialPowerDistribution\", \"test_sympy__stats__crv_types__FDistributionDistribution\", \"test_sympy__stats__crv_types__FisherZDistribution\", \"test_sympy__stats__crv_types__FrechetDistribution\", \"test_sympy__stats__crv_types__GammaInverseDistribution\", \"test_sympy__stats__crv_types__GammaDistribution\", \"test_sympy__stats__crv_types__GumbelDistribution\", \"test_sympy__stats__crv_types__GompertzDistribution\", \"test_sympy__stats__crv_types__KumaraswamyDistribution\", \"test_sympy__stats__crv_types__LaplaceDistribution\", \"test_sympy__stats__crv_types__LevyDistribution\", \"test_sympy__stats__crv_types__LogisticDistribution\", \"test_sympy__stats__crv_types__LogLogisticDistribution\", \"test_sympy__stats__crv_types__LogNormalDistribution\", \"test_sympy__stats__crv_types__MaxwellDistribution\", \"test_sympy__stats__crv_types__MoyalDistribution\", \"test_sympy__stats__crv_types__NakagamiDistribution\", \"test_sympy__stats__crv_types__NormalDistribution\", \"test_sympy__stats__crv_types__GaussianInverseDistribution\", \"test_sympy__stats__crv_types__ParetoDistribution\", \"test_sympy__stats__crv_types__PowerFunctionDistribution\", \"test_sympy__stats__crv_types__QuadraticUDistribution\", \"test_sympy__stats__crv_types__RaisedCosineDistribution\", \"test_sympy__stats__crv_types__RayleighDistribution\", \"test_sympy__stats__crv_types__ReciprocalDistribution\", \"test_sympy__stats__crv_types__ShiftedGompertzDistribution\", \"test_sympy__stats__crv_types__StudentTDistribution\", \"test_sympy__stats__crv_types__TrapezoidalDistribution\", \"test_sympy__stats__crv_types__TriangularDistribution\", \"test_sympy__stats__crv_types__UniformDistribution\", \"test_sympy__stats__crv_types__UniformSumDistribution\", \"test_sympy__stats__crv_types__VonMisesDistribution\", \"test_sympy__stats__crv_types__WeibullDistribution\", \"test_sympy__stats__crv_types__WignerSemicircleDistribution\", \"test_sympy__stats__drv_types__GeometricDistribution\", \"test_sympy__stats__drv_types__HermiteDistribution\", \"test_sympy__stats__drv_types__LogarithmicDistribution\", \"test_sympy__stats__drv_types__NegativeBinomialDistribution\", \"test_sympy__stats__drv_types__PoissonDistribution\", \"test_sympy__stats__drv_types__SkellamDistribution\", \"test_sympy__stats__drv_types__YuleSimonDistribution\", \"test_sympy__stats__drv_types__ZetaDistribution\", \"test_sympy__stats__joint_rv__JointDistribution\", \"test_sympy__stats__joint_rv_types__MultivariateNormalDistribution\", \"test_sympy__stats__joint_rv_types__MultivariateLaplaceDistribution\", \"test_sympy__stats__joint_rv_types__MultivariateTDistribution\", \"test_sympy__stats__joint_rv_types__NormalGammaDistribution\", \"test_sympy__stats__joint_rv_types__GeneralizedMultivariateLogGammaDistribution\", \"test_sympy__stats__joint_rv_types__MultivariateBetaDistribution\", \"test_sympy__stats__joint_rv_types__MultivariateEwensDistribution\", \"test_sympy__stats__joint_rv_types__MultinomialDistribution\", \"test_sympy__stats__joint_rv_types__NegativeMultinomialDistribution\", \"test_sympy__stats__rv__RandomIndexedSymbol\", \"test_sympy__stats__rv__RandomMatrixSymbol\", \"test_sympy__stats__stochastic_process__StochasticPSpace\", \"test_sympy__stats__stochastic_process_types__StochasticProcess\", \"test_sympy__stats__stochastic_process_types__MarkovProcess\", \"test_sympy__stats__stochastic_process_types__DiscreteTimeStochasticProcess\", \"test_sympy__stats__stochastic_process_types__ContinuousTimeStochasticProcess\", \"test_sympy__stats__stochastic_process_types__TransitionMatrixOf\", \"test_sympy__stats__stochastic_process_types__GeneratorMatrixOf\", \"test_sympy__stats__stochastic_process_types__StochasticStateSpaceOf\", \"test_sympy__stats__stochastic_process_types__DiscreteMarkovChain\", \"test_sympy__stats__stochastic_process_types__ContinuousMarkovChain\", \"test_sympy__stats__stochastic_process_types__BernoulliProcess\", \"test_sympy__stats__random_matrix__RandomMatrixPSpace\", \"test_sympy__stats__random_matrix_models__RandomMatrixEnsemble\", \"test_sympy__stats__random_matrix_models__GaussianEnsemble\", \"test_sympy__stats__random_matrix_models__GaussianUnitaryEnsemble\", \"test_sympy__stats__random_matrix_models__GaussianOrthogonalEnsemble\", \"test_sympy__stats__random_matrix_models__GaussianSymplecticEnsemble\", \"test_sympy__stats__random_matrix_models__CircularEnsemble\", \"test_sympy__stats__random_matrix_models__CircularUnitaryEnsemble\", \"test_sympy__stats__random_matrix_models__CircularOrthogonalEnsemble\", \"test_sympy__stats__random_matrix_models__CircularSymplecticEnsemble\", \"test_sympy__core__symbol__Dummy\", \"test_sympy__core__symbol__Symbol\", \"test_sympy__core__symbol__Wild\", \"test_sympy__functions__combinatorial__factorials__FallingFactorial\", \"test_sympy__functions__combinatorial__factorials__MultiFactorial\", \"test_sympy__functions__combinatorial__factorials__RisingFactorial\", \"test_sympy__functions__combinatorial__factorials__binomial\", \"test_sympy__functions__combinatorial__factorials__subfactorial\", \"test_sympy__functions__combinatorial__factorials__factorial\", \"test_sympy__functions__combinatorial__factorials__factorial2\", \"test_sympy__functions__combinatorial__numbers__bell\", \"test_sympy__functions__combinatorial__numbers__bernoulli\", \"test_sympy__functions__combinatorial__numbers__catalan\", \"test_sympy__functions__combinatorial__numbers__genocchi\", \"test_sympy__functions__combinatorial__numbers__euler\", \"test_sympy__functions__combinatorial__numbers__carmichael\", \"test_sympy__functions__combinatorial__numbers__fibonacci\", \"test_sympy__functions__combinatorial__numbers__tribonacci\", \"test_sympy__functions__combinatorial__numbers__harmonic\", \"test_sympy__functions__combinatorial__numbers__lucas\", \"test_sympy__functions__combinatorial__numbers__partition\", \"test_sympy__functions__elementary__complexes__Abs\", \"test_sympy__functions__elementary__complexes__adjoint\", \"test_sympy__functions__elementary__complexes__arg\", \"test_sympy__functions__elementary__complexes__conjugate\", \"test_sympy__functions__elementary__complexes__im\", \"test_sympy__functions__elementary__complexes__re\", \"test_sympy__functions__elementary__complexes__sign\", \"test_sympy__functions__elementary__complexes__polar_lift\", \"test_sympy__functions__elementary__complexes__periodic_argument\", \"test_sympy__functions__elementary__complexes__principal_branch\", \"test_sympy__functions__elementary__complexes__transpose\", \"test_sympy__functions__elementary__exponential__LambertW\", \"test_sympy__functions__elementary__exponential__exp\", \"test_sympy__functions__elementary__exponential__exp_polar\", \"test_sympy__functions__elementary__exponential__log\", \"test_sympy__functions__elementary__hyperbolic__acosh\", \"test_sympy__functions__elementary__hyperbolic__acoth\", \"test_sympy__functions__elementary__hyperbolic__asinh\", \"test_sympy__functions__elementary__hyperbolic__atanh\", \"test_sympy__functions__elementary__hyperbolic__asech\", \"test_sympy__functions__elementary__hyperbolic__acsch\", \"test_sympy__functions__elementary__hyperbolic__cosh\", \"test_sympy__functions__elementary__hyperbolic__coth\", \"test_sympy__functions__elementary__hyperbolic__csch\", \"test_sympy__functions__elementary__hyperbolic__sech\", \"test_sympy__functions__elementary__hyperbolic__sinh\", \"test_sympy__functions__elementary__hyperbolic__tanh\", \"test_sympy__functions__elementary__integers__ceiling\", \"test_sympy__functions__elementary__integers__floor\", \"test_sympy__functions__elementary__integers__frac\", \"test_sympy__functions__elementary__miscellaneous__IdentityFunction\", \"test_sympy__functions__elementary__miscellaneous__Max\", \"test_sympy__functions__elementary__miscellaneous__Min\", \"test_sympy__functions__elementary__piecewise__ExprCondPair\", \"test_sympy__functions__elementary__piecewise__Piecewise\", \"test_sympy__functions__elementary__trigonometric__acos\", \"test_sympy__functions__elementary__trigonometric__acot\", \"test_sympy__functions__elementary__trigonometric__asin\", \"test_sympy__functions__elementary__trigonometric__asec\", \"test_sympy__functions__elementary__trigonometric__acsc\", \"test_sympy__functions__elementary__trigonometric__atan\", \"test_sympy__functions__elementary__trigonometric__atan2\", \"test_sympy__functions__elementary__trigonometric__cos\", \"test_sympy__functions__elementary__trigonometric__csc\", \"test_sympy__functions__elementary__trigonometric__cot\", \"test_sympy__functions__elementary__trigonometric__sin\", \"test_sympy__functions__elementary__trigonometric__sinc\", \"test_sympy__functions__elementary__trigonometric__sec\", \"test_sympy__functions__elementary__trigonometric__tan\", \"test_sympy__functions__special__bessel__besseli\", \"test_sympy__functions__special__bessel__besselj\", \"test_sympy__functions__special__bessel__besselk\", \"test_sympy__functions__special__bessel__bessely\", \"test_sympy__functions__special__bessel__hankel1\", \"test_sympy__functions__special__bessel__hankel2\", \"test_sympy__functions__special__bessel__jn\", \"test_sympy__functions__special__bessel__yn\", \"test_sympy__functions__special__bessel__hn1\", \"test_sympy__functions__special__bessel__hn2\", \"test_sympy__functions__special__bessel__AiryBase\", \"test_sympy__functions__special__bessel__airyai\", \"test_sympy__functions__special__bessel__airybi\", \"test_sympy__functions__special__bessel__airyaiprime\", \"test_sympy__functions__special__bessel__airybiprime\", \"test_sympy__functions__special__bessel__marcumq\", \"test_sympy__functions__special__elliptic_integrals__elliptic_k\", \"test_sympy__functions__special__elliptic_integrals__elliptic_f\", \"test_sympy__functions__special__elliptic_integrals__elliptic_e\", \"test_sympy__functions__special__elliptic_integrals__elliptic_pi\", \"test_sympy__functions__special__delta_functions__DiracDelta\", \"test_sympy__functions__special__singularity_functions__SingularityFunction\", \"test_sympy__functions__special__delta_functions__Heaviside\", \"test_sympy__functions__special__error_functions__erf\", \"test_sympy__functions__special__error_functions__erfc\", \"test_sympy__functions__special__error_functions__erfi\", \"test_sympy__functions__special__error_functions__erf2\", \"test_sympy__functions__special__error_functions__erfinv\", \"test_sympy__functions__special__error_functions__erfcinv\", \"test_sympy__functions__special__error_functions__erf2inv\", \"test_sympy__functions__special__error_functions__fresnels\", \"test_sympy__functions__special__error_functions__fresnelc\", \"test_sympy__functions__special__error_functions__erfs\", \"test_sympy__functions__special__error_functions__Ei\", \"test_sympy__functions__special__error_functions__li\", \"test_sympy__functions__special__error_functions__Li\", \"test_sympy__functions__special__error_functions__Si\", \"test_sympy__functions__special__error_functions__Ci\", \"test_sympy__functions__special__error_functions__Shi\", \"test_sympy__functions__special__error_functions__Chi\", \"test_sympy__functions__special__error_functions__expint\", \"test_sympy__functions__special__gamma_functions__gamma\", \"test_sympy__functions__special__gamma_functions__loggamma\", \"test_sympy__functions__special__gamma_functions__lowergamma\", \"test_sympy__functions__special__gamma_functions__polygamma\", \"test_sympy__functions__special__gamma_functions__digamma\", \"test_sympy__functions__special__gamma_functions__trigamma\", \"test_sympy__functions__special__gamma_functions__uppergamma\", \"test_sympy__functions__special__gamma_functions__multigamma\", \"test_sympy__functions__special__beta_functions__beta\", \"test_sympy__functions__special__mathieu_functions__MathieuBase\", \"test_sympy__functions__special__mathieu_functions__mathieus\", \"test_sympy__functions__special__mathieu_functions__mathieuc\", \"test_sympy__functions__special__mathieu_functions__mathieusprime\", \"test_sympy__functions__special__mathieu_functions__mathieucprime\", \"test_sympy__functions__special__hyper__hyper\", \"test_sympy__functions__special__hyper__meijerg\", \"test_sympy__functions__special__hyper__HyperRep_power1\", \"test_sympy__functions__special__hyper__HyperRep_power2\", \"test_sympy__functions__special__hyper__HyperRep_log1\", \"test_sympy__functions__special__hyper__HyperRep_atanh\", \"test_sympy__functions__special__hyper__HyperRep_asin1\", \"test_sympy__functions__special__hyper__HyperRep_asin2\", \"test_sympy__functions__special__hyper__HyperRep_sqrts1\", \"test_sympy__functions__special__hyper__HyperRep_sqrts2\", \"test_sympy__functions__special__hyper__HyperRep_log2\", \"test_sympy__functions__special__hyper__HyperRep_cosasin\", \"test_sympy__functions__special__hyper__HyperRep_sinasin\", \"test_sympy__functions__special__hyper__appellf1\", \"test_sympy__functions__special__polynomials__jacobi\", \"test_sympy__functions__special__polynomials__gegenbauer\", \"test_sympy__functions__special__polynomials__chebyshevt\", \"test_sympy__functions__special__polynomials__chebyshevt_root\", \"test_sympy__functions__special__polynomials__chebyshevu\", \"test_sympy__functions__special__polynomials__chebyshevu_root\", \"test_sympy__functions__special__polynomials__hermite\", \"test_sympy__functions__special__polynomials__legendre\", \"test_sympy__functions__special__polynomials__assoc_legendre\", \"test_sympy__functions__special__polynomials__laguerre\", \"test_sympy__functions__special__polynomials__assoc_laguerre\", \"test_sympy__functions__special__spherical_harmonics__Ynm\", \"test_sympy__functions__special__spherical_harmonics__Znm\", \"test_sympy__functions__special__tensor_functions__LeviCivita\", \"test_sympy__functions__special__tensor_functions__KroneckerDelta\", \"test_sympy__functions__special__zeta_functions__dirichlet_eta\", \"test_sympy__functions__special__zeta_functions__zeta\", \"test_sympy__functions__special__zeta_functions__lerchphi\", \"test_sympy__functions__special__zeta_functions__polylog\", \"test_sympy__functions__special__zeta_functions__stieltjes\", \"test_sympy__integrals__integrals__Integral\", \"test_sympy__integrals__risch__NonElementaryIntegral\", \"test_sympy__integrals__transforms__MellinTransform\", \"test_sympy__integrals__transforms__InverseMellinTransform\", \"test_sympy__integrals__transforms__LaplaceTransform\", \"test_sympy__integrals__transforms__InverseLaplaceTransform\", \"test_sympy__integrals__transforms__InverseFourierTransform\", \"test_sympy__integrals__transforms__FourierTransform\", \"test_sympy__integrals__transforms__InverseSineTransform\", \"test_sympy__integrals__transforms__SineTransform\", \"test_sympy__integrals__transforms__InverseCosineTransform\", \"test_sympy__integrals__transforms__CosineTransform\", \"test_sympy__integrals__transforms__InverseHankelTransform\", \"test_sympy__integrals__transforms__HankelTransform\", \"test_sympy__logic__boolalg__And\", \"test_sympy__logic__boolalg__BooleanFunction\", \"test_sympy__logic__boolalg__BooleanTrue\", \"test_sympy__logic__boolalg__BooleanFalse\", \"test_sympy__logic__boolalg__Equivalent\", \"test_sympy__logic__boolalg__ITE\", \"test_sympy__logic__boolalg__Implies\", \"test_sympy__logic__boolalg__Nand\", \"test_sympy__logic__boolalg__Nor\", \"test_sympy__logic__boolalg__Not\", \"test_sympy__logic__boolalg__Or\", \"test_sympy__logic__boolalg__Xor\", \"test_sympy__logic__boolalg__Xnor\", \"test_sympy__matrices__matrices__DeferredVector\", \"test_sympy__matrices__immutable__ImmutableDenseMatrix\", \"test_sympy__matrices__immutable__ImmutableSparseMatrix\", \"test_sympy__matrices__expressions__slice__MatrixSlice\", \"test_sympy__matrices__expressions__applyfunc__ElementwiseApplyFunction\", \"test_sympy__matrices__expressions__blockmatrix__BlockDiagMatrix\", \"test_sympy__matrices__expressions__blockmatrix__BlockMatrix\", \"test_sympy__matrices__expressions__inverse__Inverse\", \"test_sympy__matrices__expressions__matadd__MatAdd\", \"test_sympy__matrices__expressions__matexpr__Identity\", \"test_sympy__matrices__expressions__matexpr__GenericIdentity\", \"test_sympy__matrices__expressions__matexpr__MatrixElement\", \"test_sympy__matrices__expressions__matexpr__MatrixSymbol\", \"test_sympy__matrices__expressions__matexpr__ZeroMatrix\", \"test_sympy__matrices__expressions__matexpr__OneMatrix\", \"test_sympy__matrices__expressions__matexpr__GenericZeroMatrix\", \"test_sympy__matrices__expressions__matmul__MatMul\", \"test_sympy__matrices__expressions__dotproduct__DotProduct\", \"test_sympy__matrices__expressions__diagonal__DiagonalMatrix\", \"test_sympy__matrices__expressions__diagonal__DiagonalOf\", \"test_sympy__matrices__expressions__diagonal__DiagMatrix\", \"test_sympy__matrices__expressions__hadamard__HadamardProduct\", \"test_sympy__matrices__expressions__hadamard__HadamardPower\", \"test_sympy__matrices__expressions__kronecker__KroneckerProduct\", \"test_sympy__matrices__expressions__matpow__MatPow\", \"test_sympy__matrices__expressions__transpose__Transpose\", \"test_sympy__matrices__expressions__adjoint__Adjoint\", \"test_sympy__matrices__expressions__trace__Trace\", \"test_sympy__matrices__expressions__determinant__Determinant\", \"test_sympy__matrices__expressions__funcmatrix__FunctionMatrix\", \"test_sympy__matrices__expressions__fourier__DFT\", \"test_sympy__matrices__expressions__fourier__IDFT\", \"test_sympy__matrices__expressions__factorizations__LofLU\", \"test_sympy__matrices__expressions__factorizations__UofLU\", \"test_sympy__matrices__expressions__factorizations__QofQR\", \"test_sympy__matrices__expressions__factorizations__RofQR\", \"test_sympy__matrices__expressions__factorizations__LofCholesky\", \"test_sympy__matrices__expressions__factorizations__UofCholesky\", \"test_sympy__matrices__expressions__factorizations__EigenVectors\", \"test_sympy__matrices__expressions__factorizations__EigenValues\", \"test_sympy__matrices__expressions__factorizations__UofSVD\", \"test_sympy__matrices__expressions__factorizations__VofSVD\", \"test_sympy__matrices__expressions__factorizations__SofSVD\", \"test_sympy__matrices__expressions__permutation__PermutationMatrix\", \"test_sympy__matrices__expressions__permutation__MatrixPermute\", \"test_sympy__physics__vector__frame__CoordinateSym\", \"test_sympy__physics__paulialgebra__Pauli\", \"test_sympy__physics__quantum__anticommutator__AntiCommutator\", \"test_sympy__physics__quantum__cartesian__PositionBra3D\", \"test_sympy__physics__quantum__cartesian__PositionKet3D\", \"test_sympy__physics__quantum__cartesian__PositionState3D\", \"test_sympy__physics__quantum__cartesian__PxBra\", \"test_sympy__physics__quantum__cartesian__PxKet\", \"test_sympy__physics__quantum__cartesian__PxOp\", \"test_sympy__physics__quantum__cartesian__XBra\", \"test_sympy__physics__quantum__cartesian__XKet\", \"test_sympy__physics__quantum__cartesian__XOp\", \"test_sympy__physics__quantum__cartesian__YOp\", \"test_sympy__physics__quantum__cartesian__ZOp\", \"test_sympy__physics__quantum__cg__CG\", \"test_sympy__physics__quantum__cg__Wigner3j\", \"test_sympy__physics__quantum__cg__Wigner6j\", \"test_sympy__physics__quantum__cg__Wigner9j\", \"test_sympy__physics__quantum__circuitplot__Mz\", \"test_sympy__physics__quantum__circuitplot__Mx\", \"test_sympy__physics__quantum__commutator__Commutator\", \"test_sympy__physics__quantum__constants__HBar\", \"test_sympy__physics__quantum__dagger__Dagger\", \"test_sympy__physics__quantum__gate__CGate\", \"test_sympy__physics__quantum__gate__CGateS\", \"test_sympy__physics__quantum__gate__CNotGate\", \"test_sympy__physics__quantum__gate__Gate\", \"test_sympy__physics__quantum__gate__HadamardGate\", \"test_sympy__physics__quantum__gate__IdentityGate\", \"test_sympy__physics__quantum__gate__OneQubitGate\", \"test_sympy__physics__quantum__gate__PhaseGate\", \"test_sympy__physics__quantum__gate__SwapGate\", \"test_sympy__physics__quantum__gate__TGate\", \"test_sympy__physics__quantum__gate__TwoQubitGate\", \"test_sympy__physics__quantum__gate__UGate\", \"test_sympy__physics__quantum__gate__XGate\", \"test_sympy__physics__quantum__gate__YGate\", \"test_sympy__physics__quantum__gate__ZGate\", \"test_sympy__physics__quantum__grover__WGate\", \"test_sympy__physics__quantum__hilbert__ComplexSpace\", \"test_sympy__physics__quantum__hilbert__DirectSumHilbertSpace\", \"test_sympy__physics__quantum__hilbert__FockSpace\", \"test_sympy__physics__quantum__hilbert__HilbertSpace\", \"test_sympy__physics__quantum__hilbert__L2\", \"test_sympy__physics__quantum__hilbert__TensorPowerHilbertSpace\", \"test_sympy__physics__quantum__hilbert__TensorProductHilbertSpace\", \"test_sympy__physics__quantum__innerproduct__InnerProduct\", \"test_sympy__physics__quantum__operator__DifferentialOperator\", \"test_sympy__physics__quantum__operator__HermitianOperator\", \"test_sympy__physics__quantum__operator__IdentityOperator\", \"test_sympy__physics__quantum__operator__Operator\", \"test_sympy__physics__quantum__operator__OuterProduct\", \"test_sympy__physics__quantum__operator__UnitaryOperator\", \"test_sympy__physics__quantum__piab__PIABBra\", \"test_sympy__physics__quantum__boson__BosonOp\", \"test_sympy__physics__quantum__boson__BosonFockKet\", \"test_sympy__physics__quantum__boson__BosonFockBra\", \"test_sympy__physics__quantum__boson__BosonCoherentKet\", \"test_sympy__physics__quantum__boson__BosonCoherentBra\", \"test_sympy__physics__quantum__fermion__FermionOp\", \"test_sympy__physics__quantum__fermion__FermionFockKet\", \"test_sympy__physics__quantum__fermion__FermionFockBra\", \"test_sympy__physics__quantum__pauli__SigmaOpBase\", \"test_sympy__physics__quantum__pauli__SigmaX\", \"test_sympy__physics__quantum__pauli__SigmaY\", \"test_sympy__physics__quantum__pauli__SigmaZ\", \"test_sympy__physics__quantum__pauli__SigmaMinus\", \"test_sympy__physics__quantum__pauli__SigmaPlus\", \"test_sympy__physics__quantum__pauli__SigmaZKet\", \"test_sympy__physics__quantum__pauli__SigmaZBra\", \"test_sympy__physics__quantum__piab__PIABHamiltonian\", \"test_sympy__physics__quantum__piab__PIABKet\", \"test_sympy__physics__quantum__qexpr__QExpr\", \"test_sympy__physics__quantum__qft__Fourier\", \"test_sympy__physics__quantum__qft__IQFT\", \"test_sympy__physics__quantum__qft__QFT\", \"test_sympy__physics__quantum__qft__RkGate\", \"test_sympy__physics__quantum__qubit__IntQubit\", \"test_sympy__physics__quantum__qubit__IntQubitBra\", \"test_sympy__physics__quantum__qubit__IntQubitState\", \"test_sympy__physics__quantum__qubit__Qubit\", \"test_sympy__physics__quantum__qubit__QubitBra\", \"test_sympy__physics__quantum__qubit__QubitState\", \"test_sympy__physics__quantum__density__Density\", \"test_sympy__physics__quantum__spin__CoupledSpinState\", \"test_sympy__physics__quantum__spin__J2Op\", \"test_sympy__physics__quantum__spin__JminusOp\", \"test_sympy__physics__quantum__spin__JplusOp\", \"test_sympy__physics__quantum__spin__JxBra\", \"test_sympy__physics__quantum__spin__JxBraCoupled\", \"test_sympy__physics__quantum__spin__JxKet\", \"test_sympy__physics__quantum__spin__JxKetCoupled\", \"test_sympy__physics__quantum__spin__JxOp\", \"test_sympy__physics__quantum__spin__JyBra\", \"test_sympy__physics__quantum__spin__JyBraCoupled\", \"test_sympy__physics__quantum__spin__JyKet\", \"test_sympy__physics__quantum__spin__JyKetCoupled\", \"test_sympy__physics__quantum__spin__JyOp\", \"test_sympy__physics__quantum__spin__JzBra\", \"test_sympy__physics__quantum__spin__JzBraCoupled\", \"test_sympy__physics__quantum__spin__JzKet\", \"test_sympy__physics__quantum__spin__JzKetCoupled\", \"test_sympy__physics__quantum__spin__JzOp\", \"test_sympy__physics__quantum__spin__Rotation\", \"test_sympy__physics__quantum__spin__SpinState\", \"test_sympy__physics__quantum__spin__WignerD\", \"test_sympy__physics__quantum__state__Bra\", \"test_sympy__physics__quantum__state__BraBase\", \"test_sympy__physics__quantum__state__Ket\", \"test_sympy__physics__quantum__state__KetBase\", \"test_sympy__physics__quantum__state__State\", \"test_sympy__physics__quantum__state__StateBase\", \"test_sympy__physics__quantum__state__OrthogonalBra\", \"test_sympy__physics__quantum__state__OrthogonalKet\", \"test_sympy__physics__quantum__state__OrthogonalState\", \"test_sympy__physics__quantum__state__TimeDepBra\", \"test_sympy__physics__quantum__state__TimeDepKet\", \"test_sympy__physics__quantum__state__TimeDepState\", \"test_sympy__physics__quantum__state__Wavefunction\", \"test_sympy__physics__quantum__tensorproduct__TensorProduct\", \"test_sympy__physics__quantum__identitysearch__GateIdentity\", \"test_sympy__physics__quantum__sho1d__SHOOp\", \"test_sympy__physics__quantum__sho1d__RaisingOp\", \"test_sympy__physics__quantum__sho1d__LoweringOp\", \"test_sympy__physics__quantum__sho1d__NumberOp\", \"test_sympy__physics__quantum__sho1d__Hamiltonian\", \"test_sympy__physics__quantum__sho1d__SHOState\", \"test_sympy__physics__quantum__sho1d__SHOKet\", \"test_sympy__physics__quantum__sho1d__SHOBra\", \"test_sympy__physics__secondquant__AnnihilateBoson\", \"test_sympy__physics__secondquant__AnnihilateFermion\", \"test_sympy__physics__secondquant__AntiSymmetricTensor\", \"test_sympy__physics__secondquant__BosonState\", \"test_sympy__physics__secondquant__Commutator\", \"test_sympy__physics__secondquant__CreateBoson\", \"test_sympy__physics__secondquant__CreateFermion\", \"test_sympy__physics__secondquant__Dagger\", \"test_sympy__physics__secondquant__FermionState\", \"test_sympy__physics__secondquant__FermionicOperator\", \"test_sympy__physics__secondquant__FockState\", \"test_sympy__physics__secondquant__FockStateBosonBra\", \"test_sympy__physics__secondquant__FockStateBosonKet\", \"test_sympy__physics__secondquant__FockStateBra\", \"test_sympy__physics__secondquant__FockStateFermionBra\", \"test_sympy__physics__secondquant__FockStateFermionKet\", \"test_sympy__physics__secondquant__FockStateKet\", \"test_sympy__physics__secondquant__InnerProduct\", \"test_sympy__physics__secondquant__NO\", \"test_sympy__physics__secondquant__PermutationOperator\", \"test_sympy__physics__secondquant__SqOperator\", \"test_sympy__physics__secondquant__TensorSymbol\", \"test_sympy__physics__units__dimensions__Dimension\", \"test_sympy__physics__units__dimensions__DimensionSystem\", \"test_sympy__physics__units__quantities__Quantity\", \"test_sympy__physics__units__prefixes__Prefix\", \"test_sympy__core__numbers__AlgebraicNumber\", \"test_sympy__polys__polytools__GroebnerBasis\", \"test_sympy__polys__polytools__Poly\", \"test_sympy__polys__polytools__PurePoly\", \"test_sympy__polys__rootoftools__ComplexRootOf\", \"test_sympy__polys__rootoftools__RootSum\", \"test_sympy__series__limits__Limit\", \"test_sympy__series__order__Order\", \"test_sympy__series__sequences__EmptySequence\", \"test_sympy__series__sequences__SeqPer\", \"test_sympy__series__sequences__SeqFormula\", \"test_sympy__series__sequences__RecursiveSeq\", \"test_sympy__series__sequences__SeqExprOp\", \"test_sympy__series__sequences__SeqAdd\", \"test_sympy__series__sequences__SeqMul\", \"test_sympy__series__fourier__FourierSeries\", \"test_sympy__series__fourier__FiniteFourierSeries\", \"test_sympy__series__formal__FormalPowerSeries\", \"test_sympy__series__formal__Coeff\", \"test_sympy__series__formal__FormalPowerSeriesProduct\", \"test_sympy__series__formal__FormalPowerSeriesCompose\", \"test_sympy__series__formal__FormalPowerSeriesInverse\", \"test_sympy__simplify__hyperexpand__Hyper_Function\", \"test_sympy__simplify__hyperexpand__G_Function\", \"test_sympy__tensor__array__dense_ndim_array__ImmutableDenseNDimArray\", \"test_sympy__tensor__array__sparse_ndim_array__ImmutableSparseNDimArray\", \"test_sympy__tensor__array__array_comprehension__ArrayComprehension\", \"test_sympy__tensor__array__array_comprehension__ArrayComprehensionMap\", \"test_sympy__tensor__array__arrayop__Flatten\", \"test_sympy__tensor__functions__TensorProduct\", \"test_sympy__tensor__indexed__Idx\", \"test_sympy__tensor__indexed__Indexed\", \"test_sympy__tensor__indexed__IndexedBase\", \"test_sympy__tensor__tensor__TensorIndexType\", \"test_sympy__tensor__tensor__TensorSymmetry\", \"test_sympy__tensor__tensor__TensorHead\", \"test_sympy__tensor__tensor__TensorIndex\", \"test_sympy__tensor__tensor__TensAdd\", \"test_sympy__tensor__tensor__Tensor\", \"test_sympy__tensor__tensor__TensMul\", \"test_sympy__tensor__tensor__TensorElement\", \"test_sympy__tensor__toperators__PartialDerivative\", \"test_as_coeff_add\", \"test_sympy__geometry__curve__Curve\", \"test_sympy__geometry__point__Point\", \"test_sympy__geometry__point__Point2D\", \"test_sympy__geometry__point__Point3D\", \"test_sympy__geometry__ellipse__Ellipse\", \"test_sympy__geometry__ellipse__Circle\", \"test_sympy__geometry__parabola__Parabola\", \"test_sympy__geometry__line__Line\", \"test_sympy__geometry__line__Ray\", \"test_sympy__geometry__line__Segment\", \"test_sympy__geometry__line__Line2D\", \"test_sympy__geometry__line__Ray2D\", \"test_sympy__geometry__line__Segment2D\", \"test_sympy__geometry__line__Line3D\", \"test_sympy__geometry__line__Segment3D\", \"test_sympy__geometry__line__Ray3D\", \"test_sympy__geometry__plane__Plane\", \"test_sympy__geometry__polygon__Polygon\", \"test_sympy__geometry__polygon__RegularPolygon\", \"test_sympy__geometry__polygon__Triangle\", \"test_sympy__geometry__entity__GeometryEntity\", \"test_sympy__diffgeom__diffgeom__Manifold\", \"test_sympy__diffgeom__diffgeom__Patch\", \"test_sympy__diffgeom__diffgeom__CoordSystem\", \"test_sympy__diffgeom__diffgeom__BaseScalarField\", \"test_sympy__diffgeom__diffgeom__BaseVectorField\", \"test_sympy__diffgeom__diffgeom__Differential\", \"test_sympy__diffgeom__diffgeom__Commutator\", \"test_sympy__diffgeom__diffgeom__TensorProduct\", \"test_sympy__diffgeom__diffgeom__WedgeProduct\", \"test_sympy__diffgeom__diffgeom__LieDerivative\", \"test_sympy__diffgeom__diffgeom__CovarDerivativeOp\", \"test_sympy__categories__baseclasses__Class\", \"test_sympy__categories__baseclasses__Object\", \"test_sympy__categories__baseclasses__IdentityMorphism\", \"test_sympy__categories__baseclasses__NamedMorphism\", \"test_sympy__categories__baseclasses__CompositeMorphism\", \"test_sympy__categories__baseclasses__Diagram\", \"test_sympy__categories__baseclasses__Category\", \"test_sympy__ntheory__factor___totient\", \"test_sympy__ntheory__factor___reduced_totient\", \"test_sympy__ntheory__factor___divisor_sigma\", \"test_sympy__ntheory__factor___udivisor_sigma\", \"test_sympy__ntheory__factor___primenu\", \"test_sympy__ntheory__factor___primeomega\", \"test_sympy__ntheory__residue_ntheory__mobius\", \"test_sympy__ntheory__generate__primepi\", \"test_sympy__physics__optics__waves__TWave\", \"test_sympy__physics__optics__gaussopt__BeamParameter\", \"test_sympy__physics__optics__medium__Medium\", \"test_sympy__codegen__array_utils__CodegenArrayContraction\", \"test_sympy__codegen__array_utils__CodegenArrayDiagonal\", \"test_sympy__codegen__array_utils__CodegenArrayTensorProduct\", \"test_sympy__codegen__array_utils__CodegenArrayElementwiseAdd\", \"test_sympy__codegen__array_utils__CodegenArrayPermuteDims\", \"test_sympy__codegen__ast__Assignment\", \"test_sympy__codegen__cfunctions__expm1\", \"test_sympy__codegen__cfunctions__log1p\", \"test_sympy__codegen__cfunctions__exp2\", \"test_sympy__codegen__cfunctions__log2\", \"test_sympy__codegen__cfunctions__fma\", \"test_sympy__codegen__cfunctions__log10\", \"test_sympy__codegen__cfunctions__Sqrt\", \"test_sympy__codegen__cfunctions__Cbrt\", \"test_sympy__codegen__cfunctions__hypot\", \"test_sympy__codegen__fnodes__FFunction\", \"test_sympy__codegen__fnodes__F95Function\", \"test_sympy__codegen__fnodes__isign\", \"test_sympy__codegen__fnodes__dsign\", \"test_sympy__codegen__fnodes__cmplx\", \"test_sympy__codegen__fnodes__kind\", \"test_sympy__codegen__fnodes__merge\", \"test_sympy__codegen__fnodes___literal\", \"test_sympy__codegen__fnodes__literal_sp\", \"test_sympy__codegen__fnodes__literal_dp\", \"test_sympy__codegen__matrix_nodes__MatrixSolve\", \"test_sympy__vector__coordsysrect__CoordSys3D\", \"test_sympy__vector__point__Point\", \"test_sympy__vector__basisdependent__BasisDependent\", \"test_sympy__vector__basisdependent__BasisDependentMul\", \"test_sympy__vector__basisdependent__BasisDependentAdd\", \"test_sympy__vector__basisdependent__BasisDependentZero\", \"test_sympy__vector__vector__BaseVector\", \"test_sympy__vector__vector__VectorAdd\", \"test_sympy__vector__vector__VectorMul\", \"test_sympy__vector__vector__VectorZero\", \"test_sympy__vector__vector__Vector\", \"test_sympy__vector__vector__Cross\", \"test_sympy__vector__vector__Dot\", \"test_sympy__vector__dyadic__Dyadic\", \"test_sympy__vector__dyadic__BaseDyadic\", \"test_sympy__vector__dyadic__DyadicMul\", \"test_sympy__vector__dyadic__DyadicAdd\", \"test_sympy__vector__dyadic__DyadicZero\", \"test_sympy__vector__deloperator__Del\", \"test_sympy__vector__operators__Curl\", \"test_sympy__vector__operators__Laplacian\", \"test_sympy__vector__operators__Divergence\", \"test_sympy__vector__operators__Gradient\", \"test_sympy__vector__orienters__Orienter\", \"test_sympy__vector__orienters__ThreeAngleOrienter\", \"test_sympy__vector__orienters__AxisOrienter\", \"test_sympy__vector__orienters__BodyOrienter\", \"test_sympy__vector__orienters__SpaceOrienter\", \"test_sympy__vector__orienters__QuaternionOrienter\", \"test_sympy__vector__scalar__BaseScalar\", \"test_sympy__physics__wigner__Wigner3j\", \"test_sympy__integrals__rubi__symbol__matchpyWC\", \"test_sympy__integrals__rubi__utility_function__rubi_unevaluated_expr\", \"test_sympy__integrals__rubi__utility_function__rubi_exp\", \"test_sympy__integrals__rubi__utility_function__rubi_log\", \"test_sympy__integrals__rubi__utility_function__Int\", \"test_sympy__integrals__rubi__utility_function__Util_Coefficient\", \"test_sympy__integrals__rubi__utility_function__Gamma\", \"test_sympy__integrals__rubi__utility_function__Util_Part\", \"test_sympy__integrals__rubi__utility_function__PolyGamma\", \"test_sympy__integrals__rubi__utility_function__ProductLog\"]",
  "environment_setup_commit": "28b41c73c12b70d6ad9f6e45109a80649c4456da",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.125782",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}