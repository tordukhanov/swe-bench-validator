{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-7975",
  "base_commit": "4ec6cbe341fd84468c448e20082c778043bbea4b",
  "patch": "diff --git a/sphinx/environment/adapters/indexentries.py b/sphinx/environment/adapters/indexentries.py\n--- a/sphinx/environment/adapters/indexentries.py\n+++ b/sphinx/environment/adapters/indexentries.py\n@@ -98,9 +98,8 @@ def keyfunc0(entry: Tuple[str, str]) -> Tuple[bool, str]:\n             for subentry in indexentry[1].values():\n                 subentry[0].sort(key=keyfunc0)  # type: ignore\n \n-        # sort the index entries; put all symbols at the front, even those\n-        # following the letters in ASCII, this is where the chr(127) comes from\n-        def keyfunc(entry: Tuple[str, List]) -> Tuple[str, str]:\n+        # sort the index entries\n+        def keyfunc(entry: Tuple[str, List]) -> Tuple[Tuple[int, str], str]:\n             key, (void, void, category_key) = entry\n             if category_key:\n                 # using specified category key to sort\n@@ -108,11 +107,16 @@ def keyfunc(entry: Tuple[str, List]) -> Tuple[str, str]:\n             lckey = unicodedata.normalize('NFD', key.lower())\n             if lckey.startswith('\\N{RIGHT-TO-LEFT MARK}'):\n                 lckey = lckey[1:]\n+\n             if lckey[0:1].isalpha() or lckey.startswith('_'):\n-                lckey = chr(127) + lckey\n+                # put non-symbol characters at the folloing group (1)\n+                sortkey = (1, lckey)\n+            else:\n+                # put symbols at the front of the index (0)\n+                sortkey = (0, lckey)\n             # ensure a determinstic order *within* letters by also sorting on\n             # the entry itself\n-            return (lckey, entry[0])\n+            return (sortkey, entry[0])\n         newlist = sorted(new.items(), key=keyfunc)\n \n         if group_entries:\n",
  "test_patch": "diff --git a/tests/test_environment_indexentries.py b/tests/test_environment_indexentries.py\n--- a/tests/test_environment_indexentries.py\n+++ b/tests/test_environment_indexentries.py\n@@ -25,12 +25,14 @@ def test_create_single_index(app):\n             \".. index:: ёлка\\n\"\n             \".. index:: ‏תירבע‎\\n\"\n             \".. index:: 9-symbol\\n\"\n-            \".. index:: &-symbol\\n\")\n+            \".. index:: &-symbol\\n\"\n+            \".. index:: £100\\n\")\n     restructuredtext.parse(app, text)\n     index = IndexEntries(app.env).create_index(app.builder)\n     assert len(index) == 6\n     assert index[0] == ('Symbols', [('&-symbol', [[('', '#index-9')], [], None]),\n-                                    ('9-symbol', [[('', '#index-8')], [], None])])\n+                                    ('9-symbol', [[('', '#index-8')], [], None]),\n+                                    ('£100', [[('', '#index-10')], [], None])])\n     assert index[1] == ('D', [('docutils', [[('', '#index-0')], [], None])])\n     assert index[2] == ('P', [('pip', [[], [('install', [('', '#index-2')]),\n                                             ('upgrade', [('', '#index-3')])], None]),\n",
  "problem_statement": "Two sections called Symbols in index\nWhen using index entries with the following leading characters: _@_, _£_, and _←_ I get two sections called _Symbols_ in the HTML output, the first containing all _@_ entries before ”normal” words and the second containing _£_ and _←_ entries after the ”normal” words.  Both have the same anchor in HTML so the links at the top of the index page contain two _Symbols_ links, one before the letters and one after, but both lead to the first section.\n\n",
  "hints_text": "",
  "created_at": "2020-07-18T06:39:32Z",
  "version": "3.2",
  "FAIL_TO_PASS": "[\"tests/test_environment_indexentries.py::test_create_single_index\"]",
  "PASS_TO_PASS": "[\"tests/test_environment_indexentries.py::test_create_pair_index\", \"tests/test_environment_indexentries.py::test_create_triple_index\", \"tests/test_environment_indexentries.py::test_create_see_index\", \"tests/test_environment_indexentries.py::test_create_seealso_index\", \"tests/test_environment_indexentries.py::test_create_main_index\", \"tests/test_environment_indexentries.py::test_create_index_with_name\", \"tests/test_environment_indexentries.py::test_create_index_by_key\"]",
  "environment_setup_commit": "f92fa6443fe6f457ab0c26d41eb229e825fda5e1",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.049005",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}