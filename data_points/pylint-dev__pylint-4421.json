{
  "repo": "pylint-dev/pylint",
  "instance_id": "pylint-dev__pylint-4421",
  "base_commit": "24b5159e00b8a380c1776dab6ce096df7bad79b1",
  "patch": "diff --git a/pylint/__pkginfo__.py b/pylint/__pkginfo__.py\n--- a/pylint/__pkginfo__.py\n+++ b/pylint/__pkginfo__.py\n@@ -1,5 +1,6 @@\n # Licensed under the GPL: https://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n # For details: https://github.com/PyCQA/pylint/blob/master/LICENSE\n+from typing import Tuple\n \n from pkg_resources import DistributionNotFound, get_distribution\n \n@@ -8,5 +9,32 @@\n except DistributionNotFound:\n     __version__ = \"2.8.2+\"\n \n-# Kept for compatibility reason, see https://github.com/PyCQA/pylint/issues/4399\n-numversion = tuple(__version__.split(\".\"))\n+\n+def get_numversion_from_version(v: str) -> Tuple:\n+    \"\"\"Kept for compatibility reason\n+\n+    See https://github.com/PyCQA/pylint/issues/4399\n+    https://github.com/PyCQA/pylint/issues/4420,\n+    \"\"\"\n+    v = v.replace(\"pylint-\", \"\")\n+    version = []\n+    for n in v.split(\".\")[0:3]:\n+        try:\n+            version.append(int(n))\n+        except ValueError:\n+            num = \"\"\n+            for c in n:\n+                if c.isdigit():\n+                    num += c\n+                else:\n+                    break\n+            try:\n+                version.append(int(num))\n+            except ValueError:\n+                version.append(0)\n+    while len(version) != 3:\n+        version.append(0)\n+    return tuple(version)\n+\n+\n+numversion = get_numversion_from_version(__version__)\n",
  "test_patch": "diff --git a/tests/test_numversion.py b/tests/test_numversion.py\nnew file mode 100644\n--- /dev/null\n+++ b/tests/test_numversion.py\n@@ -0,0 +1,26 @@\n+# Licensed under the GPL: https://www.gnu.org/licenses/old-licenses/gpl-2.0.html\n+# For details: https://github.com/PyCQA/pylint/blob/master/LICENSE\n+\n+import pytest\n+\n+from pylint.__pkginfo__ import get_numversion_from_version\n+\n+\n+@pytest.mark.parametrize(\n+    \"version,expected_numversion\",\n+    [\n+        [\"2.8.1\", (2, 8, 1)],\n+        [\"2.8.2+\", (2, 8, 2)],\n+        [\"3.0.0a0\", (3, 0, 0)],\n+        [\"3..0\", (3, 0, 0)],\n+        [\"1.a\", (1, 0, 0)],\n+        [\"\", (0, 0, 0)],\n+        [\"3.0.0b1\", (3, 0, 0)],\n+        [\"3.0.0rc1\", (3, 0, 0)],\n+        [\"3.0.0dev-234324234234f23abc4\", (3, 0, 0)],\n+        [\"pylint-2.4.7\", (2, 4, 7)],\n+        [\"2.8.3.dev3+g28c093c2.d20210428\", (2, 8, 3)],\n+    ],\n+)\n+def test_numversion(version, expected_numversion):\n+    assert get_numversion_from_version(version) == expected_numversion\n",
  "problem_statement": "Pylint 2.8.2 broke pylint-quotes\n<!--\r\n  Hi there! Thank you for discovering and submitting an issue.\r\n\r\n  Before you submit this, make sure that the issue doesn't already exist\r\n  or if it is not closed.\r\n\r\n  Is your issue fixed on the preview release?:\r\n    pip install pylint astroid --pre -U\r\n-->\r\n\r\n### Steps to reproduce\r\n\r\nSee https://github.com/edaniszewski/pylint-quotes/issues/24\r\nSee `pylintrc` in attached [pylint_bug.zip](https://github.com/PyCQA/pylint/files/6393225/pylint_bug.zip)\r\n\r\n```bash\r\npython -m venv venv\r\n. venv/bin/activate\r\npip install -r requirements.txt\r\npylint --rcfile pylintrc demo.py\r\n```\r\n\r\n### Current behavior\r\n\r\nRunning this configuration on a file containing:\r\n```\r\nfoo = \"bar\"\r\n```\r\nresults in an exception:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/c/tmp/pylint_bug/venv/bin/pylint\", line 10, in <module>\r\n    sys.exit(run_pylint())\r\n  File \"/c/tmp/pylint_bug/venv/lib64/python3.8/site-packages/pylint/__init__.py\", line 24, in run_pylint\r\n    PylintRun(sys.argv[1:])\r\n  File \"/c/tmp/pylint_bug/venv/lib64/python3.8/site-packages/pylint/lint/run.py\", line 381, in __init__\r\n    linter.check(args)\r\n  File \"/c/tmp/pylint_bug/venv/lib64/python3.8/site-packages/pylint/lint/pylinter.py\", line 873, in check\r\n    self._check_files(\r\n  File \"/c/tmp/pylint_bug/venv/lib64/python3.8/site-packages/pylint/lint/pylinter.py\", line 907, in _check_files\r\n    self._check_file(get_ast, check_astroid_module, name, filepath, modname)\r\n  File \"/c/tmp/pylint_bug/venv/lib64/python3.8/site-packages/pylint/lint/pylinter.py\", line 933, in _check_file\r\n    check_astroid_module(ast_node)\r\n  File \"/c/tmp/pylint_bug/venv/lib64/python3.8/site-packages/pylint/lint/pylinter.py\", line 1067, in check_astroid_module\r\n    retval = self._check_astroid_module(\r\n  File \"/c/tmp/pylint_bug/venv/lib64/python3.8/site-packages/pylint/lint/pylinter.py\", line 1110, in _check_astroid_module\r\n    checker.process_tokens(tokens)\r\n  File \"/c/tmp/pylint_bug/venv/lib64/python3.8/site-packages/pylint_quotes/checker.py\", line 259, in process_tokens\r\n    self._process_string_token(token, start_row, start_col)\r\n  File \"/c/tmp/pylint_bug/venv/lib64/python3.8/site-packages/pylint_quotes/checker.py\", line 295, in _process_string_token\r\n    self._invalid_string_quote(\r\n  File \"/c/tmp/pylint_bug/venv/lib64/python3.8/site-packages/pylint_quotes/checker.py\", line 341, in _invalid_string_quote\r\n    **self.get_offset(col)\r\n  File \"/c/tmp/pylint_bug/venv/lib64/python3.8/site-packages/pylint_quotes/checker.py\", line 360, in get_offset\r\n    if (2, 2, 2) < pylint_version:\r\nTypeError: '<' not supported between instances of 'int' and 'str'\r\n```\r\n\r\n### Expected behavior\r\n`pylint` should not throw exceptions, and instead generate report complaining about the use of double quotes (`\"\"`) and illegal variable name `foo`.\r\n\r\n\r\n### pylint --version output\r\n\r\nResult of `pylint --version` output:\r\n\r\n```\r\nâ†’ pylint --version\r\npylint 2.8.2\r\nastroid 2.5.6\r\nPython 3.8.3 (default, Feb 26 2020, 00:00:00)\r\n[GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]\r\n```\r\n\r\nAdditional dependencies:\r\n```\r\npylint-quotes==0.2.1\r\n```\r\n\r\n### Probable cause:\r\n1. `pylint` seems to have just changed versioning scheme: https://github.com/PyCQA/pylint/compare/pylint-2.8.1...v2.8.2\r\n2. Which broke this line: https://github.com/edaniszewski/pylint-quotes/blob/master/pylint_quotes/checker.py#L360\n",
  "hints_text": "Hello, thank you for the report. We changed the tuple from int to string because we can't be sure that we're capable of getting the version from ``importlib_metadata`` so there is a default ``2.8.2+`` value that would not be castable to an int.\nOkay, but that was a breaking change for plugin developers, and as such I'm not entirely sure why this was released as PATCH version, and not at least MINOR. See: https://semver.org/#what-if-i-inadvertently-alter-the-public-api-in-a-way-that-is-not-compliant-with-the-version-number-change-ie-the-code-incorrectly-introduces-a-major-breaking-change-in-a-patch-release\r\n\r\nThe `pylint-quotes` plugin seems to be dead (no update for 2 years, opened issues) so I'm wondering if you plan on doing anything to keep it working, or should we rather start looking for an alternative. I've seen the `check-quote-consistency` setting which we may want to try. Can you confirm it's is this the same as what `pylint-quotes` did?\r\n",
  "created_at": "2021-04-28T20:10:47Z",
  "version": "2.8",
  "FAIL_TO_PASS": "[\"tests/test_numversion.py::test_numversion[2.8.1-expected_numversion0]\", \"tests/test_numversion.py::test_numversion[2.8.2+-expected_numversion1]\", \"tests/test_numversion.py::test_numversion[3.0.0a0-expected_numversion2]\", \"tests/test_numversion.py::test_numversion[3..0-expected_numversion3]\", \"tests/test_numversion.py::test_numversion[1.a-expected_numversion4]\", \"tests/test_numversion.py::test_numversion[-expected_numversion5]\", \"tests/test_numversion.py::test_numversion[3.0.0b1-expected_numversion6]\", \"tests/test_numversion.py::test_numversion[3.0.0rc1-expected_numversion7]\", \"tests/test_numversion.py::test_numversion[3.0.0dev-234324234234f23abc4-expected_numversion8]\", \"tests/test_numversion.py::test_numversion[pylint-2.4.7-expected_numversion9]\", \"tests/test_numversion.py::test_numversion[2.8.3.dev3+g28c093c2.d20210428-expected_numversion10]\"]",
  "PASS_TO_PASS": "[]",
  "environment_setup_commit": "49a6206c7756307844c1c32c256afdf9836d7bce",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.907766",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}