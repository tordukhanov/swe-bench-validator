{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-13859",
  "base_commit": "acad890afb1da7d071049d44ec655e0ae5b79e53",
  "patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -345,9 +345,9 @@ def __init__(self,\n         if frameon is None:\n             frameon = rcParams['figure.frameon']\n \n-        if not np.isfinite(figsize).all():\n-            raise ValueError('figure size must be finite not '\n-                             '{}'.format(figsize))\n+        if not np.isfinite(figsize).all() or (np.array(figsize) <= 0).any():\n+            raise ValueError('figure size must be positive finite not '\n+                             f'{figsize}')\n         self.bbox_inches = Bbox.from_bounds(0, 0, *figsize)\n \n         self.dpi_scale_trans = Affine2D().scale(dpi, dpi)\n@@ -895,9 +895,9 @@ def set_size_inches(self, w, h=None, forward=True):\n         # argument, so unpack them\n         if h is None:\n             w, h = w\n-        if not all(np.isfinite(_) for _ in (w, h)):\n-            raise ValueError('figure size must be finite not '\n-                             '({}, {})'.format(w, h))\n+        size = w, h\n+        if not np.isfinite(size).all() or (np.array(size) <= 0).any():\n+            raise ValueError(f'figure size must be positive finite not {size}')\n         self.bbox_inches.p1 = w, h\n \n         if forward:\n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_figure.py b/lib/matplotlib/tests/test_figure.py\n--- a/lib/matplotlib/tests/test_figure.py\n+++ b/lib/matplotlib/tests/test_figure.py\n@@ -325,14 +325,23 @@ def test_change_dpi():\n     assert fig.canvas.renderer.width == 200\n \n \n-def test_invalid_figure_size():\n+@pytest.mark.parametrize('width, height', [\n+    (1, np.nan),\n+    (0, 1),\n+    (-1, 1),\n+    (np.inf, 1)\n+])\n+def test_invalid_figure_size(width, height):\n     with pytest.raises(ValueError):\n-        plt.figure(figsize=(1, np.nan))\n+        plt.figure(figsize=(width, height))\n \n     fig = plt.figure()\n     with pytest.raises(ValueError):\n-        fig.set_size_inches(1, np.nan)\n+        fig.set_size_inches(width, height)\n \n+\n+def test_invalid_figure_add_axes():\n+    fig = plt.figure()\n     with pytest.raises(ValueError):\n         fig.add_axes((.1, .1, .5, np.nan))\n \n",
  "problem_statement": "Zero-width figure crashes libpng\n### Bug report\r\n\r\n**Bug summary**\r\n\r\nZero-width figure crashes libpng.\r\nThis happens when using ``%matplotlib inline`` or saving to png.\r\n\r\n**Code for reproduction**\r\n\r\n```python\r\nimport matplotlib.pyplot as plt\r\nplt.subplots(1, 1, figsize=(3, 0))\r\nplt.savefig(\"test.png\")\r\n```\r\n\r\n**Actual outcome**\r\n```\r\nRuntimeError: libpng signaled error\r\n```\r\n\r\n\r\n**Matplotlib version**\r\n<!--Please specify your platform and versions of the relevant libraries you are using:-->\r\n  * Operating system: ubuntu / conda\r\n  * Matplotlib version: 3.0.2, conda 3.0.2-py37h5429711_0 same at 3.0.3-py37h5429711_0\r\n  * libpng 1.6.35-hbc83047_0, same with 1.6.36-hbc83047_\r\n\r\nApparently I broke \"conda list\" on my machine so getting all the versions seems a bit tricky.\n",
  "hints_text": "My vote is to raise BlackHoleSingularityError.\n\nOn Tue, Apr 2, 2019 at 8:58 PM Andreas Mueller <notifications@github.com>\nwrote:\n\n> Bug report\n>\n> *Bug summary*\n>\n> Zero-width figure crashes libpng.\n> This happens when using %matplotlib inline or saving to png.\n>\n> *Code for reproduction*\n>\n> import matplotlib.pyplot as plt\n> plt.subplots(1, 1, figsize=(3, 0))\n> plt.savefig(\"test.png\")\n>\n> *Actual outcome*\n>\n> RuntimeError: libpng signaled error\n>\n> *Matplotlib version*\n>\n>    - Operating system: ubuntu / conda\n>    - Matplotlib version: 3.0.2, conda\n>\n> Apparently I broke \"conda list\" on my machine so getting all the versions\n> seems a bit tricky.\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/matplotlib/matplotlib/issues/13857>, or mute the\n> thread\n> <https://github.com/notifications/unsubscribe-auth/AARy-Lhb7Oq4mWRv142sFRO_JnntAhx1ks5vc_zDgaJpZM4cZZc1>\n> .\n>\n\nIn all seriousness, though, this should be easy enough to detect and raise\nin the Figure class. I can't imagine how a figsize with a 0-length\ndimension would ever be anything but an error.\n\nOn Tue, Apr 2, 2019 at 10:12 PM Benjamin Root <ben.v.root@gmail.com> wrote:\n\n> My vote is to raise BlackHoleSingularityError.\n>\n> On Tue, Apr 2, 2019 at 8:58 PM Andreas Mueller <notifications@github.com>\n> wrote:\n>\n>> Bug report\n>>\n>> *Bug summary*\n>>\n>> Zero-width figure crashes libpng.\n>> This happens when using %matplotlib inline or saving to png.\n>>\n>> *Code for reproduction*\n>>\n>> import matplotlib.pyplot as plt\n>> plt.subplots(1, 1, figsize=(3, 0))\n>> plt.savefig(\"test.png\")\n>>\n>> *Actual outcome*\n>>\n>> RuntimeError: libpng signaled error\n>>\n>> *Matplotlib version*\n>>\n>>    - Operating system: ubuntu / conda\n>>    - Matplotlib version: 3.0.2, conda\n>>\n>> Apparently I broke \"conda list\" on my machine so getting all the versions\n>> seems a bit tricky.\n>>\n>> —\n>> You are receiving this because you are subscribed to this thread.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/matplotlib/matplotlib/issues/13857>, or mute the\n>> thread\n>> <https://github.com/notifications/unsubscribe-auth/AARy-Lhb7Oq4mWRv142sFRO_JnntAhx1ks5vc_zDgaJpZM4cZZc1>\n>> .\n>>\n>\n\nyeah totally fine with an error. doing zero height works btw ?!\r\nI guess the expected behavior that I didn't specify is \"either create an empty figure or raise an informative error\".",
  "created_at": "2019-04-03T06:40:32Z",
  "version": "3.0",
  "FAIL_TO_PASS": "[\"lib/matplotlib/tests/test_figure.py::test_invalid_figure_size[0-1]\", \"lib/matplotlib/tests/test_figure.py::test_invalid_figure_size[-1-1]\"]",
  "PASS_TO_PASS": "[\"lib/matplotlib/tests/test_figure.py::test_figure_label\", \"lib/matplotlib/tests/test_figure.py::test_fignum_exists\", \"lib/matplotlib/tests/test_figure.py::test_clf_keyword\", \"lib/matplotlib/tests/test_figure.py::test_gca\", \"lib/matplotlib/tests/test_figure.py::test_suptitle_fontproperties\", \"lib/matplotlib/tests/test_figure.py::test_alpha[png]\", \"lib/matplotlib/tests/test_figure.py::test_too_many_figures\", \"lib/matplotlib/tests/test_figure.py::test_iterability_axes_argument\", \"lib/matplotlib/tests/test_figure.py::test_set_fig_size\", \"lib/matplotlib/tests/test_figure.py::test_axes_remove\", \"lib/matplotlib/tests/test_figure.py::test_figaspect\", \"lib/matplotlib/tests/test_figure.py::test_autofmt_xdate[None]\", \"lib/matplotlib/tests/test_figure.py::test_autofmt_xdate[both]\", \"lib/matplotlib/tests/test_figure.py::test_autofmt_xdate[major]\", \"lib/matplotlib/tests/test_figure.py::test_autofmt_xdate[minor]\", \"lib/matplotlib/tests/test_figure.py::test_change_dpi\", \"lib/matplotlib/tests/test_figure.py::test_invalid_figure_size[1-nan]\", \"lib/matplotlib/tests/test_figure.py::test_invalid_figure_size[inf-1]\", \"lib/matplotlib/tests/test_figure.py::test_invalid_figure_add_axes\", \"lib/matplotlib/tests/test_figure.py::test_subplots_shareax_loglabels\", \"lib/matplotlib/tests/test_figure.py::test_savefig\", \"lib/matplotlib/tests/test_figure.py::test_figure_repr\", \"lib/matplotlib/tests/test_figure.py::test_warn_cl_plus_tl\", \"lib/matplotlib/tests/test_figure.py::test_add_artist[png]\", \"lib/matplotlib/tests/test_figure.py::test_fspath[png]\", \"lib/matplotlib/tests/test_figure.py::test_fspath[pdf]\", \"lib/matplotlib/tests/test_figure.py::test_fspath[ps]\", \"lib/matplotlib/tests/test_figure.py::test_fspath[eps]\", \"lib/matplotlib/tests/test_figure.py::test_fspath[svg]\", \"lib/matplotlib/tests/test_figure.py::test_tightbbox\"]",
  "environment_setup_commit": "d0628598f8d9ec7b0da6b60e7b29be2067b6ea17",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.784609",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}