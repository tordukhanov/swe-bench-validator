{
  "repo": "scikit-learn/scikit-learn",
  "instance_id": "scikit-learn__scikit-learn-14983",
  "base_commit": "06632c0d185128a53c57ccc73b25b6408e90bb89",
  "patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -1163,6 +1163,9 @@ def get_n_splits(self, X=None, y=None, groups=None):\n                      **self.cvargs)\n         return cv.get_n_splits(X, y, groups) * self.n_repeats\n \n+    def __repr__(self):\n+        return _build_repr(self)\n+\n \n class RepeatedKFold(_RepeatedSplits):\n     \"\"\"Repeated K-Fold cross validator.\n@@ -2158,6 +2161,8 @@ def _build_repr(self):\n         try:\n             with warnings.catch_warnings(record=True) as w:\n                 value = getattr(self, key, None)\n+                if value is None and hasattr(self, 'cvargs'):\n+                    value = self.cvargs.get(key, None)\n             if len(w) and w[0].category == DeprecationWarning:\n                 # if the parameter is deprecated, don't show it\n                 continue\n",
  "test_patch": "diff --git a/sklearn/model_selection/tests/test_split.py b/sklearn/model_selection/tests/test_split.py\n--- a/sklearn/model_selection/tests/test_split.py\n+++ b/sklearn/model_selection/tests/test_split.py\n@@ -980,6 +980,17 @@ def test_repeated_cv_value_errors():\n         assert_raises(ValueError, cv, n_repeats=1.5)\n \n \n+@pytest.mark.parametrize(\n+    \"RepeatedCV\", [RepeatedKFold, RepeatedStratifiedKFold]\n+)\n+def test_repeated_cv_repr(RepeatedCV):\n+    n_splits, n_repeats = 2, 6\n+    repeated_cv = RepeatedCV(n_splits=n_splits, n_repeats=n_repeats)\n+    repeated_cv_repr = ('{}(n_repeats=6, n_splits=2, random_state=None)'\n+                        .format(repeated_cv.__class__.__name__))\n+    assert repeated_cv_repr == repr(repeated_cv)\n+\n+\n def test_repeated_kfold_determinstic_split():\n     X = [[1, 2], [3, 4], [5, 6], [7, 8], [9, 10]]\n     random_state = 258173307\n",
  "problem_statement": "RepeatedKFold and RepeatedStratifiedKFold do not show correct __repr__ string\n#### Description\r\n\r\n`RepeatedKFold` and `RepeatedStratifiedKFold` do not show correct \\_\\_repr\\_\\_ string.\r\n\r\n#### Steps/Code to Reproduce\r\n\r\n```python\r\n>>> from sklearn.model_selection import RepeatedKFold, RepeatedStratifiedKFold\r\n>>> repr(RepeatedKFold())\r\n>>> repr(RepeatedStratifiedKFold())\r\n```\r\n\r\n#### Expected Results\r\n\r\n```python\r\n>>> repr(RepeatedKFold())\r\nRepeatedKFold(n_splits=5, n_repeats=10, random_state=None)\r\n>>> repr(RepeatedStratifiedKFold())\r\nRepeatedStratifiedKFold(n_splits=5, n_repeats=10, random_state=None)\r\n```\r\n\r\n#### Actual Results\r\n\r\n```python\r\n>>> repr(RepeatedKFold())\r\n'<sklearn.model_selection._split.RepeatedKFold object at 0x0000016421AA4288>'\r\n>>> repr(RepeatedStratifiedKFold())\r\n'<sklearn.model_selection._split.RepeatedStratifiedKFold object at 0x0000016420E115C8>'\r\n```\r\n\r\n#### Versions\r\n```\r\nSystem:\r\n    python: 3.7.4 (default, Aug  9 2019, 18:34:13) [MSC v.1915 64 bit (AMD64)]\r\nexecutable: D:\\anaconda3\\envs\\xyz\\python.exe\r\n   machine: Windows-10-10.0.16299-SP0\r\n\r\nBLAS:\r\n    macros:\r\n  lib_dirs:\r\ncblas_libs: cblas\r\n\r\nPython deps:\r\n       pip: 19.2.2\r\nsetuptools: 41.0.1\r\n   sklearn: 0.21.2\r\n     numpy: 1.16.4\r\n     scipy: 1.3.1\r\n    Cython: None\r\n    pandas: 0.24.2\r\n```\n",
  "hints_text": "The `__repr__` is not defined in the `_RepeatedSplit` class from which these cross-validation are inheriting. A possible fix should be:\r\n\r\n```diff\r\ndiff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\r\nindex ab681e89c..8a16f68bc 100644\r\n--- a/sklearn/model_selection/_split.py\r\n+++ b/sklearn/model_selection/_split.py\r\n@@ -1163,6 +1163,9 @@ class _RepeatedSplits(metaclass=ABCMeta):\r\n                      **self.cvargs)\r\n         return cv.get_n_splits(X, y, groups) * self.n_repeats\r\n \r\n+    def __repr__(self):\r\n+        return _build_repr(self)\r\n+\r\n \r\n class RepeatedKFold(_RepeatedSplits):\r\n     \"\"\"Repeated K-Fold cross validator.\r\n```\r\n\r\nWe would need to have a regression test to check that we print the right representation.\nHi @glemaitre, I'm interested in working on this fix and the regression test. I've never contributed here so I'll check the contribution guide and tests properly before starting.\nThanks @DrGFreeman, go ahead. \nAfter adding the `__repr__` method to the `_RepeatedSplit`, the `repr()` function returns `None` for the `n_splits` parameter. This is because the `n_splits` parameter is not an attribute of the class itself but is stored in the `cvargs` class attribute.\r\n\r\nI will modify the `_build_repr` function to include the values of the parameters stored in the `cvargs` class attribute if the class has this attribute.",
  "created_at": "2019-09-14T15:31:18Z",
  "version": "0.22",
  "FAIL_TO_PASS": "[\"sklearn/model_selection/tests/test_split.py::test_repeated_cv_repr[RepeatedKFold]\", \"sklearn/model_selection/tests/test_split.py::test_repeated_cv_repr[RepeatedStratifiedKFold]\"]",
  "PASS_TO_PASS": "[\"sklearn/model_selection/tests/test_split.py::test_cross_validator_with_default_params\", \"sklearn/model_selection/tests/test_split.py::test_2d_y\", \"sklearn/model_selection/tests/test_split.py::test_kfold_valueerrors\", \"sklearn/model_selection/tests/test_split.py::test_kfold_indices\", \"sklearn/model_selection/tests/test_split.py::test_kfold_no_shuffle\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_no_shuffle\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[4-False]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[4-True]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[5-False]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[5-True]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[6-False]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[6-True]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[7-False]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[7-True]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[8-False]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[8-True]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[9-False]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[9-True]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[10-False]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios[10-True]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_label_invariance[4-False]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_label_invariance[4-True]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_label_invariance[6-False]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_label_invariance[6-True]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_label_invariance[7-False]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_label_invariance[7-True]\", \"sklearn/model_selection/tests/test_split.py::test_kfold_balance\", \"sklearn/model_selection/tests/test_split.py::test_stratifiedkfold_balance\", \"sklearn/model_selection/tests/test_split.py::test_shuffle_kfold\", \"sklearn/model_selection/tests/test_split.py::test_shuffle_kfold_stratifiedkfold_reproducibility\", \"sklearn/model_selection/tests/test_split.py::test_shuffle_stratifiedkfold\", \"sklearn/model_selection/tests/test_split.py::test_kfold_can_detect_dependent_samples_on_digits\", \"sklearn/model_selection/tests/test_split.py::test_shuffle_split\", \"sklearn/model_selection/tests/test_split.py::test_shuffle_split_default_test_size[None-9-1-ShuffleSplit]\", \"sklearn/model_selection/tests/test_split.py::test_shuffle_split_default_test_size[None-9-1-StratifiedShuffleSplit]\", \"sklearn/model_selection/tests/test_split.py::test_shuffle_split_default_test_size[8-8-2-ShuffleSplit]\", \"sklearn/model_selection/tests/test_split.py::test_shuffle_split_default_test_size[8-8-2-StratifiedShuffleSplit]\", \"sklearn/model_selection/tests/test_split.py::test_shuffle_split_default_test_size[0.8-8-2-ShuffleSplit]\", \"sklearn/model_selection/tests/test_split.py::test_shuffle_split_default_test_size[0.8-8-2-StratifiedShuffleSplit]\", \"sklearn/model_selection/tests/test_split.py::test_group_shuffle_split_default_test_size[None-8-2]\", \"sklearn/model_selection/tests/test_split.py::test_group_shuffle_split_default_test_size[7-7-3]\", \"sklearn/model_selection/tests/test_split.py::test_group_shuffle_split_default_test_size[0.7-7-3]\", \"sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_init\", \"sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_respects_test_size\", \"sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_iter\", \"sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_even\", \"sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_overlap_train_test_bug\", \"sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_multilabel\", \"sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_multilabel_many_labels\", \"sklearn/model_selection/tests/test_split.py::test_predefinedsplit_with_kfold_split\", \"sklearn/model_selection/tests/test_split.py::test_group_shuffle_split\", \"sklearn/model_selection/tests/test_split.py::test_leave_one_p_group_out\", \"sklearn/model_selection/tests/test_split.py::test_leave_group_out_changing_groups\", \"sklearn/model_selection/tests/test_split.py::test_leave_one_p_group_out_error_on_fewer_number_of_groups\", \"sklearn/model_selection/tests/test_split.py::test_repeated_cv_value_errors\", \"sklearn/model_selection/tests/test_split.py::test_repeated_kfold_determinstic_split\", \"sklearn/model_selection/tests/test_split.py::test_get_n_splits_for_repeated_kfold\", \"sklearn/model_selection/tests/test_split.py::test_get_n_splits_for_repeated_stratified_kfold\", \"sklearn/model_selection/tests/test_split.py::test_repeated_stratified_kfold_determinstic_split\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_errors\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[1.2-0.8]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[1.0-0.8]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[0.0-0.8]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[-0.2-0.8]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[0.8-1.2]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[0.8-1.0]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[0.8-0.0]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[0.8--0.2]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[-10-0.8]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[0-0.8]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[11-0.8]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[0.8--10]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[0.8-0]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[0.8-11]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_default_test_size[None-7-3]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_default_test_size[8-8-2]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_default_test_size[0.8-8-2]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_pandas\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_sparse\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_mock_pandas\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_list_input\", \"sklearn/model_selection/tests/test_split.py::test_shufflesplit_errors[2.0-None]\", \"sklearn/model_selection/tests/test_split.py::test_shufflesplit_errors[1.0-None]\", \"sklearn/model_selection/tests/test_split.py::test_shufflesplit_errors[0.1-0.95]\", \"sklearn/model_selection/tests/test_split.py::test_shufflesplit_errors[None-train_size3]\", \"sklearn/model_selection/tests/test_split.py::test_shufflesplit_errors[11-None]\", \"sklearn/model_selection/tests/test_split.py::test_shufflesplit_errors[10-None]\", \"sklearn/model_selection/tests/test_split.py::test_shufflesplit_errors[8-3]\", \"sklearn/model_selection/tests/test_split.py::test_shufflesplit_reproducible\", \"sklearn/model_selection/tests/test_split.py::test_stratifiedshufflesplit_list_input\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_allow_nans\", \"sklearn/model_selection/tests/test_split.py::test_check_cv\", \"sklearn/model_selection/tests/test_split.py::test_cv_iterable_wrapper\", \"sklearn/model_selection/tests/test_split.py::test_group_kfold\", \"sklearn/model_selection/tests/test_split.py::test_time_series_cv\", \"sklearn/model_selection/tests/test_split.py::test_time_series_max_train_size\", \"sklearn/model_selection/tests/test_split.py::test_nested_cv\", \"sklearn/model_selection/tests/test_split.py::test_build_repr\", \"sklearn/model_selection/tests/test_split.py::test_shuffle_split_empty_trainset[ShuffleSplit]\", \"sklearn/model_selection/tests/test_split.py::test_shuffle_split_empty_trainset[GroupShuffleSplit]\", \"sklearn/model_selection/tests/test_split.py::test_shuffle_split_empty_trainset[StratifiedShuffleSplit]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_empty_trainset\", \"sklearn/model_selection/tests/test_split.py::test_leave_one_out_empty_trainset\", \"sklearn/model_selection/tests/test_split.py::test_leave_p_out_empty_trainset\"]",
  "environment_setup_commit": "7e85a6d1f038bbb932b36f18d75df6be937ed00d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.009811",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}