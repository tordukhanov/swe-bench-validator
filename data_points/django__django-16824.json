{
  "repo": "django/django",
  "instance_id": "django__django-16824",
  "base_commit": "49830025c992fbc8d8f213e7c16dba1391c6adf2",
  "patch": "diff --git a/django/core/management/commands/dbshell.py b/django/core/management/commands/dbshell.py\n--- a/django/core/management/commands/dbshell.py\n+++ b/django/core/management/commands/dbshell.py\n@@ -41,7 +41,7 @@ def handle(self, **options):\n             raise CommandError(\n                 '\"%s\" returned non-zero exit status %s.'\n                 % (\n-                    \" \".join(e.cmd),\n+                    \" \".join(map(str, e.cmd)),\n                     e.returncode,\n                 ),\n                 returncode=e.returncode,\n",
  "test_patch": "diff --git a/tests/dbshell/test_sqlite.py b/tests/dbshell/test_sqlite.py\n--- a/tests/dbshell/test_sqlite.py\n+++ b/tests/dbshell/test_sqlite.py\n@@ -1,5 +1,9 @@\n+import subprocess\n from pathlib import Path\n+from unittest import mock, skipUnless\n \n+from django.core.management import CommandError, call_command\n+from django.db import connection\n from django.db.backends.sqlite3.client import DatabaseClient\n from django.test import SimpleTestCase\n \n@@ -21,3 +25,18 @@ def test_parameters(self):\n             self.settings_to_cmd_args_env({\"NAME\": \"test.db.sqlite3\"}, [\"-help\"]),\n             ([\"sqlite3\", \"test.db.sqlite3\", \"-help\"], None),\n         )\n+\n+    @skipUnless(connection.vendor == \"sqlite\", \"SQLite test\")\n+    def test_non_zero_exit_status_when_path_to_db_is_path(self):\n+        sqlite_with_path = {\n+            \"ENGINE\": \"django.db.backends.sqlite3\",\n+            \"NAME\": Path(\"test.db.sqlite3\"),\n+        }\n+        cmd_args = self.settings_to_cmd_args_env(sqlite_with_path)[0]\n+\n+        msg = '\"sqlite3 test.db.sqlite3\" returned non-zero exit status 1.'\n+        with mock.patch(\n+            \"django.db.backends.sqlite3.client.DatabaseClient.runshell\",\n+            side_effect=subprocess.CalledProcessError(returncode=1, cmd=cmd_args),\n+        ), self.assertRaisesMessage(CommandError, msg):\n+            call_command(\"dbshell\")\n",
  "problem_statement": "dbshell management command can crash if DATABASES[\"name\"] is a PosixPath\nDescription\n\t\nWith a sqlite database configured in settings.py like this:\nDATABASES = {\n\t\"default\": {\n\t\t\"ENGINE\": \"django.db.backends.sqlite3\",\n\t\t\"NAME\": BASE_DIR / \"db.sqlite3\",\n\t}\n}\nexiting ./manage.py dbshell using Control - d sometimes results in this exception:\nTraceback (most recent call last):\n File \"/home/ubuntu/virtualenv/lib/python3.11/site-packages/django/core/management/commands/dbshell.py\", line 30, in handle\n\tconnection.client.runshell(options[\"parameters\"])\n File \"/home/ubuntu/virtualenv/lib/python3.11/site-packages/django/db/backends/base/client.py\", line 28, in runshell\n\tsubprocess.run(args, env=env, check=True)\n File \"/usr/lib/python3.11/subprocess.py\", line 571, in run\n\traise CalledProcessError(retcode, process.args,\nsubprocess.CalledProcessError: Command '['sqlite3', PosixPath('/home/ubuntu/planning-poker/db.sqlite3')]' returned non-zero exit status 1.\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n File \"/home/ubuntu/planning-poker/./manage.py\", line 30, in <module>\n\tmain()\n File \"/home/ubuntu/planning-poker/./manage.py\", line 26, in main\n\texecute_from_command_line(sys.argv)\n File \"/home/ubuntu/virtualenv/lib/python3.11/site-packages/django/core/management/__init__.py\", line 442, in execute_from_command_line\n\tutility.execute()\n File \"/home/ubuntu/virtualenv/lib/python3.11/site-packages/django/core/management/__init__.py\", line 436, in execute\n\tself.fetch_command(subcommand).run_from_argv(self.argv)\n File \"/home/ubuntu/virtualenv/lib/python3.11/site-packages/django/core/management/base.py\", line 412, in run_from_argv\n\tself.execute(*args, **cmd_options)\n File \"/home/ubuntu/virtualenv/lib/python3.11/site-packages/django/core/management/base.py\", line 458, in execute\n\toutput = self.handle(*args, **options)\n\t\t\t ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n File \"/home/ubuntu/virtualenv/lib/python3.11/site-packages/django/core/management/commands/dbshell.py\", line 44, in handle\n\t\" \".join(e.cmd),\n\t^^^^^^^^^^^^^^^\nTypeError: sequence item 1: expected str instance, PosixPath found\ncoercing each item in e.cmd to string should fix this.\n",
  "hints_text": "",
  "created_at": "2023-05-03T12:26:08Z",
  "version": "5.0",
  "FAIL_TO_PASS": "[\"test_non_zero_exit_status_when_path_to_db_is_path (dbshell.test_sqlite.SqliteDbshellCommandTestCase.test_non_zero_exit_status_when_path_to_db_is_path)\"]",
  "PASS_TO_PASS": "[\"test_parameters (dbshell.test_sqlite.SqliteDbshellCommandTestCase.test_parameters)\", \"test_path_name (dbshell.test_sqlite.SqliteDbshellCommandTestCase.test_path_name)\"]",
  "environment_setup_commit": "4a72da71001f154ea60906a2f74898d32b7322a7",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.772968",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}