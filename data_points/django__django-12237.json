{
  "repo": "django/django",
  "instance_id": "django__django-12237",
  "base_commit": "cf5d4701dc12ad69d51042b0d7e81e4a54de4bd7",
  "patch": "diff --git a/django/utils/text.py b/django/utils/text.py\n--- a/django/utils/text.py\n+++ b/django/utils/text.py\n@@ -402,7 +402,7 @@ def slugify(value, allow_unicode=False):\n         value = unicodedata.normalize('NFKC', value)\n     else:\n         value = unicodedata.normalize('NFKD', value).encode('ascii', 'ignore').decode('ascii')\n-    value = re.sub(r'[^\\w\\s-]', '', value).strip().lower()\n+    value = re.sub(r'[^\\w\\s-]', '', value.lower()).strip()\n     return re.sub(r'[-\\s]+', '-', value)\n \n \n",
  "test_patch": "diff --git a/tests/admin_views/tests.py b/tests/admin_views/tests.py\n--- a/tests/admin_views/tests.py\n+++ b/tests/admin_views/tests.py\n@@ -4442,13 +4442,13 @@ def test_prepopulated_fields(self):\n         # Main form ----------------------------------------------------------\n         self.selenium.find_element_by_id('id_pubdate').send_keys('2012-02-18')\n         self.select_option('#id_status', 'option two')\n-        self.selenium.find_element_by_id('id_name').send_keys(' this is the mAin nÀMë and it\\'s awεšomeııı')\n+        self.selenium.find_element_by_id('id_name').send_keys(' this is the mAin nÀMë and it\\'s awεšomeıııİ')\n         slug1 = self.selenium.find_element_by_id('id_slug1').get_attribute('value')\n         slug2 = self.selenium.find_element_by_id('id_slug2').get_attribute('value')\n         slug3 = self.selenium.find_element_by_id('id_slug3').get_attribute('value')\n-        self.assertEqual(slug1, 'main-name-and-its-awesomeiii-2012-02-18')\n-        self.assertEqual(slug2, 'option-two-main-name-and-its-awesomeiii')\n-        self.assertEqual(slug3, 'this-is-the-main-n\\xe0m\\xeb-and-its-aw\\u03b5\\u0161ome\\u0131\\u0131\\u0131')\n+        self.assertEqual(slug1, 'main-name-and-its-awesomeiiii-2012-02-18')\n+        self.assertEqual(slug2, 'option-two-main-name-and-its-awesomeiiii')\n+        self.assertEqual(slug3, 'this-is-the-main-n\\xe0m\\xeb-and-its-aw\\u03b5\\u0161ome\\u0131\\u0131\\u0131i')\n \n         # Stacked inlines ----------------------------------------------------\n         # Initial inline\n@@ -4526,11 +4526,12 @@ def test_prepopulated_fields(self):\n             self.selenium.find_element_by_xpath('//input[@value=\"Save\"]').click()\n         self.assertEqual(MainPrepopulated.objects.all().count(), 1)\n         MainPrepopulated.objects.get(\n-            name=' this is the mAin nÀMë and it\\'s awεšomeııı',\n+            name=' this is the mAin nÀMë and it\\'s awεšomeıııİ',\n             pubdate='2012-02-18',\n             status='option two',\n-            slug1='main-name-and-its-awesomeiii-2012-02-18',\n-            slug2='option-two-main-name-and-its-awesomeiii',\n+            slug1='main-name-and-its-awesomeiiii-2012-02-18',\n+            slug2='option-two-main-name-and-its-awesomeiiii',\n+            slug3='this-is-the-main-nàmë-and-its-awεšomeıııi',\n         )\n         self.assertEqual(RelatedPrepopulated.objects.all().count(), 4)\n         RelatedPrepopulated.objects.get(\ndiff --git a/tests/utils_tests/test_text.py b/tests/utils_tests/test_text.py\n--- a/tests/utils_tests/test_text.py\n+++ b/tests/utils_tests/test_text.py\n@@ -196,6 +196,7 @@ def test_slugify(self):\n             ('foo ıç bar', 'foo-ıç-bar', True),\n             ('    foo ıç bar', 'foo-ıç-bar', True),\n             ('你好', '你好', True),\n+            ('İstanbul', 'istanbul', True),\n         )\n         for value, output, is_unicode in items:\n             self.assertEqual(text.slugify(value, allow_unicode=is_unicode), output)\n",
  "problem_statement": "slugify() doesn't return a valid slug for \"İ\".\nDescription\n\t\nWhile working on an international project, we discovered that the turkish/azerbaijani letter İ can not be properly processed when SlugField and slugify are run with allow_unicode=True.\nThe project itself runs with Django 2.2.6 and Wagtail 2.6.2. I first talked about this in the Wagtail Support Channel and while researching further, discovered that this is a Django/Python related issue. This was tested on Python 3.6 and on Python 3.7.\n(quick shoutout to Matt Wescott @gasmanic of Wagtail Fame for being a sparing partner in this)\nThere is a rather detailed analysis (README) in a git repo I created ​https://github.com/originell/django-wagtail-turkish-i - it was also the basis for my initial call for help in wagtail's support channel. Meanwhile I have extended it with a Django-only project, as to be a 100% sure this has nothing to do with Wagtail.\nI was not able to find anything similar in trac. While I encourage whoever is reading this to actually read the README in the git repo, I want to honor your time and will try to provide a more concise version of the bug here.\nExplanation\nmodels.py\nfrom django.db import models\nfrom django.utils.text import slugify\nclass Page(models.Model):\n\ttitle = models.CharField(max_length=255)\n\tslug = models.SlugField(allow_unicode=True)\n\tdef __str__(self):\n\t\treturn self.title\nUsing this in a shell/test like a (Model)Form might:\nfrom django.utils.text import slugify\npage = Page(title=\"Hello İstanbul\")\npage.slug = slugify(page.title, allow_unicode=True)\npage.full_clean()\nfull_clean() then raises\ndjango.core.exceptions.ValidationError: {'slug': Enter a valid 'slug' consisting of Unicode letters, numbers, underscores, or hyphens.?}\nWhy is that?\nslugify does the following internally:\nre.sub(r'[^\\w\\s-]', '', value).strip().lower()\nThing is, Python's .lower() of the İ in İstanbul looks like this:\n>>> [unicodedata.name(character) for character in 'İ'.lower()]\n['LATIN SMALL LETTER I', 'COMBINING DOT ABOVE']\nSo, while slugify() finishes, the result is then passed into SlugField which uses the slug_unicode_re (^[-\\w]+\\Z). However, the Combining Dot Above is not a valid \\w:\n>>> [(character, unicodedata.name(character), slug_unicode_re.match(character)) for character in 'İ'.lower()]\n[\n ('i', 'LATIN SMALL LETTER I', <re.Match object; span=(0, 1), match='i'>),\n # EUREKA!!\n ('̇', 'COMBINING DOT ABOVE', None)\n]\nSo that's why the ValidationError is raised.\nProposed Solution\nThe culprit seems to be the order in which lower() is called in slugify. The assumption that the lowercase version of a re.sub-ed string is still a valid slug_unicode_re, does not seem to hold true.\nHence, instead of doing this in slugify()\nre.sub(r'[^\\w\\s-]', '', value).strip().lower()\nIt might be better to do it like this\nre.sub(r'[^\\w\\s-]', '', value.lower()).strip()\nIs Python the actual culprit?\nYeah it might be. Matt (@gasmanic) urged me to also take a look if Python might be doing this wrong. \n The İ is the Latin Capital Letter I with Dot Above. It's codepoint is U+0130 According to the chart for the Latin Extended-A set (​https://www.unicode.org/charts/PDF/U0100.pdf), it's lowercase version is U+0069.\n U+0069 lives in the C0 Controls and Basic Latin set (​https://www.unicode.org/charts/PDF/U0000.pdf). Lo and behold: it is the Latin small letter I. So a latin lowercase i.\nDoes this really mean that Python is doing something weird here by adding the Combining dot above? Honestly, I can't imagine that and I am probably missing an important thing here because my view is too naive.\n---\nI hope this shorter explanation makes sense. If it does not, please try to read through the detailed analysis in the repo (​https://github.com/originell/django-wagtail-turkish-i/blob/master/README.md). If that also does not make a ton of sense, let me know.\nIn any case, thank you for taking the time to read this bug report. Looking forward to feedback and thoughts. I am happy to oblige in any capacity necessary.\n",
  "hints_text": "Thanks for this ticket. I'm not sure if your solution is correct because I'm afraid that we may hit another edge case, nevertheless slugify() should return a valid slug.\nTrue that. I also thought about looping over the characters and simply removing everything that does not match the builtin slug validation regular expressions. However, I threw that away because I thought that this might as well hit some edge case where it could modify the meaning of a word. In any case, if we can find a (more solid) process, I'd be very happy to produce a patch and tests for that.\nI did some digging into this and found some interesting things that I thought that I would share. In short my conclusion is that python does as it should. Firstly because if you perform a lowercase operation on İ in JavaScript the result becomes the same and secondly because in ​https://unicode.org/Public/UNIDATA/SpecialCasing.txt which describes casing rules in some special occasions we can see that the lower case mapping of İ is indeed ['LATIN SMALL LETTER I', 'COMBINING DOT ABOVE']. Things are however a little bit more complicated than that, as it turns out that the casing operation is performed differently depending on which locale is used. Since locale settings should not break code I will not go in to much on it here but for further reading take a look att JavaSript's toLocalLowerCase or at this stack overflow answer ​https://stackoverflow.com/a/19031612. If the locale setting 'TR' is used in these examples then the lowercase version of İ is only LATIN SMALL LETTER I. Now to the possible solution: Replying to Luis Nell: ...I also thought about looping over the characters and simply removing everything that does not match the builtin slug validation regular expressions... As far as I understand it this is mostly what happens by changing the placement of lower() the way you suggests. re.sub(r'[^\\w\\s-]', '', value) is removing all symbols that are not standard Unicode characters or spaces which is almost the same regexp as the slug is then validated against. As previously discovered the problem is when the lower() operation then add new symbols that are not allowed by the regexp. I would therefore argue that moving lower() is a decent solution because it will make the generated slug validate as long as the validation regexp is the same as now. I would however make the case for moving the lower() operation to a different place since Unicode documentation ​https://www.unicode.org/versions/Unicode12.0.0/UnicodeStandard-12.0.pdf states that normalization is not kept during casing operations. Casing operations as defined in Section 3.13, Default Case Algorithms are not guaranteed to preserve Normalization Forms. That is, some strings in a particular Normalization Form (for example, NFC) will no longer be in that form after the casing operation is performed. Therefore I would argue that it would be better to place the lower operation over the normalization as follows: value = str(value).lower() if allow_unicode: value = unicodedata.normalize('NFKC', value) else: value = unicodedata.normalize('NFKD', value).encode('ascii', 'ignore').decode('ascii') value = re.sub(r'[^\\w\\s-]', '', value).strip() return re.sub(r'[-\\s]+', '-', value) This way the string is lower cased then normalized to keep as much of the special characters as possible and then the remaining symbols are removed with the regexp substitution. I guess this could in theory lead to unintended different meaning of words but I don't know if it would be feasible to do this kind of string manipulation with guaranteed preserved meaning. I have started to prepare a patch with my proposed change as well as tests so I have assigned this issue to me for now. My intention is to submit a patch later this week that could be tested by a few others maybe to check for further issues. Luis Nell, if you feel that you would rather write the patch yourself and that I overstepped by assigning myself, just claim the issue for yourself no hard feelings on my part :)\nReplying to Christoffer Sjöbergsson: Thanks for looking further into this. The part about the special casing is very enlightening and confirms my view being a tad too naive haha I have started to prepare a patch with my proposed change as well as tests so I have assigned this issue to me for now. My intention is to submit a patch later this week that could be tested by a few others maybe to check for further issues. Luis Nell, if you feel that you would rather write the patch yourself and that I overstepped by assigning myself, just claim the issue for yourself no hard feelings on my part :) By no means are you overstepping. Please, if you can find the time, go ahead. I was just offering my time because I know how stressful maintaining can be and how nice it is to not have to fix \"yet another bug\". In case you can't find the time, just let me know. Again, thanks for looking into this!",
  "created_at": "2019-12-21T12:24:00Z",
  "version": "3.1",
  "FAIL_TO_PASS": "[\"test_slugify (utils_tests.test_text.TestUtilsText)\"]",
  "PASS_TO_PASS": "[\"test_compress_sequence (utils_tests.test_text.TestUtilsText)\", \"test_format_lazy (utils_tests.test_text.TestUtilsText)\", \"test_get_text_list (utils_tests.test_text.TestUtilsText)\", \"test_get_valid_filename (utils_tests.test_text.TestUtilsText)\", \"test_normalize_newlines (utils_tests.test_text.TestUtilsText)\", \"test_phone2numeric (utils_tests.test_text.TestUtilsText)\", \"test_smart_split (utils_tests.test_text.TestUtilsText)\", \"test_truncate_chars (utils_tests.test_text.TestUtilsText)\", \"test_truncate_chars_html (utils_tests.test_text.TestUtilsText)\", \"test_truncate_html_words (utils_tests.test_text.TestUtilsText)\", \"test_truncate_words (utils_tests.test_text.TestUtilsText)\", \"test_unescape_entities (utils_tests.test_text.TestUtilsText)\", \"test_unescape_entities_deprecated (utils_tests.test_text.TestUtilsText)\", \"test_unescape_string_literal (utils_tests.test_text.TestUtilsText)\", \"test_wrap (utils_tests.test_text.TestUtilsText)\", \"test_should_be_able_to_edit_related_objects_on_add_view (admin_views.tests.AdminCustomSaveRelatedTests)\", \"test_should_be_able_to_edit_related_objects_on_change_view (admin_views.tests.AdminCustomSaveRelatedTests)\", \"test_should_be_able_to_edit_related_objects_on_changelist_view (admin_views.tests.AdminCustomSaveRelatedTests)\", \"test_explicitly_provided_pk (admin_views.tests.GetFormsetsWithInlinesArgumentTest)\", \"test_implicitly_generated_pk (admin_views.tests.GetFormsetsWithInlinesArgumentTest)\", \"test_GET_parent_add (admin_views.tests.TestInlineNotEditable)\", \"test_generic_content_object_in_list_display (admin_views.tests.TestGenericRelations)\", \"test_secure_view_shows_login_if_not_logged_in (admin_views.tests.SecureViewTests)\", \"test_staff_member_required_decorator_works_with_argument (admin_views.tests.SecureViewTests)\", \"Test for ticket 2445 changes to admin.\", \"Admin index views don't break when user's ModelAdmin removes standard urls\", \"test_lang_name_present (admin_views.tests.ValidXHTMLTests)\", \"test_client_logout_url_can_be_used_to_login (admin_views.tests.AdminViewLogoutTests)\", \"test_logout (admin_views.tests.AdminViewLogoutTests)\", \"test_custom_changelist (admin_views.tests.TestCustomChangeList)\", \"test_unicode_delete (admin_views.tests.AdminViewUnicodeTest)\", \"test_unicode_edit (admin_views.tests.AdminViewUnicodeTest)\", \"test_all_fields_hidden (admin_views.tests.TestLabelVisibility)\", \"test_all_fields_visible (admin_views.tests.TestLabelVisibility)\", \"test_mixin (admin_views.tests.TestLabelVisibility)\", \"test_form_has_multipart_enctype (admin_views.tests.AdminInlineFileUploadTest)\", \"test_inline_file_upload_edit_validation_error_post (admin_views.tests.AdminInlineFileUploadTest)\", \"test_custom_admin_site_app_index_view_and_template (admin_views.tests.CustomModelAdminTest)\", \"test_custom_admin_site_index_view_and_template (admin_views.tests.CustomModelAdminTest)\", \"test_custom_admin_site_login_form (admin_views.tests.CustomModelAdminTest)\", \"test_custom_admin_site_login_template (admin_views.tests.CustomModelAdminTest)\", \"test_custom_admin_site_logout_template (admin_views.tests.CustomModelAdminTest)\", \"test_custom_admin_site_password_change_done_template (admin_views.tests.CustomModelAdminTest)\", \"test_custom_admin_site_password_change_template (admin_views.tests.CustomModelAdminTest)\", \"test_custom_admin_site_password_change_with_extra_context (admin_views.tests.CustomModelAdminTest)\", \"test_custom_admin_site_view (admin_views.tests.CustomModelAdminTest)\", \"test_pwd_change_custom_template (admin_views.tests.CustomModelAdminTest)\", \"The right link is displayed if view_on_site is a callable\", \"The 'View on site' button is not displayed if view_on_site is False\", \"The 'View on site' button is displayed if view_on_site is True\", \"test_inline (admin_views.tests.AdminInheritedInlinesTest)\", \"test_prepopulated_maxlength_localized (admin_views.tests.PrePopulatedTest)\", \"test_prepopulated_off (admin_views.tests.PrePopulatedTest)\", \"test_prepopulated_on (admin_views.tests.PrePopulatedTest)\", \"test_view_only_add_form (admin_views.tests.PrePopulatedTest)\", \"test_view_only_change_form (admin_views.tests.PrePopulatedTest)\", \"test_group_permission_performance (admin_views.tests.GroupAdminTest)\", \"test_save_button (admin_views.tests.GroupAdminTest)\", \"test_add (admin_views.tests.AdminViewProxyModelPermissionsTests)\", \"test_change (admin_views.tests.AdminViewProxyModelPermissionsTests)\", \"test_delete (admin_views.tests.AdminViewProxyModelPermissionsTests)\", \"test_view (admin_views.tests.AdminViewProxyModelPermissionsTests)\", \"test_js_minified_only_if_debug_is_false (admin_views.tests.AdminJavaScriptTest)\", \"Regression test for 14880\", \"Regression test for 20182\", \"test_list_display_method_same_name_as_reverse_accessor (admin_views.tests.RawIdFieldsTest)\", \"test_change_form_URL_has_correct_value (admin_views.tests.AdminViewFormUrlTest)\", \"test_initial_data_can_be_overridden (admin_views.tests.AdminViewFormUrlTest)\", \"test_message_debug (admin_views.tests.AdminUserMessageTest)\", \"test_message_error (admin_views.tests.AdminUserMessageTest)\", \"test_message_extra_tags (admin_views.tests.AdminUserMessageTest)\", \"test_message_info (admin_views.tests.AdminUserMessageTest)\", \"test_message_success (admin_views.tests.AdminUserMessageTest)\", \"test_message_warning (admin_views.tests.AdminUserMessageTest)\", \"test_add_view_form_and_formsets_run_validation (admin_views.tests.AdminViewOnSiteTests)\", \"test_change_view_form_and_formsets_run_validation (admin_views.tests.AdminViewOnSiteTests)\", \"The view_on_site value is either a boolean or a callable\", \"None is returned if model doesn't have get_absolute_url\", \"The default behavior is followed if view_on_site is True\", \"test_beginning_matches (admin_views.tests.AdminSearchTest)\", \"test_exact_matches (admin_views.tests.AdminSearchTest)\", \"test_no_total_count (admin_views.tests.AdminSearchTest)\", \"test_pluggable_search (admin_views.tests.AdminSearchTest)\", \"test_reset_link (admin_views.tests.AdminSearchTest)\", \"A search that mentions sibling models\", \"test_with_fk_to_field (admin_views.tests.AdminSearchTest)\", \"Object history button link should work and contain the pk value quoted.\", \"Link to the changeform of the object in changelist should use reverse() and be quoted -- #18072\", \"The link from the delete confirmation page referring back to the changeform of the object should be quoted\", \"Retrieving the object using urlencoded form of primary key should work\", \"test_get_history_view (admin_views.tests.AdminViewStringPrimaryKeyTest)\", \"The link from the recent actions list referring to the changeform of the object should be quoted\", \"As soon as an object is added using \\\"Save and continue editing\\\"\", \"'View on site should' work properly with char fields\", \"A model with a primary key that ends with add or is `add` should be visible\", \"A model with a primary key that ends with delete should be visible\", \"A model with a primary key that ends with history should be visible\", \"Check the never-cache status of the JavaScript i18n view\", \"Check the never-cache status of the main index\", \"Check the never-cache status of an application index\", \"Check the never-cache status of login views\", \"Check the never-cache status of logout view\", \"Check the never-cache status of a model add page\", \"Check the never-cache status of a model delete page\", \"Check the never-cache status of a model history page\", \"Check the never-cache status of a model index\", \"Check the never-cache status of a model edit page\", \"Check the never-cache status of the password change view\", \"Check the never-cache status of the password change done view\", \"test_app_model_in_app_index_body_class (admin_views.tests.CSSTest)\", \"test_app_model_in_delete_confirmation_body_class (admin_views.tests.CSSTest)\", \"test_app_model_in_delete_selected_confirmation_body_class (admin_views.tests.CSSTest)\", \"test_app_model_in_form_body_class (admin_views.tests.CSSTest)\", \"test_app_model_in_list_body_class (admin_views.tests.CSSTest)\", \"test_changelist_field_classes (admin_views.tests.CSSTest)\", \"test_field_prefix_css_classes (admin_views.tests.CSSTest)\", \"test_index_css_classes (admin_views.tests.CSSTest)\", \"test_empty (admin_views.tests.DateHierarchyTests)\", \"test_multiple_years (admin_views.tests.DateHierarchyTests)\", \"test_related_field (admin_views.tests.DateHierarchyTests)\", \"test_single (admin_views.tests.DateHierarchyTests)\", \"test_within_month (admin_views.tests.DateHierarchyTests)\", \"test_within_year (admin_views.tests.DateHierarchyTests)\", \"test_save_as_continue_false (admin_views.tests.SaveAsTests)\", \"'save as' creates a new person\", \"test_save_as_new_with_inlines_with_validation_errors (admin_views.tests.SaveAsTests)\", \"test_save_as_new_with_validation_errors (admin_views.tests.SaveAsTests)\", \"test_save_as_new_with_validation_errors_with_inlines (admin_views.tests.SaveAsTests)\", \"test_change_password_template (admin_views.tests.AdminCustomTemplateTests)\", \"test_custom_model_admin_templates (admin_views.tests.AdminCustomTemplateTests)\", \"test_extended_bodyclass_change_list (admin_views.tests.AdminCustomTemplateTests)\", \"test_extended_bodyclass_template_change_form (admin_views.tests.AdminCustomTemplateTests)\", \"test_extended_bodyclass_template_delete_confirmation (admin_views.tests.AdminCustomTemplateTests)\", \"test_extended_bodyclass_template_delete_selected_confirmation (admin_views.tests.AdminCustomTemplateTests)\", \"test_extended_bodyclass_template_index (admin_views.tests.AdminCustomTemplateTests)\", \"test_extended_bodyclass_template_login (admin_views.tests.AdminCustomTemplateTests)\", \"test_filter_with_custom_template (admin_views.tests.AdminCustomTemplateTests)\", \"test_cyclic (admin_views.tests.AdminViewDeletedObjectsTest)\", \"The delete view uses ModelAdmin.get_deleted_objects().\", \"test_generic_relations (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_generic_relations_with_related_query_name (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_inheritance (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_multiple_fkeys_to_same_instance (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_multiple_fkeys_to_same_model (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_nesting (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_not_registered (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_perms_needed (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_post_delete_protected (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_post_delete_restricted (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_protected (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_restricted (admin_views.tests.AdminViewDeletedObjectsTest)\", \"test_add_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)\", \"test_assert_url_equal (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)\", \"test_change_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)\", \"test_changelist_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)\", \"test_delete_view (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)\", \"test_url_prefix (admin_views.tests.NamespacedAdminKeepChangeListFiltersTests)\", \"test_changelist_input_html (admin_views.tests.AdminViewListEditable)\", \"test_custom_pk (admin_views.tests.AdminViewListEditable)\", \"test_inheritance (admin_views.tests.AdminViewListEditable)\", \"test_inheritance_2 (admin_views.tests.AdminViewListEditable)\", \"test_list_editable_action_choices (admin_views.tests.AdminViewListEditable)\", \"test_list_editable_action_submit (admin_views.tests.AdminViewListEditable)\", \"test_list_editable_ordering (admin_views.tests.AdminViewListEditable)\", \"test_list_editable_pagination (admin_views.tests.AdminViewListEditable)\", \"test_list_editable_popup (admin_views.tests.AdminViewListEditable)\", \"test_non_field_errors (admin_views.tests.AdminViewListEditable)\", \"test_non_form_errors (admin_views.tests.AdminViewListEditable)\", \"test_non_form_errors_is_errorlist (admin_views.tests.AdminViewListEditable)\", \"test_pk_hidden_fields (admin_views.tests.AdminViewListEditable)\", \"Similarly as test_pk_hidden_fields, but when the hidden pk fields are\", \"test_post_messages (admin_views.tests.AdminViewListEditable)\", \"test_post_submission (admin_views.tests.AdminViewListEditable)\", \"test_add_view (admin_views.tests.AdminKeepChangeListFiltersTests)\", \"test_assert_url_equal (admin_views.tests.AdminKeepChangeListFiltersTests)\", \"test_change_view (admin_views.tests.AdminKeepChangeListFiltersTests)\", \"test_changelist_view (admin_views.tests.AdminKeepChangeListFiltersTests)\", \"test_delete_view (admin_views.tests.AdminKeepChangeListFiltersTests)\", \"test_url_prefix (admin_views.tests.AdminKeepChangeListFiltersTests)\", \"test_add_model_modeladmin_defer_qs (admin_views.tests.AdminCustomQuerysetTest)\", \"test_add_model_modeladmin_only_qs (admin_views.tests.AdminCustomQuerysetTest)\", \"test_change_view (admin_views.tests.AdminCustomQuerysetTest)\", \"test_changelist_view (admin_views.tests.AdminCustomQuerysetTest)\", \"test_changelist_view_count_queries (admin_views.tests.AdminCustomQuerysetTest)\", \"test_edit_model_modeladmin_defer_qs (admin_views.tests.AdminCustomQuerysetTest)\", \"test_edit_model_modeladmin_only_qs (admin_views.tests.AdminCustomQuerysetTest)\", \"test_history_view_custom_qs (admin_views.tests.AdminCustomQuerysetTest)\", \"test_form_url_present_in_context (admin_views.tests.UserAdminTest)\", \"test_password_mismatch (admin_views.tests.UserAdminTest)\", \"test_save_add_another_button (admin_views.tests.UserAdminTest)\", \"test_save_button (admin_views.tests.UserAdminTest)\", \"test_save_continue_editing_button (admin_views.tests.UserAdminTest)\", \"User addition through a FK popup should return the appropriate JavaScript response.\", \"User change through a FK popup should return the appropriate JavaScript response.\", \"User deletion through a FK popup should return the appropriate JavaScript response.\", \"test_user_permission_performance (admin_views.tests.UserAdminTest)\", \"test_change_form_renders_correct_null_choice_value (admin_views.tests.ReadonlyTest)\", \"test_correct_autoescaping (admin_views.tests.ReadonlyTest)\", \"test_label_suffix_translated (admin_views.tests.ReadonlyTest)\", \"test_readonly_field_overrides (admin_views.tests.ReadonlyTest)\", \"test_readonly_get (admin_views.tests.ReadonlyTest)\", \"Regression test for #13004\", \"test_readonly_manytomany_backwards_ref (admin_views.tests.ReadonlyTest)\", \"test_readonly_manytomany_forwards_ref (admin_views.tests.ReadonlyTest)\", \"test_readonly_onetoone_backwards_ref (admin_views.tests.ReadonlyTest)\", \"test_readonly_post (admin_views.tests.ReadonlyTest)\", \"test_readonly_text_field (admin_views.tests.ReadonlyTest)\", \"test_user_password_change_limited_queryset (admin_views.tests.ReadonlyTest)\", \"test_filters (admin_views.tests.AdminDocsTest)\", \"test_tags (admin_views.tests.AdminDocsTest)\", \"A model with a character PK can be saved as inlines. Regression for #10992\", \"A model with an explicit autofield primary key can be saved as inlines. Regression for #8093\", \"An inherited model can be saved as inlines. Regression for #11042\", \"A model with an integer PK can be saved as inlines. Regression for #10992\", \"test_ordered_inline (admin_views.tests.AdminInlineTests)\", \"A simple model can be saved as inlines\", \"Test add view restricts access and actually adds items.\", \"User with add permission to a section but view-only for inlines.\", \"test_app_list_permissions (admin_views.tests.AdminViewPermissionsTest)\", \"Change view should restrict access and allow users to edit items.\", \"test_change_view_save_as_new (admin_views.tests.AdminViewPermissionsTest)\", \"User has view and add permissions on the inline model.\", \"User has view and delete permissions on the inline model.\", \"test_change_view_with_view_only_inlines (admin_views.tests.AdminViewPermissionsTest)\", \"test_change_view_without_object_change_permission (admin_views.tests.AdminViewPermissionsTest)\", \"test_conditionally_show_add_section_link (admin_views.tests.AdminViewPermissionsTest)\", \"test_conditionally_show_change_section_link (admin_views.tests.AdminViewPermissionsTest)\", \"test_conditionally_show_delete_section_link (admin_views.tests.AdminViewPermissionsTest)\", \"Delete view should restrict access and actually delete items.\", \"test_delete_view_nonexistent_obj (admin_views.tests.AdminViewPermissionsTest)\", \"test_delete_view_with_no_default_permissions (admin_views.tests.AdminViewPermissionsTest)\", \"test_disabled_permissions_when_logged_in (admin_views.tests.AdminViewPermissionsTest)\", \"test_disabled_staff_permissions_when_logged_in (admin_views.tests.AdminViewPermissionsTest)\", \"Regression test for #19327\", \"test_has_module_permission (admin_views.tests.AdminViewPermissionsTest)\", \"History view should restrict access.\", \"test_history_view_bad_url (admin_views.tests.AdminViewPermissionsTest)\", \"test_login (admin_views.tests.AdminViewPermissionsTest)\", \"test_login_has_permission (admin_views.tests.AdminViewPermissionsTest)\", \"test_login_page_notice_for_non_staff_users (admin_views.tests.AdminViewPermissionsTest)\", \"test_login_redirect_for_direct_get (admin_views.tests.AdminViewPermissionsTest)\", \"test_login_successfully_redirects_to_original_URL (admin_views.tests.AdminViewPermissionsTest)\", \"test_overriding_has_module_permission (admin_views.tests.AdminViewPermissionsTest)\", \"test_post_save_message_no_forbidden_links_visible (admin_views.tests.AdminViewPermissionsTest)\", \"test_shortcut_view_only_available_to_staff (admin_views.tests.AdminViewPermissionsTest)\", \"test_L10N_deactivated (admin_views.tests.AdminViewBasicTest)\", \"test_add_with_GET_args (admin_views.tests.AdminViewBasicTest)\", \"test_adminsite_display_site_url (admin_views.tests.AdminViewBasicTest)\", \"test_allowed_filtering_15103 (admin_views.tests.AdminViewBasicTest)\", \"test_allows_attributeerror_to_bubble_up (admin_views.tests.AdminViewBasicTest)\", \"test_basic_add_GET (admin_views.tests.AdminViewBasicTest)\", \"test_basic_add_POST (admin_views.tests.AdminViewBasicTest)\", \"test_basic_edit_GET (admin_views.tests.AdminViewBasicTest)\", \"test_basic_edit_GET_old_url_redirect (admin_views.tests.AdminViewBasicTest)\", \"test_basic_edit_GET_string_PK (admin_views.tests.AdminViewBasicTest)\", \"test_basic_edit_POST (admin_views.tests.AdminViewBasicTest)\", \"test_basic_inheritance_GET_string_PK (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_column_field_classes (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_null_boolean_display (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_callable (admin_views.tests.AdminViewBasicTest)\", \"Query expressions may be used for admin_order_field.\", \"test_change_list_sorting_callable_query_expression_reverse (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_model (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_model_admin (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_model_admin_reverse (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_model_meta (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_multiple (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_override_model_admin (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_preserve_queryset_ordering (admin_views.tests.AdminViewBasicTest)\", \"test_change_list_sorting_property (admin_views.tests.AdminViewBasicTest)\", \"Changes to ManyToManyFields are included in the object's history.\", \"test_change_view_with_show_delete_extra_context (admin_views.tests.AdminViewBasicTest)\", \"test_changelist_with_no_change_url (admin_views.tests.AdminViewBasicTest)\", \"test_date_hierarchy_timezone_dst (admin_views.tests.AdminViewBasicTest)\", \"test_disallowed_filtering (admin_views.tests.AdminViewBasicTest)\", \"test_disallowed_to_field (admin_views.tests.AdminViewBasicTest)\", \"test_edit_save_as (admin_views.tests.AdminViewBasicTest)\", \"test_edit_save_as_delete_inline (admin_views.tests.AdminViewBasicTest)\", \"test_get_sortable_by_columns_subset (admin_views.tests.AdminViewBasicTest)\", \"test_get_sortable_by_no_column (admin_views.tests.AdminViewBasicTest)\", \"Joins shouldn't be performed for <FK>_id fields in list display.\", \"Joins shouldn't be performed for <O2O>_id fields in list display.\", \"test_hide_change_password (admin_views.tests.AdminViewBasicTest)\", \"test_i18n_language_non_english_default (admin_views.tests.AdminViewBasicTest)\", \"test_i18n_language_non_english_fallback (admin_views.tests.AdminViewBasicTest)\", \"Ensure incorrect lookup parameters are handled gracefully.\", \"test_invalid_appindex_url (admin_views.tests.AdminViewBasicTest)\", \"Ensure is_null is handled correctly.\", \"test_jsi18n_with_context (admin_views.tests.AdminViewBasicTest)\", \"Ensure admin changelist filters do not contain objects excluded via limit_choices_to.\", \"test_logout_and_password_change_URLs (admin_views.tests.AdminViewBasicTest)\", \"test_multiple_sort_same_field (admin_views.tests.AdminViewBasicTest)\", \"test_named_group_field_choices_change_list (admin_views.tests.AdminViewBasicTest)\", \"test_named_group_field_choices_filter (admin_views.tests.AdminViewBasicTest)\", \"test_popup_add_POST (admin_views.tests.AdminViewBasicTest)\", \"test_popup_dismiss_related (admin_views.tests.AdminViewBasicTest)\", \"test_relation_spanning_filters (admin_views.tests.AdminViewBasicTest)\", \"test_resolve_admin_views (admin_views.tests.AdminViewBasicTest)\", \"test_sort_indicators_admin_order (admin_views.tests.AdminViewBasicTest)\", \"test_sortable_by_columns_subset (admin_views.tests.AdminViewBasicTest)\", \"test_sortable_by_no_column (admin_views.tests.AdminViewBasicTest)\", \"test_trailing_slash_required (admin_views.tests.AdminViewBasicTest)\"]",
  "environment_setup_commit": "0668164b4ac93a5be79f5b87fae83c657124d9ab",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.619361",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}