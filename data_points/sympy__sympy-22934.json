{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-22934",
  "base_commit": "3b96442d2d72d3fe3243788372898898bad72280",
  "patch": "diff --git a/sympy/polys/fields.py b/sympy/polys/fields.py\n--- a/sympy/polys/fields.py\n+++ b/sympy/polys/fields.py\n@@ -253,6 +253,8 @@ def _rebuild(expr):\n                         return mapping.get(gen)**int(e/eg)\n                 if e.is_Integer and e is not S.One:\n                     return _rebuild(b)**int(e)\n+            elif mapping.get(1/expr) is not None:\n+                return 1/mapping.get(1/expr)\n \n             try:\n                 return domain.convert(expr)\n",
  "test_patch": "diff --git a/sympy/polys/domains/tests/test_domains.py b/sympy/polys/domains/tests/test_domains.py\n--- a/sympy/polys/domains/tests/test_domains.py\n+++ b/sympy/polys/domains/tests/test_domains.py\n@@ -489,6 +489,14 @@ def test_Domain__contains__():\n     assert (Rational(3, 2)*x/(y + 1) - z in QQ[x, y, z]) is False\n \n \n+def test_issue_14433():\n+    assert (Rational(2, 3)*x in QQ.frac_field(1/x)) is True\n+    assert (1/x in QQ.frac_field(x)) is True\n+    assert ((x**2 + y**2) in QQ.frac_field(1/x, 1/y)) is True\n+    assert ((x + y) in QQ.frac_field(1/x, y)) is True\n+    assert ((x - y) in QQ.frac_field(x, 1/y)) is True\n+\n+\n def test_Domain_get_ring():\n     assert ZZ.has_assoc_Ring is True\n     assert QQ.has_assoc_Ring is True\n",
  "problem_statement": "x not in QQ.frac_field(1/x)\nAgain, probably it should.\r\n\n",
  "hints_text": "",
  "created_at": "2022-01-27T13:13:30Z",
  "version": "1.11",
  "FAIL_TO_PASS": "[\"test_issue_14433\"]",
  "PASS_TO_PASS": "[\"test_Domain_unify\", \"test_Domain_unify_composite\", \"test_Domain_unify_algebraic\", \"test_Domain_unify_FiniteExtension\", \"test_Domain_unify_with_symbols\", \"test_Domain__contains__\", \"test_Domain_get_ring\", \"test_Domain_get_field\", \"test_Domain_get_exact\", \"test_Domain_is_unit\", \"test_Domain_convert\", \"test_GlobalPolynomialRing_convert\", \"test_PolynomialRing__init\", \"test_FractionField__init\", \"test_FractionField_convert\", \"test_inject\", \"test_drop\", \"test_Domain_map\", \"test_Domain___eq__\", \"test_Domain__algebraic_field\", \"test_Domain_alg_field_from_poly\", \"test_Domain_cyclotomic_field\", \"test_PolynomialRing_from_FractionField\", \"test_FractionField_from_PolynomialRing\", \"test_FF_of_type\", \"test___eq__\", \"test_RealField_from_sympy\", \"test_not_in_any_domain\", \"test_ModularInteger\", \"test_QQ_int\", \"test_RR_double\", \"test_RR_Float\", \"test_CC_double\", \"test_gaussian_domains\", \"test_EX_EXRAW\", \"test_canonical_unit\", \"test_issue_18278\", \"test_Domain_is_negative\", \"test_Domain_is_positive\", \"test_Domain_is_nonnegative\", \"test_Domain_is_nonpositive\"]",
  "environment_setup_commit": "9a6104eab0ea7ac191a09c24f3e2d79dcd66bda5",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.151309",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}