{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-23031",
  "base_commit": "c3cf938bc02cbbb0d853c54255c4197b6e90ea1e",
  "patch": "diff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py\n--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n@@ -754,10 +754,7 @@ def _open_file_or_url(fname):\n             yield (line.decode('utf-8') for line in f)\n     else:\n         fname = os.path.expanduser(fname)\n-        encoding = locale.getpreferredencoding(do_setlocale=False)\n-        if encoding is None:\n-            encoding = \"utf-8\"\n-        with open(fname, encoding=encoding) as f:\n+        with open(fname, encoding='utf-8') as f:\n             yield f\n \n \n@@ -802,11 +799,8 @@ def _rc_params_in_file(fname, transform=lambda x: x, fail_on_error=False):\n                                  fname, line_no, line.rstrip('\\n'))\n                 rc_temp[key] = (val, line, line_no)\n         except UnicodeDecodeError:\n-            _log.warning('Cannot decode configuration file %s with encoding '\n-                         '%s, check LANG and LC_* variables.',\n-                         fname,\n-                         locale.getpreferredencoding(do_setlocale=False)\n-                         or 'utf-8 (default)')\n+            _log.warning('Cannot decode configuration file %r as utf-8.',\n+                         fname)\n             raise\n \n     config = RcParams()\ndiff --git a/setup.py b/setup.py\n--- a/setup.py\n+++ b/setup.py\n@@ -194,7 +194,7 @@ def update_matplotlibrc(path):\n     # line.  Otherwise, use the default `##backend: Agg` which has no effect\n     # even after decommenting, which allows _auto_backend_sentinel to be filled\n     # in at import time.\n-    template_lines = path.read_text().splitlines(True)\n+    template_lines = path.read_text(encoding=\"utf-8\").splitlines(True)\n     backend_line_idx, = [  # Also asserts that there is a single such line.\n         idx for idx, line in enumerate(template_lines)\n         if \"#backend:\" in line]\n@@ -202,7 +202,7 @@ def update_matplotlibrc(path):\n         \"#backend: {}\\n\".format(setupext.options[\"backend\"])\n         if setupext.options[\"backend\"]\n         else \"##backend: Agg\\n\")\n-    path.write_text(\"\".join(template_lines))\n+    path.write_text(\"\".join(template_lines), encoding=\"utf-8\")\n \n \n class BuildPy(setuptools.command.build_py.build_py):\n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_rcparams.py b/lib/matplotlib/tests/test_rcparams.py\n--- a/lib/matplotlib/tests/test_rcparams.py\n+++ b/lib/matplotlib/tests/test_rcparams.py\n@@ -39,7 +39,7 @@ def test_rcparams(tmpdir):\n     linewidth = mpl.rcParams['lines.linewidth']\n \n     rcpath = Path(tmpdir) / 'test_rcparams.rc'\n-    rcpath.write_text('lines.linewidth: 33')\n+    rcpath.write_text('lines.linewidth: 33', encoding='utf-8')\n \n     # test context given dictionary\n     with mpl.rc_context(rc={'text.usetex': not usetex}):\n@@ -191,7 +191,7 @@ def test_axes_titlecolor_rcparams():\n \n def test_Issue_1713(tmpdir):\n     rcpath = Path(tmpdir) / 'test_rcparams.rc'\n-    rcpath.write_text('timezone: UTC', encoding='UTF-32-BE')\n+    rcpath.write_text('timezone: UTC', encoding='utf-8')\n     with mock.patch('locale.getpreferredencoding', return_value='UTF-32-BE'):\n         rc = mpl.rc_params_from_file(rcpath, True, False)\n     assert rc.get('timezone') == 'UTC'\ndiff --git a/lib/matplotlib/tests/test_style.py b/lib/matplotlib/tests/test_style.py\n--- a/lib/matplotlib/tests/test_style.py\n+++ b/lib/matplotlib/tests/test_style.py\n@@ -26,7 +26,8 @@ def temp_style(style_name, settings=None):\n         with TemporaryDirectory() as tmpdir:\n             # Write style settings to file in the tmpdir.\n             Path(tmpdir, temp_file).write_text(\n-                \"\\n\".join(\"{}: {}\".format(k, v) for k, v in settings.items()))\n+                \"\\n\".join(\"{}: {}\".format(k, v) for k, v in settings.items()),\n+                encoding=\"utf-8\")\n             # Add tmpdir to style path and reload so we can access this style.\n             USER_LIBRARY_PATHS.append(tmpdir)\n             style.reload_library()\n@@ -59,7 +60,7 @@ def test_use():\n \n def test_use_url(tmpdir):\n     path = Path(tmpdir, 'file')\n-    path.write_text('axes.facecolor: adeade')\n+    path.write_text('axes.facecolor: adeade', encoding='utf-8')\n     with temp_style('test', DUMMY_SETTINGS):\n         url = ('file:'\n                + ('///' if sys.platform == 'win32' else '')\n@@ -72,7 +73,7 @@ def test_single_path(tmpdir):\n     mpl.rcParams[PARAM] = 'gray'\n     temp_file = f'text.{STYLE_EXTENSION}'\n     path = Path(tmpdir, temp_file)\n-    path.write_text(f'{PARAM} : {VALUE}')\n+    path.write_text(f'{PARAM} : {VALUE}', encoding='utf-8')\n     with style.context(path):\n         assert mpl.rcParams[PARAM] == VALUE\n     assert mpl.rcParams[PARAM] == 'gray'\n",
  "problem_statement": "[MNT]: Require that matplotlibrc/style files use utf-8 (or have an encoding cookie)\n### Summary\n\nCurrently, matplotlibrc and style files are read with the locale encoding, since #3575.  There's even a test for it in test_rcparams.py, which reads\r\n```python\r\ndef test_Issue_1713(tmpdir):\r\n    rcpath = Path(tmpdir) / 'test_rcparams.rc'\r\n    rcpath.write_text('timezone: UTC', encoding='UTF-32-BE')\r\n    with mock.patch('locale.getpreferredencoding', return_value='UTF-32-BE'):\r\n        rc = mpl.rc_params_from_file(rcpath, True, False)\r\n    assert rc.get('timezone') == 'UTC'\r\n```\r\n\r\nBut actually, we probably never really supported non-ascii encodings (such as utf-32-be), because if you try to import matplotlib in such a context, we will fail much earlier, when trying to read the default matplotlibrc file:\r\n```python\r\nfrom unittest import mock\r\nwith mock.patch(\"locale.getpreferredencoding\", return_value=\"utf-32-be\"):\r\n    import matplotlib\r\n```\r\ngives\r\n```\r\nTraceback (most recent call last):\r\n  File \"/tmp/test.py\", line 3, in <module>\r\n    import matplotlib\r\n  File \".../matplotlib/__init__.py\", line 883, in <module>\r\n    rcParamsDefault = _rc_params_in_file(\r\n  File \".../matplotlib/__init__.py\", line 785, in _rc_params_in_file\r\n    for line_no, line in enumerate(fd, 1):\r\n  File \"/usr/lib/python3.10/codecs.py\", line 322, in decode\r\n    (result, consumed) = self._buffer_decode(data, self.errors, final)\r\nUnicodeDecodeError: 'utf-32-be' codec can't decode bytes in position 0-3: code point not in range(0x110000)\r\n```\r\n(the test doesn't see that because the default matplotlibrc file has already been imported at this point...).  This behavior also means that style files are actually not shareable between systems that use incompatible encodings.\r\n\r\nGiven that #3575 was implemented in response to #1713, which is about the Py2/Py3 unicode transition and not any user actually requesting support for non-standard encodings, I think we should just drop any intent of reading matplotlibrc/style files using the user locale, and instead spec them as being utf-8 (or, if we want to be super-flexible, support encoding cookies as in https://docs.python.org/3/library/tokenize.html#tokenize.detect_encoding / https://peps.python.org/pep-0263/ -- but I'd say it's probably not worth it?).\n\n### Proposed fix\n\n_No response_\n",
  "hints_text": "I agree.",
  "created_at": "2022-05-10T15:30:51Z",
  "version": "3.5",
  "FAIL_TO_PASS": "[\"lib/matplotlib/tests/test_rcparams.py::test_Issue_1713\"]",
  "PASS_TO_PASS": "[\"lib/matplotlib/tests/test_rcparams.py::test_rcparams\", \"lib/matplotlib/tests/test_rcparams.py::test_RcParams_class\", \"lib/matplotlib/tests/test_rcparams.py::test_Bug_2543\", \"lib/matplotlib/tests/test_rcparams.py::test_legend_colors[same\", \"lib/matplotlib/tests/test_rcparams.py::test_legend_colors[inherited\", \"lib/matplotlib/tests/test_rcparams.py::test_legend_colors[different\", \"lib/matplotlib/tests/test_rcparams.py::test_mfc_rcparams\", \"lib/matplotlib/tests/test_rcparams.py::test_mec_rcparams\", \"lib/matplotlib/tests/test_rcparams.py::test_axes_titlecolor_rcparams\", \"lib/matplotlib/tests/test_rcparams.py::test_animation_frame_formats\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-t-True]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-y-True]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-yes-True]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-on-True]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-true-True]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-1-True0]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-1-True1]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-True-True]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-f-False]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-n-False]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-no-False]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-off-False]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-false-False]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-0-False0]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-0-False1]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_bool-False-False]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist--target16]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-a,b-target17]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-aardvark-target18]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-aardvark,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-arg21-target21]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-arg22-target22]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-arg23-target23]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_strlist-arg24-target24]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_intlist-1,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_intlist-arg26-target26]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_intlist-arg27-target27]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_intlist-arg28-target28]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_intlist-arg29-target29]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_floatlist-1.5,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_floatlist-arg31-target31]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_floatlist-arg32-target32]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_floatlist-arg33-target33]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_floatlist-arg34-target34]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-cycler(\\\"color\\\",\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-arg36-target36]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-(cycler(\\\"color\\\",\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-cycler(c='rgb',\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-cycler('c',\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-arg40-target40]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_cycler-arg41-target41]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hatch---|---|]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hatch-\\\\\\\\oO-\\\\\\\\oO]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hatch-/+*/.x-/+*/.x]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hatch--]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-r,g,b-target46]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-arg47-target47]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-r,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-arg49-target49]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-arg50-target50]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_colorlist-arg51-target51]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-None-none]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-none-none]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-AABBCC-#AABBCC]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-AABBCC00-#AABBCC00]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-tab:blue-tab:blue]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-C12-C12]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-(0,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-arg59-target59]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_color-arg61-target61]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_color_or_linecolor-linecolor-linecolor]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_color_or_linecolor-markerfacecolor-markerfacecolor]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_color_or_linecolor-mfc-markerfacecolor]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_color_or_linecolor-markeredgecolor-markeredgecolor]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_color_or_linecolor-mec-markeredgecolor]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-auto-auto]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-fd-fd]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-10-10]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-1,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-arg71-target71]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_hist_bins-arg72-target72]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-None-None]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-1-1]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-0.1-0.1]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-arg76-target76]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-arg77-target77]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-arg78-target78]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-arg79-target79]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[validate_markevery-arg80-target80]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle----]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-solid-solid]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle------]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-dashed-dashed]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle--.--.]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-dashdot-dashdot]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-:-:]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-dotted-dotted]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle--]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-None-none]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-none-none]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-DoTtEd-dotted]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-1,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-arg95-target95]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-arg96-target96]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-arg97-target97]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_valid[_validate_linestyle-arg98-target98]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_bool-aardvark-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_bool-2-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_bool--1-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_bool-arg3-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_strlist-arg4-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_strlist-1-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_strlist-arg6-MatplotlibDeprecationWarning]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_strlist-arg7-MatplotlibDeprecationWarning]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_intlist-aardvark-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_intlist-arg9-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_intlist-arg10-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_floatlist-aardvark-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_floatlist-arg12-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_floatlist-arg13-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_floatlist-arg14-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_floatlist-None-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-4-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-cycler(\\\"bleh,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-Cycler(\\\"linewidth\\\",\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-cycler('c',\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-1\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-os.system(\\\"echo\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-import\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-def\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-cycler(\\\"waka\\\",\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-cycler(c=[1,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-cycler(lw=['a',\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-arg31-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_cycler-arg32-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_hatch---_-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_hatch-8-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_hatch-X-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_colorlist-fish-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_color-tab:veryblue-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_color-(0,\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_color_or_linecolor-line-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_color_or_linecolor-marker-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_hist_bins-aardvark-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg45-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg46-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg47-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg48-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg49-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg50-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg51-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg52-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg53-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-abc-TypeError0]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg55-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg56-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg57-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg58-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-abc-TypeError1]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-a-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[validate_markevery-arg61-TypeError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-aardvark-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-dotted-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-\\\\xff\\\\xfed\\\\x00o\\\\x00t\\\\x00t\\\\x00e\\\\x00d\\\\x00-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-arg65-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-1.23-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-arg67-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-arg68-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-arg69-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validator_invalid[_validate_linestyle-arg70-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[bold-bold]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[BOLD-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[100-100_0]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[100-100_1]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[weight4-100]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[20.6-20]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[20.6-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontweight[weight7-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontstretch[expanded-expanded]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontstretch[EXPANDED-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontstretch[100-100_0]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontstretch[100-100_1]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontstretch[stretch4-100]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontstretch[20.6-20]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontstretch[20.6-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_validate_fontstretch[stretch7-ValueError]\", \"lib/matplotlib/tests/test_rcparams.py::test_keymaps\", \"lib/matplotlib/tests/test_rcparams.py::test_rcparams_reset_after_fail\", \"lib/matplotlib/tests/test_rcparams.py::test_backend_fallback_headless\", \"lib/matplotlib/tests/test_rcparams.py::test_deprecation\", \"lib/matplotlib/tests/test_style.py::test_invalid_rc_warning_includes_filename\", \"lib/matplotlib/tests/test_style.py::test_available\", \"lib/matplotlib/tests/test_style.py::test_use\", \"lib/matplotlib/tests/test_style.py::test_use_url\", \"lib/matplotlib/tests/test_style.py::test_single_path\", \"lib/matplotlib/tests/test_style.py::test_context\", \"lib/matplotlib/tests/test_style.py::test_context_with_dict\", \"lib/matplotlib/tests/test_style.py::test_context_with_dict_after_namedstyle\", \"lib/matplotlib/tests/test_style.py::test_context_with_dict_before_namedstyle\", \"lib/matplotlib/tests/test_style.py::test_context_with_union_of_dict_and_namedstyle\", \"lib/matplotlib/tests/test_style.py::test_context_with_badparam\", \"lib/matplotlib/tests/test_style.py::test_alias[mpl20]\", \"lib/matplotlib/tests/test_style.py::test_alias[mpl15]\", \"lib/matplotlib/tests/test_style.py::test_xkcd_no_cm\", \"lib/matplotlib/tests/test_style.py::test_xkcd_cm\", \"lib/matplotlib/tests/test_style.py::test_deprecated_seaborn_styles\"]",
  "environment_setup_commit": "de98877e3dc45de8dd441d008f23d88738dc015d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.798024",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}