{
  "repo": "mwaskom/seaborn",
  "instance_id": "mwaskom__seaborn-3276",
  "base_commit": "3733590d86a7f2c2a95cd9940a34aa7df5f5a3d2",
  "patch": "diff --git a/seaborn/matrix.py b/seaborn/matrix.py\n--- a/seaborn/matrix.py\n+++ b/seaborn/matrix.py\n@@ -298,7 +298,7 @@ def plot(self, ax, cax, kws):\n \n         # setting vmin/vmax in addition to norm is deprecated\n         # so avoid setting if norm is set\n-        if \"norm\" not in kws:\n+        if kws.get(\"norm\") is None:\n             kws.setdefault(\"vmin\", self.vmin)\n             kws.setdefault(\"vmax\", self.vmax)\n \n",
  "test_patch": "diff --git a/tests/test_matrix.py b/tests/test_matrix.py\n--- a/tests/test_matrix.py\n+++ b/tests/test_matrix.py\n@@ -265,6 +265,20 @@ def test_cmap_with_properties(self):\n         hm = mat._HeatMapper(self.df_unif, **kws)\n         npt.assert_array_equal(cmap(np.inf), hm.cmap(np.inf))\n \n+    def test_explicit_none_norm(self):\n+\n+        vals = np.linspace(.2, 1, 9)\n+        cmap = mpl.cm.binary\n+        _, (ax1, ax2) = plt.subplots(2)\n+\n+        mat.heatmap([vals], vmin=0, cmap=cmap, ax=ax1)\n+        fc_default_norm = ax1.collections[0].get_facecolors()\n+\n+        mat.heatmap([vals], vmin=0, norm=None, cmap=cmap, ax=ax2)\n+        fc_explicit_norm = ax2.collections[0].get_facecolors()\n+\n+        npt.assert_array_almost_equal(fc_default_norm, fc_explicit_norm, 2)\n+\n     def test_ticklabels_off(self):\n         kws = self.default_kws.copy()\n         kws['xticklabels'] = False\n",
  "problem_statement": "`heatmap(..., norm=None, ...)` has different behaviour than without specifying the `norm` argument\nHi,\r\n\r\nI'm noticing a strange behaviour when passing `norm=None` to a heatmap and I believe it's due to these lines: https://github.com/mwaskom/seaborn/blob/3733590d86a7f2c2a95cd9940a34aa7df5f5a3d2/seaborn/matrix.py#L299-L303\r\n\r\nSpecifically, if I use `sns.heatmap(..., vmin=0.0, vmax=1.0, ...)` I get something like this:\r\n\r\n![without-norm](https://user-images.githubusercontent.com/3457859/220935158-fdc86688-1780-4efd-8418-28523bdc5c24.png)\r\n\r\nbut when I use `sns.heatmap(..., vmin=0.0, vmax=1.0, norm=None, ...)`, `vmin` and `vmax` are lost:\r\n\r\n![with-norm](https://user-images.githubusercontent.com/3457859/220935301-d8c4b1ce-d76b-4d58-add5-18d08529ab41.png)\r\n\r\nI'm happy to send a PR if this issue isn't addressed anywhere.\r\n\r\n»òtefan\n",
  "hints_text": "",
  "created_at": "2023-02-23T14:34:53Z",
  "version": "0.13",
  "FAIL_TO_PASS": "[\"tests/test_matrix.py::TestHeatmap::test_explicit_none_norm\"]",
  "PASS_TO_PASS": "[\"tests/test_matrix.py::TestHeatmap::test_ndarray_input\", \"tests/test_matrix.py::TestHeatmap::test_df_input\", \"tests/test_matrix.py::TestHeatmap::test_df_multindex_input\", \"tests/test_matrix.py::TestHeatmap::test_mask_input[float]\", \"tests/test_matrix.py::TestHeatmap::test_mask_input[int64]\", \"tests/test_matrix.py::TestHeatmap::test_mask_input[object]\", \"tests/test_matrix.py::TestHeatmap::test_mask_limits\", \"tests/test_matrix.py::TestHeatmap::test_default_vlims\", \"tests/test_matrix.py::TestHeatmap::test_robust_vlims\", \"tests/test_matrix.py::TestHeatmap::test_custom_sequential_vlims\", \"tests/test_matrix.py::TestHeatmap::test_custom_diverging_vlims\", \"tests/test_matrix.py::TestHeatmap::test_array_with_nans\", \"tests/test_matrix.py::TestHeatmap::test_mask\", \"tests/test_matrix.py::TestHeatmap::test_custom_cmap\", \"tests/test_matrix.py::TestHeatmap::test_centered_vlims\", \"tests/test_matrix.py::TestHeatmap::test_default_colors\", \"tests/test_matrix.py::TestHeatmap::test_custom_vlim_colors\", \"tests/test_matrix.py::TestHeatmap::test_custom_center_colors\", \"tests/test_matrix.py::TestHeatmap::test_cmap_with_properties\", \"tests/test_matrix.py::TestHeatmap::test_ticklabels_off\", \"tests/test_matrix.py::TestHeatmap::test_custom_ticklabels\", \"tests/test_matrix.py::TestHeatmap::test_custom_ticklabel_interval\", \"tests/test_matrix.py::TestHeatmap::test_heatmap_annotation\", \"tests/test_matrix.py::TestHeatmap::test_heatmap_annotation_overwrite_kws\", \"tests/test_matrix.py::TestHeatmap::test_heatmap_annotation_with_mask\", \"tests/test_matrix.py::TestHeatmap::test_heatmap_annotation_mesh_colors\", \"tests/test_matrix.py::TestHeatmap::test_heatmap_annotation_other_data\", \"tests/test_matrix.py::TestHeatmap::test_heatmap_annotation_different_shapes\", \"tests/test_matrix.py::TestHeatmap::test_heatmap_annotation_with_limited_ticklabels\", \"tests/test_matrix.py::TestHeatmap::test_heatmap_cbar\", \"tests/test_matrix.py::TestHeatmap::test_heatmap_axes\", \"tests/test_matrix.py::TestHeatmap::test_heatmap_ticklabel_rotation\", \"tests/test_matrix.py::TestHeatmap::test_heatmap_inner_lines\", \"tests/test_matrix.py::TestHeatmap::test_square_aspect\", \"tests/test_matrix.py::TestHeatmap::test_mask_validation\", \"tests/test_matrix.py::TestHeatmap::test_missing_data_mask\", \"tests/test_matrix.py::TestHeatmap::test_cbar_ticks\", \"tests/test_matrix.py::TestDendrogram::test_ndarray_input\", \"tests/test_matrix.py::TestDendrogram::test_df_input\", \"tests/test_matrix.py::TestDendrogram::test_df_multindex_input\", \"tests/test_matrix.py::TestDendrogram::test_axis0_input\", \"tests/test_matrix.py::TestDendrogram::test_rotate_input\", \"tests/test_matrix.py::TestDendrogram::test_rotate_axis0_input\", \"tests/test_matrix.py::TestDendrogram::test_custom_linkage\", \"tests/test_matrix.py::TestDendrogram::test_label_false\", \"tests/test_matrix.py::TestDendrogram::test_linkage_scipy\", \"tests/test_matrix.py::TestDendrogram::test_dendrogram_plot\", \"tests/test_matrix.py::TestDendrogram::test_dendrogram_rotate\", \"tests/test_matrix.py::TestDendrogram::test_dendrogram_ticklabel_rotation\", \"tests/test_matrix.py::TestClustermap::test_ndarray_input\", \"tests/test_matrix.py::TestClustermap::test_df_input\", \"tests/test_matrix.py::TestClustermap::test_corr_df_input\", \"tests/test_matrix.py::TestClustermap::test_pivot_input\", \"tests/test_matrix.py::TestClustermap::test_colors_input\", \"tests/test_matrix.py::TestClustermap::test_categorical_colors_input\", \"tests/test_matrix.py::TestClustermap::test_nested_colors_input\", \"tests/test_matrix.py::TestClustermap::test_colors_input_custom_cmap\", \"tests/test_matrix.py::TestClustermap::test_z_score\", \"tests/test_matrix.py::TestClustermap::test_z_score_axis0\", \"tests/test_matrix.py::TestClustermap::test_standard_scale\", \"tests/test_matrix.py::TestClustermap::test_standard_scale_axis0\", \"tests/test_matrix.py::TestClustermap::test_z_score_standard_scale\", \"tests/test_matrix.py::TestClustermap::test_color_list_to_matrix_and_cmap\", \"tests/test_matrix.py::TestClustermap::test_nested_color_list_to_matrix_and_cmap\", \"tests/test_matrix.py::TestClustermap::test_color_list_to_matrix_and_cmap_axis1\", \"tests/test_matrix.py::TestClustermap::test_color_list_to_matrix_and_cmap_different_sizes\", \"tests/test_matrix.py::TestClustermap::test_savefig\", \"tests/test_matrix.py::TestClustermap::test_plot_dendrograms\", \"tests/test_matrix.py::TestClustermap::test_cluster_false\", \"tests/test_matrix.py::TestClustermap::test_row_col_colors\", \"tests/test_matrix.py::TestClustermap::test_cluster_false_row_col_colors\", \"tests/test_matrix.py::TestClustermap::test_row_col_colors_df\", \"tests/test_matrix.py::TestClustermap::test_row_col_colors_df_shuffled\", \"tests/test_matrix.py::TestClustermap::test_row_col_colors_df_missing\", \"tests/test_matrix.py::TestClustermap::test_row_col_colors_df_one_axis\", \"tests/test_matrix.py::TestClustermap::test_row_col_colors_series\", \"tests/test_matrix.py::TestClustermap::test_row_col_colors_series_shuffled\", \"tests/test_matrix.py::TestClustermap::test_row_col_colors_series_missing\", \"tests/test_matrix.py::TestClustermap::test_row_col_colors_ignore_heatmap_kwargs\", \"tests/test_matrix.py::TestClustermap::test_row_col_colors_raise_on_mixed_index_types\", \"tests/test_matrix.py::TestClustermap::test_mask_reorganization\", \"tests/test_matrix.py::TestClustermap::test_ticklabel_reorganization\", \"tests/test_matrix.py::TestClustermap::test_noticklabels\", \"tests/test_matrix.py::TestClustermap::test_size_ratios\", \"tests/test_matrix.py::TestClustermap::test_cbar_pos\", \"tests/test_matrix.py::TestClustermap::test_square_warning\", \"tests/test_matrix.py::TestClustermap::test_clustermap_annotation\", \"tests/test_matrix.py::TestClustermap::test_tree_kws\"]",
  "environment_setup_commit": "23860365816440b050e9211e1c395a966de3c403",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.838837",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}