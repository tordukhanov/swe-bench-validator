{
  "repo": "django/django",
  "instance_id": "django__django-14451",
  "base_commit": "02c59b7a4355fda8c99224b5de9c0a3929bffe22",
  "patch": "diff --git a/django/utils/feedgenerator.py b/django/utils/feedgenerator.py\n--- a/django/utils/feedgenerator.py\n+++ b/django/utils/feedgenerator.py\n@@ -187,7 +187,7 @@ class RssFeed(SyndicationFeed):\n     content_type = 'application/rss+xml; charset=utf-8'\n \n     def write(self, outfile, encoding):\n-        handler = SimplerXMLGenerator(outfile, encoding)\n+        handler = SimplerXMLGenerator(outfile, encoding, short_empty_elements=True)\n         handler.startDocument()\n         handler.startElement(\"rss\", self.rss_attributes())\n         handler.startElement(\"channel\", self.root_attributes())\n@@ -296,7 +296,7 @@ class Atom1Feed(SyndicationFeed):\n     ns = \"http://www.w3.org/2005/Atom\"\n \n     def write(self, outfile, encoding):\n-        handler = SimplerXMLGenerator(outfile, encoding)\n+        handler = SimplerXMLGenerator(outfile, encoding, short_empty_elements=True)\n         handler.startDocument()\n         handler.startElement('feed', self.root_attributes())\n         self.add_root_elements(handler)\n",
  "test_patch": "diff --git a/tests/syndication_tests/tests.py b/tests/syndication_tests/tests.py\n--- a/tests/syndication_tests/tests.py\n+++ b/tests/syndication_tests/tests.py\n@@ -7,7 +7,9 @@\n from django.test import TestCase, override_settings\n from django.test.utils import requires_tz_support\n from django.utils import timezone\n-from django.utils.feedgenerator import rfc2822_date, rfc3339_date\n+from django.utils.feedgenerator import (\n+    Atom1Feed, Rss201rev2Feed, rfc2822_date, rfc3339_date,\n+)\n \n from .models import Article, Entry\n \n@@ -420,6 +422,22 @@ def test_aware_datetime_conversion(self):\n         published = doc.getElementsByTagName('published')[0].firstChild.wholeText\n         self.assertEqual(published[-6:], '+00:42')\n \n+    def test_feed_no_content_self_closing_tag(self):\n+        tests = [\n+            (Atom1Feed, 'link'),\n+            (Rss201rev2Feed, 'atom:link'),\n+        ]\n+        for feedgenerator, tag in tests:\n+            with self.subTest(feedgenerator=feedgenerator.__name__):\n+                feed = feedgenerator(\n+                    title='title',\n+                    link='https://example.com',\n+                    description='self closing tags test',\n+                    feed_url='https://feed.url.com',\n+                )\n+                doc = feed.writeString('utf-8')\n+                self.assertIn(f'<{tag} href=\"https://feed.url.com\" rel=\"self\"/>', doc)\n+\n     @requires_tz_support\n     def test_feed_last_modified_time_naive_date(self):\n         \"\"\"\n",
  "problem_statement": "adding support for self closing tags in syndication feeds\nDescription\n\t\nthe code for syndication feeds was written in a time where self closing tags didn't exist. but today, if an element has no text between the tags, the standard is that it should be a self closing tag. python added this functionality in 3.2 to XMLGenerator but django still doesn't use this in generating syndication feeds. this is the matter of passing a single argument to the SimplerXMLGenerator that django uses for generating feeds. since SimplerXMLGenerator directly inherits from pythons XMLGenrator, passing the arguments works with this class too .\nthis is my attempt at making it right\nâ€‹https://github.com/django/django/pull/14451\n",
  "hints_text": "",
  "created_at": "2021-05-26T17:30:39Z",
  "version": "4.0",
  "FAIL_TO_PASS": "[\"test_feed_no_content_self_closing_tag (syndication_tests.tests.SyndicationFeedTest)\"]",
  "PASS_TO_PASS": "[\"add_domain() prefixes domains onto the correct URLs.\", \"Test the structure and content of feeds generated by Atom1Feed.\", \"The published and updated elements are not\", \"test_atom_multiple_enclosures (syndication_tests.tests.SyndicationFeedTest)\", \"test_atom_single_enclosure (syndication_tests.tests.SyndicationFeedTest)\", \"Datetimes with timezones don't get trodden on.\", \"test_custom_feed_generator (syndication_tests.tests.SyndicationFeedTest)\", \"test_feed_generator_language_attribute (syndication_tests.tests.SyndicationFeedTest)\", \"Tests the Last-Modified header with aware publication dates.\", \"Tests the Last-Modified header with naive publication dates.\", \"The feed_url can be overridden.\", \"test_get_non_existent_object (syndication_tests.tests.SyndicationFeedTest)\", \"test_get_object (syndication_tests.tests.SyndicationFeedTest)\", \"An ImproperlyConfigured is raised if no link could be found for the\", \"Both the published and updated dates are\", \"Datetimes are correctly converted to the local time zone.\", \"Test the structure and content of feeds generated by RssUserland091Feed.\", \"Test the structure and content of feeds generated by Rss201rev2Feed.\", \"Test if the 'isPermaLink' attribute of <guid> element of an item\", \"test_rss2_multiple_enclosures (syndication_tests.tests.SyndicationFeedTest)\", \"test_rss2_single_enclosure (syndication_tests.tests.SyndicationFeedTest)\", \"Test URLs are prefixed with https:// when feed is requested over HTTPS.\", \"Custom context data can be passed to templates for title\", \"The item title and description can be overridden with templates.\", \"Titles are escaped correctly in RSS feeds.\"]",
  "environment_setup_commit": "475cffd1d64c690cdad16ede4d5e81985738ceb4",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.693377",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}