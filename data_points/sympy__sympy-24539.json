{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-24539",
  "base_commit": "193e3825645d93c73e31cdceb6d742cc6919624d",
  "patch": "diff --git a/sympy/polys/rings.py b/sympy/polys/rings.py\n--- a/sympy/polys/rings.py\n+++ b/sympy/polys/rings.py\n@@ -616,10 +616,13 @@ def set_ring(self, new_ring):\n             return new_ring.from_dict(self, self.ring.domain)\n \n     def as_expr(self, *symbols):\n-        if symbols and len(symbols) != self.ring.ngens:\n-            raise ValueError(\"not enough symbols, expected %s got %s\" % (self.ring.ngens, len(symbols)))\n-        else:\n+        if not symbols:\n             symbols = self.ring.symbols\n+        elif len(symbols) != self.ring.ngens:\n+            raise ValueError(\n+                \"Wrong number of symbols, expected %s got %s\" %\n+                (self.ring.ngens, len(symbols))\n+            )\n \n         return expr_from_dict(self.as_expr_dict(), *symbols)\n \n",
  "test_patch": "diff --git a/sympy/polys/tests/test_rings.py b/sympy/polys/tests/test_rings.py\n--- a/sympy/polys/tests/test_rings.py\n+++ b/sympy/polys/tests/test_rings.py\n@@ -259,11 +259,11 @@ def test_PolyElement_as_expr():\n     assert f != g\n     assert f.as_expr() == g\n \n-    X, Y, Z = symbols(\"x,y,z\")\n-    g = 3*X**2*Y - X*Y*Z + 7*Z**3 + 1\n+    U, V, W = symbols(\"u,v,w\")\n+    g = 3*U**2*V - U*V*W + 7*W**3 + 1\n \n     assert f != g\n-    assert f.as_expr(X, Y, Z) == g\n+    assert f.as_expr(U, V, W) == g\n \n     raises(ValueError, lambda: f.as_expr(X))\n \n",
  "problem_statement": "`PolyElement.as_expr()` not accepting symbols\nThe method `PolyElement.as_expr()`\r\n\r\nhttps://github.com/sympy/sympy/blob/193e3825645d93c73e31cdceb6d742cc6919624d/sympy/polys/rings.py#L618-L624\r\n\r\nis supposed to let you set the symbols you want to use, but, as it stands, either you pass the wrong number of symbols, and get an error message, or you pass the right number of symbols, and it ignores them, using `self.ring.symbols` instead:\r\n\r\n```python\r\n>>> from sympy import ring, ZZ, symbols\r\n>>> R, x, y, z = ring(\"x,y,z\", ZZ)\r\n>>> f = 3*x**2*y - x*y*z + 7*z**3 + 1\r\n>>> U, V, W = symbols(\"u,v,w\")\r\n>>> f.as_expr(U, V, W)\r\n3*x**2*y - x*y*z + 7*z**3 + 1\r\n```\n",
  "hints_text": "",
  "created_at": "2023-01-17T17:26:42Z",
  "version": "1.12",
  "FAIL_TO_PASS": "[\"test_PolyElement_as_expr\"]",
  "PASS_TO_PASS": "[\"test_PolyRing___init__\", \"test_PolyRing___hash__\", \"test_PolyRing___eq__\", \"test_PolyRing_ring_new\", \"test_PolyRing_drop\", \"test_PolyRing___getitem__\", \"test_PolyRing_is_\", \"test_PolyRing_add\", \"test_PolyRing_mul\", \"test_sring\", \"test_PolyElement___hash__\", \"test_PolyElement___eq__\", \"test_PolyElement__lt_le_gt_ge__\", \"test_PolyElement__str__\", \"test_PolyElement_copy\", \"test_PolyElement_from_expr\", \"test_PolyElement_degree\", \"test_PolyElement_tail_degree\", \"test_PolyElement_degrees\", \"test_PolyElement_tail_degrees\", \"test_PolyElement_coeff\", \"test_PolyElement_LC\", \"test_PolyElement_LM\", \"test_PolyElement_LT\", \"test_PolyElement_leading_monom\", \"test_PolyElement_leading_term\", \"test_PolyElement_terms\", \"test_PolyElement_monoms\", \"test_PolyElement_coeffs\", \"test_PolyElement___add__\", \"test_PolyElement___sub__\", \"test_PolyElement___mul__\", \"test_PolyElement___truediv__\", \"test_PolyElement___pow__\", \"test_PolyElement_div\", \"test_PolyElement_rem\", \"test_PolyElement_deflate\", \"test_PolyElement_clear_denoms\", \"test_PolyElement_cofactors\", \"test_PolyElement_gcd\", \"test_PolyElement_cancel\", \"test_PolyElement_max_norm\", \"test_PolyElement_l1_norm\", \"test_PolyElement_diff\", \"test_PolyElement___call__\", \"test_PolyElement_evaluate\", \"test_PolyElement_subs\", \"test_PolyElement_compose\", \"test_PolyElement_is_\", \"test_PolyElement_drop\", \"test_PolyElement_pdiv\", \"test_PolyElement_gcdex\", \"test_PolyElement_subresultants\", \"test_PolyElement_resultant\", \"test_PolyElement_discriminant\", \"test_PolyElement_decompose\", \"test_PolyElement_shift\", \"test_PolyElement_sturm\", \"test_PolyElement_gff_list\", \"test_PolyElement_sqf_norm\", \"test_PolyElement_sqf_list\", \"test_PolyElement_factor_list\"]",
  "environment_setup_commit": "c6cb7c5602fa48034ab1bd43c2347a7e8488f12e",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.156897",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}