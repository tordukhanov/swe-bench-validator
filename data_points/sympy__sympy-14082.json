{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-14082",
  "base_commit": "0a859a4fc4e35a2af83077788dd185171f4f661e",
  "patch": "diff --git a/sympy/integrals/rationaltools.py b/sympy/integrals/rationaltools.py\n--- a/sympy/integrals/rationaltools.py\n+++ b/sympy/integrals/rationaltools.py\n@@ -358,9 +358,15 @@ def log_to_real(h, q, x, t):\n         if len(R_v) != C.count_roots():\n             return None\n \n+        R_v_paired = [] # take one from each pair of conjugate roots\n         for r_v in R_v:\n-            if not r_v.is_positive:\n-                continue\n+            if r_v not in R_v_paired and -r_v not in R_v_paired:\n+                if r_v.is_negative or r_v.could_extract_minus_sign():\n+                    R_v_paired.append(-r_v)\n+                elif not r_v.is_zero:\n+                    R_v_paired.append(r_v)\n+\n+        for r_v in R_v_paired:\n \n             D = d.subs({u: r_u, v: r_v})\n \n",
  "test_patch": "diff --git a/sympy/integrals/tests/test_rationaltools.py b/sympy/integrals/tests/test_rationaltools.py\n--- a/sympy/integrals/tests/test_rationaltools.py\n+++ b/sympy/integrals/tests/test_rationaltools.py\n@@ -133,6 +133,26 @@ def test_issue_10488():\n     a,b,c,x = symbols('a b c x', real=True, positive=True)\n     assert integrate(x/(a*x+b),x) == x/a - b*log(a*x + b)/a**2\n \n+\n+def test_issues_8246_12050_13501_14080():\n+    a = symbols('a', real=True)\n+    assert integrate(a/(x**2 + a**2), x) == atan(x/a)\n+    assert integrate(1/(x**2 + a**2), x) == atan(x/a)/a\n+    assert integrate(1/(1 + a**2*x**2), x) == atan(a*x)/a\n+\n+\n+def test_issue_6308():\n+    k, a0 = symbols('k a0', real=True)\n+    assert integrate((x**2 + 1 - k**2)/(x**2 + 1 + a0**2), x) == \\\n+        x - (a0**2 + k**2)*atan(x/sqrt(a0**2 + 1))/sqrt(a0**2 + 1)\n+\n+\n+def test_issue_5907():\n+    a = symbols('a', real=True)\n+    assert integrate(1/(x**2 + a**2)**2, x) == \\\n+         x/(2*a**4 + 2*a**2*x**2) + atan(x/a)/(2*a**3)\n+\n+\n def test_log_to_atan():\n     f, g = (Poly(x + S(1)/2, x, domain='QQ'), Poly(sqrt(3)/2, x, domain='EX'))\n     fg_ans = 2*atan(2*sqrt(3)*x/3 + sqrt(3)/3)\n",
  "problem_statement": "Integrate(1/(x**2 + y**2), x) returns a wrong result\n```\r\n>>> x = symbols('x', real = True)\r\n>>> y = symbols('y', real = True)\r\n>>> f = 1 / (x**2 + y**2)\r\n>>> res = integrate(f, x)\r\n>>> print(res)\r\n0\r\n```\r\n\r\nThe correct result is `atan(x/y) / y`. It seems similar to #8246.\r\n\n",
  "hints_text": "Essentially the same as #13501",
  "created_at": "2018-02-05T04:35:29Z",
  "version": "1.1",
  "FAIL_TO_PASS": "[\"test_issues_8246_12050_13501_14080\", \"test_issue_6308\", \"test_issue_5907\"]",
  "PASS_TO_PASS": "[\"test_ratint_logpart\", \"test_issue_5414\", \"test_issue_5249\", \"test_issue_5817\", \"test_issue_5981\", \"test_issue_10488\"]",
  "environment_setup_commit": "ec9e3c0436fbff934fa84e22bf07f1b3ef5bfac3",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.091619",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}