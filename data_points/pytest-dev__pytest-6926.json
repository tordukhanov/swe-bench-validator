{
  "repo": "pytest-dev/pytest",
  "instance_id": "pytest-dev__pytest-6926",
  "base_commit": "c26bbdfaf027d031e694227a2e3414108d17f1a8",
  "patch": "diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py\n--- a/src/_pytest/capture.py\n+++ b/src/_pytest/capture.py\n@@ -570,8 +570,6 @@ def resume(self):\n \n     def writeorg(self, data):\n         \"\"\" write to original file descriptor. \"\"\"\n-        if isinstance(data, str):\n-            data = data.encode(\"utf8\")  # XXX use encoding of original stream\n         os.write(self.targetfd_save, data)\n \n \n@@ -591,6 +589,11 @@ def snap(self):\n         self.tmpfile.truncate()\n         return res\n \n+    def writeorg(self, data):\n+        \"\"\" write to original file descriptor. \"\"\"\n+        data = data.encode(\"utf-8\")  # XXX use encoding of original stream\n+        os.write(self.targetfd_save, data)\n+\n \n class SysCaptureBinary:\n \n@@ -642,8 +645,9 @@ def resume(self):\n         self._state = \"resumed\"\n \n     def writeorg(self, data):\n-        self._old.write(data)\n         self._old.flush()\n+        self._old.buffer.write(data)\n+        self._old.buffer.flush()\n \n \n class SysCapture(SysCaptureBinary):\n@@ -655,6 +659,10 @@ def snap(self):\n         self.tmpfile.truncate()\n         return res\n \n+    def writeorg(self, data):\n+        self._old.write(data)\n+        self._old.flush()\n+\n \n class TeeSysCapture(SysCapture):\n     def __init__(self, fd, tmpfile=None):\n",
  "test_patch": "diff --git a/testing/test_capture.py b/testing/test_capture.py\n--- a/testing/test_capture.py\n+++ b/testing/test_capture.py\n@@ -515,18 +515,40 @@ def test_hello(capfdbinary):\n         reprec.assertoutcome(passed=1)\n \n     def test_capsysbinary(self, testdir):\n-        reprec = testdir.inline_runsource(\n-            \"\"\"\\\n+        p1 = testdir.makepyfile(\n+            r\"\"\"\n             def test_hello(capsysbinary):\n                 import sys\n-                # some likely un-decodable bytes\n-                sys.stdout.buffer.write(b'\\\\xfe\\\\x98\\\\x20')\n+\n+                sys.stdout.buffer.write(b'hello')\n+\n+                # Some likely un-decodable bytes.\n+                sys.stdout.buffer.write(b'\\xfe\\x98\\x20')\n+\n+                sys.stdout.buffer.flush()\n+\n+                # Ensure writing in text mode still works and is captured.\n+                # https://github.com/pytest-dev/pytest/issues/6871\n+                print(\"world\", flush=True)\n+\n                 out, err = capsysbinary.readouterr()\n-                assert out == b'\\\\xfe\\\\x98\\\\x20'\n+                assert out == b'hello\\xfe\\x98\\x20world\\n'\n                 assert err == b''\n+\n+                print(\"stdout after\")\n+                print(\"stderr after\", file=sys.stderr)\n             \"\"\"\n         )\n-        reprec.assertoutcome(passed=1)\n+        result = testdir.runpytest(str(p1), \"-rA\")\n+        result.stdout.fnmatch_lines(\n+            [\n+                \"*- Captured stdout call -*\",\n+                \"stdout after\",\n+                \"*- Captured stderr call -*\",\n+                \"stderr after\",\n+                \"*= 1 passed in *\",\n+            ]\n+        )\n \n     def test_partial_setup_failure(self, testdir):\n         p = testdir.makepyfile(\n@@ -890,7 +912,7 @@ def test_writeorg(self, tmpfile):\n         cap.start()\n         tmpfile.write(data1)\n         tmpfile.flush()\n-        cap.writeorg(data2)\n+        cap.writeorg(data2.decode(\"ascii\"))\n         scap = cap.snap()\n         cap.done()\n         assert scap == data1.decode(\"ascii\")\n",
  "problem_statement": "SysCaptureBinary: decode in writeorg\nFixes https://github.com/pytest-dev/pytest/issues/6871.\n",
  "hints_text": "",
  "created_at": "2020-03-14T14:19:34Z",
  "version": "5.4",
  "FAIL_TO_PASS": "[\"test_capsysbinary.py::test_hello\", \"testing/test_capture.py::test_capturing_unicode[fd]\", \"testing/test_capture.py::TestCaptureFixture::test_capsysbinary\"]",
  "PASS_TO_PASS": "[\"[100%]\", \"testing/test_capture.py::TestCaptureManager::test_capturing_basic_api[no]\", \"testing/test_capture.py::TestCaptureManager::test_capturing_basic_api[sys]\", \"testing/test_capture.py::TestCaptureManager::test_capturing_basic_api[fd]\", \"testing/test_capture.py::TestCaptureManager::test_init_capturing\", \"testing/test_capture.py::TestCaptureIO::test_text\", \"testing/test_capture.py::TestCaptureIO::test_unicode_and_str_mixture\", \"testing/test_capture.py::TestCaptureIO::test_write_bytes_to_buffer\", \"testing/test_capture.py::TestCaptureAndPassthroughIO::test_write_bytes_to_buffer\", \"testing/test_capture.py::TestCaptureAndPassthroughIO::test_text\", \"testing/test_capture.py::TestCaptureAndPassthroughIO::test_unicode_and_str_mixture\", \"testing/test_capture.py::test_dontreadfrominput\", \"testing/test_capture.py::TestFDCapture::test_stderr\", \"testing/test_capture.py::TestFDCapture::test_stdin\", \"testing/test_capture.py::TestFDCapture::test_simple_resume_suspend\", \"testing/test_capture.py::TestFDCapture::test_capfd_sys_stdout_mode\", \"testing/test_capture.py::TestStdCapture::test_capturing_done_simple\", \"testing/test_capture.py::TestStdCapture::test_capturing_reset_simple\", \"testing/test_capture.py::TestStdCapture::test_capturing_readouterr\", \"testing/test_capture.py::TestStdCapture::test_capture_results_accessible_by_attribute\", \"testing/test_capture.py::TestStdCapture::test_capturing_readouterr_unicode\", \"testing/test_capture.py::TestStdCapture::test_reset_twice_error\", \"testing/test_capture.py::TestStdCapture::test_capturing_modify_sysouterr_in_between\", \"testing/test_capture.py::TestStdCapture::test_capturing_error_recursive\", \"testing/test_capture.py::TestStdCapture::test_just_out_capture\", \"testing/test_capture.py::TestStdCapture::test_just_err_capture\", \"testing/test_capture.py::TestStdCapture::test_stdin_restored\", \"testing/test_capture.py::TestStdCapture::test_stdin_nulled_by_default\", \"testing/test_capture.py::TestTeeStdCapture::test_capturing_done_simple\", \"testing/test_capture.py::TestTeeStdCapture::test_capturing_reset_simple\", \"testing/test_capture.py::TestTeeStdCapture::test_capturing_readouterr\", \"testing/test_capture.py::TestTeeStdCapture::test_capture_results_accessible_by_attribute\", \"testing/test_capture.py::TestTeeStdCapture::test_capturing_readouterr_unicode\", \"testing/test_capture.py::TestTeeStdCapture::test_reset_twice_error\", \"testing/test_capture.py::TestTeeStdCapture::test_capturing_modify_sysouterr_in_between\", \"testing/test_capture.py::TestTeeStdCapture::test_just_out_capture\", \"testing/test_capture.py::TestTeeStdCapture::test_just_err_capture\", \"testing/test_capture.py::TestTeeStdCapture::test_stdin_restored\", \"testing/test_capture.py::TestTeeStdCapture::test_stdin_nulled_by_default\", \"testing/test_capture.py::TestTeeStdCapture::test_capturing_error_recursive\", \"testing/test_capture.py::TestStdCaptureFD::test_capturing_done_simple\", \"testing/test_capture.py::TestStdCaptureFD::test_capturing_reset_simple\", \"testing/test_capture.py::TestStdCaptureFD::test_capturing_readouterr\", \"testing/test_capture.py::TestStdCaptureFD::test_capture_results_accessible_by_attribute\", \"testing/test_capture.py::TestStdCaptureFD::test_capturing_readouterr_unicode\", \"testing/test_capture.py::TestStdCaptureFD::test_reset_twice_error\", \"testing/test_capture.py::TestStdCaptureFD::test_capturing_modify_sysouterr_in_between\", \"testing/test_capture.py::TestStdCaptureFD::test_capturing_error_recursive\", \"testing/test_capture.py::TestStdCaptureFD::test_just_out_capture\", \"testing/test_capture.py::TestStdCaptureFD::test_just_err_capture\", \"testing/test_capture.py::TestStdCaptureFD::test_stdin_restored\", \"testing/test_capture.py::TestStdCaptureFD::test_stdin_nulled_by_default\", \"testing/test_capture.py::TestStdCaptureFD::test_intermingling\", \"testing/test_capture.py::test_capture_not_started_but_reset\", \"testing/test_capture.py::test_using_capsys_fixture_works_with_sys_stdout_encoding\", \"testing/test_capture.py::test_capsys_results_accessible_by_attribute\", \"testing/test_capture.py::test_stderr_write_returns_len\", \"testing/test_capture.py::test__get_multicapture\", \"testing/test_capture.py::test_capturing_unicode[sys]\", \"testing/test_capture.py::test_capturing_bytes_in_utf8_encoding[fd]\", \"testing/test_capture.py::test_capturing_bytes_in_utf8_encoding[sys]\", \"testing/test_capture.py::test_collect_capturing\", \"testing/test_capture.py::TestPerTestCapturing::test_capture_and_fixtures\", \"testing/test_capture.py::TestPerTestCapturing::test_no_carry_over\", \"testing/test_capture.py::TestPerTestCapturing::test_teardown_capturing\", \"testing/test_capture.py::TestPerTestCapturing::test_teardown_capturing_final\", \"testing/test_capture.py::TestPerTestCapturing::test_capturing_outerr\", \"testing/test_capture.py::TestCaptureFixture::test_std_functional[opt0]\", \"testing/test_capture.py::TestCaptureFixture::test_std_functional[opt1]\", \"testing/test_capture.py::TestCaptureFixture::test_capsyscapfd\", \"testing/test_capture.py::TestCaptureFixture::test_capturing_getfixturevalue\", \"testing/test_capture.py::TestCaptureFixture::test_capsyscapfdbinary\", \"testing/test_capture.py::TestCaptureFixture::test_capture_is_represented_on_failure_issue128[sys]\", \"testing/test_capture.py::TestCaptureFixture::test_capture_is_represented_on_failure_issue128[fd]\", \"testing/test_capture.py::TestCaptureFixture::test_stdfd_functional\", \"testing/test_capture.py::TestCaptureFixture::test_capfdbinary\", \"testing/test_capture.py::TestCaptureFixture::test_partial_setup_failure\", \"testing/test_capture.py::TestCaptureFixture::test_fixture_use_by_other_fixtures_teardown[capsys]\", \"testing/test_capture.py::TestCaptureFixture::test_fixture_use_by_other_fixtures_teardown[capfd]\", \"testing/test_capture.py::test_setup_failure_does_not_kill_capturing\", \"testing/test_capture.py::test_capture_conftest_runtest_setup\", \"testing/test_capture.py::test_capture_badoutput_issue412\", \"testing/test_capture.py::test_capture_early_option_parsing\", \"testing/test_capture.py::test_capture_binary_output\", \"testing/test_capture.py::TestFDCapture::test_simple\", \"testing/test_capture.py::TestFDCapture::test_simple_many\", \"testing/test_capture.py::TestFDCapture::test_simple_fail_second_start\", \"testing/test_capture.py::TestFDCapture::test_writeorg\", \"testing/test_capture.py::test_fdcapture_tmpfile_remains_the_same[True]\", \"testing/test_capture.py::test_fdcapture_tmpfile_remains_the_same[False]\", \"testing/test_capture.py::test_capturing_and_logging_fundamentals[SysCapture]\", \"testing/test_capture.py::test_capturing_and_logging_fundamentals[FDCapture]\", \"testing/test_capture.py::test_capturing_and_logging_fundamentals[TeeSysCapture]\", \"testing/test_capture.py::test_error_attribute_issue555\", \"testing/test_capture.py::test_dontreadfrominput_has_encoding\", \"testing/test_capture.py::test_typeerror_encodedfile_write\", \"testing/test_capture.py::test_encodedfile_writelines\", \"testing/test_capture.py::TestLoggingInteraction::test_logging_stream_ownership\", \"testing/test_capture.py::TestLoggingInteraction::test_logging_and_immediate_setupteardown\", \"testing/test_capture.py::TestLoggingInteraction::test_logging_and_crossscope_fixtures\", \"testing/test_capture.py::TestLoggingInteraction::test_conftestlogging_is_shown\", \"testing/test_capture.py::TestLoggingInteraction::test_conftestlogging_and_test_logging\", \"testing/test_capture.py::TestLoggingInteraction::test_logging_after_cap_stopped\", \"testing/test_capture.py::TestCaptureFixture::test_keyboardinterrupt_disables_capturing\", \"testing/test_capture.py::TestCaptureFixture::test_capture_and_logging\", \"testing/test_capture.py::TestCaptureFixture::test_disabled_capture_fixture[True-capsys]\", \"testing/test_capture.py::TestCaptureFixture::test_disabled_capture_fixture[True-capfd]\", \"testing/test_capture.py::TestCaptureFixture::test_disabled_capture_fixture[False-capsys]\", \"testing/test_capture.py::TestCaptureFixture::test_disabled_capture_fixture[False-capfd]\", \"testing/test_capture.py::TestCaptureFixture::test_fixture_use_by_other_fixtures[capsys]\", \"testing/test_capture.py::TestCaptureFixture::test_fixture_use_by_other_fixtures[capfd]\", \"testing/test_capture.py::test_error_during_readouterr\", \"testing/test_capture.py::TestStdCaptureFD::test_simple_only_fd\", \"testing/test_capture.py::TestStdCaptureFDinvalidFD::test_stdcapture_fd_invalid_fd\", \"testing/test_capture.py::test_close_and_capture_again\", \"testing/test_capture.py::test_crash_on_closing_tmpfile_py27\", \"testing/test_capture.py::test_global_capture_with_live_logging\", \"testing/test_capture.py::test_capture_with_live_logging[capsys]\", \"testing/test_capture.py::test_capture_with_live_logging[capfd]\"]",
  "environment_setup_commit": "678c1a0745f1cf175c442c719906a1f13e496910",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.932636",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}