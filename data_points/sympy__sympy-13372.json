{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-13372",
  "base_commit": "30379ea6e225e37833a764ac2da7b7fadf5fe374",
  "patch": "diff --git a/sympy/core/evalf.py b/sympy/core/evalf.py\n--- a/sympy/core/evalf.py\n+++ b/sympy/core/evalf.py\n@@ -1301,12 +1301,16 @@ def evalf(x, prec, options):\n             elif re.is_number:\n                 re = re._to_mpmath(prec, allow_ints=False)._mpf_\n                 reprec = prec\n+            else:\n+                raise NotImplementedError\n             if im == 0:\n                 im = None\n                 imprec = None\n             elif im.is_number:\n                 im = im._to_mpmath(prec, allow_ints=False)._mpf_\n                 imprec = prec\n+            else:\n+                raise NotImplementedError\n             r = re, im, reprec, imprec\n         except AttributeError:\n             raise NotImplementedError\n",
  "test_patch": "diff --git a/sympy/core/tests/test_evalf.py b/sympy/core/tests/test_evalf.py\n--- a/sympy/core/tests/test_evalf.py\n+++ b/sympy/core/tests/test_evalf.py\n@@ -230,6 +230,8 @@ def test_evalf_bugs():\n     #issue 11518\n     assert NS(2*x**2.5, 5) == '2.0000*x**2.5000'\n \n+    #issue 13076\n+    assert NS(Mul(Max(0, y), x, evaluate=False).evalf()) == 'x*Max(0, y)'\n \n def test_evalf_integer_parts():\n     a = floor(log(8)/log(2) - exp(-1000), evaluate=False)\n",
  "problem_statement": "UnboundLocalError in evalf\n```\r\n>>> Mul(x, Max(0, y), evaluate=False).evalf()\r\nx*Max(0, y)\r\n>>> Mul(Max(0, y), x, evaluate=False).evalf()\r\nTraceback (most recent call last):\r\n  File \"./sympy/core/evalf.py\", line 1285, in evalf\r\n    rf = evalf_table[x.func]\r\nKeyError: Max\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"./sympy/core/evalf.py\", line 1394, in evalf\r\n    result = evalf(self, prec + 4, options)\r\n  File \"./sympy/core/evalf.py\", line 1286, in evalf\r\n    r = rf(x, prec, options)\r\n  File \"./sympy/core/evalf.py\", line 538, in evalf_mul\r\n    arg = evalf(arg, prec, options)\r\n  File \"./sympy/core/evalf.py\", line 1308, in evalf\r\n    r = re, im, reprec, imprec\r\nUnboundLocalError: local variable 'reprec' referenced before assignment\r\n```\r\n\r\nI found this after changing the order of Mul args in https://github.com/sympy/sympy/pull/13059.\r\n\r\nBased on the code, I think the elif clauses that define reprec and imprec should have an `else: raise NotImplementedError`. That appears to fix it, although I didn't try to debug to see why the arg order is mattering here. \n",
  "hints_text": "An else for re and I'm needs to be added in which prec is set to None just before line 1308 where the error arises:\r\n\r\n```\r\nif re == 0:..\r\nelif re.is_number:..\r\nelse:\r\n    reprec = None\r\n```\nIs the correct fix to set the prec to None or to raise NotImplementedError? I thought prec=None meant the number was an exact zero. \nI guess the values being None means that. The documentation in the module doesn't specify what prec=None means. \nI'd love to take this up. Can someone please tell me how to start?\nLook at https://github.com/sympy/sympy/wiki/Introduction-to-contributing\r\n",
  "created_at": "2017-09-30T16:05:48Z",
  "version": "1.1",
  "FAIL_TO_PASS": "[\"test_evalf_bugs\"]",
  "PASS_TO_PASS": "[\"test_evalf_helpers\", \"test_evalf_basic\", \"test_cancellation\", \"test_evalf_powers\", \"test_evalf_rump\", \"test_evalf_complex\", \"test_evalf_complex_powers\", \"test_evalf_exponentiation\", \"test_evalf_complex_cancellation\", \"test_evalf_logs\", \"test_evalf_trig\", \"test_evalf_near_integers\", \"test_evalf_ramanujan\", \"test_evalf_integer_parts\", \"test_evalf_trig_zero_detection\", \"test_evalf_sum\", \"test_evalf_divergent_series\", \"test_evalf_product\", \"test_evalf_py_methods\", \"test_evalf_power_subs_bugs\", \"test_evalf_arguments\", \"test_implemented_function_evalf\", \"test_evaluate_false\", \"test_evalf_relational\", \"test_issue_5486\", \"test_issue_5486_bug\", \"test_bugs\", \"test_subs\", \"test_issue_4956_5204\", \"test_old_docstring\", \"test_issue_4806\", \"test_evalf_mul\", \"test_scaled_zero\", \"test_chop_value\", \"test_infinities\", \"test_to_mpmath\", \"test_issue_6632_evalf\", \"test_issue_4945\", \"test_evalf_integral\", \"test_issue_8821_highprec_from_str\", \"test_issue_8853\", \"test_issue_9326\", \"test_issue_10323\", \"test_AssocOp_Function\"]",
  "environment_setup_commit": "ec9e3c0436fbff934fa84e22bf07f1b3ef5bfac3",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.083425",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}