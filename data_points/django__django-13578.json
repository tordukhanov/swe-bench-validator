{
  "repo": "django/django",
  "instance_id": "django__django-13578",
  "base_commit": "f5e07601b233a50e6bcca438f65fd7028277f78b",
  "patch": "diff --git a/django/forms/formsets.py b/django/forms/formsets.py\n--- a/django/forms/formsets.py\n+++ b/django/forms/formsets.py\n@@ -90,7 +90,14 @@ def management_form(self):\n             form = ManagementForm(self.data, auto_id=self.auto_id, prefix=self.prefix)\n             if not form.is_valid():\n                 raise ValidationError(\n-                    _('ManagementForm data is missing or has been tampered with'),\n+                    _(\n+                        'ManagementForm data is missing or has been tampered '\n+                        'with. Missing fields: %(field_names)s'\n+                    ) % {\n+                        'field_names': ', '.join(\n+                            form.add_prefix(field_name) for field_name in form.errors\n+                        ),\n+                    },\n                     code='missing_management_form',\n                 )\n         else:\n",
  "test_patch": "diff --git a/tests/forms_tests/tests/test_formsets.py b/tests/forms_tests/tests/test_formsets.py\n--- a/tests/forms_tests/tests/test_formsets.py\n+++ b/tests/forms_tests/tests/test_formsets.py\n@@ -1301,7 +1301,10 @@ class ArticleForm(Form):\n \n class TestIsBoundBehavior(SimpleTestCase):\n     def test_no_data_raises_validation_error(self):\n-        msg = 'ManagementForm data is missing or has been tampered with'\n+        msg = (\n+            'ManagementForm data is missing or has been tampered with. '\n+            'Missing fields: form-TOTAL_FORMS, form-INITIAL_FORMS'\n+        )\n         with self.assertRaisesMessage(ValidationError, msg):\n             ArticleFormSet({}).is_valid()\n \n",
  "problem_statement": "ManagementForm exception in case of bad prefix should be easier to understand\nDescription\n\t\nIf user adds multiple formsets with prefixes, and specifies the prefix incorrectly when binding the form and validating:\nsome_formset = SomeFormSet(request.POST, 'articles')\ninstead of:\nsome_formset = SomeFormSet(request.POST, prefix='articles') \nDjango \"suppresses\" the original exception and raises only relatively unhelpful \"ManagementForm data is missing or has been tampered with\". \nIn file django/forms/formsets.py, line 57:\n 54. if self.data or self.files:\n 55.\t form = ManagementForm(self.data, auto_id=self.auto_id, prefix=self.prefix)\n 56.\t if not form.is_valid():\n 57.\t\t raise ValidationError('ManagementForm data is missing or has been tampered with') \nSuggestion: include form._errors in output, because for such a small bug in code, it can take a really long time find it.\n{'INITIAL_FORMS': [u'This field is required.'],\n 'MAX_NUM_FORMS': [u'This field is required.'],\n 'TOTAL_FORMS': [u'This field is required.']}\n",
  "hints_text": "validation error with _errors included\nNot sure I completely agree with the suggested fix, but yes -- the error on failure of the management form could be a little more helpful, at the very least naming the field that is missing or invalid.\nPatch would need improvement as per Russell's comment. Also needs tests.\nChange UI/UX from NULL to False.\nChange Easy pickings from NULL to False.\nWe may change the code from : raise ValidationError( _('ManagementForm data is missing or has been tampered with'), code='missing_management_form', ) to something like: raise ValidationError( _('ManagementForm data is missing or has been tampered with %s' % form._errors), code='missing_management_form', ) Approvals please.\n​PR\nOn second thought I suppose it’s a bit early for the needs tests flag since no one has supplied a review.",
  "created_at": "2020-10-20T22:49:54Z",
  "version": "3.2",
  "FAIL_TO_PASS": "[\"test_no_data_raises_validation_error (forms_tests.tests.test_formsets.TestIsBoundBehavior)\"]",
  "PASS_TO_PASS": "[\"all_valid() validates all forms, even when some are invalid.\", \"test_valid (forms_tests.tests.test_formsets.AllValidTests)\", \"is_multipart() works with an empty formset.\", \"An empty formset still calls clean()\", \"Media is available on empty formset.\", \"test_as_p (forms_tests.tests.test_formsets.FormsetAsTagTests)\", \"test_as_table (forms_tests.tests.test_formsets.FormsetAsTagTests)\", \"test_as_ul (forms_tests.tests.test_formsets.FormsetAsTagTests)\", \"test_empty_forms_are_unbound (forms_tests.tests.test_formsets.TestIsBoundBehavior)\", \"test_form_errors_are_caught_by_formset (forms_tests.tests.test_formsets.TestIsBoundBehavior)\", \"test_with_management_data_attrs_work_fine (forms_tests.tests.test_formsets.TestIsBoundBehavior)\", \"test_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_absolute_max_invalid (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_absolute_max_with_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_basic_formset (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"A form that's displayed as blank may be submitted as blank.\", \"test_can_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_clean_hook (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_default_absolute_max (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_delete_prefilled_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_disable_delete_extra_formset_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_displaying_more_than_one_blank_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_empty_ordered_fields (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_form_kwargs_empty_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_form_kwargs_formset (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"Form kwargs can be passed dynamically in a formset.\", \"Formsets call is_valid() on each form.\", \"Formset's forms use the formset's error_class.\", \"test_formset_has_changed (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_formset_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"Formset instances are iterable.\", \"A formsets without any forms evaluates as True.\", \"test_formset_splitdatetimefield (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"A valid formset should have 0 total errors.\", \"test_formset_total_error_count_with_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_formset_validate_max_flag (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_formset_validate_min_excludes_empty_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_formset_validate_min_flag (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_formset_validate_min_unchanged_forms (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_formset_validation (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_formset_validation_count (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_formset_with_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_formset_with_deletion_invalid_deleted_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_formset_with_deletion_remove_deletion_flag (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"FormSets with ordering + deletion.\", \"test_formsets_with_order_custom_widget (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_formsets_with_ordering (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"A formset has a hard limit on the number of forms instantiated.\", \"test_html_safe (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"Can increase the built-in forms limit via a higher max_num.\", \"test_invalid_deleted_form_with_ordering (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_limited_max_forms_two (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"max_num has no effect when extra is less than max_num.\", \"Limiting the maximum number of forms with max_num.\", \"The management form has the correct prefix.\", \"test_max_num_with_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_max_num_zero (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_max_num_zero_with_initial (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_min_num_displaying_more_than_one_blank_form (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"More than 1 empty form can be displayed using min_num.\", \"test_more_initial_data (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_more_initial_form_result_in_one (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_more_initial_than_max_num (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_non_form_errors (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"test_non_form_errors_run_full_clean (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"Ordering works with blank fieldsets.\", \"test_second_form_partially_filled (forms_tests.tests.test_formsets.FormsFormsetTestCase)\", \"A partially completed form is invalid.\", \"Just one form may be completed.\", \"test_validate_max_ignores_forms_marked_for_deletion (forms_tests.tests.test_formsets.FormsFormsetTestCase)\"]",
  "environment_setup_commit": "65dfb06a1ab56c238cc80f5e1c31f61210c4577d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.662690",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}