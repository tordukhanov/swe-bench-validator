{
  "repo": "django/django",
  "instance_id": "django__django-14558",
  "base_commit": "66af94d56ea08ccf8d906708a6cc002dd3ab24d3",
  "patch": "diff --git a/django/forms/fields.py b/django/forms/fields.py\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -1251,6 +1251,8 @@ def to_python(self, value):\n     def bound_data(self, data, initial):\n         if self.disabled:\n             return initial\n+        if data is None:\n+            return None\n         try:\n             return json.loads(data, cls=self.decoder)\n         except json.JSONDecodeError:\n",
  "test_patch": "diff --git a/tests/forms_tests/field_tests/test_jsonfield.py b/tests/forms_tests/field_tests/test_jsonfield.py\n--- a/tests/forms_tests/field_tests/test_jsonfield.py\n+++ b/tests/forms_tests/field_tests/test_jsonfield.py\n@@ -97,6 +97,21 @@ class JSONForm(Form):\n         form = JSONForm({'json_field': '[\"bar\"]'}, initial={'json_field': ['foo']})\n         self.assertIn('[&quot;foo&quot;]</textarea>', form.as_p())\n \n+    def test_redisplay_none_input(self):\n+        class JSONForm(Form):\n+            json_field = JSONField(required=True)\n+\n+        tests = [\n+            {},\n+            {'json_field': None},\n+        ]\n+        for data in tests:\n+            with self.subTest(data=data):\n+                form = JSONForm(data)\n+                self.assertEqual(form['json_field'].value(), 'null')\n+                self.assertIn('null</textarea>', form.as_p())\n+                self.assertEqual(form.errors['json_field'], ['This field is required.'])\n+\n     def test_redisplay_wrong_input(self):\n         \"\"\"\n         Displaying a bound form (typically due to invalid input). The form\n",
  "problem_statement": "JSONField.bound_data raises TypeError when data is None\nDescription\n\t\nHi,\nWhen a bound form with no value provided for the JSONField is rendered, it will currently crash.\nclass JSONForm(Form):\n\tjson_field = JSONField(required=False)\nform = JSONForm({})\nassert form.as_p()\nraises\nTypeError: the JSON object must be str, bytes or bytearray, not NoneType\nA fix has been created already by @AlexHill here: ​https://github.com/django/django/pull/13844\n",
  "hints_text": "Regression in db19619545dd99a1d2502c72974d79eca33acff7.\n​PR",
  "created_at": "2021-06-24T15:21:31Z",
  "version": "4.0",
  "FAIL_TO_PASS": "[\"test_redisplay_none_input (forms_tests.field_tests.test_jsonfield.JSONFieldTest)\"]",
  "PASS_TO_PASS": "[\"test_converted_value (forms_tests.field_tests.test_jsonfield.JSONFieldTest)\", \"test_custom_encoder_decoder (forms_tests.field_tests.test_jsonfield.JSONFieldTest)\", \"The widget can be overridden with an attribute.\", \"test_custom_widget_kwarg (forms_tests.field_tests.test_jsonfield.JSONFieldTest)\", \"test_formfield_disabled (forms_tests.field_tests.test_jsonfield.JSONFieldTest)\", \"test_has_changed (forms_tests.field_tests.test_jsonfield.JSONFieldTest)\", \"test_invalid (forms_tests.field_tests.test_jsonfield.JSONFieldTest)\", \"test_prepare_value (forms_tests.field_tests.test_jsonfield.JSONFieldTest)\", \"Displaying a bound form (typically due to invalid input). The form\", \"test_valid (forms_tests.field_tests.test_jsonfield.JSONFieldTest)\", \"test_valid_empty (forms_tests.field_tests.test_jsonfield.JSONFieldTest)\", \"test_widget (forms_tests.field_tests.test_jsonfield.JSONFieldTest)\"]",
  "environment_setup_commit": "475cffd1d64c690cdad16ede4d5e81985738ceb4",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.696676",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}