{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-7350",
  "base_commit": "c75470f9b79046f6d32344be5eacf60a4e1c1b7d",
  "patch": "diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -583,7 +583,11 @@ def _parse_attributes_section(self, section: str) -> List[str]:\n                 if _type:\n                     lines.append(':vartype %s: %s' % (_name, _type))\n             else:\n-                lines.extend(['.. attribute:: ' + _name, ''])\n+                lines.append('.. attribute:: ' + _name)\n+                if self._opt and 'noindex' in self._opt:\n+                    lines.append('   :noindex:')\n+                lines.append('')\n+\n                 fields = self._format_field('', '', _desc)\n                 lines.extend(self._indent(fields, 3))\n                 if _type:\n@@ -641,6 +645,8 @@ def _parse_methods_section(self, section: str) -> List[str]:\n         lines = []  # type: List[str]\n         for _name, _type, _desc in self._consume_fields(parse_type=False):\n             lines.append('.. method:: %s' % _name)\n+            if self._opt and 'noindex' in self._opt:\n+                lines.append('   :noindex:')\n             if _desc:\n                 lines.extend([''] + self._indent(_desc, 3))\n             lines.append('')\n",
  "test_patch": "diff --git a/tests/test_ext_napoleon_docstring.py b/tests/test_ext_napoleon_docstring.py\n--- a/tests/test_ext_napoleon_docstring.py\n+++ b/tests/test_ext_napoleon_docstring.py\n@@ -1020,6 +1020,34 @@ def test_custom_generic_sections(self):\n             actual = str(GoogleDocstring(docstring, testConfig))\n             self.assertEqual(expected, actual)\n \n+    def test_noindex(self):\n+        docstring = \"\"\"\n+Attributes:\n+    arg\n+        description\n+\n+Methods:\n+    func(i, j)\n+        description\n+\"\"\"\n+\n+        expected = \"\"\"\n+.. attribute:: arg\n+   :noindex:\n+\n+   description\n+\n+.. method:: func(i, j)\n+   :noindex:\n+\n+   \n+   description\n+\"\"\"\n+        config = Config()\n+        actual = str(GoogleDocstring(docstring, config=config, app=None, what='module',\n+                                     options={'noindex': True}))\n+        self.assertEqual(expected, actual)\n+\n \n class NumpyDocstringTest(BaseDocstringTest):\n     docstrings = [(\n",
  "problem_statement": "Napoleon's Attributes directive ignores :noindex: option.\n**Description of the bug**\r\nSphinxcontrib-napoleon's `Attributes:` directive appears to ignore the `:noindex:` option. \r\n\r\nThe following reST code produces an index that includes the `Attributes:` directives found in `example_google.py` but leaves out all other directives:\r\n\r\n```reST\r\nGoogle Example\r\n==============\r\n\r\n.. automodule:: example_google\r\n   :members:\r\n   :noindex:\r\n\r\n:ref:`genindex`\r\n```\r\n\r\n\r\n**Expected behavior**\r\nThe above example should produce an empty document index.\r\n\r\n\r\n**Environment info**\r\nI am using the Sphinx packages that are provided by Ubuntu 18.04 and installed Napoleon with pip3 afterwards:\r\n\r\n```\r\napt install make python3-sphinx python3-pip\r\npip3 install sphinxcontrib-napoleon\r\n```\r\n\r\nThe file `example_google.py` is from https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html\r\n\r\nI used `sphinx-quickstart` to configure my directory, edited `conf.py` to include `sphinxcontrib-napoleon` and set the Python path, then typed `make html`.\r\n\n",
  "hints_text": "I'm hitting this bug as well, but I believe this bug is in `autodoc` not `napoleon`, since all `napoleon` does is convert Google/Numpy style docstrings to valid reST. As far as I can tell from the code, it doesn't set `:noindex:` for any other option so I don't see how Attributes is handled any differently.",
  "created_at": "2020-03-21T09:55:42Z",
  "version": "3.0",
  "FAIL_TO_PASS": "[\"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_noindex\"]",
  "PASS_TO_PASS": "[\"tests/test_ext_napoleon_docstring.py::NamedtupleSubclassTest::test_attributes_docstring\", \"tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member\", \"tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_attributes_with_class_reference\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_code_block_in_returns_section\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_colon_in_return_type\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_custom_generic_sections\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_docstrings\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_kwargs_in_arguments\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_list_in_parameter_description\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_parameters_with_class_reference\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_raises_types\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_section_header_formatting\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_sphinx_admonitions\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_xrefs_in_return_type\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_colon_in_return_type\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_docstrings\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_keywords_with_types\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_list_in_parameter_description\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameters_with_class_reference\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameters_without_class_reference\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_raises_types\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_section_header_underline_length\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_see_also_refs\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_sphinx_admonitions\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_underscore_in_attribute\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_xrefs_in_return_type\"]",
  "environment_setup_commit": "50d2d289e150cb429de15770bdd48a723de8c45d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.039244",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}