{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-25425",
  "base_commit": "cb2bdb1300f40ae8746a1916480af4d0d7af5f77",
  "patch": "diff --git a/lib/matplotlib/image.py b/lib/matplotlib/image.py\n--- a/lib/matplotlib/image.py\n+++ b/lib/matplotlib/image.py\n@@ -275,8 +275,8 @@ def __init__(self, ax,\n \n     def __str__(self):\n         try:\n-            size = self.get_size()\n-            return f\"{type(self).__name__}(size={size!r})\"\n+            shape = self.get_shape()\n+            return f\"{type(self).__name__}(shape={shape!r})\"\n         except RuntimeError:\n             return type(self).__name__\n \n@@ -286,10 +286,16 @@ def __getstate__(self):\n \n     def get_size(self):\n         \"\"\"Return the size of the image as tuple (numrows, numcols).\"\"\"\n+        return self.get_shape()[:2]\n+\n+    def get_shape(self):\n+        \"\"\"\n+        Return the shape of the image as tuple (numrows, numcols, channels).\n+        \"\"\"\n         if self._A is None:\n             raise RuntimeError('You must first set the image array')\n \n-        return self._A.shape[:2]\n+        return self._A.shape\n \n     def set_alpha(self, alpha):\n         \"\"\"\n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_image.py b/lib/matplotlib/tests/test_image.py\n--- a/lib/matplotlib/tests/test_image.py\n+++ b/lib/matplotlib/tests/test_image.py\n@@ -1468,3 +1468,15 @@ def test__resample_valid_output():\n         resample(np.zeros((9, 9), np.uint8), np.zeros((9, 9)))\n     with pytest.raises(ValueError, match=\"must be C-contiguous\"):\n         resample(np.zeros((9, 9)), np.zeros((9, 9)).T)\n+\n+\n+def test_axesimage_get_shape():\n+    # generate dummy image to test get_shape method\n+    ax = plt.gca()\n+    im = AxesImage(ax)\n+    with pytest.raises(RuntimeError, match=\"You must first set the image array\"):\n+        im.get_shape()\n+    z = np.arange(12, dtype=float).reshape((4, 3))\n+    im.set_data(z)\n+    assert im.get_shape() == (4, 3)\n+    assert im.get_size() == im.get_shape()\n",
  "problem_statement": "[ENH]: Add `get_shape` as alias for `get_size` in AxesImage, or make that include depth too\n### Problem\n\n#22485 changed `AxesImage.__str__` to `AxesImage(size=(nrows, ncols))`.  While this indeed corresponds to `AxesImage.get_size`, this is not consistent with the numpy API, where `array.shape = (nrows, ncols)` and `array.size = nrows * ncols`.\r\nPerhaps we can consider 1) tweaking `__str__` to `AxesImage(shape=(nrows, ncols))` instead, and add `get_shape` as an alias for `get_size`?  Alternatively, `get_shape` could return `self._A.shape` (i.e., including whether the data is colormapped, RGB, or RGBA), and we could use *that* info in `__str__`?  (displaying whether the data is colormapped/RGB/RGBA seems reasonably useful)\n\n### Proposed solution\n\n_No response_\n",
  "hints_text": "Good point! Either seems to make sense to me.\nI am attempting to do this and choose the second way suggested. What should I do with the get_size() method? I'm guessing I should just leave it the same as it is probably being used in other code right now.",
  "created_at": "2023-03-10T11:39:00Z",
  "version": "3.7",
  "FAIL_TO_PASS": "[\"lib/matplotlib/tests/test_image.py::test_axesimage_get_shape\"]",
  "PASS_TO_PASS": "[\"lib/matplotlib/tests/test_image.py::test_image_interps[png]\", \"lib/matplotlib/tests/test_image.py::test_image_interps[pdf]\", \"lib/matplotlib/tests/test_image.py::test_alpha_interp[png]\", \"lib/matplotlib/tests/test_image.py::test_interp_nearest_vs_none[pdf]\", \"lib/matplotlib/tests/test_image.py::test_figimage[png-False]\", \"lib/matplotlib/tests/test_image.py::test_figimage[png-True]\", \"lib/matplotlib/tests/test_image.py::test_figimage[pdf-False]\", \"lib/matplotlib/tests/test_image.py::test_figimage[pdf-True]\", \"lib/matplotlib/tests/test_image.py::test_image_python_io\", \"lib/matplotlib/tests/test_image.py::test_imshow_antialiased[png-5-2-hanning]\", \"lib/matplotlib/tests/test_image.py::test_imshow_antialiased[png-5-5-nearest]\", \"lib/matplotlib/tests/test_image.py::test_imshow_antialiased[png-5-10-nearest]\", \"lib/matplotlib/tests/test_image.py::test_imshow_antialiased[png-3-2.9-hanning]\", \"lib/matplotlib/tests/test_image.py::test_imshow_antialiased[png-3-9.1-nearest]\", \"lib/matplotlib/tests/test_image.py::test_imshow_zoom[png]\", \"lib/matplotlib/tests/test_image.py::test_imshow_pil[png]\", \"lib/matplotlib/tests/test_image.py::test_imshow_pil[pdf]\", \"lib/matplotlib/tests/test_image.py::test_imread_pil_uint16\", \"lib/matplotlib/tests/test_image.py::test_imread_fspath\", \"lib/matplotlib/tests/test_image.py::test_imsave[png]\", \"lib/matplotlib/tests/test_image.py::test_imsave[jpg]\", \"lib/matplotlib/tests/test_image.py::test_imsave[jpeg]\", \"lib/matplotlib/tests/test_image.py::test_imsave[tiff]\", \"lib/matplotlib/tests/test_image.py::test_imsave_fspath[png]\", \"lib/matplotlib/tests/test_image.py::test_imsave_fspath[pdf]\", \"lib/matplotlib/tests/test_image.py::test_imsave_fspath[ps]\", \"lib/matplotlib/tests/test_image.py::test_imsave_fspath[eps]\", \"lib/matplotlib/tests/test_image.py::test_imsave_fspath[svg]\", \"lib/matplotlib/tests/test_image.py::test_imsave_color_alpha\", \"lib/matplotlib/tests/test_image.py::test_imsave_pil_kwargs_png\", \"lib/matplotlib/tests/test_image.py::test_imsave_pil_kwargs_tiff\", \"lib/matplotlib/tests/test_image.py::test_image_alpha[png]\", \"lib/matplotlib/tests/test_image.py::test_image_alpha[pdf]\", \"lib/matplotlib/tests/test_image.py::test_cursor_data\", \"lib/matplotlib/tests/test_image.py::test_format_cursor_data[data0-[10001.000]]\", \"lib/matplotlib/tests/test_image.py::test_format_cursor_data[data1-[0.123]]\", \"lib/matplotlib/tests/test_image.py::test_format_cursor_data[data2-[]]\", \"lib/matplotlib/tests/test_image.py::test_format_cursor_data[data3-[1.0000000000000000]]\", \"lib/matplotlib/tests/test_image.py::test_format_cursor_data[data4-[-1.0000000000000000]]\", \"lib/matplotlib/tests/test_image.py::test_image_clip[png]\", \"lib/matplotlib/tests/test_image.py::test_image_clip[pdf]\", \"lib/matplotlib/tests/test_image.py::test_image_cliprect[png]\", \"lib/matplotlib/tests/test_image.py::test_image_cliprect[pdf]\", \"lib/matplotlib/tests/test_image.py::test_imshow[png]\", \"lib/matplotlib/tests/test_image.py::test_imshow[pdf]\", \"lib/matplotlib/tests/test_image.py::test_imshow_10_10_1[png]\", \"lib/matplotlib/tests/test_image.py::test_imshow_10_10_2\", \"lib/matplotlib/tests/test_image.py::test_imshow_10_10_5\", \"lib/matplotlib/tests/test_image.py::test_no_interpolation_origin[png]\", \"lib/matplotlib/tests/test_image.py::test_no_interpolation_origin[pdf]\", \"lib/matplotlib/tests/test_image.py::test_image_shift[pdf]\", \"lib/matplotlib/tests/test_image.py::test_image_edges\", \"lib/matplotlib/tests/test_image.py::test_image_composite_background[png]\", \"lib/matplotlib/tests/test_image.py::test_image_composite_background[pdf]\", \"lib/matplotlib/tests/test_image.py::test_image_composite_alpha[png]\", \"lib/matplotlib/tests/test_image.py::test_image_composite_alpha[pdf]\", \"lib/matplotlib/tests/test_image.py::test_clip_path_disables_compositing[pdf]\", \"lib/matplotlib/tests/test_image.py::test_rasterize_dpi[pdf]\", \"lib/matplotlib/tests/test_image.py::test_bbox_image_inverted[png]\", \"lib/matplotlib/tests/test_image.py::test_bbox_image_inverted[pdf]\", \"lib/matplotlib/tests/test_image.py::test_get_window_extent_for_AxisImage\", \"lib/matplotlib/tests/test_image.py::test_zoom_and_clip_upper_origin[png]\", \"lib/matplotlib/tests/test_image.py::test_nonuniformimage_setcmap\", \"lib/matplotlib/tests/test_image.py::test_nonuniformimage_setnorm\", \"lib/matplotlib/tests/test_image.py::test_jpeg_2d\", \"lib/matplotlib/tests/test_image.py::test_jpeg_alpha\", \"lib/matplotlib/tests/test_image.py::test_axesimage_setdata\", \"lib/matplotlib/tests/test_image.py::test_figureimage_setdata\", \"lib/matplotlib/tests/test_image.py::test_setdata_xya[NonUniformImage-x0-y0-a0]\", \"lib/matplotlib/tests/test_image.py::test_setdata_xya[PcolorImage-x1-y1-a1]\", \"lib/matplotlib/tests/test_image.py::test_minimized_rasterized\", \"lib/matplotlib/tests/test_image.py::test_load_from_url\", \"lib/matplotlib/tests/test_image.py::test_log_scale_image[png]\", \"lib/matplotlib/tests/test_image.py::test_log_scale_image[pdf]\", \"lib/matplotlib/tests/test_image.py::test_rotate_image[png]\", \"lib/matplotlib/tests/test_image.py::test_rotate_image[pdf]\", \"lib/matplotlib/tests/test_image.py::test_image_preserve_size\", \"lib/matplotlib/tests/test_image.py::test_image_preserve_size2\", \"lib/matplotlib/tests/test_image.py::test_mask_image_over_under[png]\", \"lib/matplotlib/tests/test_image.py::test_mask_image[png]\", \"lib/matplotlib/tests/test_image.py::test_mask_image[pdf]\", \"lib/matplotlib/tests/test_image.py::test_mask_image_all\", \"lib/matplotlib/tests/test_image.py::test_imshow_endianess[png]\", \"lib/matplotlib/tests/test_image.py::test_imshow_masked_interpolation[png]\", \"lib/matplotlib/tests/test_image.py::test_imshow_masked_interpolation[pdf]\", \"lib/matplotlib/tests/test_image.py::test_imshow_no_warn_invalid\", \"lib/matplotlib/tests/test_image.py::test_imshow_clips_rgb_to_valid_range[dtype0]\", \"lib/matplotlib/tests/test_image.py::test_imshow_clips_rgb_to_valid_range[dtype1]\", \"lib/matplotlib/tests/test_image.py::test_imshow_clips_rgb_to_valid_range[dtype2]\", \"lib/matplotlib/tests/test_image.py::test_imshow_clips_rgb_to_valid_range[dtype3]\", \"lib/matplotlib/tests/test_image.py::test_imshow_clips_rgb_to_valid_range[dtype4]\", \"lib/matplotlib/tests/test_image.py::test_imshow_clips_rgb_to_valid_range[dtype5]\", \"lib/matplotlib/tests/test_image.py::test_imshow_clips_rgb_to_valid_range[dtype6]\", \"lib/matplotlib/tests/test_image.py::test_imshow_flatfield[png]\", \"lib/matplotlib/tests/test_image.py::test_imshow_bignumbers[png]\", \"lib/matplotlib/tests/test_image.py::test_imshow_bignumbers_real[png]\", \"lib/matplotlib/tests/test_image.py::test_empty_imshow[Normalize]\", \"lib/matplotlib/tests/test_image.py::test_empty_imshow[LogNorm]\", \"lib/matplotlib/tests/test_image.py::test_empty_imshow[<lambda>0]\", \"lib/matplotlib/tests/test_image.py::test_empty_imshow[<lambda>1]\", \"lib/matplotlib/tests/test_image.py::test_imshow_float16\", \"lib/matplotlib/tests/test_image.py::test_imshow_float128\", \"lib/matplotlib/tests/test_image.py::test_imshow_bool\", \"lib/matplotlib/tests/test_image.py::test_full_invalid\", \"lib/matplotlib/tests/test_image.py::test_composite[True-1-ps-\", \"lib/matplotlib/tests/test_image.py::test_composite[True-1-svg-<image]\", \"lib/matplotlib/tests/test_image.py::test_composite[False-2-ps-\", \"lib/matplotlib/tests/test_image.py::test_composite[False-2-svg-<image]\", \"lib/matplotlib/tests/test_image.py::test_relim\", \"lib/matplotlib/tests/test_image.py::test_unclipped\", \"lib/matplotlib/tests/test_image.py::test_respects_bbox\", \"lib/matplotlib/tests/test_image.py::test_image_cursor_formatting\", \"lib/matplotlib/tests/test_image.py::test_image_array_alpha[png]\", \"lib/matplotlib/tests/test_image.py::test_image_array_alpha[pdf]\", \"lib/matplotlib/tests/test_image.py::test_image_array_alpha_validation\", \"lib/matplotlib/tests/test_image.py::test_exact_vmin\", \"lib/matplotlib/tests/test_image.py::test_quantitynd\", \"lib/matplotlib/tests/test_image.py::test_imshow_quantitynd\", \"lib/matplotlib/tests/test_image.py::test_norm_change[png]\", \"lib/matplotlib/tests/test_image.py::test_huge_range_log[png--1]\", \"lib/matplotlib/tests/test_image.py::test_huge_range_log[png-1]\", \"lib/matplotlib/tests/test_image.py::test_spy_box[png]\", \"lib/matplotlib/tests/test_image.py::test_spy_box[pdf]\", \"lib/matplotlib/tests/test_image.py::test_nonuniform_and_pcolor[png]\", \"lib/matplotlib/tests/test_image.py::test_rgba_antialias[png]\", \"lib/matplotlib/tests/test_image.py::test_large_image[png-row-8388608-2\\\\\\\\*\\\\\\\\*23\", \"lib/matplotlib/tests/test_image.py::test_large_image[png-col-16777216-2\\\\\\\\*\\\\\\\\*24\", \"lib/matplotlib/tests/test_image.py::test_str_norms[png]\", \"lib/matplotlib/tests/test_image.py::test__resample_valid_output\"]",
  "environment_setup_commit": "0849036fd992a2dd133a0cffc3f84f58ccf1840f",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.820859",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}