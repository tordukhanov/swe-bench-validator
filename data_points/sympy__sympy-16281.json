{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-16281",
  "base_commit": "41490b75f3621408e0468b0e7b6dc409601fc6ff",
  "patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -491,10 +491,9 @@ def _print_Product(self, expr):\n \n         for lim in expr.limits:\n             width = (func_height + 2) * 5 // 3 - 2\n-            sign_lines = []\n-            sign_lines.append(corner_chr + (horizontal_chr*width) + corner_chr)\n-            for i in range(func_height + 1):\n-                sign_lines.append(vertical_chr + (' '*width) + vertical_chr)\n+            sign_lines = [horizontal_chr + corner_chr + (horizontal_chr * (width-2)) + corner_chr + horizontal_chr]\n+            for _ in range(func_height + 1):\n+                sign_lines.append(' ' + vertical_chr + (' ' * (width-2)) + vertical_chr + ' ')\n \n             pretty_sign = stringPict('')\n             pretty_sign = prettyForm(*pretty_sign.stack(*sign_lines))\n",
  "test_patch": "diff --git a/sympy/printing/pretty/tests/test_pretty.py b/sympy/printing/pretty/tests/test_pretty.py\n--- a/sympy/printing/pretty/tests/test_pretty.py\n+++ b/sympy/printing/pretty/tests/test_pretty.py\n@@ -2054,51 +2054,48 @@ def test_pretty_product():\n     unicode_str = \\\n u(\"\"\"\\\n     l           \\n\\\n-┬────────┬      \\n\\\n-│        │  ⎛ 2⎞\\n\\\n-│        │  ⎜n ⎟\\n\\\n-│        │ f⎜──⎟\\n\\\n-│        │  ⎝9 ⎠\\n\\\n-│        │      \\n\\\n+─┬──────┬─      \\n\\\n+ │      │   ⎛ 2⎞\\n\\\n+ │      │   ⎜n ⎟\\n\\\n+ │      │  f⎜──⎟\\n\\\n+ │      │   ⎝9 ⎠\\n\\\n+ │      │       \\n\\\n        2        \\n\\\n   n = k         \"\"\")\n     ascii_str = \\\n \"\"\"\\\n     l           \\n\\\n __________      \\n\\\n-|        |  / 2\\\\\\n\\\n-|        |  |n |\\n\\\n-|        | f|--|\\n\\\n-|        |  \\\\9 /\\n\\\n-|        |      \\n\\\n+ |      |   / 2\\\\\\n\\\n+ |      |   |n |\\n\\\n+ |      |  f|--|\\n\\\n+ |      |   \\\\9 /\\n\\\n+ |      |       \\n\\\n        2        \\n\\\n   n = k         \"\"\"\n \n-    assert pretty(expr) == ascii_str\n-    assert upretty(expr) == unicode_str\n-\n     expr = Product(f((n/3)**2), (n, k**2, l), (l, 1, m))\n \n     unicode_str = \\\n u(\"\"\"\\\n     m          l           \\n\\\n-┬────────┬ ┬────────┬      \\n\\\n-│        │ │        │  ⎛ 2⎞\\n\\\n-│        │ │        │  ⎜n ⎟\\n\\\n-│        │ │        │ f⎜──⎟\\n\\\n-│        │ │        │  ⎝9 ⎠\\n\\\n-│        │ │        │      \\n\\\n+─┬──────┬─ ─┬──────┬─      \\n\\\n+ │      │   │      │   ⎛ 2⎞\\n\\\n+ │      │   │      │   ⎜n ⎟\\n\\\n+ │      │   │      │  f⎜──⎟\\n\\\n+ │      │   │      │   ⎝9 ⎠\\n\\\n+ │      │   │      │       \\n\\\n   l = 1           2        \\n\\\n              n = k         \"\"\")\n     ascii_str = \\\n \"\"\"\\\n     m          l           \\n\\\n __________ __________      \\n\\\n-|        | |        |  / 2\\\\\\n\\\n-|        | |        |  |n |\\n\\\n-|        | |        | f|--|\\n\\\n-|        | |        |  \\\\9 /\\n\\\n-|        | |        |      \\n\\\n+ |      |   |      |   / 2\\\\\\n\\\n+ |      |   |      |   |n |\\n\\\n+ |      |   |      |  f|--|\\n\\\n+ |      |   |      |   \\\\9 /\\n\\\n+ |      |   |      |       \\n\\\n   l = 1           2        \\n\\\n              n = k         \"\"\"\n \n@@ -5514,19 +5511,19 @@ def test_issue_6359():\n            2\n /  2      \\\\ \\n\\\n |______   | \\n\\\n-||    |  2| \\n\\\n-||    | x | \\n\\\n-||    |   | \\n\\\n+| |  |   2| \\n\\\n+| |  |  x | \\n\\\n+| |  |    | \\n\\\n \\\\x = 1    / \\\n \"\"\"\n     assert upretty(Product(x**2, (x, 1, 2))**2) == \\\n u(\"\"\"\\\n            2\n ⎛  2      ⎞ \\n\\\n-⎜┬────┬   ⎟ \\n\\\n-⎜│    │  2⎟ \\n\\\n-⎜│    │ x ⎟ \\n\\\n-⎜│    │   ⎟ \\n\\\n+⎜─┬──┬─   ⎟ \\n\\\n+⎜ │  │   2⎟ \\n\\\n+⎜ │  │  x ⎟ \\n\\\n+⎜ │  │    ⎟ \\n\\\n ⎝x = 1    ⎠ \\\n \"\"\")\n \n",
  "problem_statement": "Product pretty print could be improved\nThis is what the pretty printing for `Product` looks like:\r\n\r\n```\r\n>>> pprint(Product(1, (n, 1, oo)))\r\n  ∞\r\n┬───┬\r\n│   │ 1\r\n│   │\r\nn = 1\r\n>>> pprint(Product(1/n, (n, 1, oo)))\r\n   ∞\r\n┬──────┬\r\n│      │ 1\r\n│      │ ─\r\n│      │ n\r\n│      │\r\n n = 1\r\n>>> pprint(Product(1/n**2, (n, 1, oo)))\r\n    ∞\r\n┬────────┬\r\n│        │ 1\r\n│        │ ──\r\n│        │  2\r\n│        │ n\r\n│        │\r\n  n = 1\r\n>>> pprint(Product(1, (n, 1, oo)), use_unicode=False)\r\n  oo\r\n_____\r\n|   | 1\r\n|   |\r\nn = 1\r\n>>> pprint(Product(1/n, (n, 1, oo)), use_unicode=False)\r\n   oo\r\n________\r\n|      | 1\r\n|      | -\r\n|      | n\r\n|      |\r\n n = 1\r\n>>> pprint(Product(1/n**2, (n, 1, oo)), use_unicode=False)\r\n    oo\r\n__________\r\n|        | 1\r\n|        | --\r\n|        |  2\r\n|        | n\r\n|        |\r\n  n = 1\r\n```\r\n\r\n(if those don't look good in your browser copy paste them into the terminal)\r\n\r\nThis could be improved:\r\n\r\n- Why is there always an empty line at the bottom of the ∏? Keeping everything below the horizontal line is good, but the bottom looks asymmetric, and it makes the ∏ bigger than it needs to be.\r\n\r\n- The ∏ is too fat IMO. \r\n\r\n- It might look better if we extended the top bar. I'm unsure about this. \r\n\r\nCompare this\r\n\r\n```\r\n    ∞\r\n─┬─────┬─\r\n │     │  1\r\n │     │  ──\r\n │     │   2\r\n │     │  n\r\n  n = 1\r\n```\r\n\r\nThat's still almost twice as wide as the equivalent Sum, but if you make it much skinnier it starts to look bad.\r\n\r\n```\r\n  ∞\r\n ____\r\n ╲\r\n  ╲   1\r\n   ╲  ──\r\n   ╱   2\r\n  ╱   n\r\n ╱\r\n ‾‾‾‾\r\nn = 1\r\n```\n",
  "hints_text": "",
  "created_at": "2019-03-16T19:37:33Z",
  "version": "1.4",
  "FAIL_TO_PASS": "[\"test_pretty_product\", \"test_issue_6359\"]",
  "PASS_TO_PASS": "[\"test_pretty_ascii_str\", \"test_pretty_unicode_str\", \"test_upretty_greek\", \"test_upretty_multiindex\", \"test_upretty_sub_super\", \"test_upretty_subs_missing_in_24\", \"test_missing_in_2X_issue_9047\", \"test_upretty_modifiers\", \"test_pretty_Cycle\", \"test_pretty_basic\", \"test_negative_fractions\", \"test_issue_5524\", \"test_pretty_ordering\", \"test_EulerGamma\", \"test_GoldenRatio\", \"test_pretty_relational\", \"test_Assignment\", \"test_AugmentedAssignment\", \"test_issue_7117\", \"test_pretty_rational\", \"test_pretty_functions\", \"test_pretty_sqrt\", \"test_pretty_sqrt_char_knob\", \"test_pretty_sqrt_longsymbol_no_sqrt_char\", \"test_pretty_KroneckerDelta\", \"test_pretty_lambda\", \"test_pretty_order\", \"test_pretty_derivatives\", \"test_pretty_integrals\", \"test_pretty_matrix\", \"test_pretty_ndim_arrays\", \"test_tensor_TensorProduct\", \"test_diffgeom_print_WedgeProduct\", \"test_Adjoint\", \"test_pretty_Trace_issue_9044\", \"test_MatrixExpressions\", \"test_pretty_dotproduct\", \"test_pretty_piecewise\", \"test_pretty_ITE\", \"test_pretty_seq\", \"test_any_object_in_sequence\", \"test_print_builtin_set\", \"test_pretty_sets\", \"test_pretty_SetExpr\", \"test_pretty_ImageSet\", \"test_pretty_ConditionSet\", \"test_pretty_ComplexRegion\", \"test_pretty_Union_issue_10414\", \"test_pretty_Intersection_issue_10414\", \"test_ProductSet_paranthesis\", \"test_ProductSet_prod_char_issue_10413\", \"test_pretty_sequences\", \"test_pretty_FourierSeries\", \"test_pretty_FormalPowerSeries\", \"test_pretty_limits\", \"test_pretty_ComplexRootOf\", \"test_pretty_RootSum\", \"test_GroebnerBasis\", \"test_pretty_Boolean\", \"test_pretty_Domain\", \"test_pretty_prec\", \"test_pprint\", \"test_pretty_class\", \"test_pretty_no_wrap_line\", \"test_settings\", \"test_pretty_sum\", \"test_units\", \"test_pretty_Subs\", \"test_gammas\", \"test_beta\", \"test_function_subclass_different_name\", \"test_SingularityFunction\", \"test_deltas\", \"test_hyper\", \"test_meijerg\", \"test_noncommutative\", \"test_pretty_special_functions\", \"test_pretty_geometry\", \"test_expint\", \"test_elliptic_functions\", \"test_RandomDomain\", \"test_PrettyPoly\", \"test_issue_6285\", \"test_issue_6739\", \"test_complicated_symbol_unchanged\", \"test_categories\", \"test_PrettyModules\", \"test_QuotientRing\", \"test_Homomorphism\", \"test_Tr\", \"test_pretty_Add\", \"test_issue_7179\", \"test_issue_7180\", \"test_pretty_Complement\", \"test_pretty_SymmetricDifference\", \"test_pretty_Contains\", \"test_issue_4335\", \"test_issue_6324\", \"test_issue_7927\", \"test_issue_6134\", \"test_issue_9877\", \"test_issue_13651\", \"test_pretty_primenu\", \"test_pretty_primeomega\", \"test_pretty_Mod\", \"test_issue_11801\", \"test_pretty_UnevaluatedExpr\", \"test_issue_10472\", \"test_MatrixElement_printing\", \"test_issue_12675\", \"test_MatrixSymbol_printing\", \"test_degree_printing\", \"test_vector_expr_pretty_printing\", \"test_pretty_print_tensor_expr\", \"test_pretty_print_tensor_partial_deriv\", \"test_issue_15560\", \"test_print_lerchphi\", \"test_issue_15583\", \"test_matrixSymbolBold\", \"test_center_accent\"]",
  "environment_setup_commit": "73b3f90093754c5ed1561bd885242330e3583004",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.106597",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}