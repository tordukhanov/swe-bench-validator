{
  "repo": "django/django",
  "instance_id": "django__django-16501",
  "base_commit": "882f99031e6e447384bfe22044cc980567d2f40d",
  "patch": "diff --git a/django/db/models/constraints.py b/django/db/models/constraints.py\n--- a/django/db/models/constraints.py\n+++ b/django/db/models/constraints.py\n@@ -3,7 +3,7 @@\n \n from django.core.exceptions import FieldError, ValidationError\n from django.db import connections\n-from django.db.models.expressions import Exists, ExpressionList, F\n+from django.db.models.expressions import Exists, ExpressionList, F, OrderBy\n from django.db.models.indexes import IndexExpression\n from django.db.models.lookups import Exact\n from django.db.models.query_utils import Q\n@@ -339,10 +339,12 @@ def validate(self, model, instance, exclude=None, using=DEFAULT_DB_ALIAS):\n                     meta=model._meta, exclude=exclude\n                 ).items()\n             }\n-            expressions = [\n-                Exact(expr, expr.replace_expressions(replacements))\n-                for expr in self.expressions\n-            ]\n+            expressions = []\n+            for expr in self.expressions:\n+                # Ignore ordering.\n+                if isinstance(expr, OrderBy):\n+                    expr = expr.expression\n+                expressions.append(Exact(expr, expr.replace_expressions(replacements)))\n             queryset = queryset.filter(*expressions)\n         model_class_pk = instance._get_pk_val(model._meta)\n         if not instance._state.adding and model_class_pk is not None:\n",
  "test_patch": "diff --git a/tests/constraints/tests.py b/tests/constraints/tests.py\n--- a/tests/constraints/tests.py\n+++ b/tests/constraints/tests.py\n@@ -672,6 +672,29 @@ def test_validate_expression(self):\n             exclude={\"name\"},\n         )\n \n+    def test_validate_ordered_expression(self):\n+        constraint = models.UniqueConstraint(\n+            Lower(\"name\").desc(), name=\"name_lower_uniq_desc\"\n+        )\n+        msg = \"Constraint “name_lower_uniq_desc” is violated.\"\n+        with self.assertRaisesMessage(ValidationError, msg):\n+            constraint.validate(\n+                UniqueConstraintProduct,\n+                UniqueConstraintProduct(name=self.p1.name.upper()),\n+            )\n+        constraint.validate(\n+            UniqueConstraintProduct,\n+            UniqueConstraintProduct(name=\"another-name\"),\n+        )\n+        # Existing instances have their existing row excluded.\n+        constraint.validate(UniqueConstraintProduct, self.p1)\n+        # Unique field is excluded.\n+        constraint.validate(\n+            UniqueConstraintProduct,\n+            UniqueConstraintProduct(name=self.p1.name.upper()),\n+            exclude={\"name\"},\n+        )\n+\n     def test_validate_expression_condition(self):\n         constraint = models.UniqueConstraint(\n             Lower(\"name\"),\n",
  "problem_statement": "Validation of UniqueConstraint with ordered expressions crashes.\nDescription\n\t\nI added this model:\nclass Foo(models.Model):\n\tname = models.CharField(max_length=300, unique=True)\n\tclass Meta:\n\t\tconstraints = [\n\t\t\tUniqueConstraint(\n\t\t\t\tLower(\"name\").desc(), name=\"unique_lower_name\"\n\t\t\t)\n\t\t]\nand this admin class:\n@admin.register(Foo)\nclass FooAdmin(admin.ModelAdmin):\n\tsearch_fields = (\"name\",)\nI based the UniqueConstraint on the documentation (​https://docs.djangoproject.com/en/4.1/ref/models/constraints/#django.db.models.UniqueConstraint.expressions), which shows\nUniqueConstraint(Lower('name').desc(), 'category', name='unique_lower_name_category')\nWhen I visit the admin and click \"add foo\", enter name \"foo1\", and click Save, I get a stack trace:\nRequest Method: POST\nRequest URL: http://localhost:8000/admin/myapp/foo/add/\nDjango Version: 4.1.5\nPython Version: 3.10.9\n...\nTraceback (most recent call last):\n File \".../lib/python3.10/site-packages/django/db/backends/utils.py\", line 89, in _execute\n\treturn self.cursor.execute(sql, params)\nThe above exception (syntax error at or near \"DESC\"\nLINE 1: ...werapp_foo\" WHERE LOWER(\"myapp_foo\".\"name\") DESC = (LO...\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ^\n) was the direct cause of the following exception:\n File \".../lib/python3.10/site-packages/django/core/handlers/exception.py\", line 55, in inner\n\tresponse = get_response(request)\n File \".../lib/python3.10/site-packages/django/core/handlers/base.py\", line 197, in _get_response\n\tresponse = wrapped_callback(request, *callback_args, **callback_kwargs)\n File \".../lib/python3.10/site-packages/django/contrib/admin/options.py\", line 686, in wrapper\n\treturn self.admin_site.admin_view(view)(*args, **kwargs)\n File \".../lib/python3.10/site-packages/django/utils/decorators.py\", line 133, in _wrapped_view\n\tresponse = view_func(request, *args, **kwargs)\n File \".../lib/python3.10/site-packages/django/views/decorators/cache.py\", line 62, in _wrapped_view_func\n\tresponse = view_func(request, *args, **kwargs)\n File \".../lib/python3.10/site-packages/django/contrib/admin/sites.py\", line 242, in inner\n\treturn view(request, *args, **kwargs)\n File \".../lib/python3.10/site-packages/django/contrib/admin/options.py\", line 1890, in add_view\n\treturn self.changeform_view(request, None, form_url, extra_context)\n File \".../lib/python3.10/site-packages/django/utils/decorators.py\", line 46, in _wrapper\n\treturn bound_method(*args, **kwargs)\n File \".../lib/python3.10/site-packages/django/utils/decorators.py\", line 133, in _wrapped_view\n\tresponse = view_func(request, *args, **kwargs)\n File \".../lib/python3.10/site-packages/django/contrib/admin/options.py\", line 1750, in changeform_view\n\treturn self._changeform_view(request, object_id, form_url, extra_context)\n File \".../lib/python3.10/site-packages/django/contrib/admin/options.py\", line 1796, in _changeform_view\n\tform_validated = form.is_valid()\n File \".../lib/python3.10/site-packages/django/forms/forms.py\", line 205, in is_valid\n\treturn self.is_bound and not self.errors\n File \".../lib/python3.10/site-packages/django/forms/forms.py\", line 200, in errors\n\tself.full_clean()\n File \".../lib/python3.10/site-packages/django/forms/forms.py\", line 439, in full_clean\n\tself._post_clean()\n File \".../lib/python3.10/site-packages/django/forms/models.py\", line 492, in _post_clean\n\tself.instance.full_clean(exclude=exclude, validate_unique=False)\n File \".../lib/python3.10/site-packages/django/db/models/base.py\", line 1472, in full_clean\n\tself.validate_constraints(exclude=exclude)\n File \".../lib/python3.10/site-packages/django/db/models/base.py\", line 1423, in validate_constraints\n\tconstraint.validate(model_class, self, exclude=exclude, using=using)\n File \".../lib/python3.10/site-packages/django/db/models/constraints.py\", line 347, in validate\n\tif queryset.exists():\n File \".../lib/python3.10/site-packages/django/db/models/query.py\", line 1226, in exists\n\treturn self.query.has_results(using=self.db)\n File \".../lib/python3.10/site-packages/django/db/models/sql/query.py\", line 592, in has_results\n\treturn compiler.has_results()\n File \".../lib/python3.10/site-packages/django/db/models/sql/compiler.py\", line 1366, in has_results\n\treturn bool(self.execute_sql(SINGLE))\n File \".../lib/python3.10/site-packages/django/db/models/sql/compiler.py\", line 1398, in execute_sql\n\tcursor.execute(sql, params)\n File \".../lib/python3.10/site-packages/debug_toolbar/panels/sql/tracking.py\", line 230, in execute\n\treturn self._record(self.cursor.execute, sql, params)\n File \".../lib/python3.10/site-packages/debug_toolbar/panels/sql/tracking.py\", line 154, in _record\n\treturn method(sql, params)\n File \".../lib/python3.10/site-packages/django/db/backends/utils.py\", line 103, in execute\n\treturn super().execute(sql, params)\n File \".../lib/python3.10/site-packages/django/db/backends/utils.py\", line 67, in execute\n\treturn self._execute_with_wrappers(\n File \".../lib/python3.10/site-packages/django/db/backends/utils.py\", line 80, in _execute_with_wrappers\n\treturn executor(sql, params, many, context)\n File \".../lib/python3.10/site-packages/django/db/backends/utils.py\", line 84, in _execute\n\twith self.db.wrap_database_errors:\n File \".../lib/python3.10/site-packages/django/db/utils.py\", line 91, in __exit__\n\traise dj_exc_value.with_traceback(traceback) from exc_value\n File \".../lib/python3.10/site-packages/django/db/backends/utils.py\", line 89, in _execute\n\treturn self.cursor.execute(sql, params)\nException Type: ProgrammingError at /admin/myapp/foo/add/\nException Value: syntax error at or near \"DESC\"\nLINE 1: ...myapp_foo\" WHERE LOWER(\"myapp_foo\".\"name\") DESC = (LO...\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ^\nThis happens on the Postgres backend (psycopg2 2.9.5).\nI also get this error using the sqlite backend.\nException Type: OperationalError at /admin/myapp/foo/add/\nException Value: near \"DESC\": syntax error\n",
  "hints_text": "Thanks for the report! Bug in 667105877e6723c6985399803a364848891513cc. Reproduced at ef85b6bf0bc5a8b194f0724cf5bbedbcee402b96.\nThanks for the quick review! Replying to Mariusz Felisiak: Thanks for the report!",
  "created_at": "2023-01-26T05:49:37Z",
  "version": "5.0",
  "FAIL_TO_PASS": "[\"test_validate_ordered_expression (constraints.tests.UniqueConstraintTests.test_validate_ordered_expression)\"]",
  "PASS_TO_PASS": "[\"test_constraint_sql (constraints.tests.BaseConstraintTests.test_constraint_sql)\", \"test_contains_expressions (constraints.tests.BaseConstraintTests.test_contains_expressions)\", \"test_create_sql (constraints.tests.BaseConstraintTests.test_create_sql)\", \"test_custom_violation_error_message (constraints.tests.BaseConstraintTests.test_custom_violation_error_message)\", \"test_custom_violation_error_message_clone (constraints.tests.BaseConstraintTests.test_custom_violation_error_message_clone)\", \"test_deconstruction (constraints.tests.BaseConstraintTests.test_deconstruction)\", \"test_default_violation_error_message (constraints.tests.BaseConstraintTests.test_default_violation_error_message)\", \"test_remove_sql (constraints.tests.BaseConstraintTests.test_remove_sql)\", \"test_validate (constraints.tests.BaseConstraintTests.test_validate)\", \"test_abstract_name (constraints.tests.CheckConstraintTests.test_abstract_name)\", \"test_database_constraint (constraints.tests.CheckConstraintTests.test_database_constraint)\", \"test_database_constraint_unicode (constraints.tests.CheckConstraintTests.test_database_constraint_unicode)\", \"test_deconstruction (constraints.tests.CheckConstraintTests.test_deconstruction)\", \"test_eq (constraints.tests.CheckConstraintTests.test_eq)\", \"test_invalid_check_types (constraints.tests.CheckConstraintTests.test_invalid_check_types)\", \"test_name (constraints.tests.CheckConstraintTests.test_name)\", \"test_repr (constraints.tests.CheckConstraintTests.test_repr)\", \"test_validate (constraints.tests.CheckConstraintTests.test_validate)\", \"test_validate_boolean_expressions (constraints.tests.CheckConstraintTests.test_validate_boolean_expressions)\", \"test_validate_nullable_field_with_none (constraints.tests.CheckConstraintTests.test_validate_nullable_field_with_none)\", \"test_validate_rawsql_expressions_noop (constraints.tests.CheckConstraintTests.test_validate_rawsql_expressions_noop)\", \"test_condition_must_be_q (constraints.tests.UniqueConstraintTests.test_condition_must_be_q)\", \"test_database_constraint (constraints.tests.UniqueConstraintTests.test_database_constraint)\", \"test_database_constraint_with_condition (constraints.tests.UniqueConstraintTests.test_database_constraint_with_condition)\", \"test_deconstruction (constraints.tests.UniqueConstraintTests.test_deconstruction)\", \"test_deconstruction_with_condition (constraints.tests.UniqueConstraintTests.test_deconstruction_with_condition)\", \"test_deconstruction_with_deferrable (constraints.tests.UniqueConstraintTests.test_deconstruction_with_deferrable)\", \"test_deconstruction_with_expressions (constraints.tests.UniqueConstraintTests.test_deconstruction_with_expressions)\", \"test_deconstruction_with_include (constraints.tests.UniqueConstraintTests.test_deconstruction_with_include)\", \"test_deconstruction_with_opclasses (constraints.tests.UniqueConstraintTests.test_deconstruction_with_opclasses)\", \"test_deferrable_with_condition (constraints.tests.UniqueConstraintTests.test_deferrable_with_condition)\", \"test_deferrable_with_expressions (constraints.tests.UniqueConstraintTests.test_deferrable_with_expressions)\", \"test_deferrable_with_include (constraints.tests.UniqueConstraintTests.test_deferrable_with_include)\", \"test_deferrable_with_opclasses (constraints.tests.UniqueConstraintTests.test_deferrable_with_opclasses)\", \"test_eq (constraints.tests.UniqueConstraintTests.test_eq)\", \"test_eq_with_condition (constraints.tests.UniqueConstraintTests.test_eq_with_condition)\", \"test_eq_with_deferrable (constraints.tests.UniqueConstraintTests.test_eq_with_deferrable)\", \"test_eq_with_expressions (constraints.tests.UniqueConstraintTests.test_eq_with_expressions)\", \"test_eq_with_include (constraints.tests.UniqueConstraintTests.test_eq_with_include)\", \"test_eq_with_opclasses (constraints.tests.UniqueConstraintTests.test_eq_with_opclasses)\", \"test_expressions_and_fields_mutually_exclusive (constraints.tests.UniqueConstraintTests.test_expressions_and_fields_mutually_exclusive)\", \"test_expressions_with_opclasses (constraints.tests.UniqueConstraintTests.test_expressions_with_opclasses)\", \"test_invalid_defer_argument (constraints.tests.UniqueConstraintTests.test_invalid_defer_argument)\", \"test_invalid_include_argument (constraints.tests.UniqueConstraintTests.test_invalid_include_argument)\", \"test_invalid_opclasses_argument (constraints.tests.UniqueConstraintTests.test_invalid_opclasses_argument)\", \"test_model_validation (constraints.tests.UniqueConstraintTests.test_model_validation)\", \"Partial unique constraints are not ignored by\", \"test_name (constraints.tests.UniqueConstraintTests.test_name)\", \"test_opclasses_and_fields_same_length (constraints.tests.UniqueConstraintTests.test_opclasses_and_fields_same_length)\", \"test_repr (constraints.tests.UniqueConstraintTests.test_repr)\", \"test_repr_with_condition (constraints.tests.UniqueConstraintTests.test_repr_with_condition)\", \"test_repr_with_deferrable (constraints.tests.UniqueConstraintTests.test_repr_with_deferrable)\", \"test_repr_with_expressions (constraints.tests.UniqueConstraintTests.test_repr_with_expressions)\", \"test_repr_with_include (constraints.tests.UniqueConstraintTests.test_repr_with_include)\", \"test_repr_with_opclasses (constraints.tests.UniqueConstraintTests.test_repr_with_opclasses)\", \"test_requires_field_or_expression (constraints.tests.UniqueConstraintTests.test_requires_field_or_expression)\", \"test_requires_name (constraints.tests.UniqueConstraintTests.test_requires_name)\", \"test_validate (constraints.tests.UniqueConstraintTests.test_validate)\", \"test_validate_condition (constraints.tests.UniqueConstraintTests.test_validate_condition)\", \"test_validate_expression (constraints.tests.UniqueConstraintTests.test_validate_expression)\", \"test_validate_expression_condition (constraints.tests.UniqueConstraintTests.test_validate_expression_condition)\", \"test_validate_expression_str (constraints.tests.UniqueConstraintTests.test_validate_expression_str)\"]",
  "environment_setup_commit": "4a72da71001f154ea60906a2f74898d32b7322a7",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.759223",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}