{
  "repo": "django/django",
  "instance_id": "django__django-12496",
  "base_commit": "7e15795bf06d362f20257d2e9db378ba8940dc39",
  "patch": "diff --git a/django/db/models/base.py b/django/db/models/base.py\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -855,8 +855,8 @@ def _save_table(self, raw=False, cls=None, force_insert=False,\n             not raw and\n             not force_insert and\n             self._state.adding and\n-            self._meta.pk.default and\n-            self._meta.pk.default is not NOT_PROVIDED\n+            meta.pk.default and\n+            meta.pk.default is not NOT_PROVIDED\n         ):\n             force_insert = True\n         # If possible, try an UPDATE. If that doesn't update anything, do an INSERT.\n",
  "test_patch": "diff --git a/tests/basic/models.py b/tests/basic/models.py\n--- a/tests/basic/models.py\n+++ b/tests/basic/models.py\n@@ -46,3 +46,7 @@ def __str__(self):\n \n class PrimaryKeyWithDefault(models.Model):\n     uuid = models.UUIDField(primary_key=True, default=uuid.uuid4)\n+\n+\n+class ChildPrimaryKeyWithDefault(PrimaryKeyWithDefault):\n+    pass\ndiff --git a/tests/basic/tests.py b/tests/basic/tests.py\n--- a/tests/basic/tests.py\n+++ b/tests/basic/tests.py\n@@ -12,8 +12,8 @@\n from django.utils.translation import gettext_lazy\n \n from .models import (\n-    Article, ArticleSelectOnSave, FeaturedArticle, PrimaryKeyWithDefault,\n-    SelfRef,\n+    Article, ArticleSelectOnSave, ChildPrimaryKeyWithDefault, FeaturedArticle,\n+    PrimaryKeyWithDefault, SelfRef,\n )\n \n \n@@ -139,6 +139,12 @@ def test_save_primary_with_default(self):\n         with self.assertNumQueries(1):\n             PrimaryKeyWithDefault().save()\n \n+    def test_save_parent_primary_with_default(self):\n+        # An UPDATE attempt is skipped when an inherited primary key has\n+        # default.\n+        with self.assertNumQueries(2):\n+            ChildPrimaryKeyWithDefault().save()\n+\n \n class ModelTest(TestCase):\n     def test_objects_attribute_is_only_available_on_the_class_itself(self):\n",
  "problem_statement": "Child model updates parent model with empty fields making an extra query in multi-inheritance when parent model has custom PK\nDescription\n\t\nWhile creating a new model object (using multi-inheritance model => Child(Parent)), Django does an extra update query setting parent model fields to empty values. This situation occurs *only* if we define a custom primary key in a parent model (eg. as an UUID field).\nAn example *without* custom primary key (correct behavior):\nclass Parent(models.Model):\n\ttitle = models.TextField()\nclass Child(Parent):\n\tbody = models.TextField()\n>> Child.objects.create()\n1. INSERT INTO \"app_parent\" (\"title\") VALUES ('') RETURNING \"app_parent\".\"id\"\n2. INSERT INTO \"app_child\" (\"parent_ptr_id\", \"body\") VALUES (1, '')\nAn example *with* custom primary key (incorrect behavior):\nclass Parent(models.Model):\n\tid = models.UUIDField(\n\t\tprimary_key=True,\n\t\tdefault=uuid.uuid4,\n\t\teditable=False\n\t)\n\ttitle = models.TextField()\nclass Child(Parent):\n\tbody = models.TextField()\n>> Child.objects.create()\n1. UPDATE \"app_parent\" SET \"title\" = '' WHERE \"app_parent\".\"id\" = 'd750cfdd-ae7b-48a6-a2e0-d49e70e28686'::uuid\n2. INSERT INTO \"app_parent\" (\"id\", \"title\") VALUES ('d750cfdd-ae7b-48a6-a2e0-d49e70e28686'::uuid, '')\n3. INSERT INTO \"app_child\" (\"parent_ptr_id\", \"body\") VALUES ('d750cfdd-ae7b-48a6-a2e0-d49e70e28686'::uuid, '')\nPython 3.6, PostgreSQL 9.6\n",
  "hints_text": "That does look unexpected. Reproduced at cb7860ccedb199cb221c9e084b5104978b246356.\nClosing as a duplicate of #29260 because the issue has nothing to do with MTI and the other ticket has a larger discussion around how it should be solved.\n#31297 was opened and is a duplicate of this. This still occurs in Django 3.0. Reproduced at a6b3938afc0204093b5356ade2be30b461a698c5. It looks like this use-case wasn't picked up as part of #29260. Possibly related to #18305. Simon, re-opening and CC-ing you to ask your opinion. (Thanks!)\nCC'ing myself since I reported #31297. Didn't know about this ticket while creating that one. I'm up for fixing this issue if it is accepted.\nCarlton, I agree that it's its own issue and that it's highly related to #18305. I'd say the fact that save(force_insert=True) doesn't work is a duplicate of #18305 and the fact save() doesn't result in the same optimization as #29260 when a primary key default is defined in MTI is an omission of #29260.\nCheers Simon. I'm up for fixing this issue if it is accepted. Abhijeet, if you'd like to assign yourself and take a look that would be great. Reach out if you need any input. Thanks.\nThank you. I'll come up with a patch soon.",
  "created_at": "2020-02-26T17:59:25Z",
  "version": "3.1",
  "FAIL_TO_PASS": "[\"test_save_parent_primary_with_default (basic.tests.ModelInstanceCreationTests)\"]",
  "PASS_TO_PASS": "[\"test_manager_methods (basic.tests.ManagerTest)\", \"test_select_on_save (basic.tests.SelectOnSaveTests)\", \"test_select_on_save_lying_update (basic.tests.SelectOnSaveTests)\", \"test_autofields_generate_different_values_for_each_instance (basic.tests.ModelInstanceCreationTests)\", \"test_can_create_instance_using_kwargs (basic.tests.ModelInstanceCreationTests)\", \"test_can_initialize_model_instance_using_positional_arguments (basic.tests.ModelInstanceCreationTests)\", \"test_can_leave_off_value_for_autofield_and_it_gets_value_on_save (basic.tests.ModelInstanceCreationTests)\", \"test_can_mix_and_match_position_and_kwargs (basic.tests.ModelInstanceCreationTests)\", \"test_cannot_create_instance_with_invalid_kwargs (basic.tests.ModelInstanceCreationTests)\", \"as much precision in *seconds*\", \"test_leaving_off_a_field_with_default_set_the_default_will_be_saved (basic.tests.ModelInstanceCreationTests)\", \"test_object_is_not_written_to_database_until_save_was_called (basic.tests.ModelInstanceCreationTests)\", \"test_querysets_checking_for_membership (basic.tests.ModelInstanceCreationTests)\", \"test_save_primary_with_default (basic.tests.ModelInstanceCreationTests)\", \"test_saving_an_object_again_does_not_create_a_new_object (basic.tests.ModelInstanceCreationTests)\", \"test_all_lookup (basic.tests.ModelLookupTest)\", \"test_does_not_exist (basic.tests.ModelLookupTest)\", \"test_equal_lookup (basic.tests.ModelLookupTest)\", \"test_lookup_by_primary_key (basic.tests.ModelLookupTest)\", \"test_rich_lookup (basic.tests.ModelLookupTest)\", \"test_too_many (basic.tests.ModelLookupTest)\", \"test_lookup_in_fields (basic.tests.ModelRefreshTests)\", \"test_prefetched_cache_cleared (basic.tests.ModelRefreshTests)\", \"test_refresh (basic.tests.ModelRefreshTests)\", \"test_refresh_clears_one_to_one_field (basic.tests.ModelRefreshTests)\", \"refresh_from_db() clear cached reverse relations.\", \"test_refresh_fk (basic.tests.ModelRefreshTests)\", \"test_refresh_fk_on_delete_set_null (basic.tests.ModelRefreshTests)\", \"test_refresh_no_fields (basic.tests.ModelRefreshTests)\", \"test_refresh_null_fk (basic.tests.ModelRefreshTests)\", \"test_refresh_unsaved (basic.tests.ModelRefreshTests)\", \"test_unknown_kwarg (basic.tests.ModelRefreshTests)\", \"test_create_method (basic.tests.ModelTest)\", \"test_create_relation_with_gettext_lazy (basic.tests.ModelTest)\", \"test_delete_and_access_field (basic.tests.ModelTest)\", \"test_emptyqs (basic.tests.ModelTest)\", \"test_emptyqs_customqs (basic.tests.ModelTest)\", \"test_emptyqs_values (basic.tests.ModelTest)\", \"test_emptyqs_values_order (basic.tests.ModelTest)\", \"test_eq (basic.tests.ModelTest)\", \"test_extra_method_select_argument_with_dashes (basic.tests.ModelTest)\", \"test_extra_method_select_argument_with_dashes_and_values (basic.tests.ModelTest)\", \"test_hash (basic.tests.ModelTest)\", \"test_hash_function (basic.tests.ModelTest)\", \"test_manually_specify_primary_key (basic.tests.ModelTest)\", \"test_microsecond_precision (basic.tests.ModelTest)\", \"test_missing_hash_not_inherited (basic.tests.ModelTest)\", \"test_multiple_objects_max_num_fetched (basic.tests.ModelTest)\", \"test_not_equal_and_equal_operators_behave_as_expected_on_instances (basic.tests.ModelTest)\", \"test_objects_attribute_is_only_available_on_the_class_itself (basic.tests.ModelTest)\", \"test_queryset_delete_removes_all_items_in_that_queryset (basic.tests.ModelTest)\", \"test_specified_parent_hash_inherited (basic.tests.ModelTest)\", \"test_ticket_20278 (basic.tests.ModelTest)\", \"test_unicode_data (basic.tests.ModelTest)\", \"test_year_lookup_edge_case (basic.tests.ModelTest)\"]",
  "environment_setup_commit": "0668164b4ac93a5be79f5b87fae83c657124d9ab",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.627664",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}