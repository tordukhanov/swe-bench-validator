{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-10207",
  "base_commit": "8b23f6db12d9fcdb6e1ca2015ea32e3e2e1fbdb6",
  "patch": "diff --git a/sphinx/builders/latex/transforms.py b/sphinx/builders/latex/transforms.py\n--- a/sphinx/builders/latex/transforms.py\n+++ b/sphinx/builders/latex/transforms.py\n@@ -237,7 +237,8 @@ class LaTeXFootnoteTransform(SphinxPostTransform):\n           blah blah blah ...\n \n     * Replace second and subsequent footnote references which refers same footnote definition\n-      by footnotemark node.\n+      by footnotemark node.  Additionally, the footnote definition node is marked as\n+      \"referred\".\n \n       Before::\n \n@@ -258,7 +259,7 @@ class LaTeXFootnoteTransform(SphinxPostTransform):\n       After::\n \n           blah blah blah\n-          <footnote ids=\"id1\">\n+          <footnote ids=\"id1\" referred=True>\n               <label>\n                   1\n               <paragraph>\n@@ -358,7 +359,7 @@ def run(self, **kwargs: Any) -> None:\n \n class LaTeXFootnoteVisitor(nodes.NodeVisitor):\n     def __init__(self, document: nodes.document, footnotes: List[nodes.footnote]) -> None:\n-        self.appeared: Set[Tuple[str, str]] = set()\n+        self.appeared: Dict[Tuple[str, str], nodes.footnote] = {}\n         self.footnotes: List[nodes.footnote] = footnotes\n         self.pendings: List[nodes.footnote] = []\n         self.table_footnotes: List[nodes.footnote] = []\n@@ -439,22 +440,24 @@ def depart_footnote(self, node: nodes.footnote) -> None:\n     def visit_footnote_reference(self, node: nodes.footnote_reference) -> None:\n         number = node.astext().strip()\n         docname = node['docname']\n-        if self.restricted:\n-            mark = footnotemark('', number, refid=node['refid'])\n-            node.replace_self(mark)\n-            if (docname, number) not in self.appeared:\n-                footnote = self.get_footnote_by_reference(node)\n-                self.pendings.append(footnote)\n-        elif (docname, number) in self.appeared:\n+        if (docname, number) in self.appeared:\n+            footnote = self.appeared.get((docname, number))\n+            footnote[\"referred\"] = True\n+\n             mark = footnotemark('', number, refid=node['refid'])\n             node.replace_self(mark)\n         else:\n             footnote = self.get_footnote_by_reference(node)\n-            self.footnotes.remove(footnote)\n-            node.replace_self(footnote)\n-            footnote.walkabout(self)\n+            if self.restricted:\n+                mark = footnotemark('', number, refid=node['refid'])\n+                node.replace_self(mark)\n+                self.pendings.append(footnote)\n+            else:\n+                self.footnotes.remove(footnote)\n+                node.replace_self(footnote)\n+                footnote.walkabout(self)\n \n-        self.appeared.add((docname, number))\n+            self.appeared[(docname, number)] = footnote\n         raise nodes.SkipNode\n \n     def get_footnote_by_reference(self, node: nodes.footnote_reference) -> nodes.footnote:\ndiff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1001,7 +1001,8 @@ class ModuleDocumenter(Documenter):\n         'platform': identity, 'deprecated': bool_option,\n         'member-order': member_order_option, 'exclude-members': exclude_members_option,\n         'private-members': members_option, 'special-members': members_option,\n-        'imported-members': bool_option, 'ignore-module-all': bool_option\n+        'imported-members': bool_option, 'ignore-module-all': bool_option,\n+        'no-value': bool_option,\n     }\n \n     def __init__(self, *args: Any) -> None:\n@@ -1771,9 +1772,12 @@ def get_variable_comment(self) -> Optional[List[str]]:\n     def add_content(self, more_content: Optional[StringList], no_docstring: bool = False\n                     ) -> None:\n         if self.doc_as_attr and self.modname != self.get_real_modname():\n-            # override analyzer to obtain doccomment around its definition.\n-            self.analyzer = ModuleAnalyzer.for_module(self.modname)\n-            self.analyzer.analyze()\n+            try:\n+                # override analyzer to obtain doccomment around its definition.\n+                self.analyzer = ModuleAnalyzer.for_module(self.modname)\n+                self.analyzer.analyze()\n+            except PycodeError:\n+                pass\n \n         if self.doc_as_attr and not self.get_variable_comment():\n             try:\ndiff --git a/sphinx/ext/autodoc/directive.py b/sphinx/ext/autodoc/directive.py\n--- a/sphinx/ext/autodoc/directive.py\n+++ b/sphinx/ext/autodoc/directive.py\n@@ -30,7 +30,7 @@\n AUTODOC_DEFAULT_OPTIONS = ['members', 'undoc-members', 'inherited-members',\n                            'show-inheritance', 'private-members', 'special-members',\n                            'ignore-module-all', 'exclude-members', 'member-order',\n-                           'imported-members', 'class-doc-from']\n+                           'imported-members', 'class-doc-from', 'no-value']\n \n AUTODOC_EXTENDABLE_OPTIONS = ['members', 'private-members', 'special-members',\n                               'exclude-members']\ndiff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py\n--- a/sphinx/ext/napoleon/docstring.py\n+++ b/sphinx/ext/napoleon/docstring.py\n@@ -13,11 +13,13 @@\n import collections\n import inspect\n import re\n+import warnings\n from functools import partial\n from typing import Any, Callable, Dict, List, Tuple, Type, Union\n \n from sphinx.application import Sphinx\n from sphinx.config import Config as SphinxConfig\n+from sphinx.deprecation import RemovedInSphinx60Warning\n from sphinx.ext.napoleon.iterators import modify_iter\n from sphinx.locale import _, __\n from sphinx.util import logging\n@@ -631,7 +633,6 @@ def _parse_attributes_section(self, section: str) -> List[str]:\n             if not _type:\n                 _type = self._lookup_annotation(_name)\n             if self._config.napoleon_use_ivar:\n-                _name = self._qualify_name(_name, self._obj)\n                 field = ':ivar %s: ' % _name\n                 lines.extend(self._format_block(field, _desc))\n                 if _type:\n@@ -825,6 +826,8 @@ def _partition_field_on_colon(self, line: str) -> Tuple[str, str, str]:\n                 \"\".join(after_colon).strip())\n \n     def _qualify_name(self, attr_name: str, klass: Type) -> str:\n+        warnings.warn('%s._qualify_name() is deprecated.' %\n+                      self.__class__.__name__, RemovedInSphinx60Warning)\n         if klass and '.' not in attr_name:\n             if attr_name.startswith('~'):\n                 attr_name = attr_name[1:]\ndiff --git a/sphinx/util/typing.py b/sphinx/util/typing.py\n--- a/sphinx/util/typing.py\n+++ b/sphinx/util/typing.py\n@@ -50,6 +50,14 @@ def _evaluate(self, globalns: Dict, localns: Dict) -> Any:\n }\n \n \n+def is_invalid_builtin_class(obj: Any) -> bool:\n+    \"\"\"Check *obj* is an invalid built-in class.\"\"\"\n+    try:\n+        return obj in INVALID_BUILTIN_CLASSES\n+    except TypeError:  # unhashable type\n+        return False\n+\n+\n # Text like nodes which are initialized with text and rawsource\n TextlikeNode = Union[nodes.Text, nodes.TextElement]\n \n@@ -135,7 +143,7 @@ def restify(cls: Optional[Type], mode: str = 'fully-qualified-except-typing') ->\n             return ':py:class:`%s%s`' % (modprefix, cls.__name__)\n         elif ismock(cls):\n             return ':py:class:`%s%s.%s`' % (modprefix, cls.__module__, cls.__name__)\n-        elif cls in INVALID_BUILTIN_CLASSES:\n+        elif is_invalid_builtin_class(cls):\n             return ':py:class:`%s%s`' % (modprefix, INVALID_BUILTIN_CLASSES[cls])\n         elif inspect.isNewType(cls):\n             if sys.version_info > (3, 10):\n@@ -374,7 +382,7 @@ def stringify(annotation: Any, mode: str = 'fully-qualified-except-typing') -> s\n         return modprefix + annotation.__name__\n     elif ismock(annotation):\n         return modprefix + '%s.%s' % (annotation.__module__, annotation.__name__)\n-    elif annotation in INVALID_BUILTIN_CLASSES:\n+    elif is_invalid_builtin_class(annotation):\n         return modprefix + INVALID_BUILTIN_CLASSES[annotation]\n     elif str(annotation).startswith('typing.Annotated'):  # for py310+\n         pass\ndiff --git a/sphinx/writers/html.py b/sphinx/writers/html.py\n--- a/sphinx/writers/html.py\n+++ b/sphinx/writers/html.py\n@@ -8,7 +8,6 @@\n     :license: BSD, see LICENSE for details.\n \"\"\"\n \n-import copy\n import os\n import posixpath\n import re\n@@ -54,11 +53,8 @@ def multiply_length(length: str, scale: int) -> str:\n \n class HTMLWriter(Writer):\n \n-    # override embed-stylesheet default value to 0.\n-    settings_spec = copy.deepcopy(Writer.settings_spec)\n-    for _setting in settings_spec[2]:\n-        if '--embed-stylesheet' in _setting[1]:\n-            _setting[2]['default'] = 0\n+    # override embed-stylesheet default value to False.\n+    settings_default_overrides = {\"embed_stylesheet\": False}\n \n     def __init__(self, builder: \"StandaloneHTMLBuilder\") -> None:\n         super().__init__()\ndiff --git a/sphinx/writers/latex.py b/sphinx/writers/latex.py\n--- a/sphinx/writers/latex.py\n+++ b/sphinx/writers/latex.py\n@@ -813,14 +813,14 @@ def depart_rubric(self, node: Element) -> None:\n     def visit_footnote(self, node: Element) -> None:\n         self.in_footnote += 1\n         label = cast(nodes.label, node[0])\n-        if 'auto' not in node:\n+        if 'referred' in node:\n             self.body.append(r'\\sphinxstepexplicit ')\n         if self.in_parsed_literal:\n             self.body.append(r'\\begin{footnote}[%s]' % label.astext())\n         else:\n             self.body.append('%' + CR)\n             self.body.append(r'\\begin{footnote}[%s]' % label.astext())\n-        if 'auto' not in node:\n+        if 'referred' in node:\n             self.body.append(r'\\phantomsection'\n                              r'\\label{\\thesphinxscope.%s}%%' % label.astext() + CR)\n         self.body.append(r'\\sphinxAtStartFootnote' + CR)\n",
  "test_patch": "diff --git a/tests/roots/test-footnotes/index.rst b/tests/roots/test-footnotes/index.rst\n--- a/tests/roots/test-footnotes/index.rst\n+++ b/tests/roots/test-footnotes/index.rst\n@@ -33,6 +33,7 @@ The section with a reference to [AuthorYear]_\n * Second footnote: [1]_\n * `Sphinx <http://sphinx-doc.org/>`_\n * Third footnote: [#]_\n+* Fourth footnote: [#named]_\n * `URL including tilde <http://sphinx-doc.org/~test/>`_\n * GitHub Page: `https://github.com/sphinx-doc/sphinx <https://github.com/sphinx-doc/sphinx>`_\n * Mailing list: `sphinx-dev@googlegroups.com <mailto:sphinx-dev@googlegroups.com>`_\n@@ -41,6 +42,7 @@ The section with a reference to [AuthorYear]_\n .. [1] Second\n .. [#] Third [#]_\n .. [#] Footnote inside footnote\n+.. [#named] Fourth\n \n The section with a reference to [#]_\n =====================================\n@@ -175,3 +177,12 @@ The section with an object description\n \n .. py:function:: dummy(N)\n    :noindex:\n+\n+Footnotes referred twice\n+========================\n+\n+* Explicitly numbered footnote: [100]_ [100]_\n+* Named footnote: [#twice]_ [#twice]_\n+\n+.. [100] Numbered footnote\n+.. [#twice] Named footnote\ndiff --git a/tests/test_build_html.py b/tests/test_build_html.py\n--- a/tests/test_build_html.py\n+++ b/tests/test_build_html.py\n@@ -361,8 +361,6 @@ def test_html4_output(app, status, warning):\n     'index.html': [\n         (\".//meta[@name='hc'][@content='hcval']\", ''),\n         (\".//meta[@name='hc_co'][@content='hcval_co']\", ''),\n-        (\".//dt[@class='label']/span[@class='brackets']\", r'Ref1'),\n-        (\".//dt[@class='label']\", ''),\n         (\".//li[@class='toctree-l1']/a\", 'Testing various markup'),\n         (\".//li[@class='toctree-l2']/a\", 'Inline markup'),\n         (\".//title\", 'Sphinx <Tests>'),\n@@ -400,6 +398,26 @@ def test_html4_output(app, status, warning):\n         (\".//a\", \"entry\"),\n         (\".//li/a\", \"double\"),\n     ],\n+    'otherext.html': [\n+        (\".//h1\", \"Generated section\"),\n+        (\".//a[@href='_sources/otherext.foo.txt']\", ''),\n+    ]\n+}))\n+@pytest.mark.sphinx('html', tags=['testtag'],\n+                    confoverrides={'html_context.hckey_co': 'hcval_co'})\n+@pytest.mark.test_params(shared_result='test_build_html_output')\n+def test_html5_output(app, cached_etree_parse, fname, expect):\n+    app.build()\n+    print(app.outdir / fname)\n+    check_xpath(cached_etree_parse(app.outdir / fname), fname, *expect)\n+\n+\n+@pytest.mark.skipif(docutils.__version_info__ >= (0, 18), reason='docutils-0.17 or below is required.')\n+@pytest.mark.parametrize(\"fname,expect\", flat_dict({\n+    'index.html': [\n+        (\".//dt[@class='label']/span[@class='brackets']\", r'Ref1'),\n+        (\".//dt[@class='label']\", ''),\n+    ],\n     'footnote.html': [\n         (\".//a[@class='footnote-reference brackets'][@href='#id9'][@id='id1']\", r\"1\"),\n         (\".//a[@class='footnote-reference brackets'][@href='#id10'][@id='id2']\", r\"2\"),\n@@ -417,15 +435,42 @@ def test_html4_output(app, status, warning):\n         (\".//a[@class='fn-backref'][@href='#id7']\", r\"5\"),\n         (\".//a[@class='fn-backref'][@href='#id8']\", r\"6\"),\n     ],\n-    'otherext.html': [\n-        (\".//h1\", \"Generated section\"),\n-        (\".//a[@href='_sources/otherext.foo.txt']\", ''),\n-    ]\n }))\n-@pytest.mark.sphinx('html', tags=['testtag'],\n-                    confoverrides={'html_context.hckey_co': 'hcval_co'})\n-@pytest.mark.test_params(shared_result='test_build_html_output')\n-def test_html5_output(app, cached_etree_parse, fname, expect):\n+@pytest.mark.sphinx('html')\n+@pytest.mark.test_params(shared_result='test_build_html_output_docutils17')\n+def test_docutils17_output(app, cached_etree_parse, fname, expect):\n+    app.build()\n+    print(app.outdir / fname)\n+    check_xpath(cached_etree_parse(app.outdir / fname), fname, *expect)\n+\n+\n+@pytest.mark.skipif(docutils.__version_info__ < (0, 18), reason='docutils-0.18+ is required.')\n+@pytest.mark.parametrize(\"fname,expect\", flat_dict({\n+    'index.html': [\n+        (\".//div[@class='citation']/span\", r'Ref1'),\n+        (\".//div[@class='citation']/span\", r'Ref_1'),\n+    ],\n+    'footnote.html': [\n+        (\".//a[@class='footnote-reference brackets'][@href='#id9'][@id='id1']\", r\"1\"),\n+        (\".//a[@class='footnote-reference brackets'][@href='#id10'][@id='id2']\", r\"2\"),\n+        (\".//a[@class='footnote-reference brackets'][@href='#foo'][@id='id3']\", r\"3\"),\n+        (\".//a[@class='reference internal'][@href='#bar'][@id='id4']/span\", r\"\\[bar\\]\"),\n+        (\".//a[@class='reference internal'][@href='#baz-qux'][@id='id5']/span\", r\"\\[baz_qux\\]\"),\n+        (\".//a[@class='footnote-reference brackets'][@href='#id11'][@id='id6']\", r\"4\"),\n+        (\".//a[@class='footnote-reference brackets'][@href='#id12'][@id='id7']\", r\"5\"),\n+        (\".//aside[@class='footnote brackets']/span/a[@href='#id1']\", r\"1\"),\n+        (\".//aside[@class='footnote brackets']/span/a[@href='#id2']\", r\"2\"),\n+        (\".//aside[@class='footnote brackets']/span/a[@href='#id3']\", r\"3\"),\n+        (\".//div[@class='citation']/span/a[@href='#id4']\", r\"bar\"),\n+        (\".//div[@class='citation']/span/a[@href='#id5']\", r\"baz_qux\"),\n+        (\".//aside[@class='footnote brackets']/span/a[@href='#id6']\", r\"4\"),\n+        (\".//aside[@class='footnote brackets']/span/a[@href='#id7']\", r\"5\"),\n+        (\".//aside[@class='footnote brackets']/span/a[@href='#id8']\", r\"6\"),\n+    ],\n+}))\n+@pytest.mark.sphinx('html')\n+@pytest.mark.test_params(shared_result='test_build_html_output_docutils18')\n+def test_docutils18_output(app, cached_etree_parse, fname, expect):\n     app.build()\n     print(app.outdir / fname)\n     check_xpath(cached_etree_parse(app.outdir / fname), fname, *expect)\ndiff --git a/tests/test_build_latex.py b/tests/test_build_latex.py\n--- a/tests/test_build_latex.py\n+++ b/tests/test_build_latex.py\n@@ -723,9 +723,8 @@ def test_footnote(app, status, warning):\n     print(result)\n     print(status.getvalue())\n     print(warning.getvalue())\n-    assert ('\\\\sphinxstepexplicit %\\n\\\\begin{footnote}[1]\\\\phantomsection'\n-            '\\\\label{\\\\thesphinxscope.1}%\\n\\\\sphinxAtStartFootnote\\nnumbered\\n%\\n'\n-            '\\\\end{footnote}') in result\n+    assert ('\\\\sphinxAtStartPar\\n%\\n\\\\begin{footnote}[1]\\\\sphinxAtStartFootnote\\n'\n+            'numbered\\n%\\n\\\\end{footnote}') in result\n     assert ('\\\\begin{footnote}[2]\\\\sphinxAtStartFootnote\\nauto numbered\\n%\\n'\n             '\\\\end{footnote}') in result\n     assert '\\\\begin{footnote}[3]\\\\sphinxAtStartFootnote\\nnamed\\n%\\n\\\\end{footnote}' in result\n@@ -762,40 +761,60 @@ def test_reference_in_caption_and_codeblock_in_footnote(app, status, warning):\n     assert ('\\\\sphinxcaption{The table title with a reference'\n             ' to {[}AuthorYear{]}}' in result)\n     assert '\\\\subsubsection*{The rubric title with a reference to {[}AuthorYear{]}}' in result\n-    assert ('\\\\chapter{The section with a reference to \\\\sphinxfootnotemark[5]}\\n'\n+    assert ('\\\\chapter{The section with a reference to \\\\sphinxfootnotemark[6]}\\n'\n             '\\\\label{\\\\detokenize{index:the-section-with-a-reference-to}}'\n-            '%\\n\\\\begin{footnotetext}[5]'\n-            '\\\\phantomsection\\\\label{\\\\thesphinxscope.5}%\\n'\n+            '%\\n\\\\begin{footnotetext}[6]'\n+            '\\\\phantomsection\\\\label{\\\\thesphinxscope.6}%\\n'\n             '\\\\sphinxAtStartFootnote\\n'\n             'Footnote in section\\n%\\n\\\\end{footnotetext}') in result\n     assert ('\\\\caption{This is the figure caption with a footnote to '\n-            '\\\\sphinxfootnotemark[7].}\\\\label{\\\\detokenize{index:id29}}\\\\end{figure}\\n'\n-            '%\\n\\\\begin{footnotetext}[7]'\n-            '\\\\phantomsection\\\\label{\\\\thesphinxscope.7}%\\n'\n+            '\\\\sphinxfootnotemark[8].}\\\\label{\\\\detokenize{index:id35}}\\\\end{figure}\\n'\n+            '%\\n\\\\begin{footnotetext}[8]'\n+            '\\\\phantomsection\\\\label{\\\\thesphinxscope.8}%\\n'\n             '\\\\sphinxAtStartFootnote\\n'\n             'Footnote in caption\\n%\\n\\\\end{footnotetext}') in result\n-    assert ('\\\\sphinxcaption{footnote \\\\sphinxfootnotemark[8] in '\n-            'caption of normal table}\\\\label{\\\\detokenize{index:id30}}') in result\n-    assert ('\\\\caption{footnote \\\\sphinxfootnotemark[9] '\n-            'in caption \\\\sphinxfootnotemark[10] of longtable\\\\strut}') in result\n-    assert ('\\\\endlastfoot\\n%\\n\\\\begin{footnotetext}[9]'\n-            '\\\\phantomsection\\\\label{\\\\thesphinxscope.9}%\\n'\n+    assert ('\\\\sphinxcaption{footnote \\\\sphinxfootnotemark[9] in '\n+            'caption of normal table}\\\\label{\\\\detokenize{index:id36}}') in result\n+    assert ('\\\\caption{footnote \\\\sphinxfootnotemark[10] '\n+            'in caption \\\\sphinxfootnotemark[11] of longtable\\\\strut}') in result\n+    assert ('\\\\endlastfoot\\n%\\n\\\\begin{footnotetext}[10]'\n+            '\\\\phantomsection\\\\label{\\\\thesphinxscope.10}%\\n'\n             '\\\\sphinxAtStartFootnote\\n'\n             'Foot note in longtable\\n%\\n\\\\end{footnotetext}\\\\ignorespaces %\\n'\n-            '\\\\begin{footnotetext}[10]'\n-            '\\\\phantomsection\\\\label{\\\\thesphinxscope.10}%\\n'\n+            '\\\\begin{footnotetext}[11]'\n+            '\\\\phantomsection\\\\label{\\\\thesphinxscope.11}%\\n'\n             '\\\\sphinxAtStartFootnote\\n'\n             'Second footnote in caption of longtable\\n') in result\n     assert ('This is a reference to the code\\\\sphinxhyphen{}block in the footnote:\\n'\n             '{\\\\hyperref[\\\\detokenize{index:codeblockinfootnote}]'\n             '{\\\\sphinxcrossref{\\\\DUrole{std,std-ref}{I am in a footnote}}}}') in result\n     assert ('&\\n\\\\sphinxAtStartPar\\nThis is one more footnote with some code in it %\\n'\n-            '\\\\begin{footnote}[11]\\\\sphinxAtStartFootnote\\n'\n+            '\\\\begin{footnote}[12]\\\\sphinxAtStartFootnote\\n'\n             'Third footnote in longtable\\n') in result\n     assert ('\\\\end{sphinxVerbatim}\\n%\\n\\\\end{footnote}.\\n') in result\n     assert '\\\\begin{sphinxVerbatim}[commandchars=\\\\\\\\\\\\{\\\\}]' in result\n \n \n+@pytest.mark.sphinx('latex', testroot='footnotes')\n+def test_footnote_referred_multiple_times(app, status, warning):\n+    app.builder.build_all()\n+    result = (app.outdir / 'python.tex').read_text()\n+    print(result)\n+    print(status.getvalue())\n+    print(warning.getvalue())\n+\n+    assert ('Explicitly numbered footnote: \\\\sphinxstepexplicit %\\n'\n+            '\\\\begin{footnote}[100]\\\\phantomsection\\\\label{\\\\thesphinxscope.100}%\\n'\n+            '\\\\sphinxAtStartFootnote\\nNumbered footnote\\n%\\n'\n+            '\\\\end{footnote} \\\\sphinxfootnotemark[100]\\n'\n+            in result)\n+    assert ('Named footnote: \\\\sphinxstepexplicit %\\n'\n+            '\\\\begin{footnote}[13]\\\\phantomsection\\\\label{\\\\thesphinxscope.13}%\\n'\n+            '\\\\sphinxAtStartFootnote\\nNamed footnote\\n%\\n'\n+            '\\\\end{footnote} \\\\sphinxfootnotemark[13]\\n'\n+            in result)\n+\n+\n @pytest.mark.sphinx(\n     'latex', testroot='footnotes',\n     confoverrides={'latex_show_urls': 'inline'})\n@@ -805,26 +824,24 @@ def test_latex_show_urls_is_inline(app, status, warning):\n     print(result)\n     print(status.getvalue())\n     print(warning.getvalue())\n-    assert ('Same footnote number \\\\sphinxstepexplicit %\\n'\n-            '\\\\begin{footnote}[1]\\\\phantomsection\\\\label{\\\\thesphinxscope.1}%\\n'\n-            '\\\\sphinxAtStartFootnote\\n'\n+    assert ('Same footnote number %\\n'\n+            '\\\\begin{footnote}[1]\\\\sphinxAtStartFootnote\\n'\n             'footnote in bar\\n%\\n\\\\end{footnote} in bar.rst') in result\n     assert ('Auto footnote number %\\n\\\\begin{footnote}[1]\\\\sphinxAtStartFootnote\\n'\n             'footnote in baz\\n%\\n\\\\end{footnote} in baz.rst') in result\n-    assert ('\\\\phantomsection\\\\label{\\\\detokenize{index:id32}}'\n+    assert ('\\\\phantomsection\\\\label{\\\\detokenize{index:id38}}'\n             '{\\\\hyperref[\\\\detokenize{index:the-section'\n             '-with-a-reference-to-authoryear}]'\n             '{\\\\sphinxcrossref{The section with a reference to '\n             '\\\\sphinxcite{index:authoryear}}}}') in result\n-    assert ('\\\\phantomsection\\\\label{\\\\detokenize{index:id33}}'\n+    assert ('\\\\phantomsection\\\\label{\\\\detokenize{index:id39}}'\n             '{\\\\hyperref[\\\\detokenize{index:the-section-with-a-reference-to}]'\n             '{\\\\sphinxcrossref{The section with a reference to }}}' in result)\n     assert ('First footnote: %\\n\\\\begin{footnote}[2]\\\\sphinxAtStartFootnote\\n'\n             'First\\n%\\n\\\\end{footnote}') in result\n-    assert ('Second footnote: \\\\sphinxstepexplicit %\\n'\n-            '\\\\begin{footnote}[1]\\\\phantomsection\\\\label{\\\\thesphinxscope.1}%\\n'\n-            '\\\\sphinxAtStartFootnote\\n'\n-            'Second\\n%\\n\\\\end{footnote}') in result\n+    assert ('Second footnote: %\\n'\n+            '\\\\begin{footnote}[1]\\\\sphinxAtStartFootnote\\n'\n+            'Second\\n%\\n\\\\end{footnote}\\n') in result\n     assert '\\\\sphinxhref{http://sphinx-doc.org/}{Sphinx} (http://sphinx\\\\sphinxhyphen{}doc.org/)' in result\n     assert ('Third footnote: %\\n\\\\begin{footnote}[3]\\\\sphinxAtStartFootnote\\n'\n             'Third \\\\sphinxfootnotemark[4]\\n%\\n\\\\end{footnote}%\\n'\n@@ -832,14 +849,15 @@ def test_latex_show_urls_is_inline(app, status, warning):\n             '\\\\phantomsection\\\\label{\\\\thesphinxscope.4}%\\n'\n             '\\\\sphinxAtStartFootnote\\n'\n             'Footnote inside footnote\\n%\\n\\\\end{footnotetext}\\\\ignorespaces') in result\n+    assert ('Fourth footnote: %\\n\\\\begin{footnote}[5]\\\\sphinxAtStartFootnote\\n'\n+            'Fourth\\n%\\n\\\\end{footnote}\\n') in result\n     assert ('\\\\sphinxhref{http://sphinx-doc.org/~test/}{URL including tilde} '\n             '(http://sphinx\\\\sphinxhyphen{}doc.org/\\\\textasciitilde{}test/)') in result\n     assert ('\\\\sphinxlineitem{\\\\sphinxhref{http://sphinx-doc.org/}{URL in term} '\n-            '(http://sphinx\\\\sphinxhyphen{}doc.org/)}'\n-            '\\n\\\\sphinxAtStartPar\\nDescription' in result)\n-    assert ('\\\\sphinxlineitem{Footnote in term \\\\sphinxfootnotemark[6]}'\n-            '%\\n\\\\begin{footnotetext}[6]'\n-            '\\\\phantomsection\\\\label{\\\\thesphinxscope.6}%\\n'\n+            '(http://sphinx\\\\sphinxhyphen{}doc.org/)}\\n'\n+            '\\\\sphinxAtStartPar\\nDescription' in result)\n+    assert ('\\\\sphinxlineitem{Footnote in term \\\\sphinxfootnotemark[7]}%\\n'\n+            '\\\\begin{footnotetext}[7]\\\\phantomsection\\\\label{\\\\thesphinxscope.7}%\\n'\n             '\\\\sphinxAtStartFootnote\\n'\n             'Footnote in term\\n%\\n\\\\end{footnotetext}\\\\ignorespaces '\n             '\\n\\\\sphinxAtStartPar\\nDescription') in result\n@@ -861,24 +879,22 @@ def test_latex_show_urls_is_footnote(app, status, warning):\n     print(result)\n     print(status.getvalue())\n     print(warning.getvalue())\n-    assert ('Same footnote number \\\\sphinxstepexplicit %\\n'\n-            '\\\\begin{footnote}[1]\\\\phantomsection\\\\label{\\\\thesphinxscope.1}%\\n'\n-            '\\\\sphinxAtStartFootnote\\n'\n+    assert ('Same footnote number %\\n'\n+            '\\\\begin{footnote}[1]\\\\sphinxAtStartFootnote\\n'\n             'footnote in bar\\n%\\n\\\\end{footnote} in bar.rst') in result\n     assert ('Auto footnote number %\\n\\\\begin{footnote}[2]\\\\sphinxAtStartFootnote\\n'\n             'footnote in baz\\n%\\n\\\\end{footnote} in baz.rst') in result\n-    assert ('\\\\phantomsection\\\\label{\\\\detokenize{index:id32}}'\n+    assert ('\\\\phantomsection\\\\label{\\\\detokenize{index:id38}}'\n             '{\\\\hyperref[\\\\detokenize{index:the-section-with-a-reference-to-authoryear}]'\n             '{\\\\sphinxcrossref{The section with a reference '\n             'to \\\\sphinxcite{index:authoryear}}}}') in result\n-    assert ('\\\\phantomsection\\\\label{\\\\detokenize{index:id33}}'\n+    assert ('\\\\phantomsection\\\\label{\\\\detokenize{index:id39}}'\n             '{\\\\hyperref[\\\\detokenize{index:the-section-with-a-reference-to}]'\n             '{\\\\sphinxcrossref{The section with a reference to }}}') in result\n     assert ('First footnote: %\\n\\\\begin{footnote}[3]\\\\sphinxAtStartFootnote\\n'\n             'First\\n%\\n\\\\end{footnote}') in result\n-    assert ('Second footnote: \\\\sphinxstepexplicit %\\n'\n-            '\\\\begin{footnote}[1]\\\\phantomsection\\\\label{\\\\thesphinxscope.1}%\\n'\n-            '\\\\sphinxAtStartFootnote\\n'\n+    assert ('Second footnote: %\\n'\n+            '\\\\begin{footnote}[1]\\\\sphinxAtStartFootnote\\n'\n             'Second\\n%\\n\\\\end{footnote}') in result\n     assert ('\\\\sphinxhref{http://sphinx-doc.org/}{Sphinx}'\n             '%\\n\\\\begin{footnote}[4]\\\\sphinxAtStartFootnote\\n'\n@@ -890,26 +906,25 @@ def test_latex_show_urls_is_footnote(app, status, warning):\n             '\\\\sphinxAtStartFootnote\\n'\n             'Footnote inside footnote\\n%\\n'\n             '\\\\end{footnotetext}\\\\ignorespaces') in result\n+    assert ('Fourth footnote: %\\n\\\\begin{footnote}[8]\\\\sphinxAtStartFootnote\\n'\n+            'Fourth\\n%\\n\\\\end{footnote}\\n') in result\n     assert ('\\\\sphinxhref{http://sphinx-doc.org/~test/}{URL including tilde}'\n             '%\\n\\\\begin{footnote}[5]\\\\sphinxAtStartFootnote\\n'\n             '\\\\sphinxnolinkurl{http://sphinx-doc.org/~test/}\\n%\\n\\\\end{footnote}') in result\n     assert ('\\\\sphinxlineitem{\\\\sphinxhref{http://sphinx-doc.org/}'\n-            '{URL in term}\\\\sphinxfootnotemark[9]}'\n-            '%\\n\\\\begin{footnotetext}[9]'\n-            '\\\\phantomsection\\\\label{\\\\thesphinxscope.9}%\\n'\n+            '{URL in term}\\\\sphinxfootnotemark[10]}%\\n'\n+            '\\\\begin{footnotetext}[10]\\\\phantomsection\\\\label{\\\\thesphinxscope.10}%\\n'\n             '\\\\sphinxAtStartFootnote\\n'\n             '\\\\sphinxnolinkurl{http://sphinx-doc.org/}\\n%\\n'\n             '\\\\end{footnotetext}\\\\ignorespaces \\n\\\\sphinxAtStartPar\\nDescription') in result\n-    assert ('\\\\sphinxlineitem{Footnote in term \\\\sphinxfootnotemark[11]}'\n-            '%\\n\\\\begin{footnotetext}[11]'\n-            '\\\\phantomsection\\\\label{\\\\thesphinxscope.11}%\\n'\n+    assert ('\\\\sphinxlineitem{Footnote in term \\\\sphinxfootnotemark[12]}%\\n'\n+            '\\\\begin{footnotetext}[12]\\\\phantomsection\\\\label{\\\\thesphinxscope.12}%\\n'\n             '\\\\sphinxAtStartFootnote\\n'\n             'Footnote in term\\n%\\n\\\\end{footnotetext}\\\\ignorespaces '\n             '\\n\\\\sphinxAtStartPar\\nDescription') in result\n     assert ('\\\\sphinxlineitem{\\\\sphinxhref{http://sphinx-doc.org/}{Term in deflist}'\n-            '\\\\sphinxfootnotemark[10]}'\n-            '%\\n\\\\begin{footnotetext}[10]'\n-            '\\\\phantomsection\\\\label{\\\\thesphinxscope.10}%\\n'\n+            '\\\\sphinxfootnotemark[11]}%\\n'\n+            '\\\\begin{footnotetext}[11]\\\\phantomsection\\\\label{\\\\thesphinxscope.11}%\\n'\n             '\\\\sphinxAtStartFootnote\\n'\n             '\\\\sphinxnolinkurl{http://sphinx-doc.org/}\\n%\\n'\n             '\\\\end{footnotetext}\\\\ignorespaces \\n\\\\sphinxAtStartPar\\nDescription') in result\n@@ -928,24 +943,22 @@ def test_latex_show_urls_is_no(app, status, warning):\n     print(result)\n     print(status.getvalue())\n     print(warning.getvalue())\n-    assert ('Same footnote number \\\\sphinxstepexplicit %\\n'\n-            '\\\\begin{footnote}[1]\\\\phantomsection\\\\label{\\\\thesphinxscope.1}%\\n'\n-            '\\\\sphinxAtStartFootnote\\n'\n+    assert ('Same footnote number %\\n'\n+            '\\\\begin{footnote}[1]\\\\sphinxAtStartFootnote\\n'\n             'footnote in bar\\n%\\n\\\\end{footnote} in bar.rst') in result\n     assert ('Auto footnote number %\\n\\\\begin{footnote}[1]\\\\sphinxAtStartFootnote\\n'\n             'footnote in baz\\n%\\n\\\\end{footnote} in baz.rst') in result\n-    assert ('\\\\phantomsection\\\\label{\\\\detokenize{index:id32}}'\n+    assert ('\\\\phantomsection\\\\label{\\\\detokenize{index:id38}}'\n             '{\\\\hyperref[\\\\detokenize{index:the-section-with-a-reference-to-authoryear}]'\n             '{\\\\sphinxcrossref{The section with a reference '\n             'to \\\\sphinxcite{index:authoryear}}}}') in result\n-    assert ('\\\\phantomsection\\\\label{\\\\detokenize{index:id33}}'\n+    assert ('\\\\phantomsection\\\\label{\\\\detokenize{index:id39}}'\n             '{\\\\hyperref[\\\\detokenize{index:the-section-with-a-reference-to}]'\n             '{\\\\sphinxcrossref{The section with a reference to }}}' in result)\n     assert ('First footnote: %\\n\\\\begin{footnote}[2]\\\\sphinxAtStartFootnote\\n'\n             'First\\n%\\n\\\\end{footnote}') in result\n-    assert ('Second footnote: \\\\sphinxstepexplicit %\\n'\n-            '\\\\begin{footnote}[1]\\\\phantomsection\\\\label{\\\\thesphinxscope.1}%\\n'\n-            '\\\\sphinxAtStartFootnote\\n'\n+    assert ('Second footnote: %\\n'\n+            '\\\\begin{footnote}[1]\\\\sphinxAtStartFootnote\\n'\n             'Second\\n%\\n\\\\end{footnote}') in result\n     assert '\\\\sphinxhref{http://sphinx-doc.org/}{Sphinx}' in result\n     assert ('Third footnote: %\\n\\\\begin{footnote}[3]\\\\sphinxAtStartFootnote\\n'\n@@ -954,12 +967,13 @@ def test_latex_show_urls_is_no(app, status, warning):\n             '\\\\phantomsection\\\\label{\\\\thesphinxscope.4}%\\n'\n             '\\\\sphinxAtStartFootnote\\n'\n             'Footnote inside footnote\\n%\\n\\\\end{footnotetext}\\\\ignorespaces') in result\n+    assert ('Fourth footnote: %\\n\\\\begin{footnote}[5]\\\\sphinxAtStartFootnote\\n'\n+            'Fourth\\n%\\n\\\\end{footnote}\\n') in result\n     assert '\\\\sphinxhref{http://sphinx-doc.org/~test/}{URL including tilde}' in result\n-    assert ('\\\\sphinxlineitem{\\\\sphinxhref{http://sphinx-doc.org/}{URL in term}}'\n-            '\\n\\\\sphinxAtStartPar\\nDescription') in result\n-    assert ('\\\\sphinxlineitem{Footnote in term \\\\sphinxfootnotemark[6]}'\n-            '%\\n\\\\begin{footnotetext}[6]'\n-            '\\\\phantomsection\\\\label{\\\\thesphinxscope.6}%\\n'\n+    assert ('\\\\sphinxlineitem{\\\\sphinxhref{http://sphinx-doc.org/}{URL in term}}\\n'\n+            '\\\\sphinxAtStartPar\\nDescription') in result\n+    assert ('\\\\sphinxlineitem{Footnote in term \\\\sphinxfootnotemark[7]}%\\n'\n+            '\\\\begin{footnotetext}[7]\\\\phantomsection\\\\label{\\\\thesphinxscope.7}%\\n'\n             '\\\\sphinxAtStartFootnote\\n'\n             'Footnote in term\\n%\\n\\\\end{footnotetext}\\\\ignorespaces '\n             '\\n\\\\sphinxAtStartPar\\nDescription') in result\ndiff --git a/tests/test_ext_autodoc_autoattribute.py b/tests/test_ext_autodoc_autoattribute.py\n--- a/tests/test_ext_autodoc_autoattribute.py\n+++ b/tests/test_ext_autodoc_autoattribute.py\n@@ -32,7 +32,7 @@ def test_autoattribute(app):\n \n @pytest.mark.sphinx('html', testroot='ext-autodoc')\n def test_autoattribute_novalue(app):\n-    options = {'no-value': True}\n+    options = {'no-value': None}\n     actual = do_autodoc(app, 'attribute', 'target.Class.attr', options)\n     assert list(actual) == [\n         '',\ndiff --git a/tests/test_ext_autodoc_autodata.py b/tests/test_ext_autodoc_autodata.py\n--- a/tests/test_ext_autodoc_autodata.py\n+++ b/tests/test_ext_autodoc_autodata.py\n@@ -32,7 +32,7 @@ def test_autodata(app):\n \n @pytest.mark.sphinx('html', testroot='ext-autodoc')\n def test_autodata_novalue(app):\n-    options = {'no-value': True}\n+    options = {'no-value': None}\n     actual = do_autodoc(app, 'data', 'target.integer', options)\n     assert list(actual) == [\n         '',\ndiff --git a/tests/test_ext_napoleon_docstring.py b/tests/test_ext_napoleon_docstring.py\n--- a/tests/test_ext_napoleon_docstring.py\n+++ b/tests/test_ext_napoleon_docstring.py\n@@ -482,6 +482,22 @@ def test_attributes_with_class_reference(self):\n    super-dooper attribute\n \n    :type: numpy.ndarray\n+\"\"\"\n+\n+    def test_attributes_with_use_ivar(self):\n+        docstring = \"\"\"\\\n+Attributes:\n+    foo (int): blah blah\n+    bar (str): blah blah\n+\"\"\"\n+\n+        config = Config(napoleon_use_ivar=True)\n+        actual = str(GoogleDocstring(docstring, config, obj=self.__class__))\n+        expected = \"\"\"\\\n+:ivar foo: blah blah\n+:vartype foo: int\n+:ivar bar: blah blah\n+:vartype bar: str\n \"\"\"\n         self.assertEqual(expected, actual)\n \ndiff --git a/tests/test_markup.py b/tests/test_markup.py\n--- a/tests/test_markup.py\n+++ b/tests/test_markup.py\n@@ -154,27 +154,29 @@ def get(name):\n @pytest.mark.parametrize('type,rst,html_expected,latex_expected', [\n     (\n         # pep role\n-        'verify',\n+        'verify_re',\n         ':pep:`8`',\n+        # since docutils-0.19, :pep: role points to python.org via https schema\n         ('<p><span class=\"target\" id=\"index-0\"></span><a class=\"pep reference external\" '\n-         'href=\"http://www.python.org/dev/peps/pep-0008\"><strong>PEP 8</strong></a></p>'),\n-        ('\\\\sphinxAtStartPar\\n'\n-         '\\\\index{Python Enhancement Proposals@\\\\spxentry{Python Enhancement Proposals}'\n-         '!PEP 8@\\\\spxentry{PEP 8}}\\\\sphinxhref{http://www.python.org/dev/peps/pep-0008}'\n-         '{\\\\sphinxstylestrong{PEP 8}}')\n+         'href=\"https?://www.python.org/dev/peps/pep-0008\"><strong>PEP 8</strong></a></p>'),\n+        (r'\\\\sphinxAtStartPar\\n'\n+         r'\\\\index{Python Enhancement Proposals@\\\\spxentry{Python Enhancement Proposals}'\n+         r'!PEP 8@\\\\spxentry{PEP 8}}\\\\sphinxhref{https?://www.python.org/dev/peps/pep-0008}'\n+         r'{\\\\sphinxstylestrong{PEP 8}}')\n     ),\n     (\n         # pep role with anchor\n-        'verify',\n+        'verify_re',\n         ':pep:`8#id1`',\n+        # since docutils-0.19, :pep: role points to python.org via https schema\n         ('<p><span class=\"target\" id=\"index-0\"></span><a class=\"pep reference external\" '\n-         'href=\"http://www.python.org/dev/peps/pep-0008#id1\">'\n+         'href=\"https?://www.python.org/dev/peps/pep-0008#id1\">'\n          '<strong>PEP 8#id1</strong></a></p>'),\n-        ('\\\\sphinxAtStartPar\\n'\n-         '\\\\index{Python Enhancement Proposals@\\\\spxentry{Python Enhancement Proposals}'\n-         '!PEP 8\\\\#id1@\\\\spxentry{PEP 8\\\\#id1}}\\\\sphinxhref'\n-         '{http://www.python.org/dev/peps/pep-0008\\\\#id1}'\n-         '{\\\\sphinxstylestrong{PEP 8\\\\#id1}}')\n+        (r'\\\\sphinxAtStartPar\\n'\n+         r'\\\\index{Python Enhancement Proposals@\\\\spxentry{Python Enhancement Proposals}'\n+         r'!PEP 8\\\\#id1@\\\\spxentry{PEP 8\\\\#id1}}\\\\sphinxhref'\n+         r'{https?://www.python.org/dev/peps/pep-0008\\\\#id1}'\n+         r'{\\\\sphinxstylestrong{PEP 8\\\\#id1}}')\n     ),\n     (\n         # rfc role\n",
  "problem_statement": "Allow keyboard shortcut `/` to focus on search\nVarious web services, notably GMail and GitHub, allow the keyboard shortcut `/` for focusing on the search box. It would be nice if Sphinx templates would do the same.\n\n---\n- Bitbucket: https://bitbucket.org/birkenfeld/sphinx/issue/691\n- Originally reported by: Ram Rachum\n- Originally created at: 2011-05-03T13:19:11.852\n\nnapoleon prefixes instance attributes documented in class docstring with class name\n### Describe the bug\r\n\r\nInstance attributes are prefixed with the class name when they are documented in the class docstring using the sphinx-napoleon extension.\r\n\r\nSee the screenshot, the instance attribute `two-arg` is rendered as `~Example.two-arg`. This is incorrect, because in Python only class attributes should be prefixed with the the class name (or `cls`). The `~` [tilde](https://en.wikipedia.org/wiki/Tilde) being included is also a bug.\r\n\r\n### How to Reproduce\r\n\r\n**class with docstring**\r\n\r\n```\r\nclass Example:\r\n    \"\"\"All documented in class docstring.\r\n\r\n    Args:\r\n        one_arg (int): documented in class docstring.\r\n        two_arg (str): documented in class docstring.\r\n    Attributes:\r\n        Example.attrib1 (str): documented in class docstring.\r\n        cls.attrib2 (int): documented in class docstring.\r\n        self.one_arg (int): documented in class docstring.\r\n        two_arg (str): documented in class docstring.\r\n    \"\"\"\r\n\r\n    attrib1 = \"Text for test.\"\r\n    attrib2 = 1234\r\n\r\n    def __init__(self, one_arg: int, two_arg: str):\r\n        self.one_arg = one_arg\r\n        self.two_arg = two_arg\r\n```\r\n\r\n**conf.py**\r\n\r\n```\r\nimport os\r\nimport sys\r\nsys.path.insert(0, os.path.abspath(os.path.join('..', '..')))\r\n\r\nhtml_theme = 'sphinx_rtd_theme'\r\ntemplates_path = ['_templates']\r\nhtml_static_path = ['_static']\r\n\r\nextensions = [\r\n    'sphinx.ext.autodoc',\r\n    'sphinx.ext.napoleon',\r\n    'sphinx_rtd_theme'\r\n]\r\n\r\nnapoleon_google_docstring = True\r\nnapoleon_numpy_docstring = False\r\nnapoleon_include_init_with_doc = False\r\nnapoleon_include_private_with_doc = True\r\nnapoleon_include_special_with_doc = True\r\nnapoleon_use_admonition_for_examples = True\r\nnapoleon_use_admonition_for_notes = True\r\nnapoleon_use_admonition_for_references = False\r\nnapoleon_use_ivar = True\r\nnapoleon_use_keyword = True\r\nnapoleon_use_param = True\r\nnapoleon_use_rtype = True\r\nnapoleon_preprocess_types = False\r\nnapoleon_type_aliases = None\r\nnapoleon_attr_annotations = False\r\n\r\nautodoc_default_options = {\r\n    'members':           True,\r\n    'undoc-members':     False,\r\n    'show-inheritance':  True,\r\n    'member-order':      'bysource',\r\n    'ignore-module-all': True,\r\n}\r\n\r\nadd_module_names = False\r\nadd_function_parentheses = True\r\n\r\nautoclass_content = 'class'\r\nautodoc_class_signature = \"mixed\"\r\nautodoc_typehints = 'signature'\r\nautodoc_preserve_defaults = True\r\nautodoc_typehints_description_target=\"all\"\r\n```\r\n\r\n**example.rst**\r\n\r\n```\r\nAttributes documented in class Example\r\n========================================\r\n\r\n.. automodule:: module_name\r\n    :members:\r\n    :no-undoc-members:\r\n```\r\n\r\n### Expected behavior\r\n\r\nInstance variables should implicitly be rendered only by their name (without `self.` nor the class name) - thus in the example it should be `two-arg` instead of `~Example.two-arg`. This would allow to implicitly differentiate instance variables from class variables.\r\n\r\n### Your project\r\n\r\nPersonal project\r\n\r\n### Screenshots\r\n\r\n![ss_sphinx_bug](https://user-images.githubusercontent.com/60424310/153330950-894be3cc-375e-49ad-9a0e-80ed616fb01f.png)\r\n\r\n\r\n### OS\r\n\r\nWindows 10 Pro\r\n\r\n### Python version\r\n\r\n3.9.0\r\n\r\n### Sphinx version\r\n\r\n4.4.0\r\n\r\n### Sphinx extensions\r\n\r\nautodoc, sphinx-napoleon\r\n\r\n### Extra tools\r\n\r\n_No response_\r\n\r\n### Additional context\r\n\r\n[example.zip](https://github.com/sphinx-doc/sphinx/files/8037846/example.zip)\r\n\nMake autodoc abbreviate long dictionaries\nExamples in the wild:\r\n\r\n| [`babel.core.Locale.negotiate`](https://babel.pocoo.org/en/latest/api/core.html#babel.core.Locale.negotiate) | [`searx.engines.engine_shortcuts`](https://docs.searxng.org/src/searx.engines.html#searx.engines.engine_shortcuts)\r\n|--|--|\r\n|![image](https://user-images.githubusercontent.com/73739153/151689678-166605e4-2629-4734-a84d-c345fcfbd45c.png) | ![image](https://user-images.githubusercontent.com/73739153/151689697-c63764e9-1aa8-421c-9da1-aa7532969b42.png)\r\n\r\nI think for long dictionaries it would be better if they were automatically abbreviated, or there at least should be an option to do so.\n",
  "hints_text": "_From Georg Brandl on 2011-05-15 09:42:40+00:00_\n\nGood idea.\n\nI do support the idea! It would be very handy.\nI think this is good for the first contribution. Does anybody try to fix this?\nYes, I've just created a pull request for it.\n\n",
  "created_at": "2022-02-19T07:09:00Z",
  "version": "5.0",
  "FAIL_TO_PASS": "[\"tests/test_build_latex.py::test_footnote\", \"tests/test_build_latex.py::test_footnote_referred_multiple_times\", \"tests/test_build_latex.py::test_latex_show_urls_is_inline\", \"tests/test_build_latex.py::test_latex_show_urls_is_footnote\", \"tests/test_build_latex.py::test_latex_show_urls_is_no\", \"tests/test_build_latex.py::test_latex_show_urls_footnote_and_substitutions\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_attributes_with_use_ivar\"]",
  "PASS_TO_PASS": "[\"tests/test_build_html.py::test_html_warnings\", \"tests/test_build_html.py::test_html4_output\", \"tests/test_build_html.py::test_html5_output[images.html-expect0]\", \"tests/test_build_html.py::test_html5_output[images.html-expect1]\", \"tests/test_build_html.py::test_html5_output[images.html-expect2]\", \"tests/test_build_html.py::test_html5_output[images.html-expect3]\", \"tests/test_build_html.py::test_html5_output[images.html-expect4]\", \"tests/test_build_html.py::test_html5_output[subdir/images.html-expect5]\", \"tests/test_build_html.py::test_html5_output[subdir/images.html-expect6]\", \"tests/test_build_html.py::test_html5_output[subdir/includes.html-expect7]\", \"tests/test_build_html.py::test_html5_output[subdir/includes.html-expect8]\", \"tests/test_build_html.py::test_html5_output[subdir/includes.html-expect9]\", \"tests/test_build_html.py::test_html5_output[subdir/includes.html-expect10]\", \"tests/test_build_html.py::test_html5_output[subdir/includes.html-expect11]\", \"tests/test_build_html.py::test_html5_output[includes.html-expect12]\", \"tests/test_build_html.py::test_html5_output[includes.html-expect13]\", \"tests/test_build_html.py::test_html5_output[includes.html-expect14]\", \"tests/test_build_html.py::test_html5_output[includes.html-expect15]\", \"tests/test_build_html.py::test_html5_output[includes.html-expect16]\", \"tests/test_build_html.py::test_html5_output[includes.html-expect17]\", \"tests/test_build_html.py::test_html5_output[includes.html-expect18]\", \"tests/test_build_html.py::test_html5_output[includes.html-expect19]\", \"tests/test_build_html.py::test_html5_output[includes.html-expect20]\", \"tests/test_build_html.py::test_html5_output[includes.html-expect21]\", \"tests/test_build_html.py::test_html5_output[includes.html-expect22]\", \"tests/test_build_html.py::test_html5_output[includes.html-expect23]\", \"tests/test_build_html.py::test_html5_output[includes.html-expect24]\", \"tests/test_build_html.py::test_html5_output[autodoc.html-expect25]\", \"tests/test_build_html.py::test_html5_output[autodoc.html-expect26]\", \"tests/test_build_html.py::test_html5_output[autodoc.html-expect27]\", \"tests/test_build_html.py::test_html5_output[autodoc.html-expect28]\", \"tests/test_build_html.py::test_html5_output[extapi.html-expect29]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect30]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect31]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect32]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect33]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect34]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect35]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect36]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect37]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect38]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect39]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect40]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect41]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect42]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect43]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect44]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect45]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect46]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect47]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect48]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect49]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect50]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect51]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect52]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect53]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect54]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect55]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect56]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect57]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect58]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect59]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect60]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect61]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect62]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect63]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect64]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect65]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect66]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect67]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect68]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect69]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect70]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect71]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect72]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect73]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect74]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect75]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect76]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect77]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect78]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect79]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect80]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect81]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect82]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect83]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect84]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect85]\", \"tests/test_build_html.py::test_html5_output[markup.html-expect86]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect87]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect88]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect89]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect90]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect91]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect92]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect93]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect94]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect95]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect96]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect97]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect98]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect99]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect100]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect101]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect102]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect103]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect104]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect105]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect106]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect107]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect108]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect109]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect110]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect111]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect112]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect113]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect114]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect115]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect116]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect117]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect118]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect119]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect120]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect121]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect122]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect123]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect124]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect125]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect126]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect127]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect128]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect129]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect130]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect131]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect132]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect133]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect134]\", \"tests/test_build_html.py::test_html5_output[objects.html-expect135]\", \"tests/test_build_html.py::test_html5_output[index.html-expect136]\", \"tests/test_build_html.py::test_html5_output[index.html-expect137]\", \"tests/test_build_html.py::test_html5_output[index.html-expect138]\", \"tests/test_build_html.py::test_html5_output[index.html-expect139]\", \"tests/test_build_html.py::test_html5_output[index.html-expect140]\", \"tests/test_build_html.py::test_html5_output[index.html-expect141]\", \"tests/test_build_html.py::test_html5_output[index.html-expect142]\", \"tests/test_build_html.py::test_html5_output[index.html-expect143]\", \"tests/test_build_html.py::test_html5_output[index.html-expect144]\", \"tests/test_build_html.py::test_html5_output[index.html-expect145]\", \"tests/test_build_html.py::test_html5_output[index.html-expect146]\", \"tests/test_build_html.py::test_html5_output[index.html-expect147]\", \"tests/test_build_html.py::test_html5_output[index.html-expect148]\", \"tests/test_build_html.py::test_html5_output[index.html-expect149]\", \"tests/test_build_html.py::test_html5_output[bom.html-expect150]\", \"tests/test_build_html.py::test_html5_output[extensions.html-expect151]\", \"tests/test_build_html.py::test_html5_output[extensions.html-expect152]\", \"tests/test_build_html.py::test_html5_output[extensions.html-expect153]\", \"tests/test_build_html.py::test_html5_output[genindex.html-expect154]\", \"tests/test_build_html.py::test_html5_output[genindex.html-expect155]\", \"tests/test_build_html.py::test_html5_output[genindex.html-expect156]\", \"tests/test_build_html.py::test_html5_output[genindex.html-expect157]\", \"tests/test_build_html.py::test_html5_output[genindex.html-expect158]\", \"tests/test_build_html.py::test_html5_output[otherext.html-expect159]\", \"tests/test_build_html.py::test_html5_output[otherext.html-expect160]\", \"tests/test_build_html.py::test_docutils17_output[index.html-expect0]\", \"tests/test_build_html.py::test_docutils17_output[index.html-expect1]\", \"tests/test_build_html.py::test_docutils17_output[footnote.html-expect2]\", \"tests/test_build_html.py::test_docutils17_output[footnote.html-expect3]\", \"tests/test_build_html.py::test_docutils17_output[footnote.html-expect4]\", \"tests/test_build_html.py::test_docutils17_output[footnote.html-expect5]\", \"tests/test_build_html.py::test_docutils17_output[footnote.html-expect6]\", \"tests/test_build_html.py::test_docutils17_output[footnote.html-expect7]\", \"tests/test_build_html.py::test_docutils17_output[footnote.html-expect8]\", \"tests/test_build_html.py::test_docutils17_output[footnote.html-expect9]\", \"tests/test_build_html.py::test_docutils17_output[footnote.html-expect10]\", \"tests/test_build_html.py::test_docutils17_output[footnote.html-expect11]\", \"tests/test_build_html.py::test_docutils17_output[footnote.html-expect12]\", \"tests/test_build_html.py::test_docutils17_output[footnote.html-expect13]\", \"tests/test_build_html.py::test_docutils17_output[footnote.html-expect14]\", \"tests/test_build_html.py::test_docutils17_output[footnote.html-expect15]\", \"tests/test_build_html.py::test_docutils17_output[footnote.html-expect16]\", \"tests/test_build_html.py::test_html_parallel\", \"tests/test_build_html.py::test_html_download\", \"tests/test_build_html.py::test_html_download_role\", \"tests/test_build_html.py::test_html_translator\", \"tests/test_build_html.py::test_tocdepth[index.html-expect0]\", \"tests/test_build_html.py::test_tocdepth[index.html-expect1]\", \"tests/test_build_html.py::test_tocdepth[index.html-expect2]\", \"tests/test_build_html.py::test_tocdepth[index.html-expect3]\", \"tests/test_build_html.py::test_tocdepth[foo.html-expect4]\", \"tests/test_build_html.py::test_tocdepth[foo.html-expect5]\", \"tests/test_build_html.py::test_tocdepth[foo.html-expect6]\", \"tests/test_build_html.py::test_tocdepth[foo.html-expect7]\", \"tests/test_build_html.py::test_tocdepth[foo.html-expect8]\", \"tests/test_build_html.py::test_tocdepth[foo.html-expect9]\", \"tests/test_build_html.py::test_tocdepth[foo.html-expect10]\", \"tests/test_build_html.py::test_tocdepth[foo.html-expect11]\", \"tests/test_build_html.py::test_tocdepth[foo.html-expect12]\", \"tests/test_build_html.py::test_tocdepth[foo.html-expect13]\", \"tests/test_build_html.py::test_tocdepth[foo.html-expect14]\", \"tests/test_build_html.py::test_tocdepth[foo.html-expect15]\", \"tests/test_build_html.py::test_tocdepth[foo.html-expect16]\", \"tests/test_build_html.py::test_tocdepth[foo.html-expect17]\", \"tests/test_build_html.py::test_tocdepth[bar.html-expect18]\", \"tests/test_build_html.py::test_tocdepth[bar.html-expect19]\", \"tests/test_build_html.py::test_tocdepth[bar.html-expect20]\", \"tests/test_build_html.py::test_tocdepth[bar.html-expect21]\", \"tests/test_build_html.py::test_tocdepth[bar.html-expect22]\", \"tests/test_build_html.py::test_tocdepth[bar.html-expect23]\", \"tests/test_build_html.py::test_tocdepth[bar.html-expect24]\", \"tests/test_build_html.py::test_tocdepth[bar.html-expect25]\", \"tests/test_build_html.py::test_tocdepth[bar.html-expect26]\", \"tests/test_build_html.py::test_tocdepth[bar.html-expect27]\", \"tests/test_build_html.py::test_tocdepth[bar.html-expect28]\", \"tests/test_build_html.py::test_tocdepth[bar.html-expect29]\", \"tests/test_build_html.py::test_tocdepth[baz.html-expect30]\", \"tests/test_build_html.py::test_tocdepth[baz.html-expect31]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect0]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect1]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect2]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect3]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect4]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect5]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect6]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect7]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect8]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect9]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect10]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect11]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect12]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect13]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect14]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect15]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect16]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect17]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect18]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect19]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect20]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect21]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect22]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect23]\", \"tests/test_build_html.py::test_tocdepth_singlehtml[index.html-expect24]\", \"tests/test_build_html.py::test_numfig_disabled_warn\", \"tests/test_build_html.py::test_numfig_disabled[index.html-expect0]\", \"tests/test_build_html.py::test_numfig_disabled[index.html-expect1]\", \"tests/test_build_html.py::test_numfig_disabled[index.html-expect2]\", \"tests/test_build_html.py::test_numfig_disabled[index.html-expect3]\", \"tests/test_build_html.py::test_numfig_disabled[index.html-expect4]\", \"tests/test_build_html.py::test_numfig_disabled[index.html-expect5]\", \"tests/test_build_html.py::test_numfig_disabled[index.html-expect6]\", \"tests/test_build_html.py::test_numfig_disabled[index.html-expect7]\", \"tests/test_build_html.py::test_numfig_disabled[index.html-expect8]\", \"tests/test_build_html.py::test_numfig_disabled[index.html-expect9]\", \"tests/test_build_html.py::test_numfig_disabled[index.html-expect10]\", \"tests/test_build_html.py::test_numfig_disabled[index.html-expect11]\", \"tests/test_build_html.py::test_numfig_disabled[index.html-expect12]\", \"tests/test_build_html.py::test_numfig_disabled[foo.html-expect13]\", \"tests/test_build_html.py::test_numfig_disabled[foo.html-expect14]\", \"tests/test_build_html.py::test_numfig_disabled[foo.html-expect15]\", \"tests/test_build_html.py::test_numfig_disabled[bar.html-expect16]\", \"tests/test_build_html.py::test_numfig_disabled[bar.html-expect17]\", \"tests/test_build_html.py::test_numfig_disabled[bar.html-expect18]\", \"tests/test_build_html.py::test_numfig_disabled[baz.html-expect19]\", \"tests/test_build_html.py::test_numfig_disabled[baz.html-expect20]\", \"tests/test_build_html.py::test_numfig_disabled[baz.html-expect21]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree_warn\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect0]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect1]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect2]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect3]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect4]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect5]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect6]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect7]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect8]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect9]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect10]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect11]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect12]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect13]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect14]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[index.html-expect15]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect16]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect17]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect18]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect19]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect20]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect21]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect22]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect23]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect24]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect25]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect26]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[foo.html-expect27]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[bar.html-expect28]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[bar.html-expect29]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[bar.html-expect30]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[bar.html-expect31]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[bar.html-expect32]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[bar.html-expect33]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[bar.html-expect34]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[bar.html-expect35]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[bar.html-expect36]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[baz.html-expect37]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[baz.html-expect38]\", \"tests/test_build_html.py::test_numfig_without_numbered_toctree[baz.html-expect39]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree_warn\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect0]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect1]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect2]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect3]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect4]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect5]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect6]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect7]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect8]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect9]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect10]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect11]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect12]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect13]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect14]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[index.html-expect15]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect16]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect17]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect18]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect19]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect20]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect21]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect22]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect23]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect24]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect25]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect26]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[foo.html-expect27]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[bar.html-expect28]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[bar.html-expect29]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[bar.html-expect30]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[bar.html-expect31]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[bar.html-expect32]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[bar.html-expect33]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[bar.html-expect34]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[bar.html-expect35]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[bar.html-expect36]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[baz.html-expect37]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[baz.html-expect38]\", \"tests/test_build_html.py::test_numfig_with_numbered_toctree[baz.html-expect39]\", \"tests/test_build_html.py::test_numfig_with_prefix_warn\", \"tests/test_build_html.py::test_numfig_with_prefix[index.html-expect0]\", \"tests/test_build_html.py::test_numfig_with_prefix[index.html-expect1]\", \"tests/test_build_html.py::test_numfig_with_prefix[index.html-expect2]\", \"tests/test_build_html.py::test_numfig_with_prefix[index.html-expect3]\", \"tests/test_build_html.py::test_numfig_with_prefix[index.html-expect4]\", \"tests/test_build_html.py::test_numfig_with_prefix[index.html-expect5]\", \"tests/test_build_html.py::test_numfig_with_prefix[index.html-expect6]\", \"tests/test_build_html.py::test_numfig_with_prefix[index.html-expect7]\", \"tests/test_build_html.py::test_numfig_with_prefix[index.html-expect8]\", \"tests/test_build_html.py::test_numfig_with_prefix[index.html-expect9]\", \"tests/test_build_html.py::test_numfig_with_prefix[index.html-expect10]\", \"tests/test_build_html.py::test_numfig_with_prefix[index.html-expect11]\", \"tests/test_build_html.py::test_numfig_with_prefix[index.html-expect12]\", \"tests/test_build_html.py::test_numfig_with_prefix[index.html-expect13]\", \"tests/test_build_html.py::test_numfig_with_prefix[index.html-expect14]\", \"tests/test_build_html.py::test_numfig_with_prefix[index.html-expect15]\", \"tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect16]\", \"tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect17]\", \"tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect18]\", \"tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect19]\", \"tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect20]\", \"tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect21]\", \"tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect22]\", \"tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect23]\", \"tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect24]\", \"tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect25]\", \"tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect26]\", \"tests/test_build_html.py::test_numfig_with_prefix[foo.html-expect27]\", \"tests/test_build_html.py::test_numfig_with_prefix[bar.html-expect28]\", \"tests/test_build_html.py::test_numfig_with_prefix[bar.html-expect29]\", \"tests/test_build_html.py::test_numfig_with_prefix[bar.html-expect30]\", \"tests/test_build_html.py::test_numfig_with_prefix[bar.html-expect31]\", \"tests/test_build_html.py::test_numfig_with_prefix[bar.html-expect32]\", \"tests/test_build_html.py::test_numfig_with_prefix[bar.html-expect33]\", \"tests/test_build_html.py::test_numfig_with_prefix[bar.html-expect34]\", \"tests/test_build_html.py::test_numfig_with_prefix[bar.html-expect35]\", \"tests/test_build_html.py::test_numfig_with_prefix[bar.html-expect36]\", \"tests/test_build_html.py::test_numfig_with_prefix[baz.html-expect37]\", \"tests/test_build_html.py::test_numfig_with_prefix[baz.html-expect38]\", \"tests/test_build_html.py::test_numfig_with_prefix[baz.html-expect39]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth_warn\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect0]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect1]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect2]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect3]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect4]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect5]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect6]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect7]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect8]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect9]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect10]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect11]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect12]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect13]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect14]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[index.html-expect15]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect16]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect17]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect18]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect19]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect20]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect21]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect22]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect23]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect24]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect25]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect26]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[foo.html-expect27]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[bar.html-expect28]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[bar.html-expect29]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[bar.html-expect30]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[bar.html-expect31]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[bar.html-expect32]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[bar.html-expect33]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[bar.html-expect34]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[bar.html-expect35]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[bar.html-expect36]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[baz.html-expect37]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[baz.html-expect38]\", \"tests/test_build_html.py::test_numfig_with_secnum_depth[baz.html-expect39]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect0]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect1]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect2]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect3]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect4]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect5]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect6]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect7]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect8]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect9]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect10]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect11]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect12]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect13]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect14]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect15]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect16]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect17]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect18]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect19]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect20]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect21]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect22]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect23]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect24]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect25]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect26]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect27]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect28]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect29]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect30]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect31]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect32]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect33]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect34]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect35]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect36]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect37]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect38]\", \"tests/test_build_html.py::test_numfig_with_singlehtml[index.html-expect39]\", \"tests/test_build_html.py::test_enumerable_node[index.html-expect0]\", \"tests/test_build_html.py::test_enumerable_node[index.html-expect1]\", \"tests/test_build_html.py::test_enumerable_node[index.html-expect2]\", \"tests/test_build_html.py::test_enumerable_node[index.html-expect3]\", \"tests/test_build_html.py::test_enumerable_node[index.html-expect4]\", \"tests/test_build_html.py::test_enumerable_node[index.html-expect5]\", \"tests/test_build_html.py::test_enumerable_node[index.html-expect6]\", \"tests/test_build_html.py::test_enumerable_node[index.html-expect7]\", \"tests/test_build_html.py::test_enumerable_node[index.html-expect8]\", \"tests/test_build_html.py::test_enumerable_node[index.html-expect9]\", \"tests/test_build_html.py::test_html_assets\", \"tests/test_build_html.py::test_assets_order\", \"tests/test_build_html.py::test_javscript_loading_method\", \"tests/test_build_html.py::test_html_copy_source\", \"tests/test_build_html.py::test_html_sourcelink_suffix\", \"tests/test_build_html.py::test_html_sourcelink_suffix_same\", \"tests/test_build_html.py::test_html_sourcelink_suffix_empty\", \"tests/test_build_html.py::test_html_entity\", \"tests/test_build_html.py::test_html_inventory\", \"tests/test_build_html.py::test_html_anchor_for_figure\", \"tests/test_build_html.py::test_html_raw_directive\", \"tests/test_build_html.py::test_alternate_stylesheets[index.html-expect0]\", \"tests/test_build_html.py::test_alternate_stylesheets[index.html-expect1]\", \"tests/test_build_html.py::test_alternate_stylesheets[index.html-expect2]\", \"tests/test_build_html.py::test_alternate_stylesheets[index.html-expect3]\", \"tests/test_build_html.py::test_alternate_stylesheets[index.html-expect4]\", \"tests/test_build_html.py::test_alternate_stylesheets[index.html-expect5]\", \"tests/test_build_html.py::test_alternate_stylesheets[index.html-expect6]\", \"tests/test_build_html.py::test_alternate_stylesheets[index.html-expect7]\", \"tests/test_build_html.py::test_html_style\", \"tests/test_build_html.py::test_html_remote_images\", \"tests/test_build_html.py::test_html_remote_logo\", \"tests/test_build_html.py::test_html_local_logo\", \"tests/test_build_html.py::test_html_sidebar\", \"tests/test_build_html.py::test_html_manpage[index.html-expect0]\", \"tests/test_build_html.py::test_html_manpage[index.html-expect1]\", \"tests/test_build_html.py::test_html_manpage[index.html-expect2]\", \"tests/test_build_html.py::test_html_baseurl\", \"tests/test_build_html.py::test_html_baseurl_and_html_file_suffix\", \"tests/test_build_html.py::test_default_html_math_renderer\", \"tests/test_build_html.py::test_html_math_renderer_is_mathjax\", \"tests/test_build_html.py::test_html_math_renderer_is_imgmath\", \"tests/test_build_html.py::test_html_math_renderer_is_duplicated\", \"tests/test_build_html.py::test_html_math_renderer_is_duplicated2\", \"tests/test_build_html.py::test_html_math_renderer_is_chosen\", \"tests/test_build_html.py::test_html_math_renderer_is_mismatched\", \"tests/test_build_html.py::test_html_pygments_style_default\", \"tests/test_build_html.py::test_html_pygments_style_manually\", \"tests/test_build_html.py::test_html_pygments_for_classic_theme\", \"tests/test_build_html.py::test_html_dark_pygments_style_default\", \"tests/test_build_html.py::test_validate_html_extra_path\", \"tests/test_build_html.py::test_validate_html_static_path\", \"tests/test_build_html.py::test_html_scaled_image_link\", \"tests/test_build_html.py::test_html_codeblock_linenos_style_table\", \"tests/test_build_html.py::test_html_codeblock_linenos_style_inline\", \"tests/test_build_html.py::test_highlight_options\", \"tests/test_build_html.py::test_highlight_options_old\", \"tests/test_build_html.py::test_html_permalink_disable\", \"tests/test_build_html.py::test_html_permalink_icon\", \"tests/test_build_html.py::test_html_signaturereturn_icon\", \"tests/test_build_latex.py::test_writer\", \"tests/test_build_latex.py::test_latex_warnings\", \"tests/test_build_latex.py::test_latex_basic\", \"tests/test_build_latex.py::test_latex_basic_manual\", \"tests/test_build_latex.py::test_latex_basic_howto\", \"tests/test_build_latex.py::test_latex_basic_manual_ja\", \"tests/test_build_latex.py::test_latex_basic_howto_ja\", \"tests/test_build_latex.py::test_latex_theme\", \"tests/test_build_latex.py::test_latex_theme_papersize\", \"tests/test_build_latex.py::test_latex_theme_options\", \"tests/test_build_latex.py::test_latex_additional_settings_for_language_code\", \"tests/test_build_latex.py::test_latex_additional_settings_for_greek\", \"tests/test_build_latex.py::test_latex_title_after_admonitions\", \"tests/test_build_latex.py::test_latex_release\", \"tests/test_build_latex.py::test_numref\", \"tests/test_build_latex.py::test_numref_with_prefix1\", \"tests/test_build_latex.py::test_numref_with_prefix2\", \"tests/test_build_latex.py::test_numref_with_language_ja\", \"tests/test_build_latex.py::test_latex_obey_numfig_is_false\", \"tests/test_build_latex.py::test_latex_obey_numfig_secnum_depth_is_zero\", \"tests/test_build_latex.py::test_latex_obey_numfig_secnum_depth_is_two\", \"tests/test_build_latex.py::test_latex_obey_numfig_but_math_numfig_false\", \"tests/test_build_latex.py::test_latex_add_latex_package\", \"tests/test_build_latex.py::test_babel_with_no_language_settings\", \"tests/test_build_latex.py::test_babel_with_language_de\", \"tests/test_build_latex.py::test_babel_with_language_ru\", \"tests/test_build_latex.py::test_babel_with_language_tr\", \"tests/test_build_latex.py::test_babel_with_language_ja\", \"tests/test_build_latex.py::test_babel_with_unknown_language\", \"tests/test_build_latex.py::test_polyglossia_with_language_de\", \"tests/test_build_latex.py::test_polyglossia_with_language_de_1901\", \"tests/test_build_latex.py::test_reference_in_caption_and_codeblock_in_footnote\", \"tests/test_build_latex.py::test_image_in_section\", \"tests/test_build_latex.py::test_latex_logo_if_not_found\", \"tests/test_build_latex.py::test_toctree_maxdepth_manual\", \"tests/test_build_latex.py::test_toctree_maxdepth_howto\", \"tests/test_build_latex.py::test_toctree_not_found\", \"tests/test_build_latex.py::test_toctree_without_maxdepth\", \"tests/test_build_latex.py::test_toctree_with_deeper_maxdepth\", \"tests/test_build_latex.py::test_latex_toplevel_sectioning_is_None\", \"tests/test_build_latex.py::test_latex_toplevel_sectioning_is_part\", \"tests/test_build_latex.py::test_latex_toplevel_sectioning_is_part_with_howto\", \"tests/test_build_latex.py::test_latex_toplevel_sectioning_is_chapter\", \"tests/test_build_latex.py::test_latex_toplevel_sectioning_is_chapter_with_howto\", \"tests/test_build_latex.py::test_latex_toplevel_sectioning_is_section\", \"tests/test_build_latex.py::test_latex_table_tabulars\", \"tests/test_build_latex.py::test_latex_table_longtable\", \"tests/test_build_latex.py::test_latex_table_complex_tables\", \"tests/test_build_latex.py::test_latex_table_custom_template_caseA\", \"tests/test_build_latex.py::test_latex_table_custom_template_caseB\", \"tests/test_build_latex.py::test_latex_table_custom_template_caseC\", \"tests/test_build_latex.py::test_latex_raw_directive\", \"tests/test_build_latex.py::test_latex_images\", \"tests/test_build_latex.py::test_latex_index\", \"tests/test_build_latex.py::test_latex_equations\", \"tests/test_build_latex.py::test_latex_image_in_parsed_literal\", \"tests/test_build_latex.py::test_latex_nested_enumerated_list\", \"tests/test_build_latex.py::test_latex_thebibliography\", \"tests/test_build_latex.py::test_latex_glossary\", \"tests/test_build_latex.py::test_latex_labels\", \"tests/test_build_latex.py::test_latex_figure_in_admonition\", \"tests/test_build_latex.py::test_default_latex_documents\", \"tests/test_build_latex.py::test_index_on_title\", \"tests/test_build_latex.py::test_texescape_for_non_unicode_supported_engine\", \"tests/test_build_latex.py::test_texescape_for_unicode_supported_engine\", \"tests/test_build_latex.py::test_latex_elements_extrapackages\", \"tests/test_build_latex.py::test_latex_nested_tables\", \"tests/test_build_latex.py::test_latex_container\", \"tests/test_ext_autodoc_autoattribute.py::test_autoattribute\", \"tests/test_ext_autodoc_autoattribute.py::test_autoattribute_novalue\", \"tests/test_ext_autodoc_autoattribute.py::test_autoattribute_typed_variable\", \"tests/test_ext_autodoc_autoattribute.py::test_autoattribute_typed_variable_in_alias\", \"tests/test_ext_autodoc_autoattribute.py::test_autoattribute_instance_variable\", \"tests/test_ext_autodoc_autoattribute.py::test_autoattribute_instance_variable_in_alias\", \"tests/test_ext_autodoc_autoattribute.py::test_autoattribute_instance_variable_without_comment\", \"tests/test_ext_autodoc_autoattribute.py::test_autoattribute_slots_variable_list\", \"tests/test_ext_autodoc_autoattribute.py::test_autoattribute_slots_variable_dict\", \"tests/test_ext_autodoc_autoattribute.py::test_autoattribute_slots_variable_str\", \"tests/test_ext_autodoc_autoattribute.py::test_autoattribute_GenericAlias\", \"tests/test_ext_autodoc_autoattribute.py::test_autoattribute_NewType\", \"tests/test_ext_autodoc_autoattribute.py::test_autoattribute_TypeVar\", \"tests/test_ext_autodoc_autoattribute.py::test_autoattribute_hide_value\", \"tests/test_ext_autodoc_autodata.py::test_autodata\", \"tests/test_ext_autodoc_autodata.py::test_autodata_novalue\", \"tests/test_ext_autodoc_autodata.py::test_autodata_typed_variable\", \"tests/test_ext_autodoc_autodata.py::test_autodata_type_comment\", \"tests/test_ext_autodoc_autodata.py::test_autodata_GenericAlias\", \"tests/test_ext_autodoc_autodata.py::test_autodata_NewType\", \"tests/test_ext_autodoc_autodata.py::test_autodata_TypeVar\", \"tests/test_ext_autodoc_autodata.py::test_autodata_hide_value\", \"tests/test_ext_napoleon_docstring.py::NamedtupleSubclassTest::test_attributes_docstring\", \"tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member\", \"tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline\", \"tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline_no_type\", \"tests/test_ext_napoleon_docstring.py::InlineAttributeTest::test_class_data_member_inline_ref_in_type\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_attributes_with_class_reference\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_code_block_in_returns_section\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_colon_in_return_type\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_custom_generic_sections\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_docstrings\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_keywords_with_types\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_kwargs_in_arguments\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_list_in_parameter_description\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_noindex\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_parameters_with_class_reference\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_pep526_annotations\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_preprocess_types\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_raises_types\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_section_header_formatting\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_sphinx_admonitions\", \"tests/test_ext_napoleon_docstring.py::GoogleDocstringTest::test_xrefs_in_return_type\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_colon_in_return_type\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_convert_numpy_type_spec\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_docstrings\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_list_in_parameter_description\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_multiple_parameters\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameter_types\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameters_with_class_reference\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_parameters_without_class_reference\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_raises_types\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_recombine_set_tokens\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_recombine_set_tokens_invalid\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_return_types\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_section_header_underline_length\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_see_also_refs\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_sphinx_admonitions\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_token_type\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_tokenize_type_spec\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_type_preprocessor\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_underscore_in_attribute\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_underscore_in_attribute_strip_signature_backslash\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_xrefs_in_return_type\", \"tests/test_ext_napoleon_docstring.py::NumpyDocstringTest::test_yield_types\", \"tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_token_type_invalid\", \"tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_escape_args_and_kwargs[x,\", \"tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_escape_args_and_kwargs[*args,\", \"tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_escape_args_and_kwargs[*x,\", \"tests/test_ext_napoleon_docstring.py::TestNumpyDocstring::test_pep526_annotations\", \"tests/test_markup.py::test_inline[verify_re-:pep:`8`-<p><span\", \"tests/test_markup.py::test_inline[verify_re-:pep:`8#id1`-<p><span\", \"tests/test_markup.py::test_inline[verify-:rfc:`2324`-<p><span\", \"tests/test_markup.py::test_inline[verify-:rfc:`2324#id1`-<p><span\", \"tests/test_markup.py::test_inline[verify_re-``code\", \"tests/test_markup.py::test_inline[verify-:menuselection:`a\", \"tests/test_markup.py::test_inline[verify-:menuselection:`&Foo\", \"tests/test_markup.py::test_inline[verify-:guilabel:`&Foo\", \"tests/test_markup.py::test_inline[verify-:guilabel:`Foo`-<p><span\", \"tests/test_markup.py::test_inline[verify-:kbd:`space`-<p><kbd\", \"tests/test_markup.py::test_inline[verify-:kbd:`Control+X`-<p><kbd\", \"tests/test_markup.py::test_inline[verify-:kbd:`Alt+^`-<p><kbd\", \"tests/test_markup.py::test_inline[verify-:kbd:`M-x\", \"tests/test_markup.py::test_inline[verify-:kbd:`-`-<p><kbd\", \"tests/test_markup.py::test_inline[verify-:kbd:`Caps\", \"tests/test_markup.py::test_inline[verify_re-:option:`--with-option`-<p><code(\", \"tests/test_markup.py::test_inline[verify-\\\"John\\\"-<p>\\\\u201cJohn\\\\u201d</p>-\\\\\\\\sphinxAtStartPar\\\\n\\\\u201cJohn\\\\u201d]\", \"tests/test_markup.py::test_inline[verify-``\\\"John\\\"``-<p><code\", \"tests/test_markup.py::test_inline[verify-:manpage:`mp(1)`-<p><em\", \"tests/test_markup.py::test_inline[verify-\\\\u0393\\\\\\\\\\\\\\\\\\\\u221e$-None-\\\\\\\\sphinxAtStartPar\\\\n\\\\u0393\\\\\\\\textbackslash{}\\\\\\\\(\\\\\\\\infty\\\\\\\\)\\\\\\\\$]\", \"tests/test_markup.py::test_inline[verify-::\\\\n\\\\n\", \"tests/test_markup.py::test_inline[verify_re-`test\", \"tests/test_markup.py::test_inline[verify-term\\\\n\", \"tests/test_markup.py::test_inline[verify-term\", \"tests/test_markup.py::test_inline[verify-..\", \"tests/test_markup.py::test_inline_docutils16[verify-4\", \"tests/test_markup.py::test_inline_for_unicode_latex_engine[verify-::\\\\n\\\\n\", \"tests/test_markup.py::test_samp_role\", \"tests/test_markup.py::test_download_role\", \"tests/test_markup.py::test_XRefRole\", \"tests/test_markup.py::test_rst_prolog\", \"tests/test_markup.py::test_keep_warnings_is_True\", \"tests/test_markup.py::test_keep_warnings_is_False\", \"tests/test_markup.py::test_compact_refonly_bullet_list\", \"tests/test_markup.py::test_default_role1\", \"tests/test_markup.py::test_default_role2\"]",
  "environment_setup_commit": "60775ec4c4ea08509eee4b564cbf90f316021aff",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.031180",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}