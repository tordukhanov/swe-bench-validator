{
  "repo": "pytest-dev/pytest",
  "instance_id": "pytest-dev__pytest-9624",
  "base_commit": "bc33ba0be95a1b66038a17329573aaa1666c1a0f",
  "patch": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -185,6 +185,15 @@ class TestCaseFunction(Function):\n     _excinfo: Optional[List[_pytest._code.ExceptionInfo[BaseException]]] = None\n     _testcase: Optional[\"unittest.TestCase\"] = None\n \n+    def _getobj(self):\n+        assert self.parent is not None\n+        # Unlike a regular Function in a Class, where `item.obj` returns\n+        # a *bound* method (attached to an instance), TestCaseFunction's\n+        # `obj` returns an *unbound* method (not attached to an instance).\n+        # This inconsistency is probably not desirable, but needs some\n+        # consideration before changing.\n+        return getattr(self.parent.obj, self.originalname)  # type: ignore[attr-defined]\n+\n     def setup(self) -> None:\n         # A bound method to be called during teardown() if set (see 'runtest()').\n         self._explicit_tearDown: Optional[Callable[[], None]] = None\n",
  "test_patch": "diff --git a/testing/test_unittest.py b/testing/test_unittest.py\n--- a/testing/test_unittest.py\n+++ b/testing/test_unittest.py\n@@ -1472,3 +1472,29 @@ def test_cleanup_called_the_right_number_of_times():\n     passed, skipped, failed = reprec.countoutcomes()\n     assert failed == 2\n     assert passed == 1\n+\n+\n+def test_traceback_pruning(pytester: Pytester) -> None:\n+    \"\"\"Regression test for #9610 - doesn't crash during traceback pruning.\"\"\"\n+    pytester.makepyfile(\n+        \"\"\"\n+        import unittest\n+\n+        class MyTestCase(unittest.TestCase):\n+            def __init__(self, test_method):\n+                unittest.TestCase.__init__(self, test_method)\n+\n+        class TestIt(MyTestCase):\n+            @classmethod\n+            def tearDownClass(cls) -> None:\n+                assert False\n+\n+            def test_it(self):\n+                pass\n+        \"\"\"\n+    )\n+    reprec = pytester.inline_run()\n+    passed, skipped, failed = reprec.countoutcomes()\n+    assert passed == 1\n+    assert failed == 1\n+    assert reprec.ret == 1\n",
  "problem_statement": "INTERNALERROR> TypeError: __init__() missing 1 required positional argument: 'test_method'\n- [ ] a detailed description of the bug or problem you are having\r\n\r\nhttps://github.com/skupperproject/skupper-router/runs/5072757996?check_suite_focus=true#step:27:362\r\n\r\n```\r\n2022-02-04T21:28:51.9670147Z ::StreamingMessageTest::test_11_streaming_closest_parallel FAILED\r\n2022-02-04T21:28:51.9670513Z INTERNALERROR> Traceback (most recent call last):\r\n2022-02-04T21:28:51.9671128Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/_pytest/main.py\", line 268, in wrap_session\r\n2022-02-04T21:28:51.9671553Z INTERNALERROR>     session.exitstatus = doit(config, session) or 0\r\n2022-02-04T21:28:51.9672102Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/_pytest/main.py\", line 322, in _main\r\n2022-02-04T21:28:51.9673099Z INTERNALERROR>     config.hook.pytest_runtestloop(session=session)\r\n2022-02-04T21:28:51.9673794Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/pluggy/_hooks.py\", line 265, in __call__\r\n2022-02-04T21:28:51.9674229Z INTERNALERROR>     return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\n2022-02-04T21:28:51.9674798Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/pluggy/_manager.py\", line 80, in _hookexec\r\n2022-02-04T21:28:51.9675238Z INTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n2022-02-04T21:28:51.9675790Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/pluggy/_callers.py\", line 60, in _multicall\r\n2022-02-04T21:28:51.9676151Z INTERNALERROR>     return outcome.get_result()\r\n2022-02-04T21:28:51.9676650Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/pluggy/_result.py\", line 60, in get_result\r\n2022-02-04T21:28:51.9677016Z INTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\n2022-02-04T21:28:51.9677521Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/pluggy/_callers.py\", line 39, in _multicall\r\n2022-02-04T21:28:51.9677900Z INTERNALERROR>     res = hook_impl.function(*args)\r\n2022-02-04T21:28:51.9680694Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/_pytest/main.py\", line 347, in pytest_runtestloop\r\n2022-02-04T21:28:51.9681192Z INTERNALERROR>     item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\r\n2022-02-04T21:28:51.9681783Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/pluggy/_hooks.py\", line 265, in __call__\r\n2022-02-04T21:28:51.9682227Z INTERNALERROR>     return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\n2022-02-04T21:28:51.9682786Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/pluggy/_manager.py\", line 80, in _hookexec\r\n2022-02-04T21:28:51.9683219Z INTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n2022-02-04T21:28:51.9683753Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/pluggy/_callers.py\", line 60, in _multicall\r\n2022-02-04T21:28:51.9684139Z INTERNALERROR>     return outcome.get_result()\r\n2022-02-04T21:28:51.9684639Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/pluggy/_result.py\", line 60, in get_result\r\n2022-02-04T21:28:51.9685026Z INTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\n2022-02-04T21:28:51.9685516Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/pluggy/_callers.py\", line 39, in _multicall\r\n2022-02-04T21:28:51.9686002Z INTERNALERROR>     res = hook_impl.function(*args)\r\n2022-02-04T21:28:51.9686517Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/_pytest/runner.py\", line 113, in pytest_runtest_protocol\r\n2022-02-04T21:28:51.9686914Z INTERNALERROR>     runtestprotocol(item, nextitem=nextitem)\r\n2022-02-04T21:28:51.9687400Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/_pytest/runner.py\", line 133, in runtestprotocol\r\n2022-02-04T21:28:51.9687817Z INTERNALERROR>     reports.append(call_and_report(item, \"teardown\", log, nextitem=nextitem))\r\n2022-02-04T21:28:51.9688484Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/_pytest/runner.py\", line 223, in call_and_report\r\n2022-02-04T21:28:51.9688892Z INTERNALERROR>     report: TestReport = hook.pytest_runtest_makereport(item=item, call=call)\r\n2022-02-04T21:28:51.9689414Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/pluggy/_hooks.py\", line 265, in __call__\r\n2022-02-04T21:28:51.9689818Z INTERNALERROR>     return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)\r\n2022-02-04T21:28:51.9690343Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/pluggy/_manager.py\", line 80, in _hookexec\r\n2022-02-04T21:28:51.9690726Z INTERNALERROR>     return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\r\n2022-02-04T21:28:51.9691245Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/pluggy/_callers.py\", line 55, in _multicall\r\n2022-02-04T21:28:51.9691582Z INTERNALERROR>     gen.send(outcome)\r\n2022-02-04T21:28:51.9692079Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/_pytest/skipping.py\", line 265, in pytest_runtest_makereport\r\n2022-02-04T21:28:51.9692444Z INTERNALERROR>     rep = outcome.get_result()\r\n2022-02-04T21:28:51.9692913Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/pluggy/_result.py\", line 60, in get_result\r\n2022-02-04T21:28:51.9693275Z INTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\n2022-02-04T21:28:51.9693746Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/pluggy/_callers.py\", line 39, in _multicall\r\n2022-02-04T21:28:51.9694089Z INTERNALERROR>     res = hook_impl.function(*args)\r\n2022-02-04T21:28:51.9694597Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/_pytest/runner.py\", line 367, in pytest_runtest_makereport\r\n2022-02-04T21:28:51.9695003Z INTERNALERROR>     return TestReport.from_item_and_call(item, call)\r\n2022-02-04T21:28:51.9695516Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/_pytest/reports.py\", line 347, in from_item_and_call\r\n2022-02-04T21:28:51.9695906Z INTERNALERROR>     excinfo, style=item.config.getoption(\"tbstyle\", \"auto\")\r\n2022-02-04T21:28:51.9696431Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/_pytest/nodes.py\", line 447, in _repr_failure_py\r\n2022-02-04T21:28:51.9696887Z INTERNALERROR>     self._prunetraceback(excinfo)\r\n2022-02-04T21:28:51.9697390Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/_pytest/unittest.py\", line 325, in _prunetraceback\r\n2022-02-04T21:28:51.9697766Z INTERNALERROR>     super()._prunetraceback(excinfo)\r\n2022-02-04T21:28:51.9698265Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/_pytest/python.py\", line 1725, in _prunetraceback\r\n2022-02-04T21:28:51.9698674Z INTERNALERROR>     code = _pytest._code.Code.from_function(get_real_func(self.obj))\r\n2022-02-04T21:28:51.9699161Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/_pytest/python.py\", line 296, in obj\r\n2022-02-04T21:28:51.9699513Z INTERNALERROR>     self._obj = obj = self._getobj()\r\n2022-02-04T21:28:51.9699966Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/_pytest/python.py\", line 1706, in _getobj\r\n2022-02-04T21:28:51.9700345Z INTERNALERROR>     parent_obj = self.parent.newinstance()\r\n2022-02-04T21:28:51.9700831Z INTERNALERROR>   File \"/usr/local/lib/python3.6/site-packages/_pytest/python.py\", line 791, in newinstance\r\n2022-02-04T21:28:51.9701174Z INTERNALERROR>     return self.obj()\r\n2022-02-04T21:28:51.9701605Z INTERNALERROR> TypeError: __init__() missing 1 required positional argument: 'test_method'\r\n2022-02-04T21:28:51.9701827Z \r\n2022-02-04T21:28:51.9701963Z =================== 2 failed, 85 passed in 411.73s (0:06:51) ===================\r\n2022-02-04T21:28:51.9702270Z Exception in thread Thread-24:\r\n2022-02-04T21:28:51.9702527Z Traceback (most recent call last):\r\n2022-02-04T21:28:51.9702834Z   File \"/usr/lib64/python3.6/threading.py\", line 937, in _bootstrap_inner\r\n2022-02-04T21:28:51.9703090Z     self.run()\r\n2022-02-04T21:28:51.9703350Z   File \"/usr/lib64/python3.6/threading.py\", line 885, in run\r\n2022-02-04T21:28:51.9703640Z     self._target(*self._args, **self._kwargs)\r\n2022-02-04T21:28:51.9704213Z   File \"/home/runner/work/skupper-router/skupper-router/skupper-router/tests/test_broker.py\", line 113, in _main\r\n2022-02-04T21:28:51.9704590Z     while self._container.process():\r\n2022-02-04T21:28:51.9705024Z   File \"/usr/local/lib64/python3.6/site-packages/proton/_reactor.py\", line 257, in process\r\n2022-02-04T21:28:51.9705326Z     event.dispatch(handler)\r\n2022-02-04T21:28:51.9705723Z   File \"/usr/local/lib64/python3.6/site-packages/proton/_events.py\", line 164, in dispatch\r\n2022-02-04T21:28:51.9706021Z     self.dispatch(h, type)\r\n2022-02-04T21:28:51.9706419Z   File \"/usr/local/lib64/python3.6/site-packages/proton/_events.py\", line 161, in dispatch\r\n2022-02-04T21:28:51.9706726Z     _dispatch(handler, type.method, self)\r\n2022-02-04T21:28:51.9707157Z   File \"/usr/local/lib64/python3.6/site-packages/proton/_events.py\", line 128, in _dispatch\r\n2022-02-04T21:28:51.9707443Z     m(*args)\r\n2022-02-04T21:28:51.9707855Z   File \"/usr/local/lib64/python3.6/site-packages/proton/_handlers.py\", line 751, in on_reactor_init\r\n2022-02-04T21:28:51.9708155Z     self.on_start(event)\r\n2022-02-04T21:28:51.9708628Z   File \"/home/runner/work/skupper-router/skupper-router/skupper-router/tests/test_broker.py\", line 134, in on_start\r\n2022-02-04T21:28:51.9709021Z     self.acceptor = event.container.listen(self.url)\r\n2022-02-04T21:28:51.9709474Z   File \"/usr/local/lib64/python3.6/site-packages/proton/_reactor.py\", line 1588, in listen\r\n2022-02-04T21:28:51.9709796Z     acceptor = self.acceptor(url.host, url.port)\r\n2022-02-04T21:28:51.9710224Z   File \"/usr/local/lib64/python3.6/site-packages/proton/_reactor.py\", line 335, in acceptor\r\n2022-02-04T21:28:51.9710564Z     a = Acceptor(self, unicode2utf8(host), int(port), impl)\r\n2022-02-04T21:28:51.9710994Z   File \"/usr/local/lib64/python3.6/site-packages/proton/_reactor.py\", line 916, in __init__\r\n2022-02-04T21:28:51.9711302Z     sock = IO.listen(host, port)\r\n2022-02-04T21:28:51.9711684Z   File \"/usr/local/lib64/python3.6/site-packages/proton/_io.py\", line 51, in listen\r\n2022-02-04T21:28:51.9711967Z     s.bind((host, port))\r\n2022-02-04T21:28:51.9712197Z OSError: [Errno 98] Address already in use\r\n```\r\n\r\n- [ ] output of `pip list` from the virtual environment you are using\r\n\r\n```\r\nSuccessfully installed distlib-0.3.4 filelock-3.4.1 importlib-metadata-4.8.3 importlib-resources-5.4.0 packaging-21.3 platformdirs-2.4.0 pluggy-1.0.0 py-1.11.0 pyparsing-3.0.7 six-1.16.0 toml-0.10.2 tox-3.24.5 typing-extensions-4.0.1 virtualenv-20.13.0 wheel-0.37.1 zipp-3.6.0\r\n```\r\n\r\n```\r\nSuccessfully installed MarkupSafe-2.0.1 aiofiles-0.8.0 attrs-21.4.0 blinker-1.4 click-8.0.3 dataclasses-0.8 h11-0.13.0 h2-4.1.0 hpack-4.0.0 hypercorn-0.5.4 hyperframe-6.0.1 iniconfig-1.1.1 itsdangerous-2.0.1 jinja2-3.0.3 lxml-4.7.1 multidict-5.2.0 protobuf-3.19.4 pytest-7.0.0 pytils-0.3 pytoml-0.1.21 quart-0.6.15 selectors-0.0.14 sortedcontainers-2.4.0 tomli-1.2.3 user-agent-0.1.10 weblib-0.1.30 websockets-9.1 wsproto-1.0.0\r\n```\r\n\r\n- [ ] pytest and operating system versions\r\n\r\npytest-7.0.0\r\nCentOS Stream 8\r\n\r\n- [ ] minimal example if possible\r\n\r\nIssue happened only once, as far as I know. I will update this issue if it happens multiple times and if I manage to reproduce it outside of GitHub Actions CI.\n",
  "hints_text": "pytest generally requires that test classes can be instantiated without arguments e.g. `TestClass()`. Can you explain what the `test_method` stuff does?\n@bluetech I haven't realized that `test_method` is something coming from my own code! This error appeared right after pytest 7.0.0 was released, in previous versions nothing was printed. (Yes, we don't pin version of pytest.)\r\n\r\nThe code I have is written for Python's `unittest` module. I am using pytest as a runner for its junit.xml generation feature. All tests have this as their superclass\r\n\r\n```python\r\nclass TestCase(unittest.TestCase, Tester):  # pylint: disable=too-many-public-methods\r\n    \"\"\"A TestCase that sets up its own working directory and is also a Tester.\"\"\"\r\n\r\n    def __init__(self, test_method):\r\n        unittest.TestCase.__init__(self, test_method)\r\n        Tester.__init__(self, self.id())\r\n```\r\n\r\n(https://github.com/skupperproject/skupper-router/blob/54cd50fd59cd20f05dfb0987a72ce7f8333e07ed/tests/system_test.py#L819-L824)\r\n\r\nI'll try to understand what this is actually doing and I'll get back to you.\r\n\r\nI am leaving it up to you whether you want to treat this as regression (pytest used to run fine before) or whether you decide we are doing something silly which pytest won't support.\r\n\nSeems to me this is just trying to 'properly' call the superclass constructor in the derived class constructor. Good OOP! There does not seem to be no magic or meaning in it.\nAre you able to add a default value for `test_method`, like `unittest.TestCase` does?\r\n\r\nhttps://github.com/python/cpython/blob/fea7290a0ecee09bbce571d4d10f5881b7ea3485/Lib/unittest/case.py#L374\r\n\r\nRegardless, I would like to understand why this started happening in pytest 7.0, as it might indicate some problem. So if are able to reduce the issue a bit more, that'd be great. From the stacktrace it looks like it's happening in a failure case where a test's setup or teardown raise.\n@bluetech looking at the trace back, i suspect there is a potential issue stemming from the instance node removal (as the traceback inidcates the attempt to create a new unittest testcase instance in traceback cutting, i believe thats not the intent,\r\n\r\n \n@bluetech there is a disparity in how we get the objects for testcase objects and for normal python tests\r\n\r\nthe normal case in testcase intentionally passes name, the traceback cutting case will however occasionally trigger making a new instance without adding the object\r\n\r\ni wonder how how to best make this fit/change\r\n\r\na quickfix is likely going to need a test for unittest Testcase objects and a own _get_obj implementation \n@bluetech I certainly can add the default value. Thankfully it is all my code. I'll probably do that, because 1) it is proper OOP and 2) it workarounds this problem.\r\n\r\n## Reproducer\r\n\r\n```python\r\nimport unittest\r\n\r\n\r\nclass Tester:\r\n\r\n    def __init__(self, id):\r\n        self.cleanup_list = []\r\n\r\n\r\nclass TestCase(unittest.TestCase, Tester):\r\n\r\n    def __init__(self, test_method):\r\n        unittest.TestCase.__init__(self, test_method)\r\n        Tester.__init__(self, self.id())\r\n\r\n\r\nclass StreamingMessageTest(TestCase):\r\n\r\n    @classmethod\r\n    def setUpClass(cls):\r\n        super(StreamingMessageTest, cls).setUpClass()\r\n\r\n    @classmethod\r\n    def tearDownClass(cls) -> None:\r\n        assert False\r\n\r\n    def test_11_streaming_closest_parallel(self):\r\n        pass\r\n\r\n\r\nif __name__ == '__main__':\r\n    unittest.main()\r\n```\r\n\r\nThis shows the previously described error with pytest==7.0.0 but prints a correct testlog and the stacktrace for the failing assert with pytest==6.2.5.\r\n\r\nI saved the above to file called scratch_1.py and run it with\r\n\r\n```\r\nvenv/bin/python -m pytest -vs --pyargs scratch_1\r\n```\nThanks @jiridanek, I will try to check it out soon. It's probably as @RonnyPfannschmidt says due to the `Instance` collector removal, and it shouldn't be hard to make it work again.\n> It's probably as @RonnyPfannschmidt says due to the `Instance` collector removal, and it shouldn't be hard to make it work again.\r\n\r\nCorrect - bisected to 062d91ab474881b58ae1ff49b4844402677faf45 (\"python: remove the `Instance` collector node\", #9277).",
  "created_at": "2022-02-06T22:43:15Z",
  "version": "7.1",
  "FAIL_TO_PASS": "[\"testing/test_unittest.py::test_traceback_pruning\"]",
  "PASS_TO_PASS": "[\"testing/test_unittest.py::test_simple_unittest\", \"testing/test_unittest.py::test_runTest_method\", \"testing/test_unittest.py::test_isclasscheck_issue53\", \"testing/test_unittest.py::test_setup\", \"testing/test_unittest.py::test_setUpModule\", \"testing/test_unittest.py::test_setUpModule_failing_no_teardown\", \"testing/test_unittest.py::test_new_instances\", \"testing/test_unittest.py::test_function_item_obj_is_instance\", \"testing/test_unittest.py::test_teardown\", \"testing/test_unittest.py::test_teardown_issue1649\", \"testing/test_unittest.py::test_unittest_skip_issue148\", \"testing/test_unittest.py::test_method_and_teardown_failing_reporting\", \"testing/test_unittest.py::test_setup_failure_is_shown\", \"testing/test_unittest.py::test_setup_setUpClass\", \"testing/test_unittest.py::test_fixtures_setup_setUpClass_issue8394\", \"testing/test_unittest.py::test_setup_class\", \"testing/test_unittest.py::test_testcase_adderrorandfailure_defers[Error]\", \"testing/test_unittest.py::test_testcase_adderrorandfailure_defers[Failure]\", \"testing/test_unittest.py::test_testcase_custom_exception_info[Error]\", \"testing/test_unittest.py::test_testcase_custom_exception_info[Failure]\", \"testing/test_unittest.py::test_testcase_totally_incompatible_exception_info\", \"testing/test_unittest.py::test_module_level_pytestmark\", \"testing/test_unittest.py::test_djangolike_testcase\", \"testing/test_unittest.py::test_unittest_not_shown_in_traceback\", \"testing/test_unittest.py::test_unorderable_types\", \"testing/test_unittest.py::test_unittest_typerror_traceback\", \"testing/test_unittest.py::test_unittest_expected_failure_for_failing_test_is_xfail[pytest]\", \"testing/test_unittest.py::test_unittest_expected_failure_for_failing_test_is_xfail[unittest]\", \"testing/test_unittest.py::test_unittest_expected_failure_for_passing_test_is_fail[pytest]\", \"testing/test_unittest.py::test_unittest_expected_failure_for_passing_test_is_fail[unittest]\", \"testing/test_unittest.py::test_unittest_setup_interaction[return]\", \"testing/test_unittest.py::test_unittest_setup_interaction[yield]\", \"testing/test_unittest.py::test_non_unittest_no_setupclass_support\", \"testing/test_unittest.py::test_no_teardown_if_setupclass_failed\", \"testing/test_unittest.py::test_cleanup_functions\", \"testing/test_unittest.py::test_issue333_result_clearing\", \"testing/test_unittest.py::test_unittest_raise_skip_issue748\", \"testing/test_unittest.py::test_unittest_skip_issue1169\", \"testing/test_unittest.py::test_class_method_containing_test_issue1558\", \"testing/test_unittest.py::test_usefixtures_marker_on_unittest[builtins.object]\", \"testing/test_unittest.py::test_usefixtures_marker_on_unittest[unittest.TestCase]\", \"testing/test_unittest.py::test_testcase_handles_init_exceptions\", \"testing/test_unittest.py::test_error_message_with_parametrized_fixtures\", \"testing/test_unittest.py::test_setup_inheritance_skipping[test_setup_skip.py-1\", \"testing/test_unittest.py::test_setup_inheritance_skipping[test_setup_skip_class.py-1\", \"testing/test_unittest.py::test_setup_inheritance_skipping[test_setup_skip_module.py-1\", \"testing/test_unittest.py::test_BdbQuit\", \"testing/test_unittest.py::test_exit_outcome\", \"testing/test_unittest.py::test_trace\", \"testing/test_unittest.py::test_pdb_teardown_called\", \"testing/test_unittest.py::test_pdb_teardown_skipped[@unittest.skip]\", \"testing/test_unittest.py::test_pdb_teardown_skipped[@pytest.mark.skip]\", \"testing/test_unittest.py::test_async_support\", \"testing/test_unittest.py::test_do_class_cleanups_on_success\", \"testing/test_unittest.py::test_do_class_cleanups_on_setupclass_failure\", \"testing/test_unittest.py::test_do_class_cleanups_on_teardownclass_failure\", \"testing/test_unittest.py::test_do_cleanups_on_success\", \"testing/test_unittest.py::test_do_cleanups_on_setup_failure\", \"testing/test_unittest.py::test_do_cleanups_on_teardown_failure\", \"testing/test_unittest.py::test_plain_unittest_does_not_support_async\"]",
  "environment_setup_commit": "4a8f8ada431974f2837260af3ed36299fd382814",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.947150",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}