{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-9231",
  "base_commit": "d6c19126c5ebd788619d491d4e70c949de9fd2ff",
  "patch": "diff --git a/sphinx/builders/manpage.py b/sphinx/builders/manpage.py\n--- a/sphinx/builders/manpage.py\n+++ b/sphinx/builders/manpage.py\n@@ -79,8 +79,9 @@ def write(self, *ignored: Any) -> None:\n             docsettings.section = section\n \n             if self.config.man_make_section_directory:\n-                ensuredir(path.join(self.outdir, str(section)))\n-                targetname = '%s/%s.%s' % (section, name, section)\n+                dirname = 'man%s' % section\n+                ensuredir(path.join(self.outdir, dirname))\n+                targetname = '%s/%s.%s' % (dirname, name, section)\n             else:\n                 targetname = '%s.%s' % (name, section)\n \n",
  "test_patch": "diff --git a/tests/test_build_manpage.py b/tests/test_build_manpage.py\n--- a/tests/test_build_manpage.py\n+++ b/tests/test_build_manpage.py\n@@ -34,7 +34,7 @@ def test_all(app, status, warning):\n                     confoverrides={'man_make_section_directory': True})\n def test_man_make_section_directory(app, status, warning):\n     app.build()\n-    assert (app.outdir / '1' / 'python.1').exists()\n+    assert (app.outdir / 'man1' / 'python.1').exists()\n \n \n @pytest.mark.sphinx('man', testroot='directive-code')\n",
  "problem_statement": "man_make_section_directory should not be enabled by default\nEnabling `man_make_section_directory` by default in #8284 breaks projects relying on the previous behavior. This is a serious problem for Linux distributions that will end up with misplaced and unusable man pages. Please consider keeping it disabled by default; the benefit of being able to use MANPATH in the output directory does not justify this kind of breakage.\r\n\r\nI also noticed that the current implementation generates paths like `<builddir>/1` instead of `<builddir>/man1`. Only the latter can be used with MANPATH which appears to be the main motivation behind #7996.\r\n\r\nExamples of breakage I've seen so far (and we've only had sphinx 4.0.x in Arch Linux for three days):\r\n\r\n[fish-shell](https://github.com/fish-shell/fish-shell) does not expect the section subdirectory and results in man pages for built-in shell commands being installed to `usr/share/fish/man/man1/1` instead of `usr/share/fish/man/man1` and also fails to filter out `fish.1`, `fish_indent.1` and `fish_key_reader.1` which are meant to be installed to `usr/share/man/man1`.\r\n\r\n[llvm-project](https://github.com/llvm/llvm-project) copies the output directory to `usr/share/man/man1` resulting in paths like `usr/share/man/man1/1/foo.1` (note the additional `1` directory).\n",
  "hints_text": "Thank you for letting us know. I just reverted the change of default setting in #9232. It will be released as 4.0.2 soon. And I'll change the directory name in #9231. It will be released as 4.1.0.",
  "created_at": "2021-05-15T12:39:26Z",
  "version": "4.1",
  "FAIL_TO_PASS": "[\"tests/test_build_manpage.py::test_man_make_section_directory\"]",
  "PASS_TO_PASS": "[\"tests/test_build_manpage.py::test_all\", \"tests/test_build_manpage.py::test_captioned_code_block\", \"tests/test_build_manpage.py::test_default_man_pages\", \"tests/test_build_manpage.py::test_rubric\"]",
  "environment_setup_commit": "9a2c3c4a1559e37e95fdee88c128bb116642c897",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.064172",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}