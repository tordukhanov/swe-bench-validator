{
  "repo": "django/django",
  "instance_id": "django__django-13684",
  "base_commit": "464a4c0c59277056b5d3c1132ac1b4c6085aee08",
  "patch": "diff --git a/django/db/utils.py b/django/db/utils.py\n--- a/django/db/utils.py\n+++ b/django/db/utils.py\n@@ -120,8 +120,10 @@ def load_backend(backend_name):\n         if backend_name not in ['django.db.backends.%s' % b for b in builtin_backends]:\n             backend_reprs = map(repr, sorted(builtin_backends))\n             raise ImproperlyConfigured(\n-                \"%r isn't an available database backend.\\n\"\n-                \"Try using 'django.db.backends.XXX', where XXX is one of:\\n\"\n+                \"%r isn't an available database backend or couldn't be \"\n+                \"imported. Check the above exception. To use one of the \"\n+                \"built-in backends, use 'django.db.backends.XXX', where XXX \"\n+                \"is one of:\\n\"\n                 \"    %s\" % (backend_name, \", \".join(backend_reprs))\n             ) from e_user\n         else:\n",
  "test_patch": "diff --git a/tests/db_utils/tests.py b/tests/db_utils/tests.py\n--- a/tests/db_utils/tests.py\n+++ b/tests/db_utils/tests.py\n@@ -57,8 +57,9 @@ class LoadBackendTests(SimpleTestCase):\n \n     def test_load_backend_invalid_name(self):\n         msg = (\n-            \"'foo' isn't an available database backend.\\n\"\n-            \"Try using 'django.db.backends.XXX', where XXX is one of:\\n\"\n+            \"'foo' isn't an available database backend or couldn't be \"\n+            \"imported. Check the above exception. To use one of the built-in \"\n+            \"backends, use 'django.db.backends.XXX', where XXX is one of:\\n\"\n             \"    'mysql', 'oracle', 'postgresql', 'sqlite3'\"\n         )\n         with self.assertRaisesMessage(ImproperlyConfigured, msg) as cm:\n",
  "problem_statement": "Misleading error when loading a database backend fails with ImportError\nDescription\n\t\nFor example, in the following case, django_cockroachdb is installed but has an import error itself.\nTraceback (most recent call last):\n File \"/home/tim/code/django/django/db/utils.py\", line 110, in load_backend\n\treturn import_module('%s.base' % backend_name)\n File \"/home/tim/.virtualenvs/django39/lib/python3.9/importlib/__init__.py\", line 127, in import_module\n\treturn _bootstrap._gcd_import(name[level:], package, level)\n File \"<frozen importlib._bootstrap>\", line 1030, in _gcd_import\n File \"<frozen importlib._bootstrap>\", line 1007, in _find_and_load\n File \"<frozen importlib._bootstrap>\", line 972, in _find_and_load_unlocked\n File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\n File \"<frozen importlib._bootstrap>\", line 1030, in _gcd_import\n File \"<frozen importlib._bootstrap>\", line 1007, in _find_and_load\n File \"<frozen importlib._bootstrap>\", line 986, in _find_and_load_unlocked\n File \"<frozen importlib._bootstrap>\", line 680, in _load_unlocked\n File \"<frozen importlib._bootstrap_external>\", line 790, in exec_module\n File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\n File \"/home/tim/code/cockroach-django/django_cockroachdb/__init__.py\", line 2, in <module>\n\tfrom .lookups import patch_lookups\n File \"/home/tim/code/cockroach-django/django_cockroachdb/lookups.py\", line 1, in <module>\n\tfrom django.db.models.fields.json import HasKeyLookup, KeyTransform\nModuleNotFoundError: No module named 'django.db.models.fields.json'\nThe above exception was the direct cause of the following exception:\nTraceback (most recent call last):\n File \"/home/tim/code/mysite/manage.py\", line 10, in <module>\n\texecute_from_command_line(sys.argv)\n File \"/home/tim/code/django/django/core/management/__init__.py\", line 381, in execute_from_command_line\n\tutility.execute()\n File \"/home/tim/code/django/django/core/management/__init__.py\", line 357, in execute\n\tdjango.setup()\n File \"/home/tim/code/django/django/__init__.py\", line 24, in setup\n\tapps.populate(settings.INSTALLED_APPS)\n File \"/home/tim/code/django/django/apps/registry.py\", line 114, in populate\n\tapp_config.import_models()\n File \"/home/tim/code/django/django/apps/config.py\", line 211, in import_models\n\tself.models_module = import_module(models_module_name)\n File \"/home/tim/.virtualenvs/django39/lib/python3.9/importlib/__init__.py\", line 127, in import_module\n\treturn _bootstrap._gcd_import(name[level:], package, level)\n File \"<frozen importlib._bootstrap>\", line 1030, in _gcd_import\n File \"<frozen importlib._bootstrap>\", line 1007, in _find_and_load\n File \"<frozen importlib._bootstrap>\", line 986, in _find_and_load_unlocked\n File \"<frozen importlib._bootstrap>\", line 680, in _load_unlocked\n File \"<frozen importlib._bootstrap_external>\", line 790, in exec_module\n File \"<frozen importlib._bootstrap>\", line 228, in _call_with_frames_removed\n File \"/home/tim/code/mysite/polls/models.py\", line 12, in <module>\n\tclass Question(models.Model):\n File \"/home/tim/code/django/django/db/models/base.py\", line 117, in __new__\n\tnew_class.add_to_class('_meta', Options(meta, app_label))\n File \"/home/tim/code/django/django/db/models/base.py\", line 321, in add_to_class\n\tvalue.contribute_to_class(cls, name)\n File \"/home/tim/code/django/django/db/models/options.py\", line 204, in contribute_to_class\n\tself.db_table = truncate_name(self.db_table, connection.ops.max_name_length())\n File \"/home/tim/code/django/django/db/__init__.py\", line 28, in __getattr__\n\treturn getattr(connections[DEFAULT_DB_ALIAS], item)\n File \"/home/tim/code/django/django/db/utils.py\", line 201, in __getitem__\n\tbackend = load_backend(db['ENGINE'])\n File \"/home/tim/code/django/django/db/utils.py\", line 121, in load_backend\n\traise ImproperlyConfigured(\ndjango.core.exceptions.ImproperlyConfigured: 'django_cockroachdb' isn't an available database backend.\nTry using 'django.db.backends.XXX', where XXX is one of:\n\t'mysql', 'oracle', 'postgresql', 'sqlite3'\nI'm not sure there's anything that could be done besides rephrasing the error message to say something like this:\n'django_cockroachdb' isn't an available database backend or couldn't be imported. Check the above exception.\nIn this case, \"Try using...\" isn't so helpful either. Perhaps we could only include that if backend_name begins with django..\n",
  "hints_text": "I agree that rephrasing the error message is all we can do.",
  "created_at": "2020-11-15T20:37:44Z",
  "version": "3.2",
  "FAIL_TO_PASS": "[\"test_load_backend_invalid_name (db_utils.tests.LoadBackendTests)\"]",
  "PASS_TO_PASS": "[\"test_connection_handler_no_databases (db_utils.tests.ConnectionHandlerTests)\", \"test_no_default_database (db_utils.tests.ConnectionHandlerTests)\"]",
  "environment_setup_commit": "65dfb06a1ab56c238cc80f5e1c31f61210c4577d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.666727",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}