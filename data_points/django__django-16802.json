{
  "repo": "django/django",
  "instance_id": "django__django-16802",
  "base_commit": "18a7f2c711529f8e43c36190a5e2479f13899749",
  "patch": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -628,7 +628,10 @@ def length_is(value, arg):\n @register.filter(is_safe=True)\n def random(value):\n     \"\"\"Return a random item from the list.\"\"\"\n-    return random_module.choice(value)\n+    try:\n+        return random_module.choice(value)\n+    except IndexError:\n+        return \"\"\n \n \n @register.filter(\"slice\", is_safe=True)\n",
  "test_patch": "diff --git a/tests/template_tests/filter_tests/test_random.py b/tests/template_tests/filter_tests/test_random.py\n--- a/tests/template_tests/filter_tests/test_random.py\n+++ b/tests/template_tests/filter_tests/test_random.py\n@@ -24,3 +24,8 @@ def test_random02(self):\n             \"random02\", {\"a\": [\"a&b\", \"a&b\"], \"b\": [mark_safe(\"a&b\"), mark_safe(\"a&b\")]}\n         )\n         self.assertEqual(output, \"a&b a&b\")\n+\n+    @setup({\"empty_list\": \"{{ list|random }}\"})\n+    def test_empty_list(self):\n+        output = self.engine.render_to_string(\"empty_list\", {\"list\": []})\n+        self.assertEqual(output, \"\")\n",
  "problem_statement": "\"random\" template filter crashes on an empty list.\nDescription\n\t\nfirst/last filters applied to a empty list do not raise anything and just returns a empty page. Example:\n{{ list_var|last }}\nRendered with:\ndef index(request):\n\treturn render(request, 'polls/index.html', context={\"list_var\": []})\nWill result in empty page:\n[26/Apr/2023 09:15:49] \"GET / HTTP/1.1\" 200 0\nAs I undestand, 0 means no any characters in response content.\nThe similar situation is with the first tag:\n{{ list_var|first }}\nWhile the random tag raises the IndexError and causes the server to response 500.\nCode snippet:\n{{ list_var|random }}\nIn console we have:\nInternal Server Error: /\nTraceback (most recent call last):\n File \"/home/alex/.local/lib/python3.9/site-packages/django/core/handlers/exception.py\", line 47, in inner\n\tresponse = get_response(request)\n File \"/home/alex/.local/lib/python3.9/site-packages/django/core/handlers/base.py\", line 181, in _get_response\n\tresponse = wrapped_callback(request, *callback_args, **callback_kwargs)\n File \"/home/alex/–î–æ–∫—É–º–µ–Ω—Ç—ã/django-example/polls/views.py\", line 8, in index\n\treturn render(request, 'polls/index.html', context={\"list_var\": []})\n File \"/home/alex/.local/lib/python3.9/site-packages/django/shortcuts.py\", line 19, in render\n\tcontent = loader.render_to_string(template_name, context, request, using=using)\n File \"/home/alex/.local/lib/python3.9/site-packages/django/template/loader.py\", line 62, in render_to_string\n\treturn template.render(context, request)\n File \"/home/alex/.local/lib/python3.9/site-packages/django/template/backends/django.py\", line 61, in render\n\treturn self.template.render(context)\n File \"/home/alex/.local/lib/python3.9/site-packages/django/template/base.py\", line 176, in render\n\treturn self._render(context)\n File \"/home/alex/.local/lib/python3.9/site-packages/django/template/base.py\", line 168, in _render\n\treturn self.nodelist.render(context)\n File \"/home/alex/.local/lib/python3.9/site-packages/django/template/base.py\", line 977, in render\n\treturn SafeString(''.join([\n File \"/home/alex/.local/lib/python3.9/site-packages/django/template/base.py\", line 978, in <listcomp>\n\tnode.render_annotated(context) for node in self\n File \"/home/alex/.local/lib/python3.9/site-packages/django/template/base.py\", line 938, in render_annotated\n\treturn self.render(context)\n File \"/home/alex/.local/lib/python3.9/site-packages/django/template/base.py\", line 1038, in render\n\toutput = self.filter_expression.resolve(context)\n File \"/home/alex/.local/lib/python3.9/site-packages/django/template/base.py\", line 728, in resolve\n\tnew_obj = func(obj, *arg_vals)\n File \"/home/alex/.local/lib/python3.9/site-packages/django/template/defaultfilters.py\", line 616, in random\n\treturn random_module.choice(value)\n File \"/usr/lib/python3.9/random.py\", line 347, in choice\n\treturn seq[self._randbelow(len(seq))]\nIndexError: list index out of range\n[26/Apr/2023 09:30:03] \"GET / HTTP/1.1\" 500 112925\nDjango version 4.0.1, python version Python 3.9.2\nExpected behavior:\nSince all first, last and random tags returns an element from the list, their conduct in the case when the list is empty must be the same: either all 3 of them should raise an error or all 3 should return empty content.\n",
  "hints_text": "In addition, it is worth to underline that in ‚Äãofficial documentation there is no any notes about raising an error in random tag description.\nThanks for the report üëç I think random should behave gracefully.",
  "created_at": "2023-04-26T11:19:01Z",
  "version": "5.0",
  "FAIL_TO_PASS": "[\"test_empty_list (template_tests.filter_tests.test_random.RandomTests.test_empty_list)\"]",
  "PASS_TO_PASS": "[\"test_random01 (template_tests.filter_tests.test_random.RandomTests.test_random01)\", \"test_random02 (template_tests.filter_tests.test_random.RandomTests.test_random02)\"]",
  "environment_setup_commit": "4a72da71001f154ea60906a2f74898d32b7322a7",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.771850",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}