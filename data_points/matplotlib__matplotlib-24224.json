{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-24224",
  "base_commit": "aaa5129a9fb472a239bb7421635c31f20a523c5f",
  "patch": "diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py\n--- a/lib/matplotlib/dates.py\n+++ b/lib/matplotlib/dates.py\n@@ -202,6 +202,18 @@\n UTC = datetime.timezone.utc\n \n \n+@_api.caching_module_getattr\n+class __getattr__:\n+    JULIAN_OFFSET = _api.deprecated(\"3.7\")(property(lambda self: 1721424.5))\n+    # Julian date at 0000-12-31\n+    # note that the Julian day epoch is achievable w/\n+    # np.datetime64('-4713-11-24T12:00:00'); datetime64 is proleptic\n+    # Gregorian and BC has a one-year offset.  So\n+    # np.datetime64('0000-12-31') - np.datetime64('-4713-11-24T12:00') =\n+    # 1721424.5\n+    # Ref: https://en.wikipedia.org/wiki/Julian_day\n+\n+\n def _get_tzinfo(tz=None):\n     \"\"\"\n     Generate tzinfo from a string or return tzinfo. If None,\n@@ -225,12 +237,6 @@ def _get_tzinfo(tz=None):\n # Time-related constants.\n EPOCH_OFFSET = float(datetime.datetime(1970, 1, 1).toordinal())\n # EPOCH_OFFSET is not used by matplotlib\n-JULIAN_OFFSET = 1721424.5  # Julian date at 0000-12-31\n-# note that the Julian day epoch is achievable w/\n-# np.datetime64('-4713-11-24T12:00:00'); datetime64 is proleptic\n-# Gregorian and BC has a one-year offset.  So\n-# np.datetime64('0000-12-31') - np.datetime64('-4713-11-24T12:00') = 1721424.5\n-# Ref: https://en.wikipedia.org/wiki/Julian_day\n MICROSECONDLY = SECONDLY + 1\n HOURS_PER_DAY = 24.\n MIN_PER_HOUR = 60.\n@@ -457,6 +463,7 @@ def date2num(d):\n     return d if iterable else d[0]\n \n \n+@_api.deprecated(\"3.7\")\n def julian2num(j):\n     \"\"\"\n     Convert a Julian date (or sequence) to a Matplotlib date (or sequence).\n@@ -476,10 +483,11 @@ def julian2num(j):\n     ep0 = np.datetime64('0000-12-31T00:00:00', 'h').astype(float) / 24.\n     # Julian offset defined above is relative to 0000-12-31, but we need\n     # relative to our current epoch:\n-    dt = JULIAN_OFFSET - ep0 + ep\n+    dt = __getattr__(\"JULIAN_OFFSET\") - ep0 + ep\n     return np.subtract(j, dt)  # Handles both scalar & nonscalar j.\n \n \n+@_api.deprecated(\"3.7\")\n def num2julian(n):\n     \"\"\"\n     Convert a Matplotlib date (or sequence) to a Julian date (or sequence).\n@@ -498,7 +506,7 @@ def num2julian(n):\n     ep0 = np.datetime64('0000-12-31T00:00:00', 'h').astype(float) / 24.\n     # Julian offset defined above is relative to 0000-12-31, but we need\n     # relative to our current epoch:\n-    dt = JULIAN_OFFSET - ep0 + ep\n+    dt = __getattr__(\"JULIAN_OFFSET\") - ep0 + ep\n     return np.add(n, dt)  # Handles both scalar & nonscalar j.\n \n \n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_dates.py b/lib/matplotlib/tests/test_dates.py\n--- a/lib/matplotlib/tests/test_dates.py\n+++ b/lib/matplotlib/tests/test_dates.py\n@@ -1241,17 +1241,18 @@ def test_change_interval_multiples():\n \n \n def test_julian2num():\n-    mdates._reset_epoch_test_example()\n-    mdates.set_epoch('0000-12-31')\n-    # 2440587.5 is julian date for 1970-01-01T00:00:00\n-    # https://en.wikipedia.org/wiki/Julian_day\n-    assert mdates.julian2num(2440588.5) == 719164.0\n-    assert mdates.num2julian(719165.0) == 2440589.5\n-    # set back to the default\n-    mdates._reset_epoch_test_example()\n-    mdates.set_epoch('1970-01-01T00:00:00')\n-    assert mdates.julian2num(2440588.5) == 1.0\n-    assert mdates.num2julian(2.0) == 2440589.5\n+    with pytest.warns(_api.MatplotlibDeprecationWarning):\n+        mdates._reset_epoch_test_example()\n+        mdates.set_epoch('0000-12-31')\n+        # 2440587.5 is julian date for 1970-01-01T00:00:00\n+        # https://en.wikipedia.org/wiki/Julian_day\n+        assert mdates.julian2num(2440588.5) == 719164.0\n+        assert mdates.num2julian(719165.0) == 2440589.5\n+        # set back to the default\n+        mdates._reset_epoch_test_example()\n+        mdates.set_epoch('1970-01-01T00:00:00')\n+        assert mdates.julian2num(2440588.5) == 1.0\n+        assert mdates.num2julian(2.0) == 2440589.5\n \n \n def test_DateLocator():\n",
  "problem_statement": "[Doc]: document `julian2num` and `num2julian`?\n### Documentation Link\r\n\r\nhttps://matplotlib.org/stable/api/dates_api.html\r\n\r\n### Problem\r\n\r\nThese two methods have a decent doc-string, but are not in the documentation.\r\n\r\nhttps://github.com/matplotlib/matplotlib/blob/7de767e927b4b4f5212e268c6432107116752d85/lib/matplotlib/dates.py#L461-L503\r\n\r\nThey were added 2006-08-10\r\n\r\n### Suggested improvement\r\n\r\nMaybe add them to the documentation?\r\n\r\nIt would make sense to add them towards the end of the page and include those and all functions after the last Locator in a new subsection \"Miscellaneous date functions\" or something.\r\n\r\nEdit: looking at the source, https://github.com/matplotlib/matplotlib/blob/main/doc/api/dates_api.rst it is not really clear why they are not there...\n",
  "hints_text": "I also don't see why they are not picked up by sphinx.\r\n\r\nOTOH, I don't know why we have this. I suppose very few people care about julian dates. I wouldn't spend time on this.\nYes these should just be deprecated.  We can't even plot Julian day 1.  ",
  "created_at": "2022-10-20T08:47:45Z",
  "version": "3.6",
  "FAIL_TO_PASS": "[\"lib/matplotlib/tests/test_dates.py::test_julian2num\"]",
  "PASS_TO_PASS": "[\"lib/matplotlib/tests/test_dates.py::test_date_numpyx\", \"lib/matplotlib/tests/test_dates.py::test_date_date2num_numpy[datetime64[s]-t00]\", \"lib/matplotlib/tests/test_dates.py::test_date_date2num_numpy[datetime64[s]-t01]\", \"lib/matplotlib/tests/test_dates.py::test_date_date2num_numpy[datetime64[s]-t02]\", \"lib/matplotlib/tests/test_dates.py::test_date_date2num_numpy[datetime64[us]-t00]\", \"lib/matplotlib/tests/test_dates.py::test_date_date2num_numpy[datetime64[us]-t01]\", \"lib/matplotlib/tests/test_dates.py::test_date_date2num_numpy[datetime64[us]-t02]\", \"lib/matplotlib/tests/test_dates.py::test_date_date2num_numpy[datetime64[ms]-t00]\", \"lib/matplotlib/tests/test_dates.py::test_date_date2num_numpy[datetime64[ms]-t01]\", \"lib/matplotlib/tests/test_dates.py::test_date_date2num_numpy[datetime64[ms]-t02]\", \"lib/matplotlib/tests/test_dates.py::test_date_date2num_numpy[datetime64[ns]-t00]\", \"lib/matplotlib/tests/test_dates.py::test_date_date2num_numpy[datetime64[ns]-t01]\", \"lib/matplotlib/tests/test_dates.py::test_date_date2num_numpy[datetime64[ns]-t02]\", \"lib/matplotlib/tests/test_dates.py::test_date2num_NaT[datetime64[s]]\", \"lib/matplotlib/tests/test_dates.py::test_date2num_NaT[datetime64[us]]\", \"lib/matplotlib/tests/test_dates.py::test_date2num_NaT[datetime64[ms]]\", \"lib/matplotlib/tests/test_dates.py::test_date2num_NaT[datetime64[ns]]\", \"lib/matplotlib/tests/test_dates.py::test_date2num_NaT_scalar[s]\", \"lib/matplotlib/tests/test_dates.py::test_date2num_NaT_scalar[ms]\", \"lib/matplotlib/tests/test_dates.py::test_date2num_NaT_scalar[us]\", \"lib/matplotlib/tests/test_dates.py::test_date2num_NaT_scalar[ns]\", \"lib/matplotlib/tests/test_dates.py::test_date_empty\", \"lib/matplotlib/tests/test_dates.py::test_date_not_empty\", \"lib/matplotlib/tests/test_dates.py::test_axhline\", \"lib/matplotlib/tests/test_dates.py::test_date_axhspan[png]\", \"lib/matplotlib/tests/test_dates.py::test_date_axvspan[png]\", \"lib/matplotlib/tests/test_dates.py::test_date_axhline[png]\", \"lib/matplotlib/tests/test_dates.py::test_date_axvline[png]\", \"lib/matplotlib/tests/test_dates.py::test_too_many_date_ticks\", \"lib/matplotlib/tests/test_dates.py::test_RRuleLocator[png]\", \"lib/matplotlib/tests/test_dates.py::test_RRuleLocator_dayrange\", \"lib/matplotlib/tests/test_dates.py::test_RRuleLocator_close_minmax\", \"lib/matplotlib/tests/test_dates.py::test_DateFormatter[png]\", \"lib/matplotlib/tests/test_dates.py::test_locator_set_formatter\", \"lib/matplotlib/tests/test_dates.py::test_date_formatter_callable\", \"lib/matplotlib/tests/test_dates.py::test_date_formatter_usetex[delta0-expected0]\", \"lib/matplotlib/tests/test_dates.py::test_date_formatter_usetex[delta1-expected1]\", \"lib/matplotlib/tests/test_dates.py::test_date_formatter_usetex[delta2-expected2]\", \"lib/matplotlib/tests/test_dates.py::test_date_formatter_usetex[delta3-expected3]\", \"lib/matplotlib/tests/test_dates.py::test_drange\", \"lib/matplotlib/tests/test_dates.py::test_auto_date_locator\", \"lib/matplotlib/tests/test_dates.py::test_auto_date_locator_intmult\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_subsecond\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_show_offset[t_delta0-1997-Jan-01\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_show_offset[t_delta1-1997-Jan-01\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_show_offset[t_delta2-1997-Jan-01]\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_show_offset[t_delta3-1997-Jan-02]\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_show_offset[t_delta4-1997-Jan]\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_show_offset[t_delta5-]\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_show_offset[t_delta6-]\", \"lib/matplotlib/tests/test_dates.py::test_offset_changes\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_usetex[t_delta0-expected0]\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_usetex[t_delta1-expected1]\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_usetex[t_delta2-expected2]\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_usetex[t_delta3-expected3]\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_formats\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_zformats\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_tz\", \"lib/matplotlib/tests/test_dates.py::test_auto_date_locator_intmult_tz\", \"lib/matplotlib/tests/test_dates.py::test_date_inverted_limit[png]\", \"lib/matplotlib/tests/test_dates.py::test_date2num_dst\", \"lib/matplotlib/tests/test_dates.py::test_date2num_dst_pandas\", \"lib/matplotlib/tests/test_dates.py::test_rrulewrapper\", \"lib/matplotlib/tests/test_dates.py::test_rrulewrapper_pytz\", \"lib/matplotlib/tests/test_dates.py::test_yearlocator_pytz\", \"lib/matplotlib/tests/test_dates.py::test_YearLocator\", \"lib/matplotlib/tests/test_dates.py::test_DayLocator\", \"lib/matplotlib/tests/test_dates.py::test_tz_utc\", \"lib/matplotlib/tests/test_dates.py::test_num2timedelta[1-tdelta0]\", \"lib/matplotlib/tests/test_dates.py::test_num2timedelta[x1-tdelta1]\", \"lib/matplotlib/tests/test_dates.py::test_datetime64_in_list\", \"lib/matplotlib/tests/test_dates.py::test_change_epoch\", \"lib/matplotlib/tests/test_dates.py::test_warn_notintervals\", \"lib/matplotlib/tests/test_dates.py::test_change_converter\", \"lib/matplotlib/tests/test_dates.py::test_change_interval_multiples\", \"lib/matplotlib/tests/test_dates.py::test_DateLocator\", \"lib/matplotlib/tests/test_dates.py::test_datestr2num\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_exceptions[formats]\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_exceptions[zero_formats]\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_exceptions[offset_formats]\", \"lib/matplotlib/tests/test_dates.py::test_concise_formatter_call\", \"lib/matplotlib/tests/test_dates.py::test_date_ticker_factory[0.02-MinuteLocator]\", \"lib/matplotlib/tests/test_dates.py::test_date_ticker_factory[1-HourLocator]\", \"lib/matplotlib/tests/test_dates.py::test_date_ticker_factory[19-DayLocator]\", \"lib/matplotlib/tests/test_dates.py::test_date_ticker_factory[40-WeekdayLocator]\", \"lib/matplotlib/tests/test_dates.py::test_date_ticker_factory[200-MonthLocator]\", \"lib/matplotlib/tests/test_dates.py::test_date_ticker_factory[2000-YearLocator]\", \"lib/matplotlib/tests/test_dates.py::test_datetime_masked\", \"lib/matplotlib/tests/test_dates.py::test_num2date_error[-1000000]\", \"lib/matplotlib/tests/test_dates.py::test_num2date_error[10000000]\", \"lib/matplotlib/tests/test_dates.py::test_num2date_roundoff\", \"lib/matplotlib/tests/test_dates.py::test_DateFormatter_settz\"]",
  "environment_setup_commit": "73909bcb408886a22e2b84581d6b9e6d9907c813",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.809056",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}