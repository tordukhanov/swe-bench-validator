{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-8620",
  "base_commit": "21698c14461d27933864d73e6fba568a154e83b3",
  "patch": "diff --git a/sphinx/builders/html/transforms.py b/sphinx/builders/html/transforms.py\n--- a/sphinx/builders/html/transforms.py\n+++ b/sphinx/builders/html/transforms.py\n@@ -28,7 +28,7 @@ class KeyboardTransform(SphinxPostTransform):\n \n     After::\n \n-        <literal class=\"kbd\">\n+        <literal class=\"kbd compound\">\n             <literal class=\"kbd\">\n                 Control\n             -\n@@ -46,6 +46,7 @@ def run(self, **kwargs: Any) -> None:\n             if len(parts) == 1:\n                 continue\n \n+            node['classes'].append('compound')\n             node.pop()\n             while parts:\n                 key = parts.pop(0)\n",
  "test_patch": "diff --git a/tests/test_markup.py b/tests/test_markup.py\n--- a/tests/test_markup.py\n+++ b/tests/test_markup.py\n@@ -244,7 +244,7 @@ def get(name):\n         # kbd role\n         'verify',\n         ':kbd:`Control+X`',\n-        ('<p><kbd class=\"kbd docutils literal notranslate\">'\n+        ('<p><kbd class=\"kbd compound docutils literal notranslate\">'\n          '<kbd class=\"kbd docutils literal notranslate\">Control</kbd>'\n          '+'\n          '<kbd class=\"kbd docutils literal notranslate\">X</kbd>'\n@@ -255,7 +255,7 @@ def get(name):\n         # kbd role\n         'verify',\n         ':kbd:`M-x  M-s`',\n-        ('<p><kbd class=\"kbd docutils literal notranslate\">'\n+        ('<p><kbd class=\"kbd compound docutils literal notranslate\">'\n          '<kbd class=\"kbd docutils literal notranslate\">M</kbd>'\n          '-'\n          '<kbd class=\"kbd docutils literal notranslate\">x</kbd>'\n",
  "problem_statement": "kbd role generates HTML that's difficult/impossible to style for compound-keystrokes\n**Describe the bug**\r\n\r\nThe `:kbd:` role doesn't mark container `<kbd>` elements with a CSS class, so they can be styled differently that child `<kbd>` elements representing actual keystrokes.\r\n\r\n\r\n**To Reproduce**\r\n\r\nFor the below input\r\n\r\n```\r\n:kbd:`A`\r\n\r\n:kbd:`Shift+X`\r\n```\r\n\r\nthe following output is generated:\r\n\r\n```html\r\n<kbd class=\"kbd docutils literal notranslate\">A</kbd>\r\n\r\n<kbd class=\"kbd docutils literal notranslate\">\r\n  <kbd class=\"kbd docutils literal notranslate\">Shift</kbd>+\r\n  <kbd class=\"kbd docutils literal notranslate\">X</kbd>\r\n</kbd>\r\n```\r\n\r\nNow we have a problem here: there is no way to differentiate between the parent container `<kbd>` element and the child `<kbd>` element with CSS selectors! If we provide a CSS style to draw a border around a `<kbd>` element, so single keystrokes are displayed correctly, then in the second example we'd get a double border (borders around the child elements, and another border around the parent element).\r\n\r\nIf you want to have borders around single keystrokes, and only around the child `<kbd>` elements in compound keystrokes, as shown on the screenshot below, the only way is to differentiate the container and child `<kbd>` elements with a CSS class.\r\n\r\n![image](https://user-images.githubusercontent.com/698770/103331868-9091ae80-4ab3-11eb-980a-94743f279511.png)\r\n\r\n**Expected behavior**\r\n\r\nSingle keystrokes are fine as they are, no change needed:\r\n\r\n```html\r\n<kbd class=\"kbd docutils literal notranslate\">A</kbd>\r\n```\r\n\r\nFor compound keystrokes, the container `<kbd>` element should be marked with a CSS class (e.g. `compound`) so it can be styled differently than the child `<kbd>` elements:\r\n\r\n```html\r\n<kbd class=\"kbd compound docutils literal notranslate\">\r\n  <kbd class=\"kbd docutils literal notranslate\">Shift</kbd>+\r\n  <kbd class=\"kbd docutils literal notranslate\">X</kbd>\r\n</kbd>\r\n```\r\n\r\n**Environment info**\r\n- OS: Windows\r\n- Python version: 3.9.1\r\n- Sphinx version: 3.4.0\r\n- Sphinx extensions: -\r\n- Extra tools: -\r\n\r\n\n",
  "hints_text": "Quite agree, the outer `<kbd>` and inner `<kbd>` should be given different attributes for distinction. CSS has no way of selecting parent element so we are not able to determine whether a `<kbd>` element contains nested `<kbd>`.\r\n\r\nWith key combination and certain style for `<kbd>`, we get:\r\n \r\n![87524709-cb7c6300-c688-11ea-9640-9ee1cf217f58](https://user-images.githubusercontent.com/31075263/103341423-da819100-4ac1-11eb-8da7-319d66c6eaf0.png)\r\n\r\n\r\n\n+1: Reasonable. Do you have a good naming for the `<kbd>` tag?",
  "created_at": "2020-12-30T11:53:13Z",
  "version": "3.5",
  "FAIL_TO_PASS": "[\"tests/test_markup.py::test_inline[verify-:kbd:`Control+X`-<p><kbd\", \"tests/test_markup.py::test_inline[verify-:kbd:`M-x\"]",
  "PASS_TO_PASS": "[\"tests/test_markup.py::test_inline[verify-:rfc:`2324`-<p><span\", \"tests/test_markup.py::test_inline[verify-:rfc:`2324#id1`-<p><span\", \"tests/test_markup.py::test_inline[verify_re-``code\", \"tests/test_markup.py::test_inline[verify-:menuselection:`a\", \"tests/test_markup.py::test_inline[verify-:menuselection:`&Foo\", \"tests/test_markup.py::test_inline[verify-:guilabel:`&Foo\", \"tests/test_markup.py::test_inline[verify-:guilabel:`Foo`-<p><span\", \"tests/test_markup.py::test_inline[verify-:kbd:`space`-<p><kbd\", \"tests/test_markup.py::test_inline[verify_re-:option:`--with-option`-<p><code(\", \"tests/test_markup.py::test_inline[verify-\\\"John\\\"-<p>\\\\u201cJohn\\\\u201d</p>-\\\\u201cJohn\\\\u201d]\", \"tests/test_markup.py::test_inline[verify-``\\\"John\\\"``-<p><code\", \"tests/test_markup.py::test_inline[verify-:manpage:`mp(1)`-<p><em\", \"tests/test_markup.py::test_inline[verify-\\\\u0393\\\\\\\\\\\\\\\\\\\\u221e$-None-\\\\u0393\\\\\\\\textbackslash{}\\\\\\\\(\\\\\\\\infty\\\\\\\\)\\\\\\\\$]\", \"tests/test_markup.py::test_inline[verify-::\\\\n\\\\n\", \"tests/test_markup.py::test_inline[verify_re-`test\", \"tests/test_markup.py::test_inline[verify-term\\\\n\", \"tests/test_markup.py::test_inline[verify-term\", \"tests/test_markup.py::test_inline[verify-..\", \"tests/test_markup.py::test_inline_docutils16[verify-4\", \"tests/test_markup.py::test_inline_for_unicode_latex_engine[verify-::\\\\n\\\\n\", \"tests/test_markup.py::test_samp_role\", \"tests/test_markup.py::test_download_role\", \"tests/test_markup.py::test_XRefRole\", \"tests/test_markup.py::test_rst_prolog\", \"tests/test_markup.py::test_keep_warnings_is_True\", \"tests/test_markup.py::test_keep_warnings_is_False\", \"tests/test_markup.py::test_compact_refonly_bullet_list\", \"tests/test_markup.py::test_default_role1\", \"tests/test_markup.py::test_default_role2\"]",
  "environment_setup_commit": "4f8cb861e3b29186b38248fe81e4944fd987fcce",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.057611",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}