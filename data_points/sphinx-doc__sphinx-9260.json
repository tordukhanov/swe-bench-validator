{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-9260",
  "base_commit": "e878299cc608614e959e0e99025cccfd48de00bc",
  "patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -21,7 +21,7 @@\n from threading import Thread\n from typing import (Any, Dict, Generator, List, NamedTuple, Optional, Pattern, Set, Tuple,\n                     Union, cast)\n-from urllib.parse import unquote, urlparse\n+from urllib.parse import unquote, urlparse, urlunparse\n \n from docutils import nodes\n from docutils.nodes import Element\n@@ -627,6 +627,10 @@ def run(self, **kwargs: Any) -> None:\n             if 'refuri' not in refnode:\n                 continue\n             uri = refnode['refuri']\n+            newuri = self.app.emit_firstresult('linkcheck-process-uri', uri)\n+            if newuri:\n+                uri = newuri\n+\n             lineno = get_node_line(refnode)\n             uri_info = Hyperlink(uri, self.env.docname, lineno)\n             if uri not in hyperlinks:\n@@ -636,12 +640,31 @@ def run(self, **kwargs: Any) -> None:\n         for imgnode in self.document.traverse(nodes.image):\n             uri = imgnode['candidates'].get('?')\n             if uri and '://' in uri:\n+                newuri = self.app.emit_firstresult('linkcheck-process-uri', uri)\n+                if newuri:\n+                    uri = newuri\n+\n                 lineno = get_node_line(imgnode)\n                 uri_info = Hyperlink(uri, self.env.docname, lineno)\n                 if uri not in hyperlinks:\n                     hyperlinks[uri] = uri_info\n \n \n+def rewrite_github_anchor(app: Sphinx, uri: str) -> Optional[str]:\n+    \"\"\"Rewrite anchor name of the hyperlink to github.com\n+\n+    The hyperlink anchors in github.com are dynamically generated.  This rewrites\n+    them before checking and makes them comparable.\n+    \"\"\"\n+    parsed = urlparse(uri)\n+    if parsed.hostname == \"github.com\" and parsed.fragment:\n+        prefixed = parsed.fragment.startswith('user-content-')\n+        if not prefixed:\n+            fragment = f'user-content-{parsed.fragment}'\n+            return urlunparse(parsed._replace(fragment=fragment))\n+    return None\n+\n+\n def setup(app: Sphinx) -> Dict[str, Any]:\n     app.add_builder(CheckExternalLinksBuilder)\n     app.add_post_transform(HyperlinkCollector)\n@@ -658,6 +681,9 @@ def setup(app: Sphinx) -> Dict[str, Any]:\n     app.add_config_value('linkcheck_anchors_ignore', [\"^!\"], None)\n     app.add_config_value('linkcheck_rate_limit_timeout', 300.0, None)\n \n+    app.add_event('linkcheck-process-uri')\n+    app.connect('linkcheck-process-uri', rewrite_github_anchor)\n+\n     return {\n         'version': 'builtin',\n         'parallel_read_safe': True,\n",
  "test_patch": "diff --git a/tests/roots/test-linkcheck/links.txt b/tests/roots/test-linkcheck/links.txt\n--- a/tests/roots/test-linkcheck/links.txt\n+++ b/tests/roots/test-linkcheck/links.txt\n@@ -13,6 +13,8 @@ Some additional anchors to exercise ignore code\n * `Complete nonsense <https://localhost:7777/doesnotexist>`_\n * `Example valid local file <conf.py>`_\n * `Example invalid local file <path/to/notfound>`_\n+* https://github.com/sphinx-doc/sphinx#documentation\n+* https://github.com/sphinx-doc/sphinx#user-content-testing\n \n .. image:: https://www.google.com/image.png\n .. figure:: https://www.google.com/image2.png\ndiff --git a/tests/test_build_linkcheck.py b/tests/test_build_linkcheck.py\n--- a/tests/test_build_linkcheck.py\n+++ b/tests/test_build_linkcheck.py\n@@ -65,8 +65,8 @@ def test_defaults_json(app):\n                  \"info\"]:\n         assert attr in row\n \n-    assert len(content.splitlines()) == 10\n-    assert len(rows) == 10\n+    assert len(content.splitlines()) == 12\n+    assert len(rows) == 12\n     # the output order of the rows is not stable\n     # due to possible variance in network latency\n     rowsby = {row[\"uri\"]: row for row in rows}\n@@ -87,7 +87,7 @@ def test_defaults_json(app):\n     assert dnerow['uri'] == 'https://localhost:7777/doesnotexist'\n     assert rowsby['https://www.google.com/image2.png'] == {\n         'filename': 'links.txt',\n-        'lineno': 18,\n+        'lineno': 20,\n         'status': 'broken',\n         'code': 0,\n         'uri': 'https://www.google.com/image2.png',\n@@ -101,6 +101,10 @@ def test_defaults_json(app):\n     # images should fail\n     assert \"Not Found for url: https://www.google.com/image.png\" in \\\n         rowsby[\"https://www.google.com/image.png\"][\"info\"]\n+    # The anchor of the URI for github.com is automatically modified\n+    assert 'https://github.com/sphinx-doc/sphinx#documentation' not in rowsby\n+    assert 'https://github.com/sphinx-doc/sphinx#user-content-documentation' in rowsby\n+    assert 'https://github.com/sphinx-doc/sphinx#user-content-testing' in rowsby\n \n \n @pytest.mark.sphinx(\n",
  "problem_statement": "Linkchecker croaks on specific anchors of GitHub-rendered reStructuredText documents\nDear Sphinx developers,\r\n\r\nfirst things first: Thanks a stack for your paramount work on Sphinx. You already saved many souls of people writing technical documentation and probably also beyond this audience.\r\n\r\nWe just observed a minor woe with Sphinx' linkchecker we wanted to share with you. We really like that the linkchecker is able to check anchors within HTML documents as contributed by @intgr on behalf of #842.\r\n\r\nWith kind regards,\r\nAndreas.\r\n\r\n---\r\n\r\n**Describe the bug**\r\nWe had the link [1] in our documentation, and, maybe after upgrading to more recent versions of Sphinx, the linkchecker suddenly started croaking on that. After changing it to [2], it worked again. When inspecting the source code of the respective HTML page, you can clearly see that the anchor name `#user-content-make-changes` defined by\r\n```html\r\n<a name=\"user-content-make-changes\"></a>\r\n<a id=\"user-content-make-changes\" class=\"anchor\" aria-hidden=\"true\" href=\"#make-changes\">\r\n```\r\nis technically correct. However, it apparently has worked before by referencing `#make-changes`. So, we are wondering if something changed on GitHub's reStructuredText renderer or even Browsers interpreting the HTML link anchors differently. When invoking those links [1,2] in the Browser, actually both work, including navigation to the appropriate place within the page. Funny, hm?\r\n\r\n[1] https://github.com/crate/crate-docs-theme/blob/master/DEVELOP.rst#make-changes\r\n[2] https://github.com/crate/crate-docs-theme/blob/master/DEVELOP.rst#user-content-make-changes\r\n\r\n**Expected behavior**\r\nTechnically, from the perspective we know our way around HTML, the behavior is probably the right thing and correct. \r\n\r\nHowever, as we can see, something might have been changed on the HTML standard that Browsers are capable of interpreting different styles of defining link anchors. So, it might be worth to revisit this space and maybe improve the linkchecker implementation on those aspects.\r\n\r\n**Environment info**\r\n- OS: Linux\r\n- Python version: 3.9.2\r\n- Sphinx version: 3.5.2\r\n- Firefox: 86.0\r\n\n",
  "hints_text": "If my understanding is correct, the behavior of anchors in GH came from JavaScript works. There is no anchors without \"user-content\" prefix in the HTML output. So it's difficult to check the anchor.\r\n\r\nDo you remember what version have you used before the update? I'd like to try to reproduce why the old version can handle it correctly.\nHi Takeshi,\r\n\r\nthank you for your quick response. I will try to answer your question thoroughly but please bear with me that I might not know every detail.\r\n\r\nSo, as far as I am involved, I know that we are currently upgrading from Sphinx 1 to Sphinx 3. We can see from https://github.com/crate/crate-docs/commit/1650a5092d6cfad1cacdaf0afc16127e1136a2ac, that we probably used Sphinx 1.7.4 beforehand.\r\n\r\nHowever, I am currently not sure if something might have changed on GitHub's reStructuredText rendering. So, taking that moving target into account, maybe Sphinx isn't even responsible at all for seeing our CI croaking on this detail now. The upgrading to Sphinx 3, which revealed this, might just have been a coincidence.\r\n\r\n> There is no anchors without \"user-content\" prefix in the HTML output.\r\n\r\nExactly.\r\n\r\n> If my understanding is correct, the behavior of anchors in GH came from JavaScript works.\r\n\r\nI already also thought about whether some JavaScript served by GitHub might be involved to make those anchors (here: `#make-changes`) work (again). However, I haven't investigated into this direction yet, so I can't say for sure.\r\n\r\n> So it's difficult to check the anchor.\r\n\r\nAbsolutely. I also believe that there might be nothing we can do about it. Nevertheless, I wanted to share this story as a reference point for others. Maybe it can also serve as an anchor [sic!] to point this out to the GitHub developers, to check if they had some recent changes on their content rendering engine and whether they might be keen on rethinking the respective updates.\r\n\r\nWith kind regards,\r\nAndreas.\r\n\nHi Takeshi,\r\n\r\napparently, anchors with \"user-content\" prefix are already around for quite some time, as the references at https://github.com/github/markup/issues/425, https://github.com/MicrosoftDocs/azure-devops-docs/issues/6015, https://github.com/go-gitea/gitea/issues/11896 and https://github.com/go-gitea/gitea/issues/12062 are outlining.\r\n\r\nThere even seem to be recipes like [1,2] and software solutions like [3,4] which show a way how to apply workarounds for that dilemma.\r\n\r\nWhile I still don't know why this hasn't tripped the linkchecker before on our end, as the implementation coming from https://github.com/sphinx-doc/sphinx/commit/e0e9d2a7 seems to be around since Sphinx 1.2 already, I quickly wanted to share those observations and findings with you.\r\n\r\nWith kind regards,\r\nAndreas.\r\n\r\n[1] https://gist.github.com/borekb/f83e48479aceaafa43108e021600f7e3\r\n[2] https://github.com/sergeiudris/lab.gtihub-markdown-big-doc-header-name-uniqueness-dilemma-2020-09-05\r\n[3] https://github.com/samjabrahams/anchorhub\r\n[4] https://github.com/Flet/markdown-it-github-headings\r\n\nI tried to check the anchors with Sphinx-1.7.4. And it also fails as the newest one does.\r\n```\r\nroot@95d7d9cd8d94:/doc# make clean linkcheck\r\nRemoving everything under '_build'...\r\nRunning Sphinx v1.7.4\r\nmaking output directory...\r\nloading pickled environment... not yet created\r\nbuilding [mo]: targets for 0 po files that are out of date\r\nbuilding [linkcheck]: targets for 1 source files that are out of date\r\nupdating environment: 1 added, 0 changed, 0 removed\r\nreading sources... [100%] index\r\nlooking for now-outdated files... none found\r\npickling environment... done\r\nchecking consistency... done\r\npreparing documents... done\r\nwriting output... [100%] index\r\n(line    9) broken    https://github.com/crate/crate-docs-theme/blob/master/DEVELOP.rst#make-changes - Anchor 'make-changes' not found\r\n(line    9) ok        https://github.com/crate/crate-docs-theme/blob/master/DEVELOP.rst#user-content-make-changes\r\n\r\nbuild finished with problems.\r\nmake: *** [Makefile:20: linkcheck] Error 1\r\n```\r\n\r\nI created a sphinx project via sphinx-quickstart command and modified `index.rst` only as following:\r\n```\r\n.. p documentation master file, created by\r\n   sphinx-quickstart on Sat Mar 20 14:18:21 2021.\r\n   You can adapt this file completely to your liking, but it should at least\r\n   contain the root `toctree` directive.\r\n\r\nWelcome to p's documentation!\r\n=============================\r\n\r\nhttps://github.com/crate/crate-docs-theme/blob/master/DEVELOP.rst#make-changes\r\nhttps://github.com/crate/crate-docs-theme/blob/master/DEVELOP.rst#user-content-make-changes\r\n```\r\n\r\nI still don't understand why the linkcheck was succeeded before the update...\nHi Takeshi,\r\n\r\nthanks for taking the time to look into this. The most probable reason why that didn't croak before is probably that we might have turned warnings into errors by using the `-W` command line option now. Otherwise, I wouldn't be able to explain it either.\r\n\r\nSo, I believe it is totally fine to close this issue.\r\n\r\nHowever, if you feel we could improve the Sphinx linkchecker on this matter, I will be happy to submit a patch which takes that topic into account by adding the `user-content-` prefix as another candidate to evaluate valid anchors against, if that would be appropriate at all.\r\n\r\nGiven that users would still like to use the short anchor variant (like `#make-changes`) for writing down the links (as it will work on Browsers), it would be nice to have that kind of convenience that the linkchecker will not croak on this. Maybe we can attach this feature through another [`linkcheck_anchors` configuration setting](https://www.sphinx-doc.org/en/master/usage/configuration.html#confval-linkcheck_anchors) like `linkcheck_anchors_prefixes`?\r\n\r\nWith kind regards,\r\nAndreas.\r\n\nI have some contradictory opinions for this:\r\n\r\n* Adding a new confval to prefix the anchor is meaningless. AFAIK, this behavior is only needed for GH. No reason to be configurable.\r\n* It's nice to add code to modify the anchors if the baseurl is GH, instead of configuration. It must be worthy.\r\n* But, I hesitate to add code for the specific website to Sphinx.\r\n  * Because it should track the change of the structure of the website (in this case, GH). It will break suddenly if the structure of the website has changed. So it's a bit fragile. It's tough to support.\r\n  * If we give the special treatment for the specific website, it will bring another special treatment for the website. Somebody will say \"Why not supporting this site?\".\r\n* I understand GH is very commonly used website. So it's very worthy to give special treatment. And it helps many users. In other words, I think not supporting GH is a kind of defect.\r\n  * We already have `sphinx.ext.githubpages`!",
  "created_at": "2021-05-22T05:14:16Z",
  "version": "4.1",
  "FAIL_TO_PASS": "[\"tests/test_build_linkcheck.py::test_defaults_json\"]",
  "PASS_TO_PASS": "[\"tests/test_build_linkcheck.py::test_raises_for_invalid_status\", \"tests/test_build_linkcheck.py::test_auth_header_uses_first_match\", \"tests/test_build_linkcheck.py::test_auth_header_no_match\", \"tests/test_build_linkcheck.py::test_linkcheck_request_headers\", \"tests/test_build_linkcheck.py::test_linkcheck_request_headers_no_slash\", \"tests/test_build_linkcheck.py::test_linkcheck_request_headers_default\", \"tests/test_build_linkcheck.py::test_follows_redirects_on_HEAD\", \"tests/test_build_linkcheck.py::test_follows_redirects_on_GET\", \"tests/test_build_linkcheck.py::test_invalid_ssl\", \"tests/test_build_linkcheck.py::test_connect_to_selfsigned_fails\", \"tests/test_build_linkcheck.py::test_connect_to_selfsigned_with_tls_verify_false\", \"tests/test_build_linkcheck.py::test_connect_to_selfsigned_with_tls_cacerts\", \"tests/test_build_linkcheck.py::test_connect_to_selfsigned_with_requests_env_var\", \"tests/test_build_linkcheck.py::test_connect_to_selfsigned_nonexistent_cert_file\", \"tests/test_build_linkcheck.py::test_TooManyRedirects_on_HEAD\", \"tests/test_build_linkcheck.py::test_too_many_requests_retry_after_int_delay\", \"tests/test_build_linkcheck.py::test_too_many_requests_retry_after_HTTP_date\", \"tests/test_build_linkcheck.py::test_too_many_requests_retry_after_without_header\", \"tests/test_build_linkcheck.py::test_too_many_requests_user_timeout\", \"tests/test_build_linkcheck.py::test_limit_rate_default_sleep\", \"tests/test_build_linkcheck.py::test_limit_rate_user_max_delay\", \"tests/test_build_linkcheck.py::test_limit_rate_doubles_previous_wait_time\", \"tests/test_build_linkcheck.py::test_limit_rate_clips_wait_time_to_max_time\", \"tests/test_build_linkcheck.py::test_limit_rate_bails_out_after_waiting_max_time\"]",
  "environment_setup_commit": "9a2c3c4a1559e37e95fdee88c128bb116642c897",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.065108",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}