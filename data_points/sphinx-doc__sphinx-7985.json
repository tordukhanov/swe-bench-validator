{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-7985",
  "base_commit": "f30284ef926ebaf04b176f21b421e2dffc679792",
  "patch": "diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py\n--- a/sphinx/builders/linkcheck.py\n+++ b/sphinx/builders/linkcheck.py\n@@ -35,6 +35,8 @@\n \n logger = logging.getLogger(__name__)\n \n+uri_re = re.compile('[a-z]+://')\n+\n \n DEFAULT_REQUEST_HEADERS = {\n     'Accept': 'text/html,application/xhtml+xml;q=0.9,*/*;q=0.8',\n@@ -210,10 +212,21 @@ def check_uri() -> Tuple[str, str, int]:\n \n         def check() -> Tuple[str, str, int]:\n             # check for various conditions without bothering the network\n-            if len(uri) == 0 or uri.startswith(('#', 'mailto:', 'ftp:')):\n+            if len(uri) == 0 or uri.startswith(('#', 'mailto:')):\n                 return 'unchecked', '', 0\n             elif not uri.startswith(('http:', 'https:')):\n-                return 'local', '', 0\n+                if uri_re.match(uri):\n+                    # non supported URI schemes (ex. ftp)\n+                    return 'unchecked', '', 0\n+                else:\n+                    if path.exists(path.join(self.srcdir, uri)):\n+                        return 'working', '', 0\n+                    else:\n+                        for rex in self.to_ignore:\n+                            if rex.match(uri):\n+                                return 'ignored', '', 0\n+                        else:\n+                            return 'broken', '', 0\n             elif uri in self.good:\n                 return 'working', 'old', 0\n             elif uri in self.broken:\n",
  "test_patch": "diff --git a/tests/roots/test-linkcheck/links.txt b/tests/roots/test-linkcheck/links.txt\n--- a/tests/roots/test-linkcheck/links.txt\n+++ b/tests/roots/test-linkcheck/links.txt\n@@ -11,6 +11,8 @@ Some additional anchors to exercise ignore code\n * `Example Bar invalid <https://www.google.com/#top>`_\n * `Example anchor invalid <http://www.sphinx-doc.org/en/1.7/intro.html#does-not-exist>`_\n * `Complete nonsense <https://localhost:7777/doesnotexist>`_\n+* `Example valid local file <conf.py>`_\n+* `Example invalid local file <path/to/notfound>`_\n \n .. image:: https://www.google.com/image.png\n .. figure:: https://www.google.com/image2.png\ndiff --git a/tests/test_build_linkcheck.py b/tests/test_build_linkcheck.py\n--- a/tests/test_build_linkcheck.py\n+++ b/tests/test_build_linkcheck.py\n@@ -30,7 +30,9 @@ def test_defaults(app, status, warning):\n     # images should fail\n     assert \"Not Found for url: https://www.google.com/image.png\" in content\n     assert \"Not Found for url: https://www.google.com/image2.png\" in content\n-    assert len(content.splitlines()) == 5\n+    # looking for local file should fail\n+    assert \"[broken] path/to/notfound\" in content\n+    assert len(content.splitlines()) == 6\n \n \n @pytest.mark.sphinx('linkcheck', testroot='linkcheck', freshenv=True)\n@@ -47,8 +49,8 @@ def test_defaults_json(app, status, warning):\n                  \"info\"]:\n         assert attr in row\n \n-    assert len(content.splitlines()) == 8\n-    assert len(rows) == 8\n+    assert len(content.splitlines()) == 10\n+    assert len(rows) == 10\n     # the output order of the rows is not stable\n     # due to possible variance in network latency\n     rowsby = {row[\"uri\"]:row for row in rows}\n@@ -69,7 +71,7 @@ def test_defaults_json(app, status, warning):\n     assert dnerow['uri'] == 'https://localhost:7777/doesnotexist'\n     assert rowsby['https://www.google.com/image2.png'] == {\n         'filename': 'links.txt',\n-        'lineno': 16,\n+        'lineno': 18,\n         'status': 'broken',\n         'code': 0,\n         'uri': 'https://www.google.com/image2.png',\n@@ -92,7 +94,8 @@ def test_defaults_json(app, status, warning):\n                        'https://localhost:7777/doesnotexist',\n                        'http://www.sphinx-doc.org/en/1.7/intro.html#',\n                        'https://www.google.com/image.png',\n-                       'https://www.google.com/image2.png']\n+                       'https://www.google.com/image2.png',\n+                       'path/to/notfound']\n                    })\n def test_anchors_ignored(app, status, warning):\n     app.builder.build_all()\n",
  "problem_statement": "linkcheck could also check local (internal) links\nSubject: linkcheck currently doesn't check local (internal) links, but this would be useful.\r\n\r\n<!--\r\n  Important: This is a list of issues for Sphinx, not a forum.\r\n  If you'd like to post a question, please move to sphinx-users group.\r\n  https://groups.google.com/forum/#!forum/sphinx-users\r\n\r\n  Thanks,\r\n-->\r\n\r\n### Problem\r\nSee above.\r\n\r\n#### Procedure to reproduce the problem\r\nCreate a template project with sphinx-quickstart, put the following in index.rst\r\n```\r\nbroken external-link_\r\nbroken local-link_\r\n\r\n.. _external-link: https://lkfqhlkghflkhs\r\n.. _local-link: doesntexist\r\n```\r\n\r\nRun `make linkcheck`\r\n\r\n#### Error logs / results\r\n```\r\nRunning Sphinx v1.7.6\r\nmaking output directory...\r\nloading pickled environment... done\r\nbuilding [mo]: targets for 0 po files that are out of date\r\nbuilding [linkcheck]: targets for 1 source files that are out of date\r\nupdating environment: 0 added, 0 changed, 0 removed\r\nlooking for now-outdated files... none found\r\npreparing documents... done\r\nwriting output... [100%] index                                                                   \r\n(line   14) -local-   doesntexist\r\n(line   14) broken    https://lkfqhlkghflkhs - HTTPSConnectionPool(host='lkfqhlkghflkhs', port=443): Max retries exceeded with url: / (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x7faed7ddfc88>: Failed to establish a new connection: [Errno -2] Name or service not known',))\r\n\r\nbuild finished with problems.\r\nmake: *** [Makefile:20: linkcheck] Error 1\r\n```\r\n\r\n#### Expected results\r\nAlso a check for the local link.\r\n\r\n### Reproducible project / your project\r\nN/A\r\n\r\n### Environment info\r\n- OS: Arch Linux\r\n- Python version: 3.6\r\n- Sphinx version: 1.7.6\r\n\n",
  "hints_text": "+0: It might be useful. But all we can check is only inside sphinx-document. If users copy extra file in deploy script, we'll misdetect broken links. And it is hard if local hyperlink is absolute path. We don't know where the document will be placed.\nAt least this could be an optional feature; I'd guess there are a lot of sphinx deployments which do not add anything manually and just stick to what sphinx generates.\nAgreed. I also believe it is useful.",
  "created_at": "2020-07-19T10:09:07Z",
  "version": "3.2",
  "FAIL_TO_PASS": "[\"tests/test_build_linkcheck.py::test_defaults\", \"tests/test_build_linkcheck.py::test_anchors_ignored\"]",
  "PASS_TO_PASS": "[\"tests/test_build_linkcheck.py::test_defaults_json\", \"tests/test_build_linkcheck.py::test_auth\", \"tests/test_build_linkcheck.py::test_linkcheck_request_headers\"]",
  "environment_setup_commit": "f92fa6443fe6f457ab0c26d41eb229e825fda5e1",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.049324",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}