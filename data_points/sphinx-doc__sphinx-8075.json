{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-8075",
  "base_commit": "487b8436c6e8dc596db4b8d4d06e9145105a2ac2",
  "patch": "diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py\n--- a/sphinx/domains/std.py\n+++ b/sphinx/domains/std.py\n@@ -610,8 +610,6 @@ class StandardDomain(Domain):\n \n     dangling_warnings = {\n         'term': 'term not in glossary: %(target)s',\n-        'ref':  'undefined label: %(target)s (if the link has no caption '\n-                'the label must precede a section header)',\n         'numref':  'undefined label: %(target)s',\n         'keyword': 'unknown keyword: %(target)s',\n         'doc': 'unknown document: %(target)s',\n@@ -1107,8 +1105,23 @@ def note_labels(self, env: \"BuildEnvironment\", docname: str, document: nodes.doc\n                       RemovedInSphinx40Warning, stacklevel=2)\n \n \n+def warn_missing_reference(app: \"Sphinx\", domain: Domain, node: pending_xref) -> bool:\n+    if domain.name != 'std' or node['reftype'] != 'ref':\n+        return None\n+    else:\n+        target = node['reftarget']\n+        if target not in domain.anonlabels:  # type: ignore\n+            msg = __('undefined label: %s')\n+        else:\n+            msg = __('Failed to create a cross reference. A title or caption not found: %s')\n+\n+        logger.warning(msg % target, location=node, type='ref', subtype=node['reftype'])\n+        return True\n+\n+\n def setup(app: \"Sphinx\") -> Dict[str, Any]:\n     app.add_domain(StandardDomain)\n+    app.connect('warn-missing-reference', warn_missing_reference)\n \n     return {\n         'version': 'builtin',\ndiff --git a/sphinx/events.py b/sphinx/events.py\n--- a/sphinx/events.py\n+++ b/sphinx/events.py\n@@ -46,6 +46,7 @@\n     'doctree-read': 'the doctree before being pickled',\n     'env-merge-info': 'env, read docnames, other env instance',\n     'missing-reference': 'env, node, contnode',\n+    'warn-missing-reference': 'domain, node',\n     'doctree-resolved': 'doctree, docname',\n     'env-updated': 'env',\n     'html-collect-pages': 'builder',\ndiff --git a/sphinx/transforms/post_transforms/__init__.py b/sphinx/transforms/post_transforms/__init__.py\n--- a/sphinx/transforms/post_transforms/__init__.py\n+++ b/sphinx/transforms/post_transforms/__init__.py\n@@ -166,7 +166,10 @@ def warn_missing_reference(self, refdoc: str, typ: str, target: str,\n                     warn = False\n         if not warn:\n             return\n-        if domain and typ in domain.dangling_warnings:\n+\n+        if self.app.emit_firstresult('warn-missing-reference', domain, node):\n+            return\n+        elif domain and typ in domain.dangling_warnings:\n             msg = domain.dangling_warnings[typ]\n         elif node.get('refdomain', 'std') not in ('', 'std'):\n             msg = (__('%s:%s reference target not found: %%(target)s') %\n",
  "test_patch": "diff --git a/tests/roots/test-domain-py-xref-warning/conf.py b/tests/roots/test-domain-py-xref-warning/conf.py\nnew file mode 100644\ndiff --git a/tests/roots/test-domain-py-xref-warning/index.rst b/tests/roots/test-domain-py-xref-warning/index.rst\nnew file mode 100644\n--- /dev/null\n+++ b/tests/roots/test-domain-py-xref-warning/index.rst\n@@ -0,0 +1,7 @@\n+test-domain-py-xref-warning\n+===========================\n+\n+.. _existing-label:\n+\n+:ref:`no-label`\n+:ref:`existing-label`\ndiff --git a/tests/test_domain_py.py b/tests/test_domain_py.py\n--- a/tests/test_domain_py.py\n+++ b/tests/test_domain_py.py\n@@ -859,3 +859,11 @@ def test_noindexentry(app):\n     assert_node(doctree, (addnodes.index, desc, addnodes.index, desc))\n     assert_node(doctree[0], addnodes.index, entries=[('single', 'f (built-in class)', 'f', '', None)])\n     assert_node(doctree[2], addnodes.index, entries=[])\n+\n+\n+@pytest.mark.sphinx('dummy', testroot='domain-py-xref-warning')\n+def test_warn_missing_reference(app, status, warning):\n+    app.build()\n+    assert 'index.rst:6: WARNING: undefined label: no-label' in warning.getvalue()\n+    assert ('index.rst:6: WARNING: Failed to create a cross reference. A title or caption not found: existing-label'\n+            in warning.getvalue())\n",
  "problem_statement": "References to figures without captions: errors in both HTML and LaTeX\n\r\n**Describe the bug**\r\nUsing figures without captions causes errors in both HTML (though these are properly reported when source is processed) and in LaTeX (they are not reported until LaTeX says there were undefined references).\r\n\r\nThis was the test document, compiled with sphinx 2.2.2 from pypi; `numfig=True` was added to conf.py, the project was otherwise generated with sphinx-build with no other changes. It is attached here: [sphinx-captions.zip](https://github.com/sphinx-doc/sphinx/files/3947135/sphinx-captions.zip)\r\n\r\n```\r\nWelcome to foo's documentation!\r\n===============================\r\n\r\nReferences:\r\n\r\n* figure without caption\r\n\r\n   * plain reference :ref:`fig-sample-nocaption` (error: HTML, LaTeX)\r\n   * named reference :ref:`figure without caption <fig-sample-nocaption>` (error: LaTeX)\r\n   * numbered reference :numref:`fig-sample-nocaption` (error: LaTeX)\r\n\r\n* figure with caption\r\n\r\n   * plain reference :ref:`fig-sample-caption`\r\n   * named reference :ref:`figure without caption <fig-sample-caption>`\r\n   * numbered reference :numref:`fig-sample-caption`\r\n\r\n.. _fig-sample-nocaption:\r\n.. figure:: sample.png\r\n\r\n\r\n.. _fig-sample-caption:\r\n.. figure:: sample.png\r\n   \r\n   This is some caption.\r\n```\r\n\r\nand these are the results:\r\n\r\n1. misleading warning: **index.rst:8: WARNING: undefined label: fig-sample-nocaption (if the link has no caption the label must precede a section header)**\r\n2. this is HTML output (the error highlighted corresponds to the warning mentioned above):\r\n![html output](https://user-images.githubusercontent.com/1029876/70568432-2b150c00-1b98-11ea-98ac-67e7fbc23927.png)\r\n3. this is LaTeX (pdflatex) output:\r\n```\r\nLaTeX Warning: Hyper reference `index:fig-sample-nocaption' on page 1 undefined\r\n on input line 99.\r\nLaTeX Warning: Hyper reference `index:fig-sample-nocaption' on page 1 undefined\r\n on input line 102.\r\n```\r\n![latex output](https://user-images.githubusercontent.com/1029876/70568602-7fb88700-1b98-11ea-85bd-b7b6fec93e41.png)\r\n\r\n**Expected behavior**\r\nI expect\r\n1. sphinx to produce valid LaTeX input without undefined references;\r\n2. uncaptioned figures to be referencable in LaTeX (this could be an optional setting perhaps causing uncaptioned figured to produce only \"Figure 4.1.\" caption);\r\n3. warning about figure not being captioned to be more meaningful -- I understand that non-numbered figure cannot be referenced via :ref:`label` (as the label will not resolve to any text) but the warning is not pointing to how to fix the issue.\r\n\r\n**Environment info**\r\n- OS: Ubuntu 18.04 LTS\r\n- Python version: 3.6.8\r\n- Sphinx version: 2.2.2\r\n- Sphinx extensions: none\r\n- Extra tools: pdflatex TeXLive\r\n\n",
  "hints_text": "",
  "created_at": "2020-08-08T11:20:59Z",
  "version": "3.4",
  "FAIL_TO_PASS": "[\"tests/test_domain_py.py::test_warn_missing_reference\"]",
  "PASS_TO_PASS": "[\"tests/test_domain_py.py::test_function_signatures\", \"tests/test_domain_py.py::test_domain_py_xrefs\", \"tests/test_domain_py.py::test_domain_py_objects\", \"tests/test_domain_py.py::test_resolve_xref_for_properties\", \"tests/test_domain_py.py::test_domain_py_find_obj\", \"tests/test_domain_py.py::test_get_full_qualified_name\", \"tests/test_domain_py.py::test_parse_annotation\", \"tests/test_domain_py.py::test_pyfunction_signature\", \"tests/test_domain_py.py::test_pyfunction_signature_full\", \"tests/test_domain_py.py::test_pyfunction_signature_full_py38\", \"tests/test_domain_py.py::test_pyfunction_with_number_literals\", \"tests/test_domain_py.py::test_optional_pyfunction_signature\", \"tests/test_domain_py.py::test_pyexception_signature\", \"tests/test_domain_py.py::test_exceptions_module_is_ignored\", \"tests/test_domain_py.py::test_pydata_signature\", \"tests/test_domain_py.py::test_pydata_signature_old\", \"tests/test_domain_py.py::test_pyobject_prefix\", \"tests/test_domain_py.py::test_pydata\", \"tests/test_domain_py.py::test_pyfunction\", \"tests/test_domain_py.py::test_pyclass_options\", \"tests/test_domain_py.py::test_pymethod_options\", \"tests/test_domain_py.py::test_pyclassmethod\", \"tests/test_domain_py.py::test_pystaticmethod\", \"tests/test_domain_py.py::test_pyattribute\", \"tests/test_domain_py.py::test_pydecorator_signature\", \"tests/test_domain_py.py::test_pydecoratormethod_signature\", \"tests/test_domain_py.py::test_module_index\", \"tests/test_domain_py.py::test_module_index_submodule\", \"tests/test_domain_py.py::test_module_index_not_collapsed\", \"tests/test_domain_py.py::test_modindex_common_prefix\", \"tests/test_domain_py.py::test_noindexentry\"]",
  "environment_setup_commit": "3f560cd67239f75840cc7a439ab54d8509c855f6",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.051403",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}