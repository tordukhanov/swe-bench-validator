{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-20476",
  "base_commit": "dbd720ac7d0070f005e66002314b5edce77b6bba",
  "patch": "diff --git a/sympy/simplify/fu.py b/sympy/simplify/fu.py\n--- a/sympy/simplify/fu.py\n+++ b/sympy/simplify/fu.py\n@@ -1180,7 +1180,6 @@ def f(rv, first=True):\n         for a in args:\n             c = args[a]\n             c.sort()\n-            no = []\n             while c:\n                 k = 0\n                 cc = ci = c[0]\n@@ -1206,8 +1205,8 @@ def f(rv, first=True):\n                             c.remove(cc)\n                     new.append(newarg**take)\n                 else:\n-                    no.append(c.pop(0))\n-            c[:] = no\n+                    b = cos(c.pop(0)*a)\n+                    other.append(b**coss[b])\n \n         if new:\n             rv = Mul(*(new + other + [\n",
  "test_patch": "diff --git a/sympy/simplify/tests/test_fu.py b/sympy/simplify/tests/test_fu.py\n--- a/sympy/simplify/tests/test_fu.py\n+++ b/sympy/simplify/tests/test_fu.py\n@@ -352,6 +352,9 @@ def test_TRmorrie():\n     # issue 17063\n     eq = cos(x)/cos(x/2)\n     assert TRmorrie(eq) == eq\n+    # issue #20430\n+    eq = cos(x/2)*sin(x/2)*cos(x)**3\n+    assert TRmorrie(eq) == sin(2*x)*cos(x)**2/4\n \n \n def test_TRpower():\n",
  "problem_statement": "simplify() returns wrong result when applied to a certain trigonometric expression\nThe `simplify()` function from sympy returns a wrong result when applied to the following trigonometric expression:\r\n\r\n<img src=\"https://render.githubusercontent.com/render/math?math=\\cos\\left(\\frac{\\beta}{2}\\right) \\sin\\left(\\frac{\\beta}{2}\\right) \\cos(\\beta) \\cos(\\gamma)^2 \\sin(\\gamma)\">\r\n\r\nThe latter gets simplified to:\r\n\r\n<img src=\"https://render.githubusercontent.com/render/math?math=\\frac{\\cos(2\\beta - 2\\gamma) - \\cos(2\\beta %2B 2\\gamma)}{16}\">\r\n\r\ninstead of:\r\n\r\n<img src=\"https://render.githubusercontent.com/render/math?math=\\cos(\\gamma)\\frac{\\cos(2\\beta - 2\\gamma) - \\cos(2\\beta %2B 2\\gamma)}{16}\">\r\n\r\nHere is a piece of code that reproduces the issue:\r\n```python\r\nfrom sympy import cos, simplify, sin, symbols\r\n\r\nbeta, gamma = symbols(\"\\\\beta \\gamma\", real=True)\r\nexpression = cos(beta / 2) * sin(beta / 2) * cos(beta) * cos(gamma) ** 2 * sin(gamma)\r\nsimplified_expression = simplify(expression)\r\nprint(expression)\r\nprint(simplified_expression)\r\n```\r\n\r\n**Python version**: 3.8\r\n**SymPy version**: 1.6.2\r\n\r\n\nsimplify() returns wrong result when applied to a certain trigonometric expression\nThe `simplify()` function from sympy returns a wrong result when applied to the following trigonometric expression:\r\n\r\n<img src=\"https://render.githubusercontent.com/render/math?math=\\cos\\left(\\frac{\\beta}{2}\\right) \\sin\\left(\\frac{\\beta}{2}\\right) \\cos(\\beta) \\cos(\\gamma)^2 \\sin(\\gamma)\">\r\n\r\nThe latter gets simplified to:\r\n\r\n<img src=\"https://render.githubusercontent.com/render/math?math=\\frac{\\cos(2\\beta - 2\\gamma) - \\cos(2\\beta %2B 2\\gamma)}{16}\">\r\n\r\ninstead of:\r\n\r\n<img src=\"https://render.githubusercontent.com/render/math?math=\\cos(\\gamma)\\frac{\\cos(2\\beta - 2\\gamma) - \\cos(2\\beta %2B 2\\gamma)}{16}\">\r\n\r\nHere is a piece of code that reproduces the issue:\r\n```python\r\nfrom sympy import cos, simplify, sin, symbols\r\n\r\nbeta, gamma = symbols(\"\\\\beta \\gamma\", real=True)\r\nexpression = cos(beta / 2) * sin(beta / 2) * cos(beta) * cos(gamma) ** 2 * sin(gamma)\r\nsimplified_expression = simplify(expression)\r\nprint(expression)\r\nprint(simplified_expression)\r\n```\r\n\r\n**Python version**: 3.8\r\n**SymPy version**: 1.6.2\r\n\r\n\n",
  "hints_text": "TRmorrie is ignoring the power on the `cos(g)` factor. The fix might be\r\n```diff\r\ndiff --git a/sympy/simplify/fu.py b/sympy/simplify/fu.py\r\nindex 7fce72d38a..b9f0e39a75 100644\r\n--- a/sympy/simplify/fu.py\r\n+++ b/sympy/simplify/fu.py\r\n@@ -1206,8 +1206,8 @@ def f(rv, first=True):\r\n                             c.remove(cc)\r\n                     new.append(newarg**take)\r\n                 else:\r\n-                    no.append(c.pop(0))\r\n-            c[:] = no\r\n+                    b = cos(c.pop()*a)\r\n+                    other.append(b**coss[b])\r\n\r\n         if new:\r\n             rv = Mul(*(new + other + [\r\n```\r\n\r\n\nTRmorrie is ignoring the power on the `cos(g)` factor. The fix might be\r\n```diff\r\ndiff --git a/sympy/simplify/fu.py b/sympy/simplify/fu.py\r\nindex 7fce72d38a..b9f0e39a75 100644\r\n--- a/sympy/simplify/fu.py\r\n+++ b/sympy/simplify/fu.py\r\n@@ -1206,8 +1206,8 @@ def f(rv, first=True):\r\n                             c.remove(cc)\r\n                     new.append(newarg**take)\r\n                 else:\r\n-                    no.append(c.pop(0))\r\n-            c[:] = no\r\n+                    b = cos(c.pop()*a)\r\n+                    other.append(b**coss[b])\r\n\r\n         if new:\r\n             rv = Mul(*(new + other + [\r\n```\r\n\r\n",
  "created_at": "2020-11-23T06:24:43Z",
  "version": "1.8",
  "FAIL_TO_PASS": "[\"test_TRmorrie\"]",
  "PASS_TO_PASS": "[\"test_TR1\", \"test_TR2\", \"test_TR2i\", \"test_TR3\", \"test__TR56\", \"test_TR5\", \"test_TR6\", \"test_TR7\", \"test_TR8\", \"test_TR9\", \"test_TR10\", \"test_TR10i\", \"test_TR11\", \"test__TR11\", \"test_TR12\", \"test_TR13\", \"test_L\", \"test_fu\", \"test_objective\", \"test_process_common_addends\", \"test_trig_split\", \"test_TRpower\", \"test_hyper_as_trig\", \"test_TR12i\", \"test_TR14\", \"test_TR15_16_17\"]",
  "environment_setup_commit": "3ac1464b8840d5f8b618a654f9fbf09c452fe969",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.138645",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}