{
  "repo": "scikit-learn/scikit-learn",
  "instance_id": "scikit-learn__scikit-learn-14732",
  "base_commit": "ad0e9a97a6a1e844dafb3ec2b31f3b22b8119c91",
  "patch": "diff --git a/sklearn/metrics/regression.py b/sklearn/metrics/regression.py\n--- a/sklearn/metrics/regression.py\n+++ b/sklearn/metrics/regression.py\n@@ -330,23 +330,38 @@ def mean_squared_log_error(y_true, y_pred,\n                               sample_weight, multioutput)\n \n \n-def median_absolute_error(y_true, y_pred):\n+def median_absolute_error(y_true, y_pred, multioutput='uniform_average'):\n     \"\"\"Median absolute error regression loss\n \n-    Read more in the :ref:`User Guide <median_absolute_error>`.\n+    Median absolute error output is non-negative floating point. The best value\n+    is 0.0. Read more in the :ref:`User Guide <median_absolute_error>`.\n \n     Parameters\n     ----------\n-    y_true : array-like of shape (n_samples,)\n+    y_true : array-like of shape = (n_samples) or (n_samples, n_outputs)\n         Ground truth (correct) target values.\n \n-    y_pred : array-like of shape (n_samples,)\n+    y_pred : array-like of shape = (n_samples) or (n_samples, n_outputs)\n         Estimated target values.\n \n+    multioutput : {'raw_values', 'uniform_average'} or array-like of shape\n+        (n_outputs,)\n+        Defines aggregating of multiple output values. Array-like value defines\n+        weights used to average errors.\n+\n+        'raw_values' :\n+            Returns a full set of errors in case of multioutput input.\n+\n+        'uniform_average' :\n+            Errors of all outputs are averaged with uniform weight.\n+\n     Returns\n     -------\n-    loss : float\n-        A positive floating point value (the best value is 0.0).\n+    loss : float or ndarray of floats\n+        If multioutput is 'raw_values', then mean absolute error is returned\n+        for each output separately.\n+        If multioutput is 'uniform_average' or an ndarray of weights, then the\n+        weighted average of all output errors is returned.\n \n     Examples\n     --------\n@@ -355,12 +370,27 @@ def median_absolute_error(y_true, y_pred):\n     >>> y_pred = [2.5, 0.0, 2, 8]\n     >>> median_absolute_error(y_true, y_pred)\n     0.5\n+    >>> y_true = [[0.5, 1], [-1, 1], [7, -6]]\n+    >>> y_pred = [[0, 2], [-1, 2], [8, -5]]\n+    >>> median_absolute_error(y_true, y_pred)\n+    0.75\n+    >>> median_absolute_error(y_true, y_pred, multioutput='raw_values')\n+    array([0.5, 1. ])\n+    >>> median_absolute_error(y_true, y_pred, multioutput=[0.3, 0.7])\n+    0.85\n \n     \"\"\"\n-    y_type, y_true, y_pred, _ = _check_reg_targets(y_true, y_pred, None)\n-    if y_type == 'continuous-multioutput':\n-        raise ValueError(\"Multioutput not supported in median_absolute_error\")\n-    return np.median(np.abs(y_pred - y_true))\n+    y_type, y_true, y_pred, multioutput = _check_reg_targets(\n+        y_true, y_pred, multioutput)\n+    output_errors = np.median(np.abs(y_pred - y_true), axis=0)\n+    if isinstance(multioutput, str):\n+        if multioutput == 'raw_values':\n+            return output_errors\n+        elif multioutput == 'uniform_average':\n+            # pass None as weights to np.average: uniform mean\n+            multioutput = None\n+\n+    return np.average(output_errors, weights=multioutput)\n \n \n def explained_variance_score(y_true, y_pred,\n",
  "test_patch": "diff --git a/sklearn/metrics/tests/test_common.py b/sklearn/metrics/tests/test_common.py\n--- a/sklearn/metrics/tests/test_common.py\n+++ b/sklearn/metrics/tests/test_common.py\n@@ -426,8 +426,8 @@ def precision_recall_curve_padded_thresholds(*args, **kwargs):\n \n # Regression metrics with \"multioutput-continuous\" format support\n MULTIOUTPUT_METRICS = {\n-    \"mean_absolute_error\", \"mean_squared_error\", \"r2_score\",\n-    \"explained_variance_score\"\n+    \"mean_absolute_error\", \"median_absolute_error\", \"mean_squared_error\",\n+    \"r2_score\", \"explained_variance_score\"\n }\n \n # Symmetric with respect to their input arguments y_true and y_pred\ndiff --git a/sklearn/metrics/tests/test_regression.py b/sklearn/metrics/tests/test_regression.py\n--- a/sklearn/metrics/tests/test_regression.py\n+++ b/sklearn/metrics/tests/test_regression.py\n@@ -74,6 +74,9 @@ def test_multioutput_regression():\n     error = mean_absolute_error(y_true, y_pred)\n     assert_almost_equal(error, (1. + 2. / 3) / 4.)\n \n+    error = median_absolute_error(y_true, y_pred)\n+    assert_almost_equal(error, (1. + 1.) / 4.)\n+\n     error = r2_score(y_true, y_pred, multioutput='variance_weighted')\n     assert_almost_equal(error, 1. - 5. / 2)\n     error = r2_score(y_true, y_pred, multioutput='uniform_average')\n",
  "problem_statement": "median_absolute_error multioutput\nMultioutput is not currently supported in `median_absolute_error`. Is this a design choice or has it just not been implemented yet? In case of the latter, I am happy to submit a PR. \r\n\n",
  "hints_text": "pretty sure it's just not implemented\nThanks @amueller -- I will have a stab at it soon.",
  "created_at": "2019-08-22T21:59:40Z",
  "version": "0.22",
  "FAIL_TO_PASS": "[\"sklearn/metrics/tests/test_common.py::test_sample_order_invariance_multilabel_and_multioutput\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[median_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_multioutput_regression_invariance_to_dimension_shuffling[median_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[median_absolute_error]\", \"sklearn/metrics/tests/test_regression.py::test_multioutput_regression\"]",
  "PASS_TO_PASS": "[\"sklearn/metrics/tests/test_common.py::test_symmetry_consistency\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[cohen_kappa_score]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[f1_score]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[hamming_loss]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[macro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[macro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[matthews_corrcoef_score]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[max_error]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[mean_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[mean_normal_deviance]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[mean_squared_error]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[median_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[micro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[micro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[micro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[micro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[micro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[micro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[samples_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[unnormalized_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[unnormalized_zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[weighted_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_symmetric_metric[zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[adjusted_balanced_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[balanced_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[explained_variance_score]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[f2_score]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[hinge_loss]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[log_loss]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[macro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[macro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[macro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[macro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[mean_compound_poisson_deviance]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[mean_gamma_deviance]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[mean_poisson_deviance]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[normalized_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[precision_recall_curve]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[precision_score]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[r2_score]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[recall_score]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[roc_curve]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[unnormalized_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[unnormalized_multilabel_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[weighted_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[weighted_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[weighted_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[weighted_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_not_symmetric_metric[weighted_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[adjusted_balanced_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[balanced_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[cohen_kappa_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[explained_variance_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[hamming_loss]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[hinge_loss]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[log_loss]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[macro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[macro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[macro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[macro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[macro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[macro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[matthews_corrcoef_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[max_error]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[mean_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[mean_compound_poisson_deviance]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[mean_gamma_deviance]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[mean_normal_deviance]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[mean_poisson_deviance]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[mean_squared_error]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[median_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[micro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[micro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[micro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[micro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[micro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[micro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[normalized_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[ovo_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[ovr_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[r2_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[unnormalized_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[unnormalized_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[unnormalized_log_loss]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[unnormalized_multilabel_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[unnormalized_zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[weighted_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[weighted_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[weighted_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[weighted_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[weighted_ovo_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[weighted_ovr_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[weighted_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[weighted_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_sample_order_invariance[zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[adjusted_balanced_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[balanced_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[cohen_kappa_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[explained_variance_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[hamming_loss]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[hinge_loss]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[log_loss]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[macro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[macro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[macro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[macro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[macro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[macro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[matthews_corrcoef_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[max_error]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[mean_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[mean_compound_poisson_deviance]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[mean_gamma_deviance]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[mean_normal_deviance]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[mean_poisson_deviance]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[mean_squared_error]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[median_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[micro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[micro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[micro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[micro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[micro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[micro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[normalized_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[ovo_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[ovr_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[r2_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[unnormalized_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[unnormalized_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[unnormalized_log_loss]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[unnormalized_multilabel_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[unnormalized_zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[weighted_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[weighted_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[weighted_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[weighted_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[weighted_ovo_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[weighted_ovr_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[weighted_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[weighted_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_format_invariance_with_1d_vectors[zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[adjusted_balanced_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[balanced_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[cohen_kappa_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[hamming_loss]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[macro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[macro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[macro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[macro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[macro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[macro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[matthews_corrcoef_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[micro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[micro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[micro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[micro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[micro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[micro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[normalized_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[unnormalized_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[unnormalized_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[unnormalized_multilabel_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[unnormalized_zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[weighted_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[weighted_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[weighted_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[weighted_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[weighted_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[weighted_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_invariance_string_vs_numbers_labels[zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[coverage_error]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[label_ranking_loss]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[log_loss]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[unnormalized_log_loss]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[hinge_loss]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[brier_score_loss]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[roc_auc_score]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[weighted_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[samples_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[micro_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[ovr_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[weighted_ovr_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[ovo_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[weighted_ovo_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[partial_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[weighted_average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[samples_average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[micro_average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[label_ranking_average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[ndcg_score]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_invariance_string_vs_numbers_labels[dcg_score]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[coverage_error]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[label_ranking_loss]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[log_loss]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[metric3]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[hinge_loss]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[brier_score_loss]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[roc_auc_score]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[metric7]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[metric8]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[metric9]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[metric10]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[metric11]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[metric12]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[metric13]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[metric14]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[metric16]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[metric17]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[metric18]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[label_ranking_average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[ndcg_score]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[dcg_score]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[max_error]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[mean_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[mean_squared_error]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[median_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[explained_variance_score]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[metric27]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[metric28]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[mean_poisson_deviance]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[mean_gamma_deviance]\", \"sklearn/metrics/tests/test_common.py::test_regression_thresholded_inf_nan_input[metric31]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[balanced_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric2]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric3]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[<lambda>]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[multilabel_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric7]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[hamming_loss]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric10]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[precision_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[recall_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[f1_score]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric15]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric16]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[matthews_corrcoef]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric18]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric19]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric20]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric21]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric22]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric23]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric24]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric25]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric26]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric27]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric28]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric29]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric30]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric31]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric32]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric33]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric34]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric35]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric36]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric37]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric38]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric39]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric40]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[metric41]\", \"sklearn/metrics/tests/test_common.py::test_classification_inf_nan_input[cohen_kappa_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[adjusted_balanced_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[balanced_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[cohen_kappa_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[explained_variance_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[hamming_loss]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[macro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[macro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[macro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[macro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[macro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[macro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[matthews_corrcoef_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[max_error]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[mean_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[mean_compound_poisson_deviance]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[mean_gamma_deviance]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[mean_normal_deviance]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[mean_poisson_deviance]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[mean_squared_error]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[median_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[micro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[micro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[micro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[micro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[micro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[micro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[normalized_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[r2_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[unnormalized_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[unnormalized_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[unnormalized_multilabel_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[unnormalized_zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[weighted_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[weighted_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[weighted_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[weighted_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[weighted_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[weighted_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample[zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[explained_variance_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[hamming_loss]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[macro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[macro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[macro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[macro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[macro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[macro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[mean_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[mean_squared_error]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[micro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[micro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[micro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[micro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[micro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[micro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[r2_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[samples_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[samples_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[samples_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[samples_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[samples_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[samples_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[unnormalized_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[unnormalized_multilabel_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[unnormalized_zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[weighted_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[weighted_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[weighted_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[weighted_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[weighted_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[weighted_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_single_sample_multioutput[zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_multioutput_number_of_output_differ[explained_variance_score]\", \"sklearn/metrics/tests/test_common.py::test_multioutput_number_of_output_differ[mean_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_multioutput_number_of_output_differ[mean_squared_error]\", \"sklearn/metrics/tests/test_common.py::test_multioutput_number_of_output_differ[median_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_multioutput_number_of_output_differ[r2_score]\", \"sklearn/metrics/tests/test_common.py::test_multioutput_regression_invariance_to_dimension_shuffling[explained_variance_score]\", \"sklearn/metrics/tests/test_common.py::test_multioutput_regression_invariance_to_dimension_shuffling[mean_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_multioutput_regression_invariance_to_dimension_shuffling[mean_squared_error]\", \"sklearn/metrics/tests/test_common.py::test_multioutput_regression_invariance_to_dimension_shuffling[r2_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_representation_invariance\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[hamming_loss]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[macro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[macro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[macro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[macro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[macro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[macro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[micro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[micro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[micro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[micro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[micro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[micro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[samples_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[samples_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[samples_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[samples_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[samples_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[samples_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[unnormalized_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[unnormalized_multilabel_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[unnormalized_zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[weighted_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[weighted_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[weighted_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[weighted_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[weighted_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[weighted_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_raise_value_error_multilabel_sequences[zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_normalize_option_binary_classification[accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_normalize_option_binary_classification[zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_normalize_option_multiclass_classification[accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_normalize_option_multiclass_classification[zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_normalize_option_multilabel_classification\", \"sklearn/metrics/tests/test_common.py::test_averaging_multiclass[f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multiclass[f1_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multiclass[f2_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multiclass[jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multiclass[precision_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multiclass[recall_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel[average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel[f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel[f1_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel[f2_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel[jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel[partial_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel[precision_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel[recall_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel[roc_auc_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel_all_zeroes[f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel_all_zeroes[f1_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel_all_zeroes[f2_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel_all_zeroes[jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel_all_zeroes[precision_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel_all_zeroes[recall_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_binary_multilabel_all_zeroes\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel_all_ones[f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel_all_ones[f1_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel_all_ones[f2_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel_all_ones[jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel_all_ones[precision_score]\", \"sklearn/metrics/tests/test_common.py::test_averaging_multilabel_all_ones[recall_score]\", \"sklearn/metrics/tests/test_common.py::test_regression_sample_weight_invariance[explained_variance_score]\", \"sklearn/metrics/tests/test_common.py::test_regression_sample_weight_invariance[mean_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_regression_sample_weight_invariance[mean_compound_poisson_deviance]\", \"sklearn/metrics/tests/test_common.py::test_regression_sample_weight_invariance[mean_gamma_deviance]\", \"sklearn/metrics/tests/test_common.py::test_regression_sample_weight_invariance[mean_normal_deviance]\", \"sklearn/metrics/tests/test_common.py::test_regression_sample_weight_invariance[mean_poisson_deviance]\", \"sklearn/metrics/tests/test_common.py::test_regression_sample_weight_invariance[mean_squared_error]\", \"sklearn/metrics/tests/test_common.py::test_regression_sample_weight_invariance[r2_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[adjusted_balanced_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[balanced_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[brier_score_loss]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[cohen_kappa_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[f1_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[f2_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[hamming_loss]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[hinge_loss]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[log_loss]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[macro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[macro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[macro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[macro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[macro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[macro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[matthews_corrcoef_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[micro_average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[micro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[micro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[micro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[micro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[micro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[micro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[micro_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[normalized_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[ovr_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[partial_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[precision_recall_curve]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[precision_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[recall_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[roc_auc_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[roc_curve]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[samples_average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[samples_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[unnormalized_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[unnormalized_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[unnormalized_log_loss]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[unnormalized_multilabel_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[unnormalized_zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[weighted_average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[weighted_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[weighted_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[weighted_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[weighted_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[weighted_ovr_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[weighted_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[weighted_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[weighted_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_binary_sample_weight_invariance[zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[adjusted_balanced_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[balanced_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[cohen_kappa_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[hamming_loss]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[hinge_loss]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[log_loss]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[macro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[macro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[macro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[macro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[macro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[macro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[matthews_corrcoef_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[micro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[micro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[micro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[micro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[micro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[micro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[normalized_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[ovr_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[unnormalized_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[unnormalized_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[unnormalized_log_loss]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[unnormalized_multilabel_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[unnormalized_zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[weighted_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[weighted_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[weighted_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[weighted_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[weighted_ovr_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[weighted_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[weighted_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_multiclass_sample_weight_invariance[zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[coverage_error]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[dcg_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[explained_variance_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[hamming_loss]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[label_ranking_average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[label_ranking_loss]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[log_loss]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[macro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[macro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[macro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[macro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[macro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[macro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[mean_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[mean_squared_error]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[micro_average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[micro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[micro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[micro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[micro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[micro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[micro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[micro_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[ndcg_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[partial_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[r2_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[roc_auc_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[samples_average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[samples_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[samples_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[samples_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[samples_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[samples_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[samples_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[samples_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[unnormalized_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[unnormalized_log_loss]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[unnormalized_multilabel_confusion_matrix]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[unnormalized_zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[weighted_average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[weighted_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[weighted_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[weighted_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[weighted_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[weighted_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[weighted_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[weighted_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_sample_weight_invariance[zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_no_averaging_labels\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[hamming_loss]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[macro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[macro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[macro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[macro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[macro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[macro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[micro_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[micro_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[micro_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[micro_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[micro_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[micro_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[samples_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[samples_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[samples_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[samples_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[samples_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[samples_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[unnormalized_accuracy_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[unnormalized_zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[weighted_f0.5_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[weighted_f1_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[weighted_f2_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[weighted_jaccard_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[weighted_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[weighted_recall_score]\", \"sklearn/metrics/tests/test_common.py::test_multilabel_label_permutations_invariance[zero_one_loss]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[coverage_error]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[dcg_score]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[explained_variance_score]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[label_ranking_average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[label_ranking_loss]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[log_loss]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[mean_absolute_error]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[mean_squared_error]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[micro_average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[micro_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[ndcg_score]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[partial_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[r2_score]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[roc_auc_score]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[samples_average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[samples_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[unnormalized_log_loss]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[weighted_average_precision_score]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_multilabel_multioutput_permutations_invariance[weighted_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_metric_permutation_invariance[hinge_loss]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_metric_permutation_invariance[log_loss]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_metric_permutation_invariance[ovo_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_metric_permutation_invariance[ovr_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_metric_permutation_invariance[unnormalized_log_loss]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_metric_permutation_invariance[weighted_ovo_roc_auc]\", \"sklearn/metrics/tests/test_common.py::test_thresholded_metric_permutation_invariance[weighted_ovr_roc_auc]\", \"sklearn/metrics/tests/test_regression.py::test_regression_metrics\", \"sklearn/metrics/tests/test_regression.py::test_regression_metrics_at_limits\", \"sklearn/metrics/tests/test_regression.py::test__check_reg_targets\", \"sklearn/metrics/tests/test_regression.py::test__check_reg_targets_exception\", \"sklearn/metrics/tests/test_regression.py::test_regression_multioutput_array\", \"sklearn/metrics/tests/test_regression.py::test_regression_custom_weights\", \"sklearn/metrics/tests/test_regression.py::test_regression_single_sample[r2_score]\", \"sklearn/metrics/tests/test_regression.py::test_tweedie_deviance_continuity\"]",
  "environment_setup_commit": "7e85a6d1f038bbb932b36f18d75df6be937ed00d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.007333",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}