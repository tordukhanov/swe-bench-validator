{
  "repo": "astropy/astropy",
  "instance_id": "astropy__astropy-8251",
  "base_commit": "2002221360f4ad75f6b275bbffe4fa68412299b3",
  "patch": "diff --git a/astropy/units/format/generic.py b/astropy/units/format/generic.py\n--- a/astropy/units/format/generic.py\n+++ b/astropy/units/format/generic.py\n@@ -274,7 +274,9 @@ def p_factor_int(p):\n         def p_factor_fits(p):\n             '''\n             factor_fits : UINT power OPEN_PAREN signed_int CLOSE_PAREN\n+                        | UINT power OPEN_PAREN UINT CLOSE_PAREN\n                         | UINT power signed_int\n+                        | UINT power UINT\n                         | UINT SIGN UINT\n                         | UINT OPEN_PAREN signed_int CLOSE_PAREN\n             '''\ndiff --git a/astropy/units/format/generic_parsetab.py b/astropy/units/format/generic_parsetab.py\n--- a/astropy/units/format/generic_parsetab.py\n+++ b/astropy/units/format/generic_parsetab.py\n@@ -16,9 +16,9 @@\n \n _lr_method = 'LALR'\n \n-_lr_signature = 'DOUBLE_STAR STAR PERIOD SOLIDUS CARET OPEN_PAREN CLOSE_PAREN FUNCNAME UNIT SIGN UINT UFLOAT\\n            main : product_of_units\\n                 | factor product_of_units\\n                 | factor product product_of_units\\n                 | division_product_of_units\\n                 | factor division_product_of_units\\n                 | factor product division_product_of_units\\n                 | inverse_unit\\n                 | factor inverse_unit\\n                 | factor product inverse_unit\\n                 | factor\\n            \\n            division_product_of_units : division_product_of_units division product_of_units\\n                                      | product_of_units\\n            \\n            inverse_unit : division unit_expression\\n            \\n            factor : factor_fits\\n                   | factor_float\\n                   | factor_int\\n            \\n            factor_float : signed_float\\n                         | signed_float UINT signed_int\\n                         | signed_float UINT power numeric_power\\n            \\n            factor_int : UINT\\n                       | UINT signed_int\\n                       | UINT power numeric_power\\n                       | UINT UINT signed_int\\n                       | UINT UINT power numeric_power\\n            \\n            factor_fits : UINT power OPEN_PAREN signed_int CLOSE_PAREN\\n                        | UINT power signed_int\\n                        | UINT SIGN UINT\\n                        | UINT OPEN_PAREN signed_int CLOSE_PAREN\\n            \\n            product_of_units : unit_expression product product_of_units\\n                             | unit_expression product_of_units\\n                             | unit_expression\\n            \\n            unit_expression : function\\n                            | unit_with_power\\n                            | OPEN_PAREN product_of_units CLOSE_PAREN\\n            \\n            unit_with_power : UNIT power numeric_power\\n                            | UNIT numeric_power\\n                            | UNIT\\n            \\n            numeric_power : sign UINT\\n                          | OPEN_PAREN paren_expr CLOSE_PAREN\\n            \\n            paren_expr : sign UINT\\n                       | signed_float\\n                       | frac\\n            \\n            frac : sign UINT division sign UINT\\n            \\n            sign : SIGN\\n                 |\\n            \\n            product : STAR\\n                    | PERIOD\\n            \\n            division : SOLIDUS\\n            \\n            power : DOUBLE_STAR\\n                  | CARET\\n            \\n            signed_int : SIGN UINT\\n            \\n            signed_float : sign UINT\\n                         | sign UFLOAT\\n            \\n            function_name : FUNCNAME\\n            \\n            function : function_name OPEN_PAREN main CLOSE_PAREN\\n            '\n+_lr_signature = 'DOUBLE_STAR STAR PERIOD SOLIDUS CARET OPEN_PAREN CLOSE_PAREN FUNCNAME UNIT SIGN UINT UFLOAT\\n            main : product_of_units\\n                 | factor product_of_units\\n                 | factor product product_of_units\\n                 | division_product_of_units\\n                 | factor division_product_of_units\\n                 | factor product division_product_of_units\\n                 | inverse_unit\\n                 | factor inverse_unit\\n                 | factor product inverse_unit\\n                 | factor\\n            \\n            division_product_of_units : division_product_of_units division product_of_units\\n                                      | product_of_units\\n            \\n            inverse_unit : division unit_expression\\n            \\n            factor : factor_fits\\n                   | factor_float\\n                   | factor_int\\n            \\n            factor_float : signed_float\\n                         | signed_float UINT signed_int\\n                         | signed_float UINT power numeric_power\\n            \\n            factor_int : UINT\\n                       | UINT signed_int\\n                       | UINT power numeric_power\\n                       | UINT UINT signed_int\\n                       | UINT UINT power numeric_power\\n            \\n            factor_fits : UINT power OPEN_PAREN signed_int CLOSE_PAREN\\n                        | UINT power OPEN_PAREN UINT CLOSE_PAREN\\n                        | UINT power signed_int\\n                        | UINT power UINT\\n                        | UINT SIGN UINT\\n                        | UINT OPEN_PAREN signed_int CLOSE_PAREN\\n            \\n            product_of_units : unit_expression product product_of_units\\n                             | unit_expression product_of_units\\n                             | unit_expression\\n            \\n            unit_expression : function\\n                            | unit_with_power\\n                            | OPEN_PAREN product_of_units CLOSE_PAREN\\n            \\n            unit_with_power : UNIT power numeric_power\\n                            | UNIT numeric_power\\n                            | UNIT\\n            \\n            numeric_power : sign UINT\\n                          | OPEN_PAREN paren_expr CLOSE_PAREN\\n            \\n            paren_expr : sign UINT\\n                       | signed_float\\n                       | frac\\n            \\n            frac : sign UINT division sign UINT\\n            \\n            sign : SIGN\\n                 |\\n            \\n            product : STAR\\n                    | PERIOD\\n            \\n            division : SOLIDUS\\n            \\n            power : DOUBLE_STAR\\n                  | CARET\\n            \\n            signed_int : SIGN UINT\\n            \\n            signed_float : sign UINT\\n                         | sign UFLOAT\\n            \\n            function_name : FUNCNAME\\n            \\n            function : function_name OPEN_PAREN main CLOSE_PAREN\\n            '\n     \n-_lr_action_items = {'OPEN_PAREN':([0,3,6,7,8,9,10,11,12,13,14,16,17,18,19,21,23,26,27,28,29,34,36,38,39,41,42,43,46,47,53,54,55,58,59,62,63,64,66,67,72,73,75,76,77,78,80,],[13,13,13,-14,-15,-16,13,-32,-33,13,35,-17,-48,41,45,-54,13,-46,-47,13,13,57,-21,-49,-50,13,45,-36,-52,-53,-34,-23,45,-26,-22,-27,-18,45,-35,-38,-24,-51,-28,-19,-55,-39,-25,]),'UINT':([0,14,15,16,17,19,20,34,37,38,39,41,42,44,45,46,47,55,56,57,60,64,69,81,82,],[14,33,-44,40,-48,-45,46,-45,62,-49,-50,14,-45,67,-45,-52,-53,-45,73,-45,73,-45,79,-45,83,]),'SOLIDUS':([0,2,3,4,6,7,8,9,11,12,14,16,19,22,23,24,26,27,30,36,41,43,46,47,48,49,51,52,53,54,58,59,62,63,66,67,72,73,75,76,77,78,79,80,],[17,-12,17,17,-31,-14,-15,-16,-32,-33,-20,-17,-37,-12,17,17,-46,-47,-30,-21,17,-36,-52,-53,-12,17,-11,-29,-34,-23,-26,-22,-27,-18,-35,-38,-24,-51,-28,-19,-55,-39,17,-25,]),'UNIT':([0,3,6,7,8,9,10,11,12,13,14,16,17,19,23,26,27,28,29,36,41,43,46,47,53,54,58,59,62,63,66,67,72,73,75,76,77,78,80,],[19,19,19,-14,-15,-16,19,-32,-33,19,-20,-17,-48,-37,19,-46,-47,19,19,-21,19,-36,-52,-53,-34,-23,-26,-22,-27,-18,-35,-38,-24,-51,-28,-19,-55,-39,-25,]),'FUNCNAME':([0,3,6,7,8,9,10,11,12,13,14,16,17,19,23,26,27,28,29,36,41,43,46,47,53,54,58,59,62,63,66,67,72,73,75,76,77,78,80,],[21,21,21,-14,-15,-16,21,-32,-33,21,-20,-17,-48,-37,21,-46,-47,21,21,-21,21,-36,-52,-53,-34,-23,-26,-22,-27,-18,-35,-38,-24,-51,-28,-19,-55,-39,-25,]),'SIGN':([0,14,17,19,33,34,35,38,39,40,41,42,45,55,57,64,81,],[15,37,-48,15,56,60,56,-49,-50,56,15,15,15,15,60,15,15,]),'UFLOAT':([0,15,20,41,45,57,60,69,],[-45,-44,47,-45,-45,-45,-44,47,]),'$end':([1,2,3,4,5,6,7,8,9,11,12,14,16,19,22,24,25,30,31,36,43,46,47,48,49,50,51,52,53,54,58,59,62,63,66,67,72,73,75,76,77,78,80,],[0,-1,-10,-4,-7,-31,-14,-15,-16,-32,-33,-20,-17,-37,-2,-5,-8,-30,-13,-21,-36,-52,-53,-3,-6,-9,-11,-29,-34,-23,-26,-22,-27,-18,-35,-38,-24,-51,-28,-19,-55,-39,-25,]),'CLOSE_PAREN':([2,3,4,5,6,7,8,9,11,12,14,16,19,22,24,25,30,31,32,36,43,46,47,48,49,50,51,52,53,54,58,59,61,62,63,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,83,],[-1,-10,-4,-7,-31,-14,-15,-16,-32,-33,-20,-17,-37,-2,-5,-8,-30,-13,53,-21,-36,-52,-53,-3,-6,-9,-11,-29,-34,-23,-26,-22,75,-27,-18,77,-35,-38,78,-41,-42,-24,-51,80,-28,-19,-55,-39,-40,-25,-43,]),'STAR':([3,6,7,8,9,11,12,14,16,19,36,43,46,47,53,54,58,59,62,63,66,67,72,73,75,76,77,78,80,],[26,26,-14,-15,-16,-32,-33,-20,-17,-37,-21,-36,-52,-53,-34,-23,-26,-22,-27,-18,-35,-38,-24,-51,-28,-19,-55,-39,-25,]),'PERIOD':([3,6,7,8,9,11,12,14,16,19,36,43,46,47,53,54,58,59,62,63,66,67,72,73,75,76,77,78,80,],[27,27,-14,-15,-16,-32,-33,-20,-17,-37,-21,-36,-52,-53,-34,-23,-26,-22,-27,-18,-35,-38,-24,-51,-28,-19,-55,-39,-25,]),'DOUBLE_STAR':([14,19,33,40,],[38,38,38,38,]),'CARET':([14,19,33,40,],[39,39,39,39,]),}\n+_lr_action_items = {'OPEN_PAREN':([0,3,6,7,8,9,10,11,12,13,14,16,17,18,19,21,23,26,27,28,29,34,36,38,39,41,42,43,46,47,53,54,55,57,59,60,63,64,65,67,68,73,74,77,78,79,80,82,83,],[13,13,13,-14,-15,-16,13,-34,-35,13,35,-17,-50,41,45,-56,13,-48,-49,13,13,58,-21,-51,-52,13,45,-38,-54,-55,-36,-23,45,-28,-27,-22,-29,-18,45,-37,-40,-24,-53,-30,-19,-57,-41,-26,-25,]),'UINT':([0,14,15,16,17,19,20,34,37,38,39,41,42,44,45,46,47,55,56,58,61,65,70,84,85,],[14,33,-46,40,-50,-47,46,57,63,-51,-52,14,-47,68,-47,-54,-55,-47,74,75,74,-47,81,-47,86,]),'SOLIDUS':([0,2,3,4,6,7,8,9,11,12,14,16,19,22,23,24,26,27,30,36,41,43,46,47,48,49,51,52,53,54,57,59,60,63,64,67,68,73,74,77,78,79,80,81,82,83,],[17,-12,17,17,-33,-14,-15,-16,-34,-35,-20,-17,-39,-12,17,17,-48,-49,-32,-21,17,-38,-54,-55,-12,17,-11,-31,-36,-23,-28,-27,-22,-29,-18,-37,-40,-24,-53,-30,-19,-57,-41,17,-26,-25,]),'UNIT':([0,3,6,7,8,9,10,11,12,13,14,16,17,19,23,26,27,28,29,36,41,43,46,47,53,54,57,59,60,63,64,67,68,73,74,77,78,79,80,82,83,],[19,19,19,-14,-15,-16,19,-34,-35,19,-20,-17,-50,-39,19,-48,-49,19,19,-21,19,-38,-54,-55,-36,-23,-28,-27,-22,-29,-18,-37,-40,-24,-53,-30,-19,-57,-41,-26,-25,]),'FUNCNAME':([0,3,6,7,8,9,10,11,12,13,14,16,17,19,23,26,27,28,29,36,41,43,46,47,53,54,57,59,60,63,64,67,68,73,74,77,78,79,80,82,83,],[21,21,21,-14,-15,-16,21,-34,-35,21,-20,-17,-50,-39,21,-48,-49,21,21,-21,21,-38,-54,-55,-36,-23,-28,-27,-22,-29,-18,-37,-40,-24,-53,-30,-19,-57,-41,-26,-25,]),'SIGN':([0,14,17,19,33,34,35,38,39,40,41,42,45,55,58,65,84,],[15,37,-50,15,56,61,56,-51,-52,56,15,15,15,15,61,15,15,]),'UFLOAT':([0,15,20,41,45,58,61,70,],[-47,-46,47,-47,-47,-47,-46,47,]),'$end':([1,2,3,4,5,6,7,8,9,11,12,14,16,19,22,24,25,30,31,36,43,46,47,48,49,50,51,52,53,54,57,59,60,63,64,67,68,73,74,77,78,79,80,82,83,],[0,-1,-10,-4,-7,-33,-14,-15,-16,-34,-35,-20,-17,-39,-2,-5,-8,-32,-13,-21,-38,-54,-55,-3,-6,-9,-11,-31,-36,-23,-28,-27,-22,-29,-18,-37,-40,-24,-53,-30,-19,-57,-41,-26,-25,]),'CLOSE_PAREN':([2,3,4,5,6,7,8,9,11,12,14,16,19,22,24,25,30,31,32,36,43,46,47,48,49,50,51,52,53,54,57,59,60,62,63,64,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,86,],[-1,-10,-4,-7,-33,-14,-15,-16,-34,-35,-20,-17,-39,-2,-5,-8,-32,-13,53,-21,-38,-54,-55,-3,-6,-9,-11,-31,-36,-23,-28,-27,-22,77,-29,-18,79,-37,-40,80,-43,-44,-24,-53,82,83,-30,-19,-57,-41,-42,-26,-25,-45,]),'STAR':([3,6,7,8,9,11,12,14,16,19,36,43,46,47,53,54,57,59,60,63,64,67,68,73,74,77,78,79,80,82,83,],[26,26,-14,-15,-16,-34,-35,-20,-17,-39,-21,-38,-54,-55,-36,-23,-28,-27,-22,-29,-18,-37,-40,-24,-53,-30,-19,-57,-41,-26,-25,]),'PERIOD':([3,6,7,8,9,11,12,14,16,19,36,43,46,47,53,54,57,59,60,63,64,67,68,73,74,77,78,79,80,82,83,],[27,27,-14,-15,-16,-34,-35,-20,-17,-39,-21,-38,-54,-55,-36,-23,-28,-27,-22,-29,-18,-37,-40,-24,-53,-30,-19,-57,-41,-26,-25,]),'DOUBLE_STAR':([14,19,33,40,],[38,38,38,38,]),'CARET':([14,19,33,40,],[39,39,39,39,]),}\n \n _lr_action = {}\n for _k, _v in _lr_action_items.items():\n@@ -27,7 +27,7 @@\n       _lr_action[_x][_k] = _y\n del _lr_action_items\n \n-_lr_goto_items = {'main':([0,41,],[1,65,]),'product_of_units':([0,3,6,13,23,28,29,41,],[2,22,30,32,48,51,52,2,]),'factor':([0,41,],[3,3,]),'division_product_of_units':([0,3,23,41,],[4,24,49,4,]),'inverse_unit':([0,3,23,41,],[5,25,50,5,]),'unit_expression':([0,3,6,10,13,23,28,29,41,],[6,6,6,31,6,6,6,6,6,]),'factor_fits':([0,41,],[7,7,]),'factor_float':([0,41,],[8,8,]),'factor_int':([0,41,],[9,9,]),'division':([0,3,4,23,24,41,49,79,],[10,10,28,10,28,10,28,81,]),'function':([0,3,6,10,13,23,28,29,41,],[11,11,11,11,11,11,11,11,11,]),'unit_with_power':([0,3,6,10,13,23,28,29,41,],[12,12,12,12,12,12,12,12,12,]),'signed_float':([0,41,45,57,],[16,16,70,70,]),'function_name':([0,3,6,10,13,23,28,29,41,],[18,18,18,18,18,18,18,18,18,]),'sign':([0,19,34,41,42,45,55,57,64,81,],[20,44,44,20,44,69,44,69,44,82,]),'product':([3,6,],[23,29,]),'power':([14,19,33,40,],[34,42,55,64,]),'signed_int':([14,33,34,35,40,57,],[36,54,58,61,63,74,]),'numeric_power':([19,34,42,55,64,],[43,59,66,72,76,]),'paren_expr':([45,57,],[68,68,]),'frac':([45,57,],[71,71,]),}\n+_lr_goto_items = {'main':([0,41,],[1,66,]),'product_of_units':([0,3,6,13,23,28,29,41,],[2,22,30,32,48,51,52,2,]),'factor':([0,41,],[3,3,]),'division_product_of_units':([0,3,23,41,],[4,24,49,4,]),'inverse_unit':([0,3,23,41,],[5,25,50,5,]),'unit_expression':([0,3,6,10,13,23,28,29,41,],[6,6,6,31,6,6,6,6,6,]),'factor_fits':([0,41,],[7,7,]),'factor_float':([0,41,],[8,8,]),'factor_int':([0,41,],[9,9,]),'division':([0,3,4,23,24,41,49,81,],[10,10,28,10,28,10,28,84,]),'function':([0,3,6,10,13,23,28,29,41,],[11,11,11,11,11,11,11,11,11,]),'unit_with_power':([0,3,6,10,13,23,28,29,41,],[12,12,12,12,12,12,12,12,12,]),'signed_float':([0,41,45,58,],[16,16,71,71,]),'function_name':([0,3,6,10,13,23,28,29,41,],[18,18,18,18,18,18,18,18,18,]),'sign':([0,19,34,41,42,45,55,58,65,84,],[20,44,44,20,44,70,44,70,44,85,]),'product':([3,6,],[23,29,]),'power':([14,19,33,40,],[34,42,55,65,]),'signed_int':([14,33,34,35,40,58,],[36,54,59,62,64,76,]),'numeric_power':([19,34,42,55,65,],[43,60,67,73,78,]),'paren_expr':([45,58,],[69,69,]),'frac':([45,58,],[72,72,]),}\n \n _lr_goto = {}\n for _k, _v in _lr_goto_items.items():\n@@ -62,34 +62,36 @@\n   ('factor_int -> UINT UINT signed_int','factor_int',3,'p_factor_int','generic.py',257),\n   ('factor_int -> UINT UINT power numeric_power','factor_int',4,'p_factor_int','generic.py',258),\n   ('factor_fits -> UINT power OPEN_PAREN signed_int CLOSE_PAREN','factor_fits',5,'p_factor_fits','generic.py',276),\n-  ('factor_fits -> UINT power signed_int','factor_fits',3,'p_factor_fits','generic.py',277),\n-  ('factor_fits -> UINT SIGN UINT','factor_fits',3,'p_factor_fits','generic.py',278),\n-  ('factor_fits -> UINT OPEN_PAREN signed_int CLOSE_PAREN','factor_fits',4,'p_factor_fits','generic.py',279),\n-  ('product_of_units -> unit_expression product product_of_units','product_of_units',3,'p_product_of_units','generic.py',298),\n-  ('product_of_units -> unit_expression product_of_units','product_of_units',2,'p_product_of_units','generic.py',299),\n-  ('product_of_units -> unit_expression','product_of_units',1,'p_product_of_units','generic.py',300),\n-  ('unit_expression -> function','unit_expression',1,'p_unit_expression','generic.py',311),\n-  ('unit_expression -> unit_with_power','unit_expression',1,'p_unit_expression','generic.py',312),\n-  ('unit_expression -> OPEN_PAREN product_of_units CLOSE_PAREN','unit_expression',3,'p_unit_expression','generic.py',313),\n-  ('unit_with_power -> UNIT power numeric_power','unit_with_power',3,'p_unit_with_power','generic.py',322),\n-  ('unit_with_power -> UNIT numeric_power','unit_with_power',2,'p_unit_with_power','generic.py',323),\n-  ('unit_with_power -> UNIT','unit_with_power',1,'p_unit_with_power','generic.py',324),\n-  ('numeric_power -> sign UINT','numeric_power',2,'p_numeric_power','generic.py',335),\n-  ('numeric_power -> OPEN_PAREN paren_expr CLOSE_PAREN','numeric_power',3,'p_numeric_power','generic.py',336),\n-  ('paren_expr -> sign UINT','paren_expr',2,'p_paren_expr','generic.py',345),\n-  ('paren_expr -> signed_float','paren_expr',1,'p_paren_expr','generic.py',346),\n-  ('paren_expr -> frac','paren_expr',1,'p_paren_expr','generic.py',347),\n-  ('frac -> sign UINT division sign UINT','frac',5,'p_frac','generic.py',356),\n-  ('sign -> SIGN','sign',1,'p_sign','generic.py',362),\n-  ('sign -> <empty>','sign',0,'p_sign','generic.py',363),\n-  ('product -> STAR','product',1,'p_product','generic.py',372),\n-  ('product -> PERIOD','product',1,'p_product','generic.py',373),\n-  ('division -> SOLIDUS','division',1,'p_division','generic.py',379),\n-  ('power -> DOUBLE_STAR','power',1,'p_power','generic.py',385),\n-  ('power -> CARET','power',1,'p_power','generic.py',386),\n-  ('signed_int -> SIGN UINT','signed_int',2,'p_signed_int','generic.py',392),\n-  ('signed_float -> sign UINT','signed_float',2,'p_signed_float','generic.py',398),\n-  ('signed_float -> sign UFLOAT','signed_float',2,'p_signed_float','generic.py',399),\n-  ('function_name -> FUNCNAME','function_name',1,'p_function_name','generic.py',405),\n-  ('function -> function_name OPEN_PAREN main CLOSE_PAREN','function',4,'p_function','generic.py',411),\n+  ('factor_fits -> UINT power OPEN_PAREN UINT CLOSE_PAREN','factor_fits',5,'p_factor_fits','generic.py',277),\n+  ('factor_fits -> UINT power signed_int','factor_fits',3,'p_factor_fits','generic.py',278),\n+  ('factor_fits -> UINT power UINT','factor_fits',3,'p_factor_fits','generic.py',279),\n+  ('factor_fits -> UINT SIGN UINT','factor_fits',3,'p_factor_fits','generic.py',280),\n+  ('factor_fits -> UINT OPEN_PAREN signed_int CLOSE_PAREN','factor_fits',4,'p_factor_fits','generic.py',281),\n+  ('product_of_units -> unit_expression product product_of_units','product_of_units',3,'p_product_of_units','generic.py',300),\n+  ('product_of_units -> unit_expression product_of_units','product_of_units',2,'p_product_of_units','generic.py',301),\n+  ('product_of_units -> unit_expression','product_of_units',1,'p_product_of_units','generic.py',302),\n+  ('unit_expression -> function','unit_expression',1,'p_unit_expression','generic.py',313),\n+  ('unit_expression -> unit_with_power','unit_expression',1,'p_unit_expression','generic.py',314),\n+  ('unit_expression -> OPEN_PAREN product_of_units CLOSE_PAREN','unit_expression',3,'p_unit_expression','generic.py',315),\n+  ('unit_with_power -> UNIT power numeric_power','unit_with_power',3,'p_unit_with_power','generic.py',324),\n+  ('unit_with_power -> UNIT numeric_power','unit_with_power',2,'p_unit_with_power','generic.py',325),\n+  ('unit_with_power -> UNIT','unit_with_power',1,'p_unit_with_power','generic.py',326),\n+  ('numeric_power -> sign UINT','numeric_power',2,'p_numeric_power','generic.py',337),\n+  ('numeric_power -> OPEN_PAREN paren_expr CLOSE_PAREN','numeric_power',3,'p_numeric_power','generic.py',338),\n+  ('paren_expr -> sign UINT','paren_expr',2,'p_paren_expr','generic.py',347),\n+  ('paren_expr -> signed_float','paren_expr',1,'p_paren_expr','generic.py',348),\n+  ('paren_expr -> frac','paren_expr',1,'p_paren_expr','generic.py',349),\n+  ('frac -> sign UINT division sign UINT','frac',5,'p_frac','generic.py',358),\n+  ('sign -> SIGN','sign',1,'p_sign','generic.py',364),\n+  ('sign -> <empty>','sign',0,'p_sign','generic.py',365),\n+  ('product -> STAR','product',1,'p_product','generic.py',374),\n+  ('product -> PERIOD','product',1,'p_product','generic.py',375),\n+  ('division -> SOLIDUS','division',1,'p_division','generic.py',381),\n+  ('power -> DOUBLE_STAR','power',1,'p_power','generic.py',387),\n+  ('power -> CARET','power',1,'p_power','generic.py',388),\n+  ('signed_int -> SIGN UINT','signed_int',2,'p_signed_int','generic.py',394),\n+  ('signed_float -> sign UINT','signed_float',2,'p_signed_float','generic.py',400),\n+  ('signed_float -> sign UFLOAT','signed_float',2,'p_signed_float','generic.py',401),\n+  ('function_name -> FUNCNAME','function_name',1,'p_function_name','generic.py',407),\n+  ('function -> function_name OPEN_PAREN main CLOSE_PAREN','function',4,'p_function','generic.py',413),\n ]\n",
  "test_patch": "diff --git a/astropy/units/tests/test_format.py b/astropy/units/tests/test_format.py\n--- a/astropy/units/tests/test_format.py\n+++ b/astropy/units/tests/test_format.py\n@@ -434,40 +434,42 @@ def test_vounit_implicit_custom():\n     assert x.bases[0]._represents.bases[0].name == 'urlong'\n \n \n-def test_fits_scale_factor():\n+@pytest.mark.parametrize('scale, number, string',\n+                         [('10+2', 100, '10**2'),\n+                          ('10(+2)', 100, '10**2'),\n+                          ('10**+2', 100, '10**2'),\n+                          ('10**(+2)', 100, '10**2'),\n+                          ('10^+2', 100, '10**2'),\n+                          ('10^(+2)', 100, '10**2'),\n+                          ('10**2', 100, '10**2'),\n+                          ('10**(2)', 100, '10**2'),\n+                          ('10^2', 100, '10**2'),\n+                          ('10^(2)', 100, '10**2'),\n+                          ('10-20', 10**(-20), '10**-20'),\n+                          ('10(-20)', 10**(-20), '10**-20'),\n+                          ('10**-20', 10**(-20), '10**-20'),\n+                          ('10**(-20)', 10**(-20), '10**-20'),\n+                          ('10^-20', 10**(-20), '10**-20'),\n+                          ('10^(-20)', 10**(-20), '10**-20'),\n+                          ])\n+def test_fits_scale_factor(scale, number, string):\n+\n+    x = u.Unit(scale + ' erg/s/cm**2/Angstrom', format='fits')\n+    assert x == number * (u.erg / u.s / u.cm ** 2 / u.Angstrom)\n+    assert x.to_string(format='fits') == string + ' Angstrom-1 cm-2 erg s-1'\n+\n+    x = u.Unit(scale + '*erg/s/cm**2/Angstrom', format='fits')\n+    assert x == number * (u.erg / u.s / u.cm ** 2 / u.Angstrom)\n+    assert x.to_string(format='fits') == string + ' Angstrom-1 cm-2 erg s-1'\n+\n+\n+def test_fits_scale_factor_errors():\n     with pytest.raises(ValueError):\n         x = u.Unit('1000 erg/s/cm**2/Angstrom', format='fits')\n \n     with pytest.raises(ValueError):\n         x = u.Unit('12 erg/s/cm**2/Angstrom', format='fits')\n \n-    x = u.Unit('10+2 erg/s/cm**2/Angstrom', format='fits')\n-    assert x == 100 * (u.erg / u.s / u.cm ** 2 / u.Angstrom)\n-    assert x.to_string(format='fits') == '10**2 Angstrom-1 cm-2 erg s-1'\n-\n-    x = u.Unit('10**(-20) erg/s/cm**2/Angstrom', format='fits')\n-    assert x == 10**(-20) * (u.erg / u.s / u.cm ** 2 / u.Angstrom)\n-    assert x.to_string(format='fits') == '10**-20 Angstrom-1 cm-2 erg s-1'\n-\n-    x = u.Unit('10**-20 erg/s/cm**2/Angstrom', format='fits')\n-    assert x == 10**(-20) * (u.erg / u.s / u.cm ** 2 / u.Angstrom)\n-    assert x.to_string(format='fits') == '10**-20 Angstrom-1 cm-2 erg s-1'\n-\n-    x = u.Unit('10^(-20) erg/s/cm**2/Angstrom', format='fits')\n-    assert x == 10**(-20) * (u.erg / u.s / u.cm ** 2 / u.Angstrom)\n-    assert x.to_string(format='fits') == '10**-20 Angstrom-1 cm-2 erg s-1'\n-\n-    x = u.Unit('10^-20 erg/s/cm**2/Angstrom', format='fits')\n-    assert x == 10**(-20) * (u.erg / u.s / u.cm ** 2 / u.Angstrom)\n-    assert x.to_string(format='fits') == '10**-20 Angstrom-1 cm-2 erg s-1'\n-\n-    x = u.Unit('10-20 erg/s/cm**2/Angstrom', format='fits')\n-    assert x == 10**(-20) * (u.erg / u.s / u.cm ** 2 / u.Angstrom)\n-    assert x.to_string(format='fits') == '10**-20 Angstrom-1 cm-2 erg s-1'\n-\n-    x = u.Unit('10**(-20)*erg/s/cm**2/Angstrom', format='fits')\n-    assert x == 10**(-20) * (u.erg / u.s / u.cm ** 2 / u.Angstrom)\n-\n     x = u.Unit(1.2 * u.erg)\n     with pytest.raises(ValueError):\n         x.to_string(format='fits')\n",
  "problem_statement": "FITS-standard unit parsing fails on some types of exponents\nWhy don't these work:\r\n```python\r\nfrom astropy.units import Unit\r\nUnit('10**17 erg/(cm2 s Angstrom)', format='fits')\r\nUnit('10^17 erg/(cm2 s Angstrom)', format='fits')\r\n```\r\nWhen these all do:\r\n```python\r\nfrom astropy.units import Unit\r\nUnit('10+17 erg/(cm2 s Angstrom)', format='fits')\r\nUnit('10**-17 erg/(cm2 s Angstrom)', format='fits')\r\nUnit('10^-17 erg/(cm2 s Angstrom)', format='fits')\r\nUnit('10-17 erg/(cm2 s Angstrom)', format='fits')\r\n```\r\n\r\nThe non-working versions give *e.g.*:\r\n```\r\nValueError: '10^17 erg/(cm2 s Angstrom)' did not parse as fits unit: Numeric factor not supported by FITS\r\n```\r\nwhich is not how I would interpret the [FITS standard](https://fits.gsfc.nasa.gov/standard30/fits_standard30aa.pdf).\r\n\r\nTested on 2.0.7 and 3.0.3\n",
  "hints_text": "Additional examples that *do* work:\r\n```python\r\nUnit('10**+17 erg/(cm2 s Angstrom)', format='fits')\r\nUnit('10^+17 erg/(cm2 s Angstrom)', format='fits')\r\n```\nIt seems that currently the sign is always required for the `**` and `^`, though it should not:\r\n\r\n> The final units string is the compound string, or a compound of compounds, preceded by an optional numeric multiplier of the form 10**k, 10ˆk, or 10±k where k is an integer, optionally surrounded by parentheses with the sign character required in the third form in the absence of parentheses.\r\n\r\n> The power may be a simple integer, with or without sign, optionally surrounded by parentheses.\nThe place to look in the parser is https://github.com/astropy/astropy/blob/master/astropy/units/format/generic.py#L274, and I think all it would take is replace `signed_int` by `numeric_power` (but don't have time to try myself right now).\nI tried two possibilities:\r\n\r\n1. Simply replace `UINT power signed_int` with `UINT power numeric_power`.  That broke valid expressions like `10**+2`.\r\n2. Add `UINT power numeric_power` in addition to `UINT power signed_int`.  That did not make `10**2` valid.\nI think it may have to be `UINT power SIGN numeric_power` - sign can be empty.\nUnfortunately that didn't help either, it broke the existing valid expressions and did not make `10**2` valid.\nAnother odd thing. In the traceback of the test failures I can see [p_factor_int()](https://github.com/astropy/astropy/blob/master/astropy/units/format/generic.py#L252) being called but not [p_factor_fits()](https://github.com/astropy/astropy/blob/master/astropy/units/format/generic.py#L274).\n@weaverba137 - that last thing at least is probably not odd: the test fails because in its current form `p_factor_fits()` does not match the string.\r\n\r\nOn why my suggestions do not work: I'm a bit at a loss and will try to investigate, though I'm not quite sure when...",
  "created_at": "2018-12-07T20:21:59Z",
  "version": "3.0",
  "FAIL_TO_PASS": "[\"astropy/units/tests/test_format.py::test_fits_scale_factor[10**2-100-10**2]\", \"astropy/units/tests/test_format.py::test_fits_scale_factor[10**(2)-100-10**2]\", \"astropy/units/tests/test_format.py::test_fits_scale_factor[10^2-100-10**2]\", \"astropy/units/tests/test_format.py::test_fits_scale_factor[10^(2)-100-10**2]\"]",
  "PASS_TO_PASS": "[\"astropy/units/tests/test_format.py::test_unit_grammar[strings0-unit0]\", \"astropy/units/tests/test_format.py::test_unit_grammar[strings1-unit1]\", \"astropy/units/tests/test_format.py::test_unit_grammar[strings2-unit2]\", \"astropy/units/tests/test_format.py::test_unit_grammar[strings3-unit3]\", \"astropy/units/tests/test_format.py::test_unit_grammar[strings4-unit4]\", \"astropy/units/tests/test_format.py::test_unit_grammar[strings5-unit5]\", \"astropy/units/tests/test_format.py::test_unit_grammar[strings6-unit6]\", \"astropy/units/tests/test_format.py::test_unit_grammar[strings7-unit7]\", \"astropy/units/tests/test_format.py::test_unit_grammar[strings8-unit8]\", \"astropy/units/tests/test_format.py::test_unit_grammar[strings9-unit9]\", \"astropy/units/tests/test_format.py::test_unit_grammar[strings10-unit10]\", \"astropy/units/tests/test_format.py::test_unit_grammar[strings11-unit11]\", \"astropy/units/tests/test_format.py::test_unit_grammar[strings12-unit12]\", \"astropy/units/tests/test_format.py::test_unit_grammar_fail[sin(\", \"astropy/units/tests/test_format.py::test_unit_grammar_fail[mag(mag)]\", \"astropy/units/tests/test_format.py::test_unit_grammar_fail[dB(dB(mW))]\", \"astropy/units/tests/test_format.py::test_unit_grammar_fail[dex()]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings0-unit0]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings1-unit1]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings2-unit2]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings3-unit3]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings4-unit4]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings5-unit5]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings6-unit6]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings7-unit7]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings8-unit8]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings9-unit9]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings10-unit10]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings11-unit11]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings12-unit12]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings13-unit13]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings14-unit14]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings15-unit15]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings16-unit16]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings17-unit17]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings18-unit18]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings19-unit19]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings20-unit20]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings21-unit21]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings22-unit22]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings23-unit23]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings24-unit24]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings25-unit25]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings26-unit26]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings27-unit27]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings28-unit28]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings29-unit29]\", \"astropy/units/tests/test_format.py::test_cds_grammar[strings30-unit30]\", \"astropy/units/tests/test_format.py::test_cds_grammar_fail[0.1\", \"astropy/units/tests/test_format.py::test_cds_grammar_fail[solMass(3/2)]\", \"astropy/units/tests/test_format.py::test_cds_grammar_fail[km\", \"astropy/units/tests/test_format.py::test_cds_grammar_fail[pix0.1nm]\", \"astropy/units/tests/test_format.py::test_cds_grammar_fail[pix/(0.1nm)]\", \"astropy/units/tests/test_format.py::test_cds_grammar_fail[km*s]\", \"astropy/units/tests/test_format.py::test_cds_grammar_fail[km**2]\", \"astropy/units/tests/test_format.py::test_cds_grammar_fail[5x8+3m]\", \"astropy/units/tests/test_format.py::test_cds_grammar_fail[0.1---]\", \"astropy/units/tests/test_format.py::test_cds_grammar_fail[---m]\", \"astropy/units/tests/test_format.py::test_cds_grammar_fail[m---]\", \"astropy/units/tests/test_format.py::test_cds_grammar_fail[mag(s-1)]\", \"astropy/units/tests/test_format.py::test_cds_grammar_fail[dB(mW)]\", \"astropy/units/tests/test_format.py::test_cds_grammar_fail[dex(cm\", \"astropy/units/tests/test_format.py::test_ogip_grammar[strings0-unit0]\", \"astropy/units/tests/test_format.py::test_ogip_grammar[strings1-unit1]\", \"astropy/units/tests/test_format.py::test_ogip_grammar[strings2-unit2]\", \"astropy/units/tests/test_format.py::test_ogip_grammar[strings3-unit3]\", \"astropy/units/tests/test_format.py::test_ogip_grammar[strings4-unit4]\", \"astropy/units/tests/test_format.py::test_ogip_grammar[strings5-unit5]\", \"astropy/units/tests/test_format.py::test_ogip_grammar[strings6-unit6]\", \"astropy/units/tests/test_format.py::test_ogip_grammar[strings7-unit7]\", \"astropy/units/tests/test_format.py::test_ogip_grammar[strings8-unit8]\", \"astropy/units/tests/test_format.py::test_ogip_grammar_fail[log(photon\", \"astropy/units/tests/test_format.py::test_ogip_grammar_fail[sin(\", \"astropy/units/tests/test_format.py::test_ogip_grammar_fail[dB(mW)]\", \"astropy/units/tests/test_format.py::test_ogip_grammar_fail[dex(cm/s**2)]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit0]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit1]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit2]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit3]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit4]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit5]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit6]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit7]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit8]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit9]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit10]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit11]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit12]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit13]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit14]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit15]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit16]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit17]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit18]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit19]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit20]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit21]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit22]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit23]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit24]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit25]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit26]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit27]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit28]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit29]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit30]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit31]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit32]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit33]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit34]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit35]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit36]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit37]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit38]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit39]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit40]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit41]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit42]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit43]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit44]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit45]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit46]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit47]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit48]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit49]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit50]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit51]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit52]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit53]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit54]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit55]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit56]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit57]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit58]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit59]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit60]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit61]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit62]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit63]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit64]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit65]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit66]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit67]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit68]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit69]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit70]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit71]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit72]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit73]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit74]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit75]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit76]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit77]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit78]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit79]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit80]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit81]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit82]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit83]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit84]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit85]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit86]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit87]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit88]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit89]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit90]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit91]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit92]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit93]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit94]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit95]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit96]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit97]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit98]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit99]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit100]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit101]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit102]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit103]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit104]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit105]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit106]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit107]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit108]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit109]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit110]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit111]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit112]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit113]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit114]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit115]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit116]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit117]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit118]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit119]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit120]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit121]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit122]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit123]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit124]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit125]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit126]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit127]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit128]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit129]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit130]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit131]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit132]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit133]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit134]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit135]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit136]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit137]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit138]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit139]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit140]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit141]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit142]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit143]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit144]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit145]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit146]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit147]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit148]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit149]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit150]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit151]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit152]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit153]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit154]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit155]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit156]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit157]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit158]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit159]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit160]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit161]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit162]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit163]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit164]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit165]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit166]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit167]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit168]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit169]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit170]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit171]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit172]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit173]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit174]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit175]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit176]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit177]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit178]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit179]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit180]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit181]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit182]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit183]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit184]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit185]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit186]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit187]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit188]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit189]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit190]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit191]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit192]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit193]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit194]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit195]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit196]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit197]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit198]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit199]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit200]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit201]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit202]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit203]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit204]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit205]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit206]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit207]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit208]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit209]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit210]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit211]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit212]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit213]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit214]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit215]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit216]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit217]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit218]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit219]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit220]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit221]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit222]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit223]\", \"astropy/units/tests/test_format.py::test_roundtrip[unit224]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit0]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit1]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit2]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit3]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit4]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit5]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit6]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit7]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit8]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit9]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit10]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit11]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit12]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit13]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit14]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit15]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit16]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit17]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit18]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit19]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit20]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit21]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit22]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit23]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit24]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit25]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit26]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit27]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit28]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit29]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit30]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit31]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit32]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit33]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit34]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit35]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit36]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit37]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit38]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit39]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit40]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit41]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit42]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit43]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit44]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit45]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit46]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit47]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit48]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit49]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit50]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit51]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit52]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit53]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit54]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit55]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit56]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit57]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit58]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit59]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit60]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit61]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit62]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit63]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit64]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit65]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit66]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit67]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit68]\", \"astropy/units/tests/test_format.py::test_roundtrip_vo_unit[unit69]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit0]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit1]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit2]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit3]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit4]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit5]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit6]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit7]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit8]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit9]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit10]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit11]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit12]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit13]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit14]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit15]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit16]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit17]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit18]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit19]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit20]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit21]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit22]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit23]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit24]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit25]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit26]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit27]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit28]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit29]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit30]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit31]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit32]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit33]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit34]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit35]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit36]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit37]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit38]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit39]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit40]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit41]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit42]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit43]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit44]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit45]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit46]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit47]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit48]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit49]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit50]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit51]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit52]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit53]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit54]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit55]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit56]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit57]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit58]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit59]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit60]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit61]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit62]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit63]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit64]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit65]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit66]\", \"astropy/units/tests/test_format.py::test_roundtrip_fits[unit67]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit0]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit1]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit2]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit3]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit4]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit5]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit6]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit7]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit8]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit9]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit10]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit11]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit12]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit13]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit14]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit15]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit16]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit17]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit18]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit19]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit20]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit21]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit22]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit23]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit24]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit25]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit26]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit27]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit28]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit29]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit30]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit31]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit32]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit33]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit34]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit35]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit36]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit37]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit38]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit39]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit40]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit41]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit42]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit43]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit44]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit45]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit46]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit47]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit48]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit49]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit50]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit51]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit52]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit53]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit54]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit55]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit56]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit57]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit58]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit59]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit60]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit61]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit62]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit63]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit64]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit65]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit66]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit67]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit68]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit69]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit70]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit71]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit72]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit73]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit74]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit75]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit76]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit77]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit78]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit79]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit80]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit81]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit82]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit83]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit84]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit85]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit86]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit87]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit88]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit89]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit90]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit91]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit92]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit93]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit94]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit95]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit96]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit97]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit98]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit99]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit100]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit101]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit102]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit103]\", \"astropy/units/tests/test_format.py::test_roundtrip_cds[unit104]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit0]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit1]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit2]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit3]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit4]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit5]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit6]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit7]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit8]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit9]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit10]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit11]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit12]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit13]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit14]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit15]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit16]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit17]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit18]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit19]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit20]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit21]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit22]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit23]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit24]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit25]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit26]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit27]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit28]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit29]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit30]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit31]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit32]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit33]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit34]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit35]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit36]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit37]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit38]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit39]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit40]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit41]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit42]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit43]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit44]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit45]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit46]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit47]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit48]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit49]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit50]\", \"astropy/units/tests/test_format.py::test_roundtrip_ogip[unit51]\", \"astropy/units/tests/test_format.py::test_fits_units_available\", \"astropy/units/tests/test_format.py::test_vo_units_available\", \"astropy/units/tests/test_format.py::test_cds_units_available\", \"astropy/units/tests/test_format.py::test_cds_non_ascii_unit\", \"astropy/units/tests/test_format.py::test_latex\", \"astropy/units/tests/test_format.py::test_new_style_latex\", \"astropy/units/tests/test_format.py::test_latex_scale\", \"astropy/units/tests/test_format.py::test_latex_inline_scale\", \"astropy/units/tests/test_format.py::test_format_styles[generic-erg\", \"astropy/units/tests/test_format.py::test_format_styles[s-erg\", \"astropy/units/tests/test_format.py::test_format_styles[console-\", \"astropy/units/tests/test_format.py::test_format_styles[latex-$\\\\\\\\mathrm{\\\\\\\\frac{erg}{s\\\\\\\\,cm^{2}}}$]\", \"astropy/units/tests/test_format.py::test_format_styles[latex_inline-$\\\\\\\\mathrm{erg\\\\\\\\,s^{-1}\\\\\\\\,cm^{-2}}$]\", \"astropy/units/tests/test_format.py::test_format_styles[>20s-\", \"astropy/units/tests/test_format.py::test_flatten_to_known\", \"astropy/units/tests/test_format.py::test_flatten_impossible\", \"astropy/units/tests/test_format.py::test_console_out\", \"astropy/units/tests/test_format.py::test_flexible_float\", \"astropy/units/tests/test_format.py::test_fraction_repr\", \"astropy/units/tests/test_format.py::test_scale_effectively_unity\", \"astropy/units/tests/test_format.py::test_percent\", \"astropy/units/tests/test_format.py::test_scaled_dimensionless\", \"astropy/units/tests/test_format.py::test_deprecated_did_you_mean_units\", \"astropy/units/tests/test_format.py::test_fits_function[mag(ct/s)]\", \"astropy/units/tests/test_format.py::test_fits_function[dB(mW)]\", \"astropy/units/tests/test_format.py::test_fits_function[dex(cm\", \"astropy/units/tests/test_format.py::test_vounit_function[mag(ct/s)]\", \"astropy/units/tests/test_format.py::test_vounit_function[dB(mW)]\", \"astropy/units/tests/test_format.py::test_vounit_function[dex(cm\", \"astropy/units/tests/test_format.py::test_vounit_binary_prefix\", \"astropy/units/tests/test_format.py::test_vounit_unknown\", \"astropy/units/tests/test_format.py::test_vounit_details\", \"astropy/units/tests/test_format.py::test_vounit_custom\", \"astropy/units/tests/test_format.py::test_vounit_implicit_custom\", \"astropy/units/tests/test_format.py::test_fits_scale_factor[10+2-100-10**2]\", \"astropy/units/tests/test_format.py::test_fits_scale_factor[10(+2)-100-10**2]\", \"astropy/units/tests/test_format.py::test_fits_scale_factor[10**+2-100-10**2]\", \"astropy/units/tests/test_format.py::test_fits_scale_factor[10**(+2)-100-10**2]\", \"astropy/units/tests/test_format.py::test_fits_scale_factor[10^+2-100-10**2]\", \"astropy/units/tests/test_format.py::test_fits_scale_factor[10^(+2)-100-10**2]\", \"astropy/units/tests/test_format.py::test_fits_scale_factor[10-20-1e-20-10**-20]\", \"astropy/units/tests/test_format.py::test_fits_scale_factor[10(-20)-1e-20-10**-20]\", \"astropy/units/tests/test_format.py::test_fits_scale_factor[10**-20-1e-20-10**-20]\", \"astropy/units/tests/test_format.py::test_fits_scale_factor[10**(-20)-1e-20-10**-20]\", \"astropy/units/tests/test_format.py::test_fits_scale_factor[10^-20-1e-20-10**-20]\", \"astropy/units/tests/test_format.py::test_fits_scale_factor[10^(-20)-1e-20-10**-20]\", \"astropy/units/tests/test_format.py::test_fits_scale_factor_errors\"]",
  "environment_setup_commit": "de88208326dc4cd68be1c3030f4f6d2eddf04520",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.547208",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}