{
  "repo": "scikit-learn/scikit-learn",
  "instance_id": "scikit-learn__scikit-learn-25370",
  "base_commit": "f45a9071e1ff2bdc044c040959b5387c3d9559c8",
  "patch": "diff --git a/sklearn/manifold/_t_sne.py b/sklearn/manifold/_t_sne.py\n--- a/sklearn/manifold/_t_sne.py\n+++ b/sklearn/manifold/_t_sne.py\n@@ -990,6 +990,8 @@ def _fit(self, X, skip_num_points=0):\n                 svd_solver=\"randomized\",\n                 random_state=random_state,\n             )\n+            # Always output a numpy array, no matter what is configured globally\n+            pca.set_output(transform=\"default\")\n             X_embedded = pca.fit_transform(X).astype(np.float32, copy=False)\n             # PCA is rescaled so that PC1 has standard deviation 1e-4 which is\n             # the default value for random initialization. See issue #18018.\n",
  "test_patch": "diff --git a/sklearn/manifold/tests/test_t_sne.py b/sklearn/manifold/tests/test_t_sne.py\n--- a/sklearn/manifold/tests/test_t_sne.py\n+++ b/sklearn/manifold/tests/test_t_sne.py\n@@ -5,6 +5,7 @@\n import scipy.sparse as sp\n import pytest\n \n+from sklearn import config_context\n from sklearn.neighbors import NearestNeighbors\n from sklearn.neighbors import kneighbors_graph\n from sklearn.exceptions import EfficiencyWarning\n@@ -1191,3 +1192,14 @@ def test_tsne_perplexity_validation(perplexity):\n     msg = \"perplexity must be less than n_samples\"\n     with pytest.raises(ValueError, match=msg):\n         est.fit_transform(X)\n+\n+\n+def test_tsne_works_with_pandas_output():\n+    \"\"\"Make sure that TSNE works when the output is set to \"pandas\".\n+\n+    Non-regression test for gh-25365.\n+    \"\"\"\n+    pytest.importorskip(\"pandas\")\n+    with config_context(transform_output=\"pandas\"):\n+        arr = np.arange(35 * 4).reshape(35, 4)\n+        TSNE(n_components=2).fit_transform(arr)\n",
  "problem_statement": "sklearn.set_config(transform_output=\"pandas\") breaks TSNE embeddings\n### Describe the bug\r\n\r\nTSNE doesn't work when the [global config is changed to pandas.](https://scikit-learn-enhancement-proposals.readthedocs.io/en/latest/slep018/proposal.html#global-configuration)\r\n\r\nI tracked down this bug in the sklearn codebase. The issue is here: https://github.com/scikit-learn/scikit-learn/blob/main/sklearn/manifold/_t_sne.py#L996\r\n\r\nWhat's happening is that `X_embedded` returns a Pandas array under `set_output` API, with the columns being named \"pca0\" and \"pca1\". So when `X_embedded[:, 0]` is called, we get an IndexError, because you'd have to index with `X_embedded.iloc[:, 0]` in this situation. \r\n\r\nPossible fix could be changing line 996 to this:\r\n`X_embedded = X_embedded / np.std(np.array(X_embedded)[:, 0]) * 1e-4`\r\n\r\nwhich I am happy to make a PR to do unless somebody has a cleaner way.\r\n\r\nCheers!\r\n\r\n### Steps/Code to Reproduce\r\n\r\n```py\r\nimport sklearn\r\nimport numpy as np\r\nfrom sklearn.manifold import TSNE\r\n\r\nsklearn.set_config(transform_output=\"pandas\")\r\narr = np.arange(35*4).reshape(35, 4)\r\nTSNE(n_components=2).fit_transform(arr)\r\n```\r\n\r\n### Expected Results\r\n\r\nNo error is thrown, a 2-dimensional pandas array is returned\r\n\r\n### Actual Results\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nFile ~/.pyenv/versions/3.10.9/lib/python3.10/site-packages/pandas/core/indexes/base.py:3803, in Index.get_loc(self, key, method, tolerance)\r\n   3802 try:\r\n-> 3803     return self._engine.get_loc(casted_key)\r\n   3804 except KeyError as err:\r\n\r\nFile ~/.pyenv/versions/3.10.9/lib/python3.10/site-packages/pandas/_libs/index.pyx:138, in pandas._libs.index.IndexEngine.get_loc()\r\n\r\nFile ~/.pyenv/versions/3.10.9/lib/python3.10/site-packages/pandas/_libs/index.pyx:144, in pandas._libs.index.IndexEngine.get_loc()\r\n\r\nTypeError: '(slice(None, None, None), 0)' is an invalid key\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nInvalidIndexError                         Traceback (most recent call last)\r\nCell In[14], line 7\r\n      5 sklearn.set_config(transform_output=\"pandas\")\r\n      6 arr = np.arange(35*4).reshape(35, 4)\r\n----> 7 TSNE(n_components=2).fit_transform(arr)\r\n\r\nFile ~/.pyenv/versions/3.10.9/lib/python3.10/site-packages/sklearn/manifold/_t_sne.py:1117, in TSNE.fit_transform(self, X, y)\r\n   1115 self._validate_params()\r\n   1116 self._check_params_vs_input(X)\r\n-> 1117 embedding = self._fit(X)\r\n   1118 self.embedding_ = embedding\r\n   1119 return self.embedding_\r\n\r\nFile ~/.pyenv/versions/3.10.9/lib/python3.10/site-packages/sklearn/manifold/_t_sne.py:996, in TSNE._fit(self, X, skip_num_points)\r\n    993     X_embedded = pca.fit_transform(X).astype(np.float32, copy=False)\r\n    994     # PCA is rescaled so that PC1 has standard deviation 1e-4 which is\r\n    995     # the default value for random initialization. See issue #18018.\r\n--> 996     X_embedded = X_embedded / np.std(X_embedded[:, 0]) * 1e-4\r\n    997 elif self.init == \"random\":\r\n    998     # The embedding is initialized with iid samples from Gaussians with\r\n    999     # standard deviation 1e-4.\r\n   1000     X_embedded = 1e-4 * random_state.standard_normal(\r\n   1001         size=(n_samples, self.n_components)\r\n   1002     ).astype(np.float32)\r\n\r\nFile ~/.pyenv/versions/3.10.9/lib/python3.10/site-packages/pandas/core/frame.py:3805, in DataFrame.__getitem__(self, key)\r\n   3803 if self.columns.nlevels > 1:\r\n   3804     return self._getitem_multilevel(key)\r\n-> 3805 indexer = self.columns.get_loc(key)\r\n   3806 if is_integer(indexer):\r\n   3807     indexer = [indexer]\r\n\r\nFile ~/.pyenv/versions/3.10.9/lib/python3.10/site-packages/pandas/core/indexes/base.py:3810, in Index.get_loc(self, key, method, tolerance)\r\n   3805         raise KeyError(key) from err\r\n   3806     except TypeError:\r\n   3807         # If we have a listlike key, _check_indexing_error will raise\r\n   3808         #  InvalidIndexError. Otherwise we fall through and re-raise\r\n   3809         #  the TypeError.\r\n-> 3810         self._check_indexing_error(key)\r\n   3811         raise\r\n   3813 # GH#42269\r\n\r\nFile ~/.pyenv/versions/3.10.9/lib/python3.10/site-packages/pandas/core/indexes/base.py:5968, in Index._check_indexing_error(self, key)\r\n   5964 def _check_indexing_error(self, key):\r\n   5965     if not is_scalar(key):\r\n   5966         # if key is not a scalar, directly raise an error (the code below\r\n   5967         # would convert to numpy arrays and raise later any way) - GH29926\r\n-> 5968         raise InvalidIndexError(key)\r\n\r\nInvalidIndexError: (slice(None, None, None), 0)\r\n```\r\n\r\n### Versions\r\n\r\n```shell\r\nSystem:\r\n    python: 3.10.9 (main, Dec 12 2022, 21:10:20) [GCC 9.4.0]\r\nexecutable: /home/aloftus/.pyenv/versions/3.10.9/bin/python3.10\r\n   machine: Linux-5.4.0-128-generic-x86_64-with-glibc2.31\r\n\r\nPython dependencies:\r\n      sklearn: 1.2.0\r\n          pip: 22.3.1\r\n   setuptools: 65.6.3\r\n        numpy: 1.23.5\r\n        scipy: 1.9.3\r\n       Cython: None\r\n       pandas: 1.5.2\r\n   matplotlib: 3.6.2\r\n       joblib: 1.2.0\r\nthreadpoolctl: 3.1.0\r\n\r\nBuilt with OpenMP: True\r\n\r\nthreadpoolctl info:\r\n       user_api: blas\r\n   internal_api: openblas\r\n         prefix: libopenblas\r\n       filepath: /home/aloftus/.pyenv/versions/3.10.9/lib/python3.10/site-packages/numpy.libs/libopenblas64_p-r0-742d56dc.3.20.so\r\n        version: 0.3.20\r\nthreading_layer: pthreads\r\n   architecture: SkylakeX\r\n    num_threads: 32\r\n\r\n       user_api: blas\r\n   internal_api: openblas\r\n         prefix: libopenblas\r\n       filepath: /home/aloftus/.pyenv/versions/3.10.9/lib/python3.10/site-packages/scipy.libs/libopenblasp-r0-41284840.3.18.so\r\n        version: 0.3.18\r\nthreading_layer: pthreads\r\n   architecture: SkylakeX\r\n    num_threads: 32\r\n\r\n       user_api: openmp\r\n   internal_api: openmp\r\n         prefix: libgomp\r\n       filepath: /home/aloftus/.pyenv/versions/3.10.9/lib/python3.10/site-packages/scikit_learn.libs/libgomp-a34b3233.so.1.0.0\r\n        version: None\r\n    num_threads: 32\r\n\r\n       user_api: openmp\r\n   internal_api: openmp\r\n         prefix: libgomp\r\n       filepath: /home/aloftus/.pyenv/versions/3.10.9/lib/python3.10/site-packages/torch/lib/libgomp-a34b3233.so.1\r\n        version: None\r\n    num_threads: 16\r\n```\r\n\n",
  "hints_text": "Thanks for the detailed bug report, it makes the bug easy to reproduce.\r\n\r\nBest fix might be to use `.set_output(transform=\"default\")` on the PCA estimator, to directly output a numpy array. PR welcome, bonus if you find other instances of this bug!",
  "created_at": "2023-01-12T14:13:46Z",
  "version": "1.3",
  "FAIL_TO_PASS": "[\"sklearn/manifold/tests/test_t_sne.py::test_tsne_works_with_pandas_output\"]",
  "PASS_TO_PASS": "[\"sklearn/manifold/tests/test_t_sne.py::test_gradient_descent_stops\", \"sklearn/manifold/tests/test_t_sne.py::test_binary_search\", \"sklearn/manifold/tests/test_t_sne.py::test_binary_search_underflow\", \"sklearn/manifold/tests/test_t_sne.py::test_binary_search_neighbors\", \"sklearn/manifold/tests/test_t_sne.py::test_binary_perplexity_stability\", \"sklearn/manifold/tests/test_t_sne.py::test_gradient\", \"sklearn/manifold/tests/test_t_sne.py::test_trustworthiness\", \"sklearn/manifold/tests/test_t_sne.py::test_trustworthiness_n_neighbors_error\", \"sklearn/manifold/tests/test_t_sne.py::test_preserve_trustworthiness_approximately[random-exact]\", \"sklearn/manifold/tests/test_t_sne.py::test_preserve_trustworthiness_approximately[random-barnes_hut]\", \"sklearn/manifold/tests/test_t_sne.py::test_preserve_trustworthiness_approximately[pca-exact]\", \"sklearn/manifold/tests/test_t_sne.py::test_preserve_trustworthiness_approximately[pca-barnes_hut]\", \"sklearn/manifold/tests/test_t_sne.py::test_optimization_minimizes_kl_divergence\", \"sklearn/manifold/tests/test_t_sne.py::test_fit_transform_csr_matrix[exact]\", \"sklearn/manifold/tests/test_t_sne.py::test_fit_transform_csr_matrix[barnes_hut]\", \"sklearn/manifold/tests/test_t_sne.py::test_preserve_trustworthiness_approximately_with_precomputed_distances\", \"sklearn/manifold/tests/test_t_sne.py::test_trustworthiness_not_euclidean_metric\", \"sklearn/manifold/tests/test_t_sne.py::test_bad_precomputed_distances[D0-.*\", \"sklearn/manifold/tests/test_t_sne.py::test_bad_precomputed_distances[D1-.*\", \"sklearn/manifold/tests/test_t_sne.py::test_exact_no_precomputed_sparse\", \"sklearn/manifold/tests/test_t_sne.py::test_high_perplexity_precomputed_sparse_distances\", \"sklearn/manifold/tests/test_t_sne.py::test_sparse_precomputed_distance\", \"sklearn/manifold/tests/test_t_sne.py::test_non_positive_computed_distances\", \"sklearn/manifold/tests/test_t_sne.py::test_init_ndarray\", \"sklearn/manifold/tests/test_t_sne.py::test_init_ndarray_precomputed\", \"sklearn/manifold/tests/test_t_sne.py::test_pca_initialization_not_compatible_with_precomputed_kernel\", \"sklearn/manifold/tests/test_t_sne.py::test_pca_initialization_not_compatible_with_sparse_input\", \"sklearn/manifold/tests/test_t_sne.py::test_n_components_range\", \"sklearn/manifold/tests/test_t_sne.py::test_early_exaggeration_used\", \"sklearn/manifold/tests/test_t_sne.py::test_n_iter_used\", \"sklearn/manifold/tests/test_t_sne.py::test_answer_gradient_two_points\", \"sklearn/manifold/tests/test_t_sne.py::test_answer_gradient_four_points\", \"sklearn/manifold/tests/test_t_sne.py::test_skip_num_points_gradient\", \"sklearn/manifold/tests/test_t_sne.py::test_verbose\", \"sklearn/manifold/tests/test_t_sne.py::test_chebyshev_metric\", \"sklearn/manifold/tests/test_t_sne.py::test_reduction_to_one_component\", \"sklearn/manifold/tests/test_t_sne.py::test_64bit[float32-barnes_hut]\", \"sklearn/manifold/tests/test_t_sne.py::test_64bit[float32-exact]\", \"sklearn/manifold/tests/test_t_sne.py::test_64bit[float64-barnes_hut]\", \"sklearn/manifold/tests/test_t_sne.py::test_64bit[float64-exact]\", \"sklearn/manifold/tests/test_t_sne.py::test_kl_divergence_not_nan[barnes_hut]\", \"sklearn/manifold/tests/test_t_sne.py::test_kl_divergence_not_nan[exact]\", \"sklearn/manifold/tests/test_t_sne.py::test_barnes_hut_angle\", \"sklearn/manifold/tests/test_t_sne.py::test_n_iter_without_progress\", \"sklearn/manifold/tests/test_t_sne.py::test_min_grad_norm\", \"sklearn/manifold/tests/test_t_sne.py::test_accessible_kl_divergence\", \"sklearn/manifold/tests/test_t_sne.py::test_uniform_grid[barnes_hut]\", \"sklearn/manifold/tests/test_t_sne.py::test_uniform_grid[exact]\", \"sklearn/manifold/tests/test_t_sne.py::test_bh_match_exact\", \"sklearn/manifold/tests/test_t_sne.py::test_gradient_bh_multithread_match_sequential\", \"sklearn/manifold/tests/test_t_sne.py::test_tsne_with_different_distance_metrics[barnes_hut-cosine-cosine_distances]\", \"sklearn/manifold/tests/test_t_sne.py::test_tsne_with_different_distance_metrics[exact-manhattan-manhattan_distances]\", \"sklearn/manifold/tests/test_t_sne.py::test_tsne_with_different_distance_metrics[exact-cosine-cosine_distances]\", \"sklearn/manifold/tests/test_t_sne.py::test_tsne_n_jobs[exact]\", \"sklearn/manifold/tests/test_t_sne.py::test_tsne_n_jobs[barnes_hut]\", \"sklearn/manifold/tests/test_t_sne.py::test_tsne_with_mahalanobis_distance\", \"sklearn/manifold/tests/test_t_sne.py::test_tsne_deprecation_square_distances\", \"sklearn/manifold/tests/test_t_sne.py::test_tsne_perplexity_validation[20]\", \"sklearn/manifold/tests/test_t_sne.py::test_tsne_perplexity_validation[30]\"]",
  "environment_setup_commit": "1e8a5b833d1b58f3ab84099c4582239af854b23a",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.020027",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}