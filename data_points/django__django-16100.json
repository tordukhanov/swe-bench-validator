{
  "repo": "django/django",
  "instance_id": "django__django-16100",
  "base_commit": "c6350d594c359151ee17b0c4f354bb44f28ff69e",
  "patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -2011,15 +2011,17 @@ def changelist_view(self, request, extra_context=None):\n             )\n             if formset.is_valid():\n                 changecount = 0\n-                for form in formset.forms:\n-                    if form.has_changed():\n-                        obj = self.save_form(request, form, change=True)\n-                        self.save_model(request, obj, form, change=True)\n-                        self.save_related(request, form, formsets=[], change=True)\n-                        change_msg = self.construct_change_message(request, form, None)\n-                        self.log_change(request, obj, change_msg)\n-                        changecount += 1\n-\n+                with transaction.atomic(using=router.db_for_write(self.model)):\n+                    for form in formset.forms:\n+                        if form.has_changed():\n+                            obj = self.save_form(request, form, change=True)\n+                            self.save_model(request, obj, form, change=True)\n+                            self.save_related(request, form, formsets=[], change=True)\n+                            change_msg = self.construct_change_message(\n+                                request, form, None\n+                            )\n+                            self.log_change(request, obj, change_msg)\n+                            changecount += 1\n                 if changecount:\n                     msg = ngettext(\n                         \"%(count)s %(name)s was changed successfully.\",\n",
  "test_patch": "diff --git a/tests/admin_changelist/tests.py b/tests/admin_changelist/tests.py\n--- a/tests/admin_changelist/tests.py\n+++ b/tests/admin_changelist/tests.py\n@@ -1,4 +1,5 @@\n import datetime\n+from unittest import mock\n \n from django.contrib import admin\n from django.contrib.admin.models import LogEntry\n@@ -16,12 +17,12 @@\n from django.contrib.auth.models import User\n from django.contrib.contenttypes.models import ContentType\n from django.contrib.messages.storage.cookie import CookieStorage\n-from django.db import connection, models\n+from django.db import DatabaseError, connection, models\n from django.db.models import F, Field, IntegerField\n from django.db.models.functions import Upper\n from django.db.models.lookups import Contains, Exact\n from django.template import Context, Template, TemplateSyntaxError\n-from django.test import TestCase, override_settings\n+from django.test import TestCase, override_settings, skipUnlessDBFeature\n from django.test.client import RequestFactory\n from django.test.utils import CaptureQueriesContext, isolate_apps, register_lookup\n from django.urls import reverse\n@@ -400,6 +401,53 @@ def test_result_list_editable(self):\n         with self.assertRaises(IncorrectLookupParameters):\n             m.get_changelist_instance(request)\n \n+    @skipUnlessDBFeature(\"supports_transactions\")\n+    def test_list_editable_atomicity(self):\n+        a = Swallow.objects.create(origin=\"Swallow A\", load=4, speed=1)\n+        b = Swallow.objects.create(origin=\"Swallow B\", load=2, speed=2)\n+\n+        self.client.force_login(self.superuser)\n+        changelist_url = reverse(\"admin:admin_changelist_swallow_changelist\")\n+        data = {\n+            \"form-TOTAL_FORMS\": \"2\",\n+            \"form-INITIAL_FORMS\": \"2\",\n+            \"form-MIN_NUM_FORMS\": \"0\",\n+            \"form-MAX_NUM_FORMS\": \"1000\",\n+            \"form-0-uuid\": str(a.pk),\n+            \"form-1-uuid\": str(b.pk),\n+            \"form-0-load\": \"9.0\",\n+            \"form-0-speed\": \"3.0\",\n+            \"form-1-load\": \"5.0\",\n+            \"form-1-speed\": \"1.0\",\n+            \"_save\": \"Save\",\n+        }\n+        with mock.patch(\n+            \"django.contrib.admin.ModelAdmin.log_change\", side_effect=DatabaseError\n+        ):\n+            with self.assertRaises(DatabaseError):\n+                self.client.post(changelist_url, data)\n+        # Original values are preserved.\n+        a.refresh_from_db()\n+        self.assertEqual(a.load, 4)\n+        self.assertEqual(a.speed, 1)\n+        b.refresh_from_db()\n+        self.assertEqual(b.load, 2)\n+        self.assertEqual(b.speed, 2)\n+\n+        with mock.patch(\n+            \"django.contrib.admin.ModelAdmin.log_change\",\n+            side_effect=[None, DatabaseError],\n+        ):\n+            with self.assertRaises(DatabaseError):\n+                self.client.post(changelist_url, data)\n+        # Original values are preserved.\n+        a.refresh_from_db()\n+        self.assertEqual(a.load, 4)\n+        self.assertEqual(a.speed, 1)\n+        b.refresh_from_db()\n+        self.assertEqual(b.load, 2)\n+        self.assertEqual(b.speed, 2)\n+\n     def test_custom_paginator(self):\n         new_parent = Parent.objects.create(name=\"parent\")\n         for i in range(1, 201):\n",
  "problem_statement": "Add transaction handling to Changelist list_editable processing.\nDescription\n\t\nIt seems that changelist_view in Django admin is missing a transaction. Since the view may change data in database, it should be wrapped in a transaction to prevent unexpected states in case of errors.\n",
  "hints_text": "So, this has never been wrapped in a transaction. See â€‹https://github.com/django/django/commit/7bc0878922 where it was added. Happy to accept as a New Feature to investigate adding that. (I can't immediately see any obvious blockers.)",
  "created_at": "2022-09-24T13:32:02Z",
  "version": "4.2",
  "FAIL_TO_PASS": "[\"test_list_editable_atomicity (admin_changelist.tests.ChangeListTests)\"]",
  "PASS_TO_PASS": "[\"{% get_admin_log %} works if the user model's primary key isn't named\", \"test_missing_args (admin_changelist.tests.GetAdminLogTests)\", \"{% get_admin_log %} works without specifying a user.\", \"test_non_integer_limit (admin_changelist.tests.GetAdminLogTests)\", \"test_without_as (admin_changelist.tests.GetAdminLogTests)\", \"test_without_for_user (admin_changelist.tests.GetAdminLogTests)\", \"test_builtin_lookup_in_search_fields (admin_changelist.tests.ChangeListTests)\", \"test_changelist_search_form_validation (admin_changelist.tests.ChangeListTests)\", \"list_editable edits use a filtered queryset to limit memory usage.\", \"test_clear_all_filters_link (admin_changelist.tests.ChangeListTests)\", \"test_clear_all_filters_link_callable_filter (admin_changelist.tests.ChangeListTests)\", \"Regression test for #13196: output of functions should be  localized\", \"test_custom_lookup_in_search_fields (admin_changelist.tests.ChangeListTests)\", \"test_custom_lookup_with_pk_shortcut (admin_changelist.tests.ChangeListTests)\", \"test_custom_paginator (admin_changelist.tests.ChangeListTests)\", \"The primary key is used in the ordering of the changelist's results to\", \"Regression tests for #14206: dynamic list_display support.\", \"Regression tests for #16257: dynamic list_display_links support.\", \"Regression tests for ticket #17646: dynamic list_filter support.\", \"test_dynamic_search_fields (admin_changelist.tests.ChangeListTests)\", \"test_get_edited_object_ids (admin_changelist.tests.ChangeListTests)\", \"test_get_list_editable_queryset (admin_changelist.tests.ChangeListTests)\", \"test_get_list_editable_queryset_with_regex_chars_in_prefix (admin_changelist.tests.ChangeListTests)\", \"test_get_select_related_custom_method (admin_changelist.tests.ChangeListTests)\", \"test_many_search_terms (admin_changelist.tests.ChangeListTests)\", \"All rows containing each of the searched words are returned, where each\", \"Simultaneous edits of list_editable fields on the changelist by\", \"test_no_clear_all_filters_link (admin_changelist.tests.ChangeListTests)\", \"Regression test for #13902: When using a ManyToMany in list_filter,\", \"When using a ManyToMany in search_fields at the second level behind a\", \"Regressions tests for #15819: If a field listed in list_filters is a\", \"Regressions tests for #15819: If a field listed in search_fields\", \"When using a ManyToMany in list_filter at the second level behind a\", \"If a ManyToManyField is in list_filter but isn't in any lookup params,\", \"#15185 -- Allow no links from the 'change list' view grid.\", \"When ModelAdmin.has_add_permission() returns False, the object-tools\", \"Regression tests for #12893: Pagination in admins changelist doesn't\", \"Regression tests for ticket #15653: ensure the number of pages\", \"test_pk_in_search_fields (admin_changelist.tests.ChangeListTests)\", \"Searches over multi-valued relationships return rows from related\", \"test_repr (admin_changelist.tests.ChangeListTests)\", \"Regression test for #14312: list_editable with pagination\", \"Regression tests for #11791: Inclusion tag result_list generates a\", \"Regression test for #14982: EMPTY_CHANGELIST_VALUE should be honored\", \"Inclusion tag result_list generates a table when with default\", \"Empty value display can be set in ModelAdmin or individual fields.\", \"Empty value display can be set on AdminSite.\", \"test_search_help_text (admin_changelist.tests.ChangeListTests)\", \"test_select_related_as_empty_tuple (admin_changelist.tests.ChangeListTests)\", \"test_select_related_as_tuple (admin_changelist.tests.ChangeListTests)\", \"Regression test for #10348: ChangeList.get_queryset() shouldn't\", \"test_select_related_preserved_when_multi_valued_in_search_fields (admin_changelist.tests.ChangeListTests)\", \"test_show_all (admin_changelist.tests.ChangeListTests)\", \"test_spanning_relations_with_custom_lookup_in_search_fields (admin_changelist.tests.ChangeListTests)\", \"test_specified_ordering_by_f_expression (admin_changelist.tests.ChangeListTests)\", \"test_specified_ordering_by_f_expression_without_asc_desc (admin_changelist.tests.ChangeListTests)\", \"test_total_ordering_optimization (admin_changelist.tests.ChangeListTests)\", \"test_total_ordering_optimization_meta_constraints (admin_changelist.tests.ChangeListTests)\", \"test_tuple_list_display (admin_changelist.tests.ChangeListTests)\"]",
  "environment_setup_commit": "0fbdb9784da915fce5dcc1fe82bac9b4785749e5",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.748499",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}