{
  "repo": "django/django",
  "instance_id": "django__django-11194",
  "base_commit": "86a3ad351ec18d9dcd50cac1fc8ada6f904675db",
  "patch": "diff --git a/django/contrib/syndication/views.py b/django/contrib/syndication/views.py\n--- a/django/contrib/syndication/views.py\n+++ b/django/contrib/syndication/views.py\n@@ -1,6 +1,5 @@\n from calendar import timegm\n \n-from django.conf import settings\n from django.contrib.sites.shortcuts import get_current_site\n from django.core.exceptions import ImproperlyConfigured, ObjectDoesNotExist\n from django.http import Http404, HttpResponse\n@@ -10,6 +9,7 @@\n from django.utils.html import escape\n from django.utils.http import http_date\n from django.utils.timezone import get_default_timezone, is_naive, make_aware\n+from django.utils.translation import get_language\n \n \n def add_domain(domain, url, secure=False):\n@@ -30,6 +30,7 @@ class Feed:\n     feed_type = feedgenerator.DefaultFeed\n     title_template = None\n     description_template = None\n+    language = None\n \n     def __call__(self, request, *args, **kwargs):\n         try:\n@@ -134,7 +135,7 @@ def get_feed(self, obj, request):\n             subtitle=self._get_dynamic_attr('subtitle', obj),\n             link=link,\n             description=self._get_dynamic_attr('description', obj),\n-            language=settings.LANGUAGE_CODE,\n+            language=self.language or get_language(),\n             feed_url=add_domain(\n                 current_site.domain,\n                 self._get_dynamic_attr('feed_url', obj) or request.path,\n",
  "test_patch": "diff --git a/tests/syndication_tests/feeds.py b/tests/syndication_tests/feeds.py\n--- a/tests/syndication_tests/feeds.py\n+++ b/tests/syndication_tests/feeds.py\n@@ -136,6 +136,10 @@ def get_context_data(self, **kwargs):\n         return context\n \n \n+class TestLanguageFeed(TestRss2Feed):\n+    language = 'de'\n+\n+\n class NaiveDatesFeed(TestAtomFeed):\n     \"\"\"\n     A feed with naive (non-timezone-aware) dates.\ndiff --git a/tests/syndication_tests/tests.py b/tests/syndication_tests/tests.py\n--- a/tests/syndication_tests/tests.py\n+++ b/tests/syndication_tests/tests.py\n@@ -82,6 +82,7 @@ def test_rss2_feed(self):\n         self.assertEqual(len(feed_elem), 1)\n         feed = feed_elem[0]\n         self.assertEqual(feed.getAttribute('version'), '2.0')\n+        self.assertEqual(feed.getElementsByTagName('language')[0].firstChild.nodeValue, 'en')\n \n         # Making sure there's only one `channel` element w/in the\n         # `rss` element.\n@@ -363,6 +364,11 @@ def test_custom_feed_generator(self):\n             summary = entry.getElementsByTagName('summary')[0]\n             self.assertEqual(summary.getAttribute('type'), 'html')\n \n+    def test_feed_generator_language_attribute(self):\n+        response = self.client.get('/syndication/language/')\n+        feed = minidom.parseString(response.content).firstChild\n+        self.assertEqual(feed.firstChild.getElementsByTagName('language')[0].firstChild.nodeValue, 'de')\n+\n     def test_title_escaping(self):\n         \"\"\"\n         Titles are escaped correctly in RSS feeds.\ndiff --git a/tests/syndication_tests/urls.py b/tests/syndication_tests/urls.py\n--- a/tests/syndication_tests/urls.py\n+++ b/tests/syndication_tests/urls.py\n@@ -15,6 +15,7 @@\n     path('syndication/atom/', feeds.TestAtomFeed()),\n     path('syndication/latest/', feeds.TestLatestFeed()),\n     path('syndication/custom/', feeds.TestCustomFeed()),\n+    path('syndication/language/', feeds.TestLanguageFeed()),\n     path('syndication/naive-dates/', feeds.NaiveDatesFeed()),\n     path('syndication/aware-dates/', feeds.TZAwareDatesFeed()),\n     path('syndication/feedurl/', feeds.TestFeedUrlFeed()),\n",
  "problem_statement": "Allow specifying a Feed language different from settings.LANGUAGE_CODE\nDescription\n\t\nRSS views.py uses settings.LANGUAGE_CODE as \"language tag\" for the RSS feed\nI couldnt find a way to change it.. so I made this patch\nâ€‹https://github.com/django/django/pull/9879\n",
  "hints_text": "",
  "created_at": "2019-04-10T21:52:03Z",
  "version": "3.0",
  "FAIL_TO_PASS": "[\"test_feed_generator_language_attribute (syndication_tests.tests.SyndicationFeedTest)\"]",
  "PASS_TO_PASS": "[\"test_add_domain (syndication_tests.tests.SyndicationFeedTest)\", \"test_atom_feed (syndication_tests.tests.SyndicationFeedTest)\", \"test_atom_feed_published_and_updated_elements (syndication_tests.tests.SyndicationFeedTest)\", \"test_atom_multiple_enclosures (syndication_tests.tests.SyndicationFeedTest)\", \"test_atom_single_enclosure (syndication_tests.tests.SyndicationFeedTest)\", \"test_aware_datetime_conversion (syndication_tests.tests.SyndicationFeedTest)\", \"test_custom_feed_generator (syndication_tests.tests.SyndicationFeedTest)\", \"test_feed_last_modified_time (syndication_tests.tests.SyndicationFeedTest)\", \"test_feed_last_modified_time_naive_date (syndication_tests.tests.SyndicationFeedTest)\", \"test_feed_url (syndication_tests.tests.SyndicationFeedTest)\", \"test_item_link_error (syndication_tests.tests.SyndicationFeedTest)\", \"test_latest_post_date (syndication_tests.tests.SyndicationFeedTest)\", \"test_naive_datetime_conversion (syndication_tests.tests.SyndicationFeedTest)\", \"test_rss091_feed (syndication_tests.tests.SyndicationFeedTest)\", \"test_rss2_feed (syndication_tests.tests.SyndicationFeedTest)\", \"test_rss2_feed_guid_permalink_false (syndication_tests.tests.SyndicationFeedTest)\", \"test_rss2_feed_guid_permalink_true (syndication_tests.tests.SyndicationFeedTest)\", \"test_rss2_multiple_enclosures (syndication_tests.tests.SyndicationFeedTest)\", \"test_rss2_single_enclosure (syndication_tests.tests.SyndicationFeedTest)\", \"test_secure_urls (syndication_tests.tests.SyndicationFeedTest)\", \"test_template_context_feed (syndication_tests.tests.SyndicationFeedTest)\", \"test_template_feed (syndication_tests.tests.SyndicationFeedTest)\", \"test_title_escaping (syndication_tests.tests.SyndicationFeedTest)\"]",
  "environment_setup_commit": "419a78300f7cd27611196e1e464d50fd0385ff27",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.564150",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}