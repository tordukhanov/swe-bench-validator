{
  "repo": "pytest-dev/pytest",
  "instance_id": "pytest-dev__pytest-9064",
  "base_commit": "014fa61e0db9f9ebdedf57e1ab8f30df30c7c469",
  "patch": "diff --git a/src/_pytest/stepwise.py b/src/_pytest/stepwise.py\n--- a/src/_pytest/stepwise.py\n+++ b/src/_pytest/stepwise.py\n@@ -31,13 +31,16 @@ def pytest_addoption(parser: Parser) -> None:\n         action=\"store_true\",\n         default=False,\n         dest=\"stepwise_skip\",\n-        help=\"ignore the first failing test but stop on the next failing test\",\n+        help=\"ignore the first failing test but stop on the next failing test.\\n\"\n+        \"implicitly enables --stepwise.\",\n     )\n \n \n @pytest.hookimpl\n def pytest_configure(config: Config) -> None:\n-    # We should always have a cache as cache provider plugin uses tryfirst=True\n+    if config.option.stepwise_skip:\n+        # allow --stepwise-skip to work on it's own merits.\n+        config.option.stepwise = True\n     if config.getoption(\"stepwise\"):\n         config.pluginmanager.register(StepwisePlugin(config), \"stepwiseplugin\")\n \n",
  "test_patch": "diff --git a/testing/test_stepwise.py b/testing/test_stepwise.py\n--- a/testing/test_stepwise.py\n+++ b/testing/test_stepwise.py\n@@ -248,3 +248,33 @@ def test_d(): pass\n             \"* 2 passed, 1 deselected, 1 xfailed in *\",\n         ]\n     )\n+\n+\n+def test_stepwise_skip_is_independent(pytester: Pytester) -> None:\n+    pytester.makepyfile(\n+        \"\"\"\n+        def test_one():\n+            assert False\n+\n+        def test_two():\n+            assert False\n+\n+        def test_three():\n+            assert False\n+\n+        \"\"\"\n+    )\n+    result = pytester.runpytest(\"--tb\", \"no\", \"--stepwise-skip\")\n+    result.assert_outcomes(failed=2)\n+    result.stdout.fnmatch_lines(\n+        [\n+            \"FAILED test_stepwise_skip_is_independent.py::test_one - assert False\",\n+            \"FAILED test_stepwise_skip_is_independent.py::test_two - assert False\",\n+            \"*Interrupted: Test failed, continuing from this test next run.*\",\n+        ]\n+    )\n+\n+\n+def test_sw_skip_help(pytester: Pytester) -> None:\n+    result = pytester.runpytest(\"-h\")\n+    result.stdout.fnmatch_lines(\"*implicitly enables --stepwise.\")\n",
  "problem_statement": "`--stepwise-skip` has no effect without `--stepwise`\n- [x] a detailed description of the bug or problem you are having\r\n\r\nThe flag `--stepwise` will \"exit on test failure and continue from last failing test\".\r\nThe flag `--stepwise-skip` is supposed to \"ignore the first failing test but stop on the next failing test\".\r\nHowever, it does nothing unless used in conjunction with `--stepwise`. The combo requirement is not mentioned in the help text, seems redundant, and is surprising behavior.\r\n\r\nI recommend that `--stepwise-skip` should act the same as `--stepwise --stepwise-skip`.\r\n\r\n- [x] output of `pip list` from the virtual environment you are using\r\n```shell\r\n$ pip list\r\nPackage    Version\r\n---------- -------\r\nattrs      21.2.0\r\niniconfig  1.1.1\r\npackaging  21.0\r\npip        21.2.4\r\npluggy     0.13.1\r\npy         1.10.0\r\npyparsing  2.4.7\r\npytest     6.2.4\r\nsetuptools 46.4.0\r\ntoml       0.10.2\r\nwheel      0.34.2\r\n```\r\n\r\n- [x] pytest and operating system versions\r\n\r\nMacOS, Python 3.9.5, pytest-6.2.4\r\n\r\n- [x] minimal example if possible\r\n\r\nExample **test_step.py**:\r\n```python\r\ndef test_one():\r\n  assert False\r\n\r\ndef test_two():\r\n  assert False\r\n\r\ndef test_three():\r\n  assert False\r\n```\r\n\r\nthree failures:\r\n```shell\r\n$ pytest --tb=no test_step.py                \r\n========================= test session starts ==========================\r\nplatform darwin -- Python 3.9.5, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\nrootdir: /Users/okken/projects/sw\r\ncollected 3 items                                                      \r\n\r\ntest_step.py FFF                                                 [100%]\r\n\r\n======================= short test summary info ========================\r\nFAILED test_step.py::test_one - assert False\r\nFAILED test_step.py::test_two - assert False\r\nFAILED test_step.py::test_three - assert False\r\n========================== 3 failed in 0.01s ===========================\r\n\r\n```\r\n\r\n`--stepwise-skip` has no effect:\r\n```shell\r\n$ pytest --tb=no --stepwise-skip test_step.py\r\n========================= test session starts ==========================\r\nplatform darwin -- Python 3.9.5, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\nrootdir: /Users/okken/projects/sw\r\ncollected 3 items                                                      \r\n\r\ntest_step.py FFF                                                 [100%]\r\n\r\n======================= short test summary info ========================\r\nFAILED test_step.py::test_one - assert False\r\nFAILED test_step.py::test_two - assert False\r\nFAILED test_step.py::test_three - assert False\r\n========================== 3 failed in 0.01s ===========================\r\n```\r\n\r\n`--stepwise` works as expected, stopping after first failure:\r\n```shell\r\n$ pytest --tb=no --stepwise test_step.py\r\n========================= test session starts ==========================\r\nplatform darwin -- Python 3.9.5, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\nrootdir: /Users/okken/projects/sw\r\ncollected 3 items                                                      \r\nstepwise: no previously failed tests, not skipping.\r\n\r\ntest_step.py F\r\n\r\n======================= short test summary info ========================\r\nFAILED test_step.py::test_one - assert False\r\n!!!! Interrupted: Test failed, continuing from this test next run. !!!!!\r\n========================== 1 failed in 0.07s ===========================\r\n```\r\n\r\n`--stepwise-skip` only works with `--stepwise` to stop after second failure:\r\n```shell\r\n\r\n$ pytest --tb=no --stepwise --stepwise-skip test_step.py\r\n========================= test session starts ==========================\r\nplatform darwin -- Python 3.9.5, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\r\nrootdir: /Users/okken/projects/sw\r\ncollected 3 items                                                      \r\nstepwise: skipping 0 already passed items.\r\n\r\ntest_step.py FF\r\n\r\n======================= short test summary info ========================\r\nFAILED test_step.py::test_one - assert False\r\nFAILED test_step.py::test_two - assert False\r\n!!!! Interrupted: Test failed, continuing from this test next run. !!!!!\r\n========================== 2 failed in 0.07s ===========================\r\n```\r\n\r\nI believe the above behavior, the combo of the flags, should work like that even if only `--stepwise-skip` is used.\r\n\n",
  "hints_text": "Agreed, thanks for catching and reporting it. üëç \nThanks, i'll fix this up (I was in and around that plugin a while ago)",
  "created_at": "2021-08-30T17:54:14Z",
  "version": "7.0",
  "FAIL_TO_PASS": "[\"testing/test_stepwise.py::test_stepwise_skip_is_independent\", \"testing/test_stepwise.py::test_sw_skip_help\"]",
  "PASS_TO_PASS": "[\"testing/test_stepwise.py::test_run_without_stepwise\", \"testing/test_stepwise.py::test_stepwise_output_summary\", \"testing/test_stepwise.py::test_fail_and_continue_with_stepwise\", \"testing/test_stepwise.py::test_run_with_skip_option[--stepwise-skip]\", \"testing/test_stepwise.py::test_run_with_skip_option[--sw-skip]\", \"testing/test_stepwise.py::test_fail_on_errors\", \"testing/test_stepwise.py::test_change_testfile\", \"testing/test_stepwise.py::test_stop_on_collection_errors[True]\", \"testing/test_stepwise.py::test_stop_on_collection_errors[False]\", \"testing/test_stepwise.py::test_xfail_handling\"]",
  "environment_setup_commit": "e2ee3144ed6e241dea8d96215fcdca18b3892551",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.945399",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}