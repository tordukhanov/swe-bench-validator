{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-15567",
  "base_commit": "39fe1d243440277a01d15fabc58dd36fc8c12f65",
  "patch": "diff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -575,7 +575,7 @@ def __divmod__(self, other):\n             return Tuple(*divmod(self.p, other.p))\n         else:\n             rat = self/other\n-        w = sign(rat)*int(abs(rat))  # = rat.floor()\n+        w = int(rat) if rat > 0 else int(rat) - 1\n         r = self - other*w\n         return Tuple(w, r)\n \n",
  "test_patch": "diff --git a/sympy/core/tests/test_numbers.py b/sympy/core/tests/test_numbers.py\n--- a/sympy/core/tests/test_numbers.py\n+++ b/sympy/core/tests/test_numbers.py\n@@ -191,6 +191,9 @@ def test_divmod():\n     assert divmod(S(-3), S(2)) == (-2, 1)\n     assert divmod(S(-3), 2) == (-2, 1)\n \n+    assert divmod(S(4), S(-3.1)) == Tuple(-2, -2.2)\n+    assert divmod(S(4), S(-2.1)) == divmod(4, -2.1)\n+    assert divmod(S(-8), S(-2.5) ) == Tuple(3 , -0.5)\n \n def test_igcd():\n     assert igcd(0, 0) == 0\n",
  "problem_statement": "SymPy's Number.__divmod__ doesn't agree with the builtin divmod\n```py\r\n>>> divmod(4, -2.1)\r\n(-2.0, -0.20000000000000018)\r\n>>> divmod(S(4), S(-2.1))\r\n(-1, 1.9)\r\n```\r\n\r\nBoth are mathematically correct according to the invariant in the `divmod` docstring, `div*y + mod == x`, but we should be consistent with Python. In general in Python, the sign of mod should be the same as the sign of the second argument.\r\n\r\n```py\r\n>>> -1*-2.1 + 1.9\r\n4.0\r\n>>> -2.0*-2.1 + -0.2\r\n4.0\r\n```\r\n\r\nOur `Mod` is already correct, so it's just `Number.__divmod__` that needs to be corrected\r\n\r\n```py\r\n>>> Mod(4, -2.1)\r\n-0.200000000000000\r\n```\n",
  "hints_text": "",
  "created_at": "2018-11-29T13:29:13Z",
  "version": "1.4",
  "FAIL_TO_PASS": "[\"test_divmod\"]",
  "PASS_TO_PASS": "[\"test_integers_cache\", \"test_seterr\", \"test_mod\", \"test_igcd\", \"test_igcd_lehmer\", \"test_igcd2\", \"test_ilcm\", \"test_igcdex\", \"test_Integer_new\", \"test_Rational_new\", \"test_Number_new\", \"test_Rational_cmp\", \"test_Float\", \"test_float_mpf\", \"test_Float_RealElement\", \"test_Float_default_to_highprec_from_str\", \"test_Float_eval\", \"test_Float_issue_2107\", \"test_issue_14289\", \"test_Float_from_tuple\", \"test_Infinity\", \"test_Infinity_2\", \"test_Mul_Infinity_Zero\", \"test_Div_By_Zero\", \"test_Infinity_inequations\", \"test_NaN\", \"test_special_numbers\", \"test_powers\", \"test_integer_nthroot_overflow\", \"test_integer_log\", \"test_isqrt\", \"test_powers_Integer\", \"test_powers_Rational\", \"test_powers_Float\", \"test_abs1\", \"test_accept_int\", \"test_dont_accept_str\", \"test_int\", \"test_long\", \"test_real_bug\", \"test_bug_sqrt\", \"test_pi_Pi\", \"test_no_len\", \"test_issue_3321\", \"test_issue_3692\", \"test_issue_3423\", \"test_issue_3449\", \"test_issue_13890\", \"test_Integer_factors\", \"test_Rational_factors\", \"test_issue_4107\", \"test_IntegerInteger\", \"test_Rational_gcd_lcm_cofactors\", \"test_Float_gcd_lcm_cofactors\", \"test_issue_4611\", \"test_conversion_to_mpmath\", \"test_relational\", \"test_Integer_as_index\", \"test_Rational_int\", \"test_zoo\", \"test_issue_4122\", \"test_GoldenRatio_expand\", \"test_TribonacciConstant_expand\", \"test_as_content_primitive\", \"test_hashing_sympy_integers\", \"test_issue_4172\", \"test_Catalan_EulerGamma_prec\", \"test_Float_eq\", \"test_int_NumberSymbols\", \"test_issue_6640\", \"test_issue_6349\", \"test_mpf_norm\", \"test_latex\", \"test_issue_7742\", \"test_simplify_AlgebraicNumber\", \"test_Float_idempotence\", \"test_comp\", \"test_issue_9491\", \"test_issue_10063\", \"test_issue_10020\", \"test_invert_numbers\", \"test_mod_inverse\", \"test_golden_ratio_rewrite_as_sqrt\", \"test_tribonacci_constant_rewrite_as_sqrt\", \"test_comparisons_with_unknown_type\", \"test_NumberSymbol_comparison\", \"test_Integer_precision\"]",
  "environment_setup_commit": "73b3f90093754c5ed1561bd885242330e3583004",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.101994",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}