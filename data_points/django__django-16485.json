{
  "repo": "django/django",
  "instance_id": "django__django-16485",
  "base_commit": "39f83765e12b0e5d260b7939fc3fe281d879b279",
  "patch": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -168,7 +168,7 @@ def floatformat(text, arg=-1):\n     except (ValueError, OverflowError, InvalidOperation):\n         return input_val\n \n-    if not m and p < 0:\n+    if not m and p <= 0:\n         return mark_safe(\n             formats.number_format(\n                 \"%d\" % (int(d)),\n",
  "test_patch": "diff --git a/tests/template_tests/filter_tests/test_floatformat.py b/tests/template_tests/filter_tests/test_floatformat.py\n--- a/tests/template_tests/filter_tests/test_floatformat.py\n+++ b/tests/template_tests/filter_tests/test_floatformat.py\n@@ -111,6 +111,8 @@ def test_zero_values(self):\n         self.assertEqual(\n             floatformat(0.000000000000000000015, 20), \"0.00000000000000000002\"\n         )\n+        self.assertEqual(floatformat(\"0.00\", 0), \"0\")\n+        self.assertEqual(floatformat(Decimal(\"0.00\"), 0), \"0\")\n \n     def test_negative_zero_values(self):\n         tests = [\n",
  "problem_statement": "floatformat() crashes on \"0.00\".\nDescription\n\t\nfrom decimal import Decimal\nfrom django.template.defaultfilters import floatformat\nfloatformat('0.00', 0)\nfloatformat(Decimal('0.00'), 0)\nBoth throw ValueError: valid range for prec is [1, MAX_PREC]\n",
  "hints_text": "Thanks for the report and testing against the alpha release! Regression in 08c5a787262c1ae57f6517d4574b54a5fcaad124.",
  "created_at": "2023-01-18T22:03:52Z",
  "version": "5.0",
  "FAIL_TO_PASS": "[\"test_zero_values (template_tests.filter_tests.test_floatformat.FunctionTests.test_zero_values)\"]",
  "PASS_TO_PASS": "[\"test_floatformat01 (template_tests.filter_tests.test_floatformat.FloatformatTests.test_floatformat01)\", \"test_floatformat02 (template_tests.filter_tests.test_floatformat.FloatformatTests.test_floatformat02)\", \"test_float_dunder_method (template_tests.filter_tests.test_floatformat.FunctionTests.test_float_dunder_method)\", \"test_force_grouping (template_tests.filter_tests.test_floatformat.FunctionTests.test_force_grouping)\", \"test_infinity (template_tests.filter_tests.test_floatformat.FunctionTests.test_infinity)\", \"test_inputs (template_tests.filter_tests.test_floatformat.FunctionTests.test_inputs)\", \"#15789\", \"test_negative_zero_values (template_tests.filter_tests.test_floatformat.FunctionTests.test_negative_zero_values)\", \"test_unlocalize (template_tests.filter_tests.test_floatformat.FunctionTests.test_unlocalize)\"]",
  "environment_setup_commit": "4a72da71001f154ea60906a2f74898d32b7322a7",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.758368",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}