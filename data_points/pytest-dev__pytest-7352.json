{
  "repo": "pytest-dev/pytest",
  "instance_id": "pytest-dev__pytest-7352",
  "base_commit": "0821c5c81d115c161a081fc048e4cf59521fe17e",
  "patch": "diff --git a/src/_pytest/pathlib.py b/src/_pytest/pathlib.py\n--- a/src/_pytest/pathlib.py\n+++ b/src/_pytest/pathlib.py\n@@ -1,4 +1,5 @@\n import atexit\n+import contextlib\n import fnmatch\n import itertools\n import os\n@@ -290,10 +291,14 @@ def ensure_deletable(path: Path, consider_lock_dead_if_created_before: float) ->\n         return False\n     else:\n         if lock_time < consider_lock_dead_if_created_before:\n-            lock.unlink()\n-            return True\n-        else:\n-            return False\n+            # wa want to ignore any errors while trying to remove the lock such as:\n+            # - PermissionDenied, like the file permissions have changed since the lock creation\n+            # - FileNotFoundError, in case another pytest process got here first.\n+            # and any other cause of failure.\n+            with contextlib.suppress(OSError):\n+                lock.unlink()\n+                return True\n+        return False\n \n \n def try_cleanup(path: Path, consider_lock_dead_if_created_before: float) -> None:\n",
  "test_patch": "diff --git a/testing/test_pathlib.py b/testing/test_pathlib.py\n--- a/testing/test_pathlib.py\n+++ b/testing/test_pathlib.py\n@@ -1,9 +1,11 @@\n import os.path\n import sys\n+import unittest.mock\n \n import py\n \n import pytest\n+from _pytest.pathlib import ensure_deletable\n from _pytest.pathlib import fnmatch_ex\n from _pytest.pathlib import get_extended_length_path_str\n from _pytest.pathlib import get_lock_path\n@@ -113,3 +115,22 @@ def test_get_extended_length_path_str():\n     assert get_extended_length_path_str(r\"\\\\share\\foo\") == r\"\\\\?\\UNC\\share\\foo\"\n     assert get_extended_length_path_str(r\"\\\\?\\UNC\\share\\foo\") == r\"\\\\?\\UNC\\share\\foo\"\n     assert get_extended_length_path_str(r\"\\\\?\\c:\\foo\") == r\"\\\\?\\c:\\foo\"\n+\n+\n+def test_suppress_error_removing_lock(tmp_path):\n+    \"\"\"ensure_deletable should not raise an exception if the lock file cannot be removed (#5456)\"\"\"\n+    path = tmp_path / \"dir\"\n+    path.mkdir()\n+    lock = get_lock_path(path)\n+    lock.touch()\n+    mtime = lock.stat().st_mtime\n+\n+    with unittest.mock.patch.object(Path, \"unlink\", side_effect=OSError):\n+        assert not ensure_deletable(\n+            path, consider_lock_dead_if_created_before=mtime + 30\n+        )\n+    assert lock.is_file()\n+\n+    # check now that we can remove the lock file in normal circumstances\n+    assert ensure_deletable(path, consider_lock_dead_if_created_before=mtime + 30)\n+    assert not lock.is_file()\n",
  "problem_statement": "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/pytest-of-jenkins/pytest-1681/.lock'\nSame issue as in #4181 .\r\nI think there are still some edge cases where this is not handled correctly. I am running a series of concurrent pytest processes and was able to reproduce the issue. Here is the stack trace:\r\n\r\n```\r\n============================= test session starts ==============================\r\nplatform linux -- Python 3.7.2, pytest-4.6.3, py-1.8.0, pluggy-0.12.0 -- /usr/local/bin/.pyenv/versions/integration-tests/bin/python\r\ncachedir: .pytest_cache\r\nmetadata: {'Python': '3.7.2', 'Platform': 'Linux-4.14.77-70.59.amzn1.x86_64-x86_64-with-debian-9.8', 'Packages': {'pytest': '4.6.3', 'py': '1.8.0', 'pluggy': '0.12.0'}, 'Plugins': {'html': '1.20.0', 'metadata': '1.8.0', 'xdist': '1.29.0', 'forked': '1.0.2', 'datadir': '1.3.0', 'sugar': '0.9.2', 'rerunfailures': '7.0'}, 'BUILD_NUMBER': '189', 'BUILD_ID': '189', 'BUILD_URL': 'https://parallelcluster-jenkins-commercial.aka.corp.amazon.com/job/integration_tests/189/', 'NODE_NAME': 'master', 'JOB_NAME': 'integration_tests', 'BUILD_TAG': 'jenkins-integration_tests-189', 'EXECUTOR_NUMBER': '15', 'JENKINS_URL': 'https://parallelcluster-jenkins-commercial.aka.corp.amazon.com/', 'JAVA_HOME': '/docker-java-home', 'WORKSPACE': '/var/jenkins_home/workspace/integration_tests'}\r\nrootdir: /var/jenkins_home/workspace/integration_tests/pcluster/tests/integration-tests/tests\r\nplugins: html-1.20.0, metadata-1.8.0, xdist-1.29.0, forked-1.0.2, datadir-1.3.0, sugar-0.9.2, rerunfailures-7.0\r\ngw0 I / gw1 I / gw2 I / gw3 I / gw4 I / gw5 I / gw6 I / gw7 I\r\n\r\n[gw0] linux Python 3.7.2 cwd: /var/jenkins_home/workspace/integration_tests/pcluster/tests/integration-tests\r\nINTERNALERROR> Traceback (most recent call last):\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/_pytest/main.py\", line 204, in wrap_session\r\nINTERNALERROR>     config.hook.pytest_sessionstart(session=session)\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/pluggy/hooks.py\", line 289, in __call__\r\nINTERNALERROR>     return self._hookexec(self, self.get_hookimpls(), kwargs)\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/pluggy/manager.py\", line 87, in _hookexec\r\nINTERNALERROR>     return self._inner_hookexec(hook, methods, kwargs)\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/pluggy/manager.py\", line 81, in <lambda>\r\nINTERNALERROR>     firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\r\nINTERNALERROR>     return outcome.get_result()\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\r\nINTERNALERROR>     raise ex[1].with_traceback(ex[2])\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\r\nINTERNALERROR>     res = hook_impl.function(*args)\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/xdist/dsession.py\", line 81, in pytest_sessionstart\r\nINTERNALERROR>     nodes = self.nodemanager.setup_nodes(putevent=self.queue.put)\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/xdist/workermanage.py\", line 64, in setup_nodes\r\nINTERNALERROR>     nodes.append(self.setup_node(spec, putevent))\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/xdist/workermanage.py\", line 73, in setup_node\r\nINTERNALERROR>     node.setup()\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/xdist/workermanage.py\", line 246, in setup\r\nINTERNALERROR>     basetemp = self.config._tmpdirhandler.getbasetemp()\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/_pytest/tmpdir.py\", line 118, in getbasetemp\r\nINTERNALERROR>     return py.path.local(self._tmppath_factory.getbasetemp().resolve())\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/_pytest/tmpdir.py\", line 79, in getbasetemp\r\nINTERNALERROR>     prefix=\"pytest-\", root=rootdir, keep=3, lock_timeout=LOCK_TIMEOUT\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/_pytest/pathlib.py\", line 267, in make_numbered_dir_with_cleanup\r\nINTERNALERROR>     consider_lock_dead_if_created_before=consider_lock_dead_if_created_before,\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/_pytest/pathlib.py\", line 246, in cleanup_numbered_dir\r\nINTERNALERROR>     try_cleanup(path, consider_lock_dead_if_created_before)\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/_pytest/pathlib.py\", line 227, in try_cleanup\r\nINTERNALERROR>     if ensure_deletable(path, consider_lock_dead_if_created_before):\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/integration-tests/lib/python3.7/site-packages/_pytest/pathlib.py\", line 219, in ensure_deletable\r\nINTERNALERROR>     lock.unlink()\r\nINTERNALERROR>   File \"/usr/local/bin/.pyenv/versions/3.7.2/lib/python3.7/pathlib.py\", line 1277, in unlink\r\nINTERNALERROR>     self._accessor.unlink(self)\r\nINTERNALERROR> FileNotFoundError: [Errno 2] No such file or directory: '/tmp/pytest-of-jenkins/pytest-1681/.lock'\r\n```\r\n\r\nA potential mitigation to this problem might be to generate the numbered dir with a random suffix rather than a sequential one, unless some code depends on this logic: https://github.com/pytest-dev/pytest/blob/4.6.3/src/_pytest/pathlib.py#L123\r\n\n",
  "hints_text": "As a workaround I'm currently explicitly setting `basetemp` for every test process.\nExperiencing similar issue. Here's my environment:\r\n`platform linux -- Python 3.6.8, pytest-4.0.2, py-1.8.0, pluggy-0.9.0`\r\n`plugins: xdist-1.25.0, ordering-0.6, forked-1.0.2`\nFor people looking for a workaround, I found creating a fixture in conftest.py as follow to help:\r\n\r\n```python\r\nfrom tempfile import TemporaryDirectory\r\nimport pytest\r\n@pytest.fixture(scope=\"session\", autouse=True)\r\ndef changetmp(request):\r\n    with TemporaryDirectory(prefix=\"pytest-<project-name>-\") as temp_dir:\r\n        request.config.option.basetemp = temp_dir\r\n        yield\r\n```\r\n\r\nThis basically makes each of the processes in xdist to create everything in a temporary folder. It will though delete everything after it ends.\nStill happening for me, much more frequent now, latest current version of pytest, 5.3.5.",
  "created_at": "2020-06-11T19:54:52Z",
  "version": "5.4",
  "FAIL_TO_PASS": "[\"testing/test_pathlib.py::test_suppress_error_removing_lock\"]",
  "PASS_TO_PASS": "[\"testing/test_pathlib.py::TestPort::test_matching[pathlib-*.py-foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching[pathlib-*.py-bar/foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching[pathlib-test_*.py-foo/test_foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching[pathlib-tests/*.py-tests/foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching[pathlib-/c/*.py-/c/foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching[pathlib-/c/foo/*.py-/c/foo/foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching[pathlib-tests/**/test*.py-tests/foo/test_foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching[pathlib-tests/**/doc/test*.py-tests/foo/bar/doc/test_foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching[pathlib-tests/**/doc/**/test*.py-tests/foo/doc/bar/test_foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching[py.path-*.py-foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching[py.path-*.py-bar/foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching[py.path-test_*.py-foo/test_foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching[py.path-tests/*.py-tests/foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching[py.path-/c/*.py-/c/foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching[py.path-/c/foo/*.py-/c/foo/foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching[py.path-tests/**/test*.py-tests/foo/test_foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching[py.path-tests/**/doc/test*.py-tests/foo/bar/doc/test_foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching[py.path-tests/**/doc/**/test*.py-tests/foo/doc/bar/test_foo.py]\", \"testing/test_pathlib.py::TestPort::test_matching_abspath[pathlib]\", \"testing/test_pathlib.py::TestPort::test_matching_abspath[py.path]\", \"testing/test_pathlib.py::TestPort::test_not_matching[pathlib-*.py-foo.pyc]\", \"testing/test_pathlib.py::TestPort::test_not_matching[pathlib-*.py-foo/foo.pyc]\", \"testing/test_pathlib.py::TestPort::test_not_matching[pathlib-tests/*.py-foo/foo.py]\", \"testing/test_pathlib.py::TestPort::test_not_matching[pathlib-/c/*.py-/d/foo.py]\", \"testing/test_pathlib.py::TestPort::test_not_matching[pathlib-/c/foo/*.py-/d/foo/foo.py]\", \"testing/test_pathlib.py::TestPort::test_not_matching[pathlib-tests/**/test*.py-tests/foo.py]\", \"testing/test_pathlib.py::TestPort::test_not_matching[pathlib-tests/**/test*.py-foo/test_foo.py]\", \"testing/test_pathlib.py::TestPort::test_not_matching[pathlib-tests/**/doc/test*.py-tests/foo/bar/doc/foo.py]\", \"testing/test_pathlib.py::TestPort::test_not_matching[pathlib-tests/**/doc/test*.py-tests/foo/bar/test_foo.py]\", \"testing/test_pathlib.py::TestPort::test_not_matching[py.path-*.py-foo.pyc]\", \"testing/test_pathlib.py::TestPort::test_not_matching[py.path-*.py-foo/foo.pyc]\", \"testing/test_pathlib.py::TestPort::test_not_matching[py.path-tests/*.py-foo/foo.py]\", \"testing/test_pathlib.py::TestPort::test_not_matching[py.path-/c/*.py-/d/foo.py]\", \"testing/test_pathlib.py::TestPort::test_not_matching[py.path-/c/foo/*.py-/d/foo/foo.py]\", \"testing/test_pathlib.py::TestPort::test_not_matching[py.path-tests/**/test*.py-tests/foo.py]\", \"testing/test_pathlib.py::TestPort::test_not_matching[py.path-tests/**/test*.py-foo/test_foo.py]\", \"testing/test_pathlib.py::TestPort::test_not_matching[py.path-tests/**/doc/test*.py-tests/foo/bar/doc/foo.py]\", \"testing/test_pathlib.py::TestPort::test_not_matching[py.path-tests/**/doc/test*.py-tests/foo/bar/test_foo.py]\", \"testing/test_pathlib.py::test_access_denied_during_cleanup\", \"testing/test_pathlib.py::test_long_path_during_cleanup\", \"testing/test_pathlib.py::test_get_extended_length_path_str\"]",
  "environment_setup_commit": "678c1a0745f1cf175c442c719906a1f13e496910",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.936110",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}