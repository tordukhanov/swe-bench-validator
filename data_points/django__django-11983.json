{
  "repo": "django/django",
  "instance_id": "django__django-11983",
  "base_commit": "e3d0b4d5501c6d0bc39f035e4345e5bdfde12e41",
  "patch": "diff --git a/django/contrib/admin/views/main.py b/django/contrib/admin/views/main.py\n--- a/django/contrib/admin/views/main.py\n+++ b/django/contrib/admin/views/main.py\n@@ -173,8 +173,6 @@ def get_filters(self, request):\n                     )\n                 except ValueError as e:\n                     raise IncorrectLookupParameters(e) from e\n-                if settings.USE_TZ:\n-                    from_date = make_aware(from_date)\n                 if day:\n                     to_date = from_date + timedelta(days=1)\n                 elif month:\n@@ -183,6 +181,9 @@ def get_filters(self, request):\n                     to_date = (from_date + timedelta(days=32)).replace(day=1)\n                 else:\n                     to_date = from_date.replace(year=from_date.year + 1)\n+                if settings.USE_TZ:\n+                    from_date = make_aware(from_date)\n+                    to_date = make_aware(to_date)\n                 lookup_params.update({\n                     '%s__gte' % self.date_hierarchy: from_date,\n                     '%s__lt' % self.date_hierarchy: to_date,\n",
  "test_patch": "diff --git a/tests/admin_changelist/test_date_hierarchy.py b/tests/admin_changelist/test_date_hierarchy.py\n--- a/tests/admin_changelist/test_date_hierarchy.py\n+++ b/tests/admin_changelist/test_date_hierarchy.py\n@@ -46,6 +46,24 @@ def test_bounded_params_with_time_zone(self):\n                 make_aware(datetime(2017, 3, 1)),\n             )\n \n+    def test_bounded_params_with_dst_time_zone(self):\n+        tests = [\n+            # Northern hemisphere.\n+            ('Asia/Jerusalem', 3),\n+            ('Asia/Jerusalem', 10),\n+            # Southern hemisphere.\n+            ('Pacific/Chatham', 4),\n+            ('Pacific/Chatham', 9),\n+        ]\n+        for time_zone, month in tests:\n+            with self.subTest(time_zone=time_zone, month=month):\n+                with self.settings(USE_TZ=True, TIME_ZONE=time_zone):\n+                    self.assertDateParams(\n+                        {'year': 2019, 'month': month},\n+                        make_aware(datetime(2019, month, 1)),\n+                        make_aware(datetime(2019, month + 1, 1)),\n+                    )\n+\n     def test_invalid_params(self):\n         tests = (\n             {'year': 'x'},\n",
  "problem_statement": "Admin's date_hierarchy excludes 31 october when using timezone with DST in northern hemisphere.\nDescription\n\t\nhttps://code.djangoproject.com/ticket/28933 introduced a subtle bug where it accidentally excludes 31 october in the admin date_hierarchy filter after selecting october. The underlying reason is that the generated sql has < 2019-10-31 as opposed to < 2019-11-01 as it should be. This in turn is caused by applying the timezone for 2019-10-01 (with DST in countries in the northern hemisphere) to the date used for 2019-11-01. This causes the date conversion to actually operate on 2019-10-31 23:00 instead of 2019-11-01 00:00. It's a bit hard to explain in words, PR incoming that hopefully explains better in code.\n",
  "hints_text": "",
  "created_at": "2019-10-28T14:13:20Z",
  "version": "3.1",
  "FAIL_TO_PASS": "[\"test_bounded_params_with_dst_time_zone (admin_changelist.test_date_hierarchy.DateHierarchyTests)\", \"test_bounded_params_with_time_zone (admin_changelist.test_date_hierarchy.DateHierarchyTests)\"]",
  "PASS_TO_PASS": "[\"test_bounded_params (admin_changelist.test_date_hierarchy.DateHierarchyTests)\", \"test_invalid_params (admin_changelist.test_date_hierarchy.DateHierarchyTests)\"]",
  "environment_setup_commit": "0668164b4ac93a5be79f5b87fae83c657124d9ab",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.590043",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}