{
  "repo": "django/django",
  "instance_id": "django__django-12503",
  "base_commit": "e908eb62871f0b0aac63afa6601bf222bc2a1a7d",
  "patch": "diff --git a/django/core/management/commands/makemessages.py b/django/core/management/commands/makemessages.py\n--- a/django/core/management/commands/makemessages.py\n+++ b/django/core/management/commands/makemessages.py\n@@ -329,7 +329,7 @@ def handle(self, *args, **options):\n             exts = extensions or ['html', 'txt', 'py']\n         self.extensions = handle_extensions(exts)\n \n-        if (locale is None and not exclude and not process_all) or self.domain is None:\n+        if (not locale and not exclude and not process_all) or self.domain is None:\n             raise CommandError(\n                 \"Type '%s help %s' for usage information.\"\n                 % (os.path.basename(sys.argv[0]), sys.argv[1])\n",
  "test_patch": "diff --git a/tests/i18n/test_extraction.py b/tests/i18n/test_extraction.py\n--- a/tests/i18n/test_extraction.py\n+++ b/tests/i18n/test_extraction.py\n@@ -142,6 +142,16 @@ def test_use_i18n_false(self):\n             self.assertIn('#. Translators: One-line translator comment #1', po_contents)\n             self.assertIn('msgctxt \"Special trans context #1\"', po_contents)\n \n+    def test_no_option(self):\n+        # One of either the --locale, --exclude, or --all options is required.\n+        msg = \"Type 'manage.py help makemessages' for usage information.\"\n+        with mock.patch(\n+            'django.core.management.commands.makemessages.sys.argv',\n+            ['manage.py', 'makemessages'],\n+        ):\n+            with self.assertRaisesRegex(CommandError, msg):\n+                management.call_command('makemessages')\n+\n     def test_comments_extractor(self):\n         management.call_command('makemessages', locale=[LOCALE], verbosity=0)\n         self.assertTrue(os.path.exists(self.PO_FILE))\n",
  "problem_statement": "makemessages doesn't provide feedback when no locale is specified\nDescription\n\t \n\t\t(last modified by Cristóbal Mackenzie)\n\t \nmakemessages requires that one of three flags be passed to specify locales for message building: --locale to explicitly specify locales, --exclude to specify locales to exclude, or --all to build message files for all locales.\nWhen non of these flags are present, the command doesn't show any errors for the user. According to the source code, it should raise CommandError, but that never happens because of a bug in an if statement that checks if a locale has been specified.\nI've already fixed this in my fork and have submitted a small PR.\n​https://github.com/django/django/pull/12503\nPlease point out if there are any other necessary steps to move this forward. Thanks!\n",
  "hints_text": "",
  "created_at": "2020-02-27T12:47:46Z",
  "version": "3.1",
  "FAIL_TO_PASS": "[\"test_no_option (i18n.test_extraction.BasicExtractorTests)\"]",
  "PASS_TO_PASS": "[\"test_no_locale_raises (i18n.test_extraction.CustomLayoutExtractionTests)\", \"test_project_locale_paths (i18n.test_extraction.CustomLayoutExtractionTests)\", \"test_project_locale_paths_pathlib (i18n.test_extraction.CustomLayoutExtractionTests)\", \"test_symlink (i18n.test_extraction.SymlinkExtractorTests)\", \"test_no_wrap_disabled (i18n.test_extraction.NoWrapExtractorTests)\", \"test_no_wrap_enabled (i18n.test_extraction.NoWrapExtractorTests)\", \"test_makemessages_no_settings (i18n.test_extraction.NoSettingsExtractionTests)\", \"test_copy_plural_forms (i18n.test_extraction.CopyPluralFormsExtractorTests)\", \"Ticket #20311.\", \"test_translate_and_plural_blocktranslate_collision (i18n.test_extraction.CopyPluralFormsExtractorTests)\", \"test_default_root_settings (i18n.test_extraction.JavascriptExtractorTests)\", \"test_javascript_literals (i18n.test_extraction.JavascriptExtractorTests)\", \"test_media_static_dirs_ignored (i18n.test_extraction.JavascriptExtractorTests)\", \"test_keep_pot_disabled_by_default (i18n.test_extraction.KeepPotFileExtractorTests)\", \"test_keep_pot_enabled (i18n.test_extraction.KeepPotFileExtractorTests)\", \"test_keep_pot_explicitly_disabled (i18n.test_extraction.KeepPotFileExtractorTests)\", \"test_ignore_directory (i18n.test_extraction.IgnoredExtractorTests)\", \"test_ignore_file_patterns (i18n.test_extraction.IgnoredExtractorTests)\", \"test_ignore_subdirectory (i18n.test_extraction.IgnoredExtractorTests)\", \"test_media_static_dirs_ignored (i18n.test_extraction.IgnoredExtractorTests)\", \"test_command_help (i18n.test_extraction.ExcludedLocaleExtractionTests)\", \"test_multiple_locales_excluded (i18n.test_extraction.ExcludedLocaleExtractionTests)\", \"test_multiple_locales_excluded_with_locale (i18n.test_extraction.ExcludedLocaleExtractionTests)\", \"test_one_locale_excluded (i18n.test_extraction.ExcludedLocaleExtractionTests)\", \"test_one_locale_excluded_with_locale (i18n.test_extraction.ExcludedLocaleExtractionTests)\", \"test_all_locales (i18n.test_extraction.MultipleLocaleExtractionTests)\", \"test_multiple_locales (i18n.test_extraction.MultipleLocaleExtractionTests)\", \"makemessages --add-location=file\", \"makemessages --add-location=full\", \"test_add_location_gettext_version_check (i18n.test_extraction.LocationCommentsTests)\", \"makemessages --add-location=never\", \"test_location_comments_for_templatized_files (i18n.test_extraction.LocationCommentsTests)\", \"Behavior is correct if --no-location switch isn't specified.\", \"Behavior is correct if --no-location switch is specified. See #16903.\", \"test_blocktranslate_trimmed (i18n.test_extraction.BasicExtractorTests)\", \"test_comments_extractor (i18n.test_extraction.BasicExtractorTests)\", \"test_context_in_single_quotes (i18n.test_extraction.BasicExtractorTests)\", \"test_extraction_error (i18n.test_extraction.BasicExtractorTests)\", \"test_makemessages_find_files (i18n.test_extraction.BasicExtractorTests)\", \"test_makemessages_gettext_version (i18n.test_extraction.BasicExtractorTests)\", \"test_po_file_encoding_when_updating (i18n.test_extraction.BasicExtractorTests)\", \"Content-Type: ... charset=CHARSET is replaced with charset=UTF-8\", \"test_special_char_extracted (i18n.test_extraction.BasicExtractorTests)\", \"Template comment tags on the same line of other constructs (#19552)\", \"test_template_message_context_extractor (i18n.test_extraction.BasicExtractorTests)\", \"test_unicode_decode_error (i18n.test_extraction.BasicExtractorTests)\", \"test_unicode_file_name (i18n.test_extraction.BasicExtractorTests)\", \"test_use_i18n_false (i18n.test_extraction.BasicExtractorTests)\"]",
  "environment_setup_commit": "0668164b4ac93a5be79f5b87fae83c657124d9ab",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.628198",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}