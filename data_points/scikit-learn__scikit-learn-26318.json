{
  "repo": "scikit-learn/scikit-learn",
  "instance_id": "scikit-learn__scikit-learn-26318",
  "base_commit": "42d235924efa64987a19e945035c85414c53d4f0",
  "patch": "diff --git a/sklearn/ensemble/_forest.py b/sklearn/ensemble/_forest.py\n--- a/sklearn/ensemble/_forest.py\n+++ b/sklearn/ensemble/_forest.py\n@@ -474,7 +474,9 @@ def fit(self, X, y, sample_weight=None):\n             # Collect newly grown trees\n             self.estimators_.extend(trees)\n \n-        if self.oob_score:\n+        if self.oob_score and (\n+            n_more_estimators > 0 or not hasattr(self, \"oob_score_\")\n+        ):\n             y_type = type_of_target(y)\n             if y_type in (\"multiclass-multioutput\", \"unknown\"):\n                 # FIXME: we could consider to support multiclass-multioutput if\n",
  "test_patch": "diff --git a/sklearn/ensemble/tests/test_forest.py b/sklearn/ensemble/tests/test_forest.py\n--- a/sklearn/ensemble/tests/test_forest.py\n+++ b/sklearn/ensemble/tests/test_forest.py\n@@ -58,6 +58,7 @@\n \n from sklearn.tree._classes import SPARSE_SPLITTERS\n \n+from unittest.mock import patch\n \n # toy sample\n X = [[-2, -1], [-1, -1], [-1, -2], [1, 1], [1, 2], [2, 1]]\n@@ -1470,6 +1471,27 @@ def test_warm_start_oob(name):\n     check_warm_start_oob(name)\n \n \n+@pytest.mark.parametrize(\"name\", FOREST_CLASSIFIERS_REGRESSORS)\n+def test_oob_not_computed_twice(name):\n+    # Check that oob_score is not computed twice when warm_start=True.\n+    X, y = hastie_X, hastie_y\n+    ForestEstimator = FOREST_ESTIMATORS[name]\n+\n+    est = ForestEstimator(\n+        n_estimators=10, warm_start=True, bootstrap=True, oob_score=True\n+    )\n+\n+    with patch.object(\n+        est, \"_set_oob_score_and_attributes\", wraps=est._set_oob_score_and_attributes\n+    ) as mock_set_oob_score_and_attributes:\n+        est.fit(X, y)\n+\n+        with pytest.warns(UserWarning, match=\"Warm-start fitting without increasing\"):\n+            est.fit(X, y)\n+\n+        mock_set_oob_score_and_attributes.assert_called_once()\n+\n+\n def test_dtype_convert(n_classes=15):\n     classifier = RandomForestClassifier(random_state=0, bootstrap=False)\n \n",
  "problem_statement": "Incorrect documentation for `warm_start` behavior on BaseForest-derived classes\n#### Describe the issue linked to the documentation\r\n\r\nThe [RandomForestRegressor](https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestRegressor.html) documentation states:\r\n\r\n\r\n> When set to True, reuse the solution of the previous call to fit and add more estimators to the ensemble, otherwise, just fit a whole new forest.\r\n\r\nThis is also true for all classes that derive from `BaseForest`, such as `RandomForestClassifier` and `RandomTreesEmbedding`.\r\n\r\nHowever, the [source code](https://github.com/scikit-learn/scikit-learn/blob/14031f6/sklearn/ensemble/forest.py#L297) does not reflect this behavior. When `n_more_estimators == 0`, it does not fit a new forest and instead just recomputes the OOB score if applicable.\r\n\r\n#### Suggest a potential alternative/fix\r\n\r\nThere are two potential fixes:\r\n\r\n1. Reword the documentation to state:\r\n\r\n > When set to True, reuse the solution of the previous call to fit and add more estimators to the ensemble, otherwise, reuse the existing ensemble.\r\n\r\n2. Modify the actual behavior of this method to fit a new forest in the case where `n_more_estimators == 0` to reflect the existing documentation.\r\n\n",
  "hints_text": "Thanks for submitting an issue @noahgolmant ,\r\n\r\nThe current documentation is correct:\r\n\r\n> When set to True, reuse the solution of the previous call to fit and add more estimators to the ensemble, otherwise, just fit a whole new forest.\r\n\r\nbut it's lacking a few things. In particular, and I think this is where the confusion comes from, it does not specify that one needs to re-set the `n_estimators` parameter manually before calling fit a second time:\r\n\r\n```py\r\nest = RandomForestClassifier(n_estmiators=100)\r\nest.set_params(n_estimators=200, warm_start=True)  # set warm_start and new nr of trees\r\nest.fit(X_train, y_train) # fit additional 100 trees to est\r\n```\r\n\r\nRegarding the documentation, I think we just need to link to https://scikit-learn.org/stable/modules/ensemble.html#fitting-additional-weak-learners.\r\n\r\n\r\nRegarding the OOB computation: let's just remove it if `n_more_estimators == 0` and only do it when `n_more_estimators > 0`. The input data *should* be the same anyway (using warm-start with different data makes no sense), so computing the OOB again won't change its value, but it's unnecessary.\nCan I work on this issue?\n@yashasvimisra2798 sure, thanks! \nHi @cmarmo , I am a beginner and I would like to help \n@ryuusama09 , welcome! If you are willing to work on this issue please have a careful look to @NicolasHug [comment](https://github.com/scikit-learn/scikit-learn/issues/20435#issuecomment-872835169).\r\nAlso, in the [contributor guide](https://scikit-learn.org/dev/developers/contributing.html#contributing-code) you will find all the information you need to start contributing.\nI'm ready to solve this issue if no one has yet started working on it\r\n@NicolasHug could you please tell me what are the exact changes you are expecting?",
  "created_at": "2023-05-02T15:11:07Z",
  "version": "1.3",
  "FAIL_TO_PASS": "[\"sklearn/ensemble/tests/test_forest.py::test_oob_not_computed_twice[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_oob_not_computed_twice[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_oob_not_computed_twice[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_oob_not_computed_twice[RandomForestRegressor]\"]",
  "PASS_TO_PASS": "[\"sklearn/ensemble/tests/test_forest.py::test_classification_toy[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_classification_toy[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_iris[gini-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_iris[gini-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_iris[log_loss-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_iris[log_loss-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_regression[squared_error-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_regression[squared_error-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_regression[absolute_error-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_regression[absolute_error-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_regression[friedman_mse-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_regression[friedman_mse-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_poisson_vs_mse\", \"sklearn/ensemble/tests/test_forest.py::test_balance_property_random_forest[poisson]\", \"sklearn/ensemble/tests/test_forest.py::test_balance_property_random_forest[squared_error]\", \"sklearn/ensemble/tests/test_forest.py::test_regressor_attributes[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_regressor_attributes[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_probability[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_probability[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesClassifier-gini-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesClassifier-gini-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesClassifier-log_loss-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesClassifier-log_loss-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestClassifier-gini-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestClassifier-gini-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestClassifier-log_loss-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestClassifier-log_loss-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesRegressor-squared_error-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesRegressor-squared_error-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesRegressor-friedman_mse-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesRegressor-friedman_mse-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesRegressor-absolute_error-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[ExtraTreesRegressor-absolute_error-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestRegressor-squared_error-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestRegressor-squared_error-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestRegressor-friedman_mse-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestRegressor-friedman_mse-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestRegressor-absolute_error-float64]\", \"sklearn/ensemble/tests/test_forest.py::test_importances[RandomForestRegressor-absolute_error-float32]\", \"sklearn/ensemble/tests/test_forest.py::test_importances_asymptotic\", \"sklearn/ensemble/tests/test_forest.py::test_unfitted_feature_importances[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_unfitted_feature_importances[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_unfitted_feature_importances[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_unfitted_feature_importances[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_unfitted_feature_importances[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X0-y0-0.9-array-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X0-y0-0.9-array-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X0-y0-0.9-sparse_csr-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X0-y0-0.9-sparse_csr-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X0-y0-0.9-sparse_csc-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X0-y0-0.9-sparse_csc-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X1-y1-0.65-array-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X1-y1-0.65-array-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X1-y1-0.65-sparse_csr-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X1-y1-0.65-sparse_csr-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X1-y1-0.65-sparse_csc-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X1-y1-0.65-sparse_csc-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X2-y2-0.65-array-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X2-y2-0.65-array-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X2-y2-0.65-sparse_csr-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X2-y2-0.65-sparse_csr-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X2-y2-0.65-sparse_csc-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X2-y2-0.65-sparse_csc-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X3-y3-0.18-array-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X3-y3-0.18-array-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X3-y3-0.18-sparse_csr-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X3-y3-0.18-sparse_csr-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X3-y3-0.18-sparse_csc-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[True-X3-y3-0.18-sparse_csc-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X0-y0-0.9-array-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X0-y0-0.9-array-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X0-y0-0.9-sparse_csr-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X0-y0-0.9-sparse_csr-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X0-y0-0.9-sparse_csc-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X0-y0-0.9-sparse_csc-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X1-y1-0.65-array-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X1-y1-0.65-array-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X1-y1-0.65-sparse_csr-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X1-y1-0.65-sparse_csr-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X1-y1-0.65-sparse_csc-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X1-y1-0.65-sparse_csc-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X2-y2-0.65-array-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X2-y2-0.65-array-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X2-y2-0.65-sparse_csr-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X2-y2-0.65-sparse_csr-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X2-y2-0.65-sparse_csc-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X2-y2-0.65-sparse_csc-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X3-y3-0.18-array-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X3-y3-0.18-array-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X3-y3-0.18-sparse_csr-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X3-y3-0.18-sparse_csr-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X3-y3-0.18-sparse_csc-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_classifier_oob[oob_score1-X3-y3-0.18-sparse_csc-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X0-y0-0.7-array-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X0-y0-0.7-array-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X0-y0-0.7-sparse_csr-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X0-y0-0.7-sparse_csr-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X0-y0-0.7-sparse_csc-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X0-y0-0.7-sparse_csc-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X1-y1-0.55-array-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X1-y1-0.55-array-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X1-y1-0.55-sparse_csr-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X1-y1-0.55-sparse_csr-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X1-y1-0.55-sparse_csc-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[True-X1-y1-0.55-sparse_csc-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X0-y0-0.7-array-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X0-y0-0.7-array-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X0-y0-0.7-sparse_csr-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X0-y0-0.7-sparse_csr-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X0-y0-0.7-sparse_csc-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X0-y0-0.7-sparse_csc-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X1-y1-0.55-array-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X1-y1-0.55-array-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X1-y1-0.55-sparse_csr-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X1-y1-0.55-sparse_csr-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X1-y1-0.55-sparse_csc-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_regressor_oob[explained_variance_score-X1-y1-0.55-sparse_csc-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_oob_warning[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_oob_warning[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_oob_warning[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_oob_warning[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_oob_error[X0-y0-params0-Out\", \"sklearn/ensemble/tests/test_forest.py::test_forest_oob_error[X1-y1-params1-The\", \"sklearn/ensemble/tests/test_forest.py::test_random_trees_embedding_raise_error_oob[True]\", \"sklearn/ensemble/tests/test_forest.py::test_random_trees_embedding_raise_error_oob[False]\", \"sklearn/ensemble/tests/test_forest.py::test_gridsearch[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_gridsearch[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_parallel[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_parallel[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_parallel[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_parallel[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_pickle[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_pickle[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_pickle[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_pickle[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_multioutput[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_multioutput[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_multioutput[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_multioutput[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_multioutput_string[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_multioutput_string[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_classes_shape[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_classes_shape[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_random_trees_dense_type\", \"sklearn/ensemble/tests/test_forest.py::test_random_trees_dense_equal\", \"sklearn/ensemble/tests/test_forest.py::test_random_hasher\", \"sklearn/ensemble/tests/test_forest.py::test_random_hasher_sparse_data\", \"sklearn/ensemble/tests/test_forest.py::test_parallel_train\", \"sklearn/ensemble/tests/test_forest.py::test_distribution\", \"sklearn/ensemble/tests/test_forest.py::test_max_leaf_nodes_max_depth[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_max_leaf_nodes_max_depth[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_max_leaf_nodes_max_depth[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_max_leaf_nodes_max_depth[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_max_leaf_nodes_max_depth[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_split[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_split[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_split[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_split[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_split[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_leaf[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_leaf[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_leaf[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_leaf[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_min_samples_leaf[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_min_weight_fraction_leaf[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_min_weight_fraction_leaf[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_min_weight_fraction_leaf[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_min_weight_fraction_leaf[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_min_weight_fraction_leaf[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csr_matrix-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csr_matrix-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csr_matrix-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csr_matrix-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csr_matrix-RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csc_matrix-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csc_matrix-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csc_matrix-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csc_matrix-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[csc_matrix-RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[coo_matrix-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[coo_matrix-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[coo_matrix-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[coo_matrix-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_sparse_input[coo_matrix-RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_memory_layout[float64-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_memory_layout[float64-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_memory_layout[float64-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_memory_layout[float64-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_memory_layout[float32-ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_memory_layout[float32-RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_memory_layout[float32-ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_memory_layout[float32-RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_1d_input[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_1d_input[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_1d_input[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_1d_input[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_1d_input[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_class_weights[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_class_weights[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_class_weight_balanced_and_bootstrap_multi_output[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_class_weight_balanced_and_bootstrap_multi_output[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_class_weight_errors[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_class_weight_errors[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_clear[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_smaller_n_estimators[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_smaller_n_estimators[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_smaller_n_estimators[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_smaller_n_estimators[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_smaller_n_estimators[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_equal_n_estimators[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_equal_n_estimators[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_equal_n_estimators[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_equal_n_estimators[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_equal_n_estimators[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_oob[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_oob[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_oob[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_warm_start_oob[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_dtype_convert\", \"sklearn/ensemble/tests/test_forest.py::test_decision_path[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_decision_path[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_decision_path[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_decision_path[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_min_impurity_decrease\", \"sklearn/ensemble/tests/test_forest.py::test_poisson_y_positive_check\", \"sklearn/ensemble/tests/test_forest.py::test_backend_respected\", \"sklearn/ensemble/tests/test_forest.py::test_forest_feature_importances_sum\", \"sklearn/ensemble/tests/test_forest.py::test_forest_degenerate_feature_importances\", \"sklearn/ensemble/tests/test_forest.py::test_max_samples_bootstrap[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_max_samples_bootstrap[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_max_samples_bootstrap[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_max_samples_bootstrap[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_large_max_samples_exception[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_large_max_samples_exception[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_large_max_samples_exception[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_large_max_samples_exception[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_max_samples_boundary_regressors[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_max_samples_boundary_regressors[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_max_samples_boundary_classifiers[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_max_samples_boundary_classifiers[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_forest_y_sparse\", \"sklearn/ensemble/tests/test_forest.py::test_little_tree_with_small_max_samples[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_little_tree_with_small_max_samples[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_mse_criterion_object_segfault_smoke_test[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_mse_criterion_object_segfault_smoke_test[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_random_trees_embedding_feature_names_out\", \"sklearn/ensemble/tests/test_forest.py::test_base_estimator_property_deprecated[ExtraTreesClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_base_estimator_property_deprecated[RandomForestClassifier]\", \"sklearn/ensemble/tests/test_forest.py::test_base_estimator_property_deprecated[ExtraTreesRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_base_estimator_property_deprecated[RandomForestRegressor]\", \"sklearn/ensemble/tests/test_forest.py::test_base_estimator_property_deprecated[RandomTreesEmbedding]\", \"sklearn/ensemble/tests/test_forest.py::test_read_only_buffer\", \"sklearn/ensemble/tests/test_forest.py::test_round_samples_to_one_when_samples_too_low[balanced_subsample]\", \"sklearn/ensemble/tests/test_forest.py::test_round_samples_to_one_when_samples_too_low[None]\"]",
  "environment_setup_commit": "1e8a5b833d1b58f3ab84099c4582239af854b23a",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.025389",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}