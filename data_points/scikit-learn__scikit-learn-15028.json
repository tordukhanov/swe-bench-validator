{
  "repo": "scikit-learn/scikit-learn",
  "instance_id": "scikit-learn__scikit-learn-15028",
  "base_commit": "78c06e504cf7a9e9d9b2a1c3894a9ccadf2bbbea",
  "patch": "diff --git a/sklearn/tree/export.py b/sklearn/tree/export.py\n--- a/sklearn/tree/export.py\n+++ b/sklearn/tree/export.py\n@@ -18,6 +18,7 @@\n import numpy as np\n \n from ..utils.validation import check_is_fitted\n+from ..base import is_classifier\n \n from . import _criterion\n from . import _tree\n@@ -850,7 +851,8 @@ def export_text(decision_tree, feature_names=None, max_depth=10,\n     \"\"\"\n     check_is_fitted(decision_tree)\n     tree_ = decision_tree.tree_\n-    class_names = decision_tree.classes_\n+    if is_classifier(decision_tree):\n+        class_names = decision_tree.classes_\n     right_child_fmt = \"{} {} <= {}\\n\"\n     left_child_fmt = \"{} {} >  {}\\n\"\n     truncation_fmt = \"{} {}\\n\"\ndiff --git a/sklearn/tree/tree.py b/sklearn/tree/tree.py\n--- a/sklearn/tree/tree.py\n+++ b/sklearn/tree/tree.py\n@@ -180,11 +180,7 @@ def fit(self, X, y, sample_weight=None, check_input=True,\n                 expanded_class_weight = compute_sample_weight(\n                     self.class_weight, y_original)\n \n-        else:\n-            self.classes_ = [None] * self.n_outputs_\n-            self.n_classes_ = [1] * self.n_outputs_\n-\n-        self.n_classes_ = np.array(self.n_classes_, dtype=np.intp)\n+            self.n_classes_ = np.array(self.n_classes_, dtype=np.intp)\n \n         if getattr(y, \"dtype\", None) != DOUBLE or not y.flags.contiguous:\n             y = np.ascontiguousarray(y, dtype=DOUBLE)\n@@ -341,7 +337,14 @@ def fit(self, X, y, sample_weight=None, check_input=True,\n                                                 min_weight_leaf,\n                                                 random_state)\n \n-        self.tree_ = Tree(self.n_features_, self.n_classes_, self.n_outputs_)\n+        if is_classifier(self):\n+            self.tree_ = Tree(self.n_features_,\n+                              self.n_classes_, self.n_outputs_)\n+        else:\n+            self.tree_ = Tree(self.n_features_,\n+                              # TODO: tree should't need this in this case\n+                              np.array([1] * self.n_outputs_, dtype=np.intp),\n+                              self.n_outputs_)\n \n         # Use BestFirst if max_leaf_nodes given; use DepthFirst otherwise\n         if max_leaf_nodes < 0:\n@@ -362,7 +365,7 @@ def fit(self, X, y, sample_weight=None, check_input=True,\n \n         builder.build(self.tree_, X, y, sample_weight, X_idx_sorted)\n \n-        if self.n_outputs_ == 1:\n+        if self.n_outputs_ == 1 and is_classifier(self):\n             self.n_classes_ = self.n_classes_[0]\n             self.classes_ = self.classes_[0]\n \n@@ -505,9 +508,15 @@ def _prune_tree(self):\n         if self.ccp_alpha == 0.0:\n             return\n \n-        # build pruned treee\n-        n_classes = np.atleast_1d(self.n_classes_)\n-        pruned_tree = Tree(self.n_features_, n_classes, self.n_outputs_)\n+        # build pruned tree\n+        if is_classifier(self):\n+            n_classes = np.atleast_1d(self.n_classes_)\n+            pruned_tree = Tree(self.n_features_, n_classes, self.n_outputs_)\n+        else:\n+            pruned_tree = Tree(self.n_features_,\n+                               # TODO: the tree shouldn't need this param\n+                               np.array([1] * self.n_outputs_, dtype=np.intp),\n+                               self.n_outputs_)\n         _build_pruned_tree_ccp(pruned_tree, self.tree_, self.ccp_alpha)\n \n         self.tree_ = pruned_tree\n@@ -1214,6 +1223,22 @@ def fit(self, X, y, sample_weight=None, check_input=True,\n             X_idx_sorted=X_idx_sorted)\n         return self\n \n+    @property\n+    def classes_(self):\n+        # TODO: Remove method in 0.24\n+        msg = (\"the classes_ attribute is to be deprecated from version \"\n+               \"0.22 and will be removed in 0.24.\")\n+        warnings.warn(msg, DeprecationWarning)\n+        return np.array([None] * self.n_outputs_)\n+\n+    @property\n+    def n_classes_(self):\n+        # TODO: Remove method in 0.24\n+        msg = (\"the n_classes_ attribute is to be deprecated from version \"\n+               \"0.22 and will be removed in 0.24.\")\n+        warnings.warn(msg, DeprecationWarning)\n+        return np.array([1] * self.n_outputs_, dtype=np.intp)\n+\n \n class ExtraTreeClassifier(DecisionTreeClassifier):\n     \"\"\"An extremely randomized tree classifier.\n",
  "test_patch": "diff --git a/sklearn/model_selection/tests/test_search.py b/sklearn/model_selection/tests/test_search.py\n--- a/sklearn/model_selection/tests/test_search.py\n+++ b/sklearn/model_selection/tests/test_search.py\n@@ -1692,12 +1692,16 @@ def _run_search(self, evaluate):\n \n     results = mycv.cv_results_\n     check_results(results, gscv)\n-    for attr in dir(gscv):\n-        if attr[0].islower() and attr[-1:] == '_' and \\\n-           attr not in {'cv_results_', 'best_estimator_',\n-                        'refit_time_'}:\n-            assert getattr(gscv, attr) == getattr(mycv, attr), \\\n-                   \"Attribute %s not equal\" % attr\n+    # TODO: remove in v0.24, the deprecation goes away then.\n+    with pytest.warns(DeprecationWarning,\n+                      match=\"attribute is to be deprecated from version 0.22\"):\n+        for attr in dir(gscv):\n+            if (attr[0].islower() and attr[-1:] == '_' and\n+                    attr not in {'cv_results_', 'best_estimator_',\n+                                 'refit_time_',\n+                                 }):\n+                assert getattr(gscv, attr) == getattr(mycv, attr), \\\n+                    \"Attribute %s not equal\" % attr\n \n \n def test__custom_fit_no_run_search():\ndiff --git a/sklearn/tree/tests/test_tree.py b/sklearn/tree/tests/test_tree.py\n--- a/sklearn/tree/tests/test_tree.py\n+++ b/sklearn/tree/tests/test_tree.py\n@@ -433,12 +433,12 @@ def test_max_features():\n         est = TreeEstimator(max_features=\"sqrt\")\n         est.fit(iris.data, iris.target)\n         assert (est.max_features_ ==\n-                     int(np.sqrt(iris.data.shape[1])))\n+                int(np.sqrt(iris.data.shape[1])))\n \n         est = TreeEstimator(max_features=\"log2\")\n         est.fit(iris.data, iris.target)\n         assert (est.max_features_ ==\n-                     int(np.log2(iris.data.shape[1])))\n+                int(np.log2(iris.data.shape[1])))\n \n         est = TreeEstimator(max_features=1)\n         est.fit(iris.data, iris.target)\n@@ -455,7 +455,7 @@ def test_max_features():\n         est = TreeEstimator(max_features=0.5)\n         est.fit(iris.data, iris.target)\n         assert (est.max_features_ ==\n-                     int(0.5 * iris.data.shape[1]))\n+                int(0.5 * iris.data.shape[1]))\n \n         est = TreeEstimator(max_features=1.0)\n         est.fit(iris.data, iris.target)\n@@ -1966,3 +1966,20 @@ def test_prune_tree_raises_negative_ccp_alpha():\n     with pytest.raises(ValueError, match=msg):\n         clf.set_params(ccp_alpha=-1.0)\n         clf._prune_tree()\n+\n+\n+def test_classes_deprecated():\n+    X = [[0, 0], [2, 2], [4, 6], [10, 11]]\n+    y = [0.5, 2.5, 3.5, 5.5]\n+    clf = DecisionTreeRegressor()\n+    clf = clf.fit(X, y)\n+\n+    match = (\"attribute is to be deprecated from version \"\n+             \"0.22 and will be removed in 0.24.\")\n+\n+    with pytest.warns(DeprecationWarning, match=match):\n+        n = len(clf.classes_)\n+        assert n == clf.n_outputs_\n+\n+    with pytest.warns(DeprecationWarning, match=match):\n+        assert len(clf.n_classes_) == clf.n_outputs_\n",
  "problem_statement": "Deprecate classes attribute in DecisionTreeRegressor\nThis partially relates to issue #14766 \r\n\r\nCurrently, if you fit a decision tree regressor, and call the attribute `classes_` , it will return none. This attribute does not appear on the doc string and shouldn't. This was surfaced from an issue related to mismatch attributes (#14312 ) \r\n\r\nReviewed the [contributions guide](https://scikit-learn.org/dev/developers/contributing.html#deprecation) and worked with @thomasjpfan on different options including using a decorator on a property but it triggered the deprecation message when calling fit which was bad. \r\n\r\nIn this PR, the `classes_` was changed to `_classes` in the parent. And a test was added to the test_tree.py \n",
  "hints_text": "",
  "created_at": "2019-09-19T14:41:06Z",
  "version": "0.22",
  "FAIL_TO_PASS": "[\"sklearn/model_selection/tests/test_search.py::test_custom_run_search\", \"sklearn/tree/tests/test_tree.py::test_classes_deprecated\"]",
  "PASS_TO_PASS": "[\"sklearn/model_selection/tests/test_search.py::test_validate_parameter_input[0-TypeError-Parameter\", \"sklearn/model_selection/tests/test_search.py::test_validate_parameter_input[input1-TypeError-Parameter\", \"sklearn/model_selection/tests/test_search.py::test_validate_parameter_input[input2-TypeError-Parameter.*\", \"sklearn/model_selection/tests/test_search.py::test_parameter_grid\", \"sklearn/model_selection/tests/test_search.py::test_grid_search\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_with_fit_params\", \"sklearn/model_selection/tests/test_search.py::test_random_search_with_fit_params\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_no_score\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_score_method\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_groups\", \"sklearn/model_selection/tests/test_search.py::test_classes__property\", \"sklearn/model_selection/tests/test_search.py::test_trivial_cv_results_attr\", \"sklearn/model_selection/tests/test_search.py::test_no_refit\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_error\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_one_grid_point\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_when_param_grid_includes_range\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_bad_param_grid\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_sparse\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_sparse_scoring\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_precomputed_kernel\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_precomputed_kernel_error_nonsquare\", \"sklearn/model_selection/tests/test_search.py::test_refit\", \"sklearn/model_selection/tests/test_search.py::test_refit_callable\", \"sklearn/model_selection/tests/test_search.py::test_refit_callable_invalid_type\", \"sklearn/model_selection/tests/test_search.py::test_refit_callable_out_bound[RandomizedSearchCV--1]\", \"sklearn/model_selection/tests/test_search.py::test_refit_callable_out_bound[RandomizedSearchCV-2]\", \"sklearn/model_selection/tests/test_search.py::test_refit_callable_out_bound[GridSearchCV--1]\", \"sklearn/model_selection/tests/test_search.py::test_refit_callable_out_bound[GridSearchCV-2]\", \"sklearn/model_selection/tests/test_search.py::test_refit_callable_multi_metric\", \"sklearn/model_selection/tests/test_search.py::test_gridsearch_nd\", \"sklearn/model_selection/tests/test_search.py::test_X_as_list\", \"sklearn/model_selection/tests/test_search.py::test_y_as_list\", \"sklearn/model_selection/tests/test_search.py::test_pandas_input\", \"sklearn/model_selection/tests/test_search.py::test_unsupervised_grid_search\", \"sklearn/model_selection/tests/test_search.py::test_gridsearch_no_predict\", \"sklearn/model_selection/tests/test_search.py::test_param_sampler\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_cv_results\", \"sklearn/model_selection/tests/test_search.py::test_random_search_cv_results\", \"sklearn/model_selection/tests/test_search.py::test_search_default_iid[GridSearchCV-specialized_params0]\", \"sklearn/model_selection/tests/test_search.py::test_search_default_iid[RandomizedSearchCV-specialized_params1]\", \"sklearn/model_selection/tests/test_search.py::test_search_iid_param\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_cv_results_multimetric\", \"sklearn/model_selection/tests/test_search.py::test_random_search_cv_results_multimetric\", \"sklearn/model_selection/tests/test_search.py::test_search_cv_results_rank_tie_breaking\", \"sklearn/model_selection/tests/test_search.py::test_search_cv_results_none_param\", \"sklearn/model_selection/tests/test_search.py::test_search_cv_timing\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_correct_score_results\", \"sklearn/model_selection/tests/test_search.py::test_fit_grid_point\", \"sklearn/model_selection/tests/test_search.py::test_pickle\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_with_multioutput_data\", \"sklearn/model_selection/tests/test_search.py::test_predict_proba_disabled\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_allows_nans\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_failing_classifier\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_failing_classifier_raise\", \"sklearn/model_selection/tests/test_search.py::test_parameters_sampler_replacement\", \"sklearn/model_selection/tests/test_search.py::test_stochastic_gradient_loss_param\", \"sklearn/model_selection/tests/test_search.py::test_search_train_scores_set_to_false\", \"sklearn/model_selection/tests/test_search.py::test_grid_search_cv_splits_consistency\", \"sklearn/model_selection/tests/test_search.py::test_transform_inverse_transform_round_trip\", \"sklearn/model_selection/tests/test_search.py::test__custom_fit_no_run_search\", \"sklearn/model_selection/tests/test_search.py::test_deprecated_grid_search_iid[False]\", \"sklearn/model_selection/tests/test_search.py::test_deprecated_grid_search_iid[True]\", \"sklearn/model_selection/tests/test_search.py::test_empty_cv_iterator_error\", \"sklearn/model_selection/tests/test_search.py::test_random_search_bad_cv\", \"sklearn/tree/tests/test_tree.py::test_classification_toy\", \"sklearn/tree/tests/test_tree.py::test_weighted_classification_toy\", \"sklearn/tree/tests/test_tree.py::test_regression_toy\", \"sklearn/tree/tests/test_tree.py::test_xor\", \"sklearn/tree/tests/test_tree.py::test_iris\", \"sklearn/tree/tests/test_tree.py::test_boston\", \"sklearn/tree/tests/test_tree.py::test_probability\", \"sklearn/tree/tests/test_tree.py::test_arrayrepr\", \"sklearn/tree/tests/test_tree.py::test_pure_set\", \"sklearn/tree/tests/test_tree.py::test_numerical_stability\", \"sklearn/tree/tests/test_tree.py::test_importances\", \"sklearn/tree/tests/test_tree.py::test_importances_raises\", \"sklearn/tree/tests/test_tree.py::test_importances_gini_equal_mse\", \"sklearn/tree/tests/test_tree.py::test_max_features\", \"sklearn/tree/tests/test_tree.py::test_error\", \"sklearn/tree/tests/test_tree.py::test_min_samples_split\", \"sklearn/tree/tests/test_tree.py::test_min_samples_leaf\", \"sklearn/tree/tests/test_tree.py::test_min_weight_fraction_leaf_on_dense_input[DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_fraction_leaf_on_dense_input[ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_fraction_leaf_on_dense_input[DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_fraction_leaf_on_dense_input[ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_fraction_leaf_on_sparse_input[DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_fraction_leaf_on_sparse_input[DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_fraction_leaf_on_sparse_input[ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_fraction_leaf_on_sparse_input[ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_fraction_leaf_with_min_samples_leaf_on_dense_input[DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_fraction_leaf_with_min_samples_leaf_on_dense_input[ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_fraction_leaf_with_min_samples_leaf_on_dense_input[DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_fraction_leaf_with_min_samples_leaf_on_dense_input[ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_fraction_leaf_with_min_samples_leaf_on_sparse_input[DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_fraction_leaf_with_min_samples_leaf_on_sparse_input[DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_fraction_leaf_with_min_samples_leaf_on_sparse_input[ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_fraction_leaf_with_min_samples_leaf_on_sparse_input[ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_min_impurity_split\", \"sklearn/tree/tests/test_tree.py::test_min_impurity_decrease\", \"sklearn/tree/tests/test_tree.py::test_multioutput\", \"sklearn/tree/tests/test_tree.py::test_classes_shape\", \"sklearn/tree/tests/test_tree.py::test_unbalanced_iris\", \"sklearn/tree/tests/test_tree.py::test_memory_layout\", \"sklearn/tree/tests/test_tree.py::test_sample_weight\", \"sklearn/tree/tests/test_tree.py::test_sample_weight_invalid\", \"sklearn/tree/tests/test_tree.py::test_class_weights[DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_class_weights[ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_class_weight_errors[DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_class_weight_errors[ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_max_leaf_nodes\", \"sklearn/tree/tests/test_tree.py::test_max_leaf_nodes_max_depth\", \"sklearn/tree/tests/test_tree.py::test_arrays_persist\", \"sklearn/tree/tests/test_tree.py::test_only_constant_features\", \"sklearn/tree/tests/test_tree.py::test_behaviour_constant_feature_after_splits\", \"sklearn/tree/tests/test_tree.py::test_with_only_one_non_constant_features\", \"sklearn/tree/tests/test_tree.py::test_big_input\", \"sklearn/tree/tests/test_tree.py::test_realloc\", \"sklearn/tree/tests/test_tree.py::test_huge_allocations\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[clf_small-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[clf_small-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[clf_small-ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[clf_small-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[toy-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[digits-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[digits-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[digits-ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[digits-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[multilabel-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[multilabel-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[multilabel-ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[multilabel-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[sparse-pos-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[sparse-pos-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[sparse-pos-ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[sparse-pos-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[sparse-neg-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[sparse-neg-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[sparse-neg-ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[sparse-neg-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[sparse-mix-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[sparse-mix-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[sparse-mix-ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[sparse-mix-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[zeros-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[zeros-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[zeros-ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input[zeros-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input_reg_trees[boston-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input_reg_trees[boston-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input_reg_trees[reg_small-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse_input_reg_trees[reg_small-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_parameters-sparse-pos-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_parameters-sparse-pos-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_parameters-sparse-pos-ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_parameters-sparse-pos-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_parameters-sparse-neg-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_parameters-sparse-neg-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_parameters-sparse-neg-ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_parameters-sparse-neg-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_parameters-sparse-mix-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_parameters-sparse-mix-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_parameters-sparse-mix-ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_parameters-sparse-mix-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_parameters-zeros-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_parameters-zeros-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_parameters-zeros-ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_parameters-zeros-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_criterion-sparse-pos-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_criterion-sparse-pos-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_criterion-sparse-pos-ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_criterion-sparse-pos-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_criterion-sparse-neg-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_criterion-sparse-neg-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_criterion-sparse-neg-ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_criterion-sparse-neg-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_criterion-sparse-mix-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_criterion-sparse-mix-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_criterion-sparse-mix-ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_criterion-sparse-mix-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_criterion-zeros-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_criterion-zeros-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_criterion-zeros-ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_sparse[check_sparse_criterion-zeros-ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_explicit_sparse_zeros[DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_explicit_sparse_zeros[DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_explicit_sparse_zeros[ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_explicit_sparse_zeros[ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_1d_input[DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_1d_input[ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_1d_input[DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_1d_input[ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_leaf_split_level[DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_leaf_split_level[ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_leaf_split_level[DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_min_weight_leaf_split_level[ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_public_apply_all_trees[DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_public_apply_all_trees[ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_public_apply_all_trees[DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_public_apply_all_trees[ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_public_apply_sparse_trees[DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_public_apply_sparse_trees[DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_public_apply_sparse_trees[ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_public_apply_sparse_trees[ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_presort_deprecated[auto-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_presort_deprecated[auto-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_presort_deprecated[True-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_presort_deprecated[True-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_presort_deprecated[False-DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_presort_deprecated[False-DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_decision_path_hardcoded\", \"sklearn/tree/tests/test_tree.py::test_decision_path[DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_decision_path[ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_decision_path[DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_decision_path[ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_no_sparse_y_support[DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_no_sparse_y_support[ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_no_sparse_y_support[DecisionTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_no_sparse_y_support[ExtraTreeRegressor]\", \"sklearn/tree/tests/test_tree.py::test_mae\", \"sklearn/tree/tests/test_tree.py::test_criterion_copy\", \"sklearn/tree/tests/test_tree.py::test_empty_leaf_infinite_threshold\", \"sklearn/tree/tests/test_tree.py::test_multi_target[DecisionTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_multi_target[ExtraTreeClassifier]\", \"sklearn/tree/tests/test_tree.py::test_decision_tree_memmap\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-clf_small-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-clf_small-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-digits-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-digits-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-iris-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-iris-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-multilabel-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-multilabel-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-sparse-mix-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-sparse-mix-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-sparse-neg-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-sparse-neg-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-sparse-pos-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-sparse-pos-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-toy-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-toy-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-zeros-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[DecisionTreeClassifier-zeros-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-clf_small-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-clf_small-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-digits-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-digits-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-iris-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-iris-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-multilabel-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-multilabel-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-sparse-mix-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-sparse-mix-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-sparse-neg-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-sparse-neg-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-sparse-pos-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-sparse-pos-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-toy-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-toy-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-zeros-gini]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_classifier_are_subtrees[ExtraTreeClassifier-zeros-entropy]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-iris-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-iris-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-iris-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-boston-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-boston-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-boston-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-digits-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-digits-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-digits-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-toy-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-toy-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-toy-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-clf_small-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-clf_small-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-clf_small-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-reg_small-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-reg_small-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-reg_small-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-multilabel-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-multilabel-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-multilabel-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-sparse-pos-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-sparse-pos-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-sparse-pos-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-sparse-neg-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-sparse-neg-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-sparse-neg-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-sparse-mix-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-sparse-mix-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-sparse-mix-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-zeros-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-zeros-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[DecisionTreeRegressor-zeros-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-iris-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-iris-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-iris-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-boston-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-boston-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-boston-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-digits-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-digits-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-digits-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-toy-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-toy-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-toy-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-clf_small-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-clf_small-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-clf_small-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-reg_small-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-reg_small-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-reg_small-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-multilabel-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-multilabel-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-multilabel-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-sparse-pos-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-sparse-pos-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-sparse-pos-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-sparse-neg-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-sparse-neg-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-sparse-neg-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-sparse-mix-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-sparse-mix-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-sparse-mix-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-zeros-mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-zeros-mae]\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_regression_are_subtrees[ExtraTreeRegressor-zeros-friedman_mse]\", \"sklearn/tree/tests/test_tree.py::test_prune_single_node_tree\", \"sklearn/tree/tests/test_tree.py::test_prune_tree_raises_negative_ccp_alpha\"]",
  "environment_setup_commit": "7e85a6d1f038bbb932b36f18d75df6be937ed00d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.010354",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}