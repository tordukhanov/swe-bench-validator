{
  "repo": "django/django",
  "instance_id": "django__django-14416",
  "base_commit": "84c7c4a477eae5de394d036d7ba1e58a37e18b69",
  "patch": "diff --git a/django/middleware/locale.py b/django/middleware/locale.py\n--- a/django/middleware/locale.py\n+++ b/django/middleware/locale.py\n@@ -53,7 +53,12 @@ def process_response(self, request, response):\n                     '%s%s/' % (script_prefix, language),\n                     1\n                 )\n-                return self.response_redirect_class(language_url)\n+                # Redirect to the language-specific URL as detected by\n+                # get_language_from_request(). HTTP caches may cache this\n+                # redirect, so add the Vary header.\n+                redirect = self.response_redirect_class(language_url)\n+                patch_vary_headers(redirect, ('Accept-Language', 'Cookie'))\n+                return redirect\n \n         if not (i18n_patterns_used and language_from_path):\n             patch_vary_headers(response, ('Accept-Language',))\n",
  "test_patch": "diff --git a/tests/i18n/patterns/tests.py b/tests/i18n/patterns/tests.py\n--- a/tests/i18n/patterns/tests.py\n+++ b/tests/i18n/patterns/tests.py\n@@ -254,9 +254,13 @@ def test_no_prefix_response(self):\n         self.assertEqual(response.get('Vary'), 'Accept-Language')\n \n     def test_en_redirect(self):\n+        \"\"\"\n+        The redirect to a prefixed URL depends on 'Accept-Language' and\n+        'Cookie', but once prefixed no header is set.\n+        \"\"\"\n         response = self.client.get('/account/register/', HTTP_ACCEPT_LANGUAGE='en')\n         self.assertRedirects(response, '/en/account/register/')\n-        self.assertFalse(response.get('Vary'))\n+        self.assertEqual(response.get('Vary'), 'Accept-Language, Cookie')\n \n         response = self.client.get(response.headers['location'])\n         self.assertEqual(response.status_code, 200)\n",
  "problem_statement": "An incorrect language is sometimes displayed - redirects adding a language code to a path can be inappropriate cached by HTTP caches\nDescription\n\t\nWe have a multi-lingual site using LocaleMiddleware. With a CDN and caching reverse proxy in use, the following sequence of events can happen:\nFetch ​https://example.com/some-page/ with Accept-Language header 'de-DE,de;q=0.9'. A redirect to ​https://example.com/de/some-page/ is returned.\nFetch it again with Accept-Language header 'fr-FR,fr;q=0.9'. The cached redirect is returned by HTTP caches and the German page is displayed instead of the French one.\nLocaleMiddleware is issuing a redirect based on the detected language from the Accept-Language header or from the cookie chosen by settings.LANGUAGE_COOKIE_NAME but is not telling caches that it has used these headers.\nAdding a Vary header fixes this.\n",
  "hints_text": "",
  "created_at": "2021-05-19T11:22:26Z",
  "version": "4.0",
  "FAIL_TO_PASS": "[\"The redirect to a prefixed URL depends on 'Accept-Language' and\"]",
  "PASS_TO_PASS": "[\"test_prefixed_i18n_disabled (i18n.patterns.tests.URLDisabledTests)\", \"test_request_urlconf_considered (i18n.patterns.tests.RequestURLConfTests)\", \"test_account_register (i18n.patterns.tests.URLNamespaceTests)\", \"test_no_lang_activate (i18n.patterns.tests.PathUnusedTests)\", \"test_language_prefix_with_script_prefix (i18n.patterns.tests.URLRedirectWithScriptAliasTests)\", \"test_invalid_prefix_use (i18n.patterns.tests.URLPrefixTests)\", \"test_not_prefixed (i18n.patterns.tests.URLPrefixTests)\", \"test_prefixed (i18n.patterns.tests.URLPrefixTests)\", \"test_en_redirect (i18n.patterns.tests.URLRedirectWithoutTrailingSlashSettingTests)\", \"test_not_prefixed_redirect (i18n.patterns.tests.URLRedirectWithoutTrailingSlashSettingTests)\", \"test_en_redirect (i18n.patterns.tests.URLRedirectWithoutTrailingSlashTests)\", \"test_not_prefixed_redirect (i18n.patterns.tests.URLRedirectWithoutTrailingSlashTests)\", \"test_no_prefix_response (i18n.patterns.tests.URLVaryAcceptLanguageTests)\", \"test_no_prefix_translated (i18n.patterns.tests.URLTranslationTests)\", \"test_translate_url_utility (i18n.patterns.tests.URLTranslationTests)\", \"test_users_url (i18n.patterns.tests.URLTranslationTests)\", \"test_args (i18n.patterns.tests.URLTagTests)\", \"test_context (i18n.patterns.tests.URLTagTests)\", \"test_kwargs (i18n.patterns.tests.URLTagTests)\", \"test_strings_only (i18n.patterns.tests.URLTagTests)\", \"test_en_path (i18n.patterns.tests.URLResponseTests)\", \"test_en_url (i18n.patterns.tests.URLResponseTests)\", \"test_nl_path (i18n.patterns.tests.URLResponseTests)\", \"test_nl_url (i18n.patterns.tests.URLResponseTests)\", \"test_not_prefixed_with_prefix (i18n.patterns.tests.URLResponseTests)\", \"test_pt_br_url (i18n.patterns.tests.URLResponseTests)\", \"test_wrong_en_prefix (i18n.patterns.tests.URLResponseTests)\", \"test_wrong_nl_prefix (i18n.patterns.tests.URLResponseTests)\", \"test_custom_redirect_class (i18n.patterns.tests.URLRedirectTests)\", \"test_en_redirect (i18n.patterns.tests.URLRedirectTests)\", \"test_en_redirect_wrong_url (i18n.patterns.tests.URLRedirectTests)\", \"test_nl_redirect (i18n.patterns.tests.URLRedirectTests)\", \"test_nl_redirect_wrong_url (i18n.patterns.tests.URLRedirectTests)\", \"test_no_prefix_response (i18n.patterns.tests.URLRedirectTests)\", \"test_pl_pl_redirect (i18n.patterns.tests.URLRedirectTests)\", \"test_pt_br_redirect (i18n.patterns.tests.URLRedirectTests)\"]",
  "environment_setup_commit": "475cffd1d64c690cdad16ede4d5e81985738ceb4",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.691711",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}