{
  "repo": "pydata/xarray",
  "instance_id": "pydata__xarray-7233",
  "base_commit": "51d37d1be95547059251076b3fadaa317750aab3",
  "patch": "diff --git a/xarray/core/rolling.py b/xarray/core/rolling.py\n--- a/xarray/core/rolling.py\n+++ b/xarray/core/rolling.py\n@@ -973,7 +973,10 @@ def construct(\n             else:\n                 reshaped[key] = var\n \n-        should_be_coords = set(window_dim) & set(self.obj.coords)\n+        # should handle window_dim being unindexed\n+        should_be_coords = (set(window_dim) & set(self.obj.coords)) | set(\n+            self.obj.coords\n+        )\n         result = reshaped.set_coords(should_be_coords)\n         if isinstance(self.obj, DataArray):\n             return self.obj._from_temp_dataset(result)\n",
  "test_patch": "diff --git a/xarray/tests/test_coarsen.py b/xarray/tests/test_coarsen.py\n--- a/xarray/tests/test_coarsen.py\n+++ b/xarray/tests/test_coarsen.py\n@@ -250,71 +250,91 @@ def test_coarsen_da_reduce(da, window, name) -> None:\n     assert_allclose(actual, expected)\n \n \n-@pytest.mark.parametrize(\"dask\", [True, False])\n-def test_coarsen_construct(dask: bool) -> None:\n-\n-    ds = Dataset(\n-        {\n-            \"vart\": (\"time\", np.arange(48), {\"a\": \"b\"}),\n-            \"varx\": (\"x\", np.arange(10), {\"a\": \"b\"}),\n-            \"vartx\": ((\"x\", \"time\"), np.arange(480).reshape(10, 48), {\"a\": \"b\"}),\n-            \"vary\": (\"y\", np.arange(12)),\n-        },\n-        coords={\"time\": np.arange(48), \"y\": np.arange(12)},\n-        attrs={\"foo\": \"bar\"},\n-    )\n-\n-    if dask and has_dask:\n-        ds = ds.chunk({\"x\": 4, \"time\": 10})\n-\n-    expected = xr.Dataset(attrs={\"foo\": \"bar\"})\n-    expected[\"vart\"] = ((\"year\", \"month\"), ds.vart.data.reshape((-1, 12)), {\"a\": \"b\"})\n-    expected[\"varx\"] = ((\"x\", \"x_reshaped\"), ds.varx.data.reshape((-1, 5)), {\"a\": \"b\"})\n-    expected[\"vartx\"] = (\n-        (\"x\", \"x_reshaped\", \"year\", \"month\"),\n-        ds.vartx.data.reshape(2, 5, 4, 12),\n-        {\"a\": \"b\"},\n-    )\n-    expected[\"vary\"] = ds.vary\n-    expected.coords[\"time\"] = ((\"year\", \"month\"), ds.time.data.reshape((-1, 12)))\n-\n-    with raise_if_dask_computes():\n-        actual = ds.coarsen(time=12, x=5).construct(\n-            {\"time\": (\"year\", \"month\"), \"x\": (\"x\", \"x_reshaped\")}\n+class TestCoarsenConstruct:\n+    @pytest.mark.parametrize(\"dask\", [True, False])\n+    def test_coarsen_construct(self, dask: bool) -> None:\n+\n+        ds = Dataset(\n+            {\n+                \"vart\": (\"time\", np.arange(48), {\"a\": \"b\"}),\n+                \"varx\": (\"x\", np.arange(10), {\"a\": \"b\"}),\n+                \"vartx\": ((\"x\", \"time\"), np.arange(480).reshape(10, 48), {\"a\": \"b\"}),\n+                \"vary\": (\"y\", np.arange(12)),\n+            },\n+            coords={\"time\": np.arange(48), \"y\": np.arange(12)},\n+            attrs={\"foo\": \"bar\"},\n         )\n-    assert_identical(actual, expected)\n \n-    with raise_if_dask_computes():\n-        actual = ds.coarsen(time=12, x=5).construct(\n-            time=(\"year\", \"month\"), x=(\"x\", \"x_reshaped\")\n-        )\n-    assert_identical(actual, expected)\n+        if dask and has_dask:\n+            ds = ds.chunk({\"x\": 4, \"time\": 10})\n \n-    with raise_if_dask_computes():\n-        actual = ds.coarsen(time=12, x=5).construct(\n-            {\"time\": (\"year\", \"month\"), \"x\": (\"x\", \"x_reshaped\")}, keep_attrs=False\n+        expected = xr.Dataset(attrs={\"foo\": \"bar\"})\n+        expected[\"vart\"] = (\n+            (\"year\", \"month\"),\n+            ds.vart.data.reshape((-1, 12)),\n+            {\"a\": \"b\"},\n         )\n-        for var in actual:\n-            assert actual[var].attrs == {}\n-        assert actual.attrs == {}\n-\n-    with raise_if_dask_computes():\n-        actual = ds.vartx.coarsen(time=12, x=5).construct(\n-            {\"time\": (\"year\", \"month\"), \"x\": (\"x\", \"x_reshaped\")}\n+        expected[\"varx\"] = (\n+            (\"x\", \"x_reshaped\"),\n+            ds.varx.data.reshape((-1, 5)),\n+            {\"a\": \"b\"},\n         )\n-    assert_identical(actual, expected[\"vartx\"])\n-\n-    with pytest.raises(ValueError):\n-        ds.coarsen(time=12).construct(foo=\"bar\")\n-\n-    with pytest.raises(ValueError):\n-        ds.coarsen(time=12, x=2).construct(time=(\"year\", \"month\"))\n-\n-    with pytest.raises(ValueError):\n-        ds.coarsen(time=12).construct()\n-\n-    with pytest.raises(ValueError):\n-        ds.coarsen(time=12).construct(time=\"bar\")\n-\n-    with pytest.raises(ValueError):\n-        ds.coarsen(time=12).construct(time=(\"bar\",))\n+        expected[\"vartx\"] = (\n+            (\"x\", \"x_reshaped\", \"year\", \"month\"),\n+            ds.vartx.data.reshape(2, 5, 4, 12),\n+            {\"a\": \"b\"},\n+        )\n+        expected[\"vary\"] = ds.vary\n+        expected.coords[\"time\"] = ((\"year\", \"month\"), ds.time.data.reshape((-1, 12)))\n+\n+        with raise_if_dask_computes():\n+            actual = ds.coarsen(time=12, x=5).construct(\n+                {\"time\": (\"year\", \"month\"), \"x\": (\"x\", \"x_reshaped\")}\n+            )\n+        assert_identical(actual, expected)\n+\n+        with raise_if_dask_computes():\n+            actual = ds.coarsen(time=12, x=5).construct(\n+                time=(\"year\", \"month\"), x=(\"x\", \"x_reshaped\")\n+            )\n+        assert_identical(actual, expected)\n+\n+        with raise_if_dask_computes():\n+            actual = ds.coarsen(time=12, x=5).construct(\n+                {\"time\": (\"year\", \"month\"), \"x\": (\"x\", \"x_reshaped\")}, keep_attrs=False\n+            )\n+            for var in actual:\n+                assert actual[var].attrs == {}\n+            assert actual.attrs == {}\n+\n+        with raise_if_dask_computes():\n+            actual = ds.vartx.coarsen(time=12, x=5).construct(\n+                {\"time\": (\"year\", \"month\"), \"x\": (\"x\", \"x_reshaped\")}\n+            )\n+        assert_identical(actual, expected[\"vartx\"])\n+\n+        with pytest.raises(ValueError):\n+            ds.coarsen(time=12).construct(foo=\"bar\")\n+\n+        with pytest.raises(ValueError):\n+            ds.coarsen(time=12, x=2).construct(time=(\"year\", \"month\"))\n+\n+        with pytest.raises(ValueError):\n+            ds.coarsen(time=12).construct()\n+\n+        with pytest.raises(ValueError):\n+            ds.coarsen(time=12).construct(time=\"bar\")\n+\n+        with pytest.raises(ValueError):\n+            ds.coarsen(time=12).construct(time=(\"bar\",))\n+\n+    def test_coarsen_construct_keeps_all_coords(self):\n+        da = xr.DataArray(np.arange(24), dims=[\"time\"])\n+        da = da.assign_coords(day=365 * da)\n+\n+        result = da.coarsen(time=12).construct(time=(\"year\", \"month\"))\n+        assert list(da.coords) == list(result.coords)\n+\n+        ds = da.to_dataset(name=\"T\")\n+        result = ds.coarsen(time=12).construct(time=(\"year\", \"month\"))\n+        assert list(da.coords) == list(result.coords)\n",
  "problem_statement": "ds.Coarsen.construct demotes non-dimensional coordinates to variables\n### What happened?\n\n`ds.Coarsen.construct` demotes non-dimensional coordinates to variables\n\n### What did you expect to happen?\n\nAll variables that were coordinates before the coarsen.construct stay as coordinates afterwards.\n\n### Minimal Complete Verifiable Example\n\n```Python\nIn [3]: da = xr.DataArray(np.arange(24), dims=[\"time\"])\r\n   ...: da = da.assign_coords(day=365 * da)\r\n   ...: ds = da.to_dataset(name=\"T\")\r\n\r\nIn [4]: ds\r\nOut[4]: \r\n<xarray.Dataset>\r\nDimensions:  (time: 24)\r\nCoordinates:\r\n    day      (time) int64 0 365 730 1095 1460 1825 ... 6935 7300 7665 8030 8395\r\nDimensions without coordinates: time\r\nData variables:\r\n    T        (time) int64 0 1 2 3 4 5 6 7 8 9 ... 14 15 16 17 18 19 20 21 22 23\r\n\r\nIn [5]: ds.coarsen(time=12).construct(time=(\"year\", \"month\"))\r\nOut[5]: \r\n<xarray.Dataset>\r\nDimensions:  (year: 2, month: 12)\r\nCoordinates:\r\n    day      (year, month) int64 0 365 730 1095 1460 ... 7300 7665 8030 8395\r\nDimensions without coordinates: year, month\r\nData variables:\r\n    T        (year, month) int64 0 1 2 3 4 5 6 7 8 ... 16 17 18 19 20 21 22 23\n```\n\n\n### MVCE confirmation\n\n- [X] Minimal example — the example is as focused as reasonably possible to demonstrate the underlying issue in xarray.\n- [X] Complete example — the example is self-contained, including all data and the text of any traceback.\n- [X] Verifiable example — the example copy & pastes into an IPython prompt or [Binder notebook](https://mybinder.org/v2/gh/pydata/xarray/main?urlpath=lab/tree/doc/examples/blank_template.ipynb), returning the result.\n- [X] New issue — a search of GitHub Issues suggests this is not a duplicate.\n\n### Relevant log output\n\n_No response_\n\n### Anything else we need to know?\n\n_No response_\n\n### Environment\n\n`main`\r\n\n",
  "hints_text": "",
  "created_at": "2022-10-27T23:46:49Z",
  "version": "2022.09",
  "FAIL_TO_PASS": "[\"xarray/tests/test_coarsen.py::TestCoarsenConstruct::test_coarsen_construct_keeps_all_coords\"]",
  "PASS_TO_PASS": "[\"xarray/tests/test_coarsen.py::test_coarsen_absent_dims_error[1-numpy]\", \"xarray/tests/test_coarsen.py::test_coarsen_absent_dims_error[1-dask]\", \"xarray/tests/test_coarsen.py::test_coarsen_dataset[1-numpy-trim-left-True]\", \"xarray/tests/test_coarsen.py::test_coarsen_dataset[1-numpy-trim-left-False]\", \"xarray/tests/test_coarsen.py::test_coarsen_dataset[1-numpy-pad-right-True]\", \"xarray/tests/test_coarsen.py::test_coarsen_dataset[1-numpy-pad-right-False]\", \"xarray/tests/test_coarsen.py::test_coarsen_dataset[1-dask-trim-left-True]\", \"xarray/tests/test_coarsen.py::test_coarsen_dataset[1-dask-trim-left-False]\", \"xarray/tests/test_coarsen.py::test_coarsen_dataset[1-dask-pad-right-True]\", \"xarray/tests/test_coarsen.py::test_coarsen_dataset[1-dask-pad-right-False]\", \"xarray/tests/test_coarsen.py::test_coarsen_coords[1-numpy-True]\", \"xarray/tests/test_coarsen.py::test_coarsen_coords[1-numpy-False]\", \"xarray/tests/test_coarsen.py::test_coarsen_coords[1-dask-True]\", \"xarray/tests/test_coarsen.py::test_coarsen_coords[1-dask-False]\", \"xarray/tests/test_coarsen.py::test_coarsen_coords_cftime\", \"xarray/tests/test_coarsen.py::test_coarsen_keep_attrs[reduce-argument0]\", \"xarray/tests/test_coarsen.py::test_coarsen_keep_attrs[mean-argument1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-sum-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-sum-1-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-sum-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-sum-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-sum-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-sum-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-sum-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-sum-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-mean-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-mean-1-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-mean-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-mean-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-mean-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-mean-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-mean-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-mean-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-std-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-std-1-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-std-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-std-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-std-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-std-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-std-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-std-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-var-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-var-1-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-var-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-var-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-var-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-var-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-var-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-var-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-min-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-min-1-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-min-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-min-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-min-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-min-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-min-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-min-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-max-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-max-1-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-max-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-max-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-max-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-max-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-max-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-max-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-median-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-median-1-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-median-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-median-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-median-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-median-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-median-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[numpy-median-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-sum-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-sum-1-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-sum-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-sum-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-sum-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-sum-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-sum-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-sum-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-mean-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-mean-1-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-mean-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-mean-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-mean-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-mean-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-mean-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-mean-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-std-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-std-1-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-std-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-std-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-std-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-std-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-std-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-std-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-var-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-var-1-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-var-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-var-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-var-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-var-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-var-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-var-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-min-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-min-1-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-min-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-min-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-min-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-min-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-min-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-min-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-max-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-max-1-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-max-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-max-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-max-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-max-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-max-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-max-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-median-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-median-1-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-median-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-median-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-median-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-median-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-median-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_reduce[dask-median-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_keep_attrs[reduce-argument0]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_keep_attrs[mean-argument1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-sum-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-sum-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-sum-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-sum-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-sum-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-sum-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-sum-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-mean-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-mean-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-mean-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-mean-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-mean-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-mean-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-mean-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-std-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-std-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-std-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-std-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-std-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-std-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-std-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-max-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-max-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-max-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-max-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-max-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-max-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[numpy-max-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-sum-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-sum-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-sum-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-sum-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-sum-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-sum-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-sum-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-mean-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-mean-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-mean-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-mean-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-mean-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-mean-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-mean-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-std-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-std-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-std-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-std-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-std-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-std-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-std-4-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-max-1-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-max-2-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-max-2-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-max-3-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-max-3-2]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-max-4-1]\", \"xarray/tests/test_coarsen.py::test_coarsen_da_reduce[dask-max-4-2]\", \"xarray/tests/test_coarsen.py::TestCoarsenConstruct::test_coarsen_construct[True]\", \"xarray/tests/test_coarsen.py::TestCoarsenConstruct::test_coarsen_construct[False]\"]",
  "environment_setup_commit": "087ebbb78668bdf5d2d41c3b2553e3f29ce75be1",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.905150",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}