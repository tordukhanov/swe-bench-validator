{
  "repo": "pydata/xarray",
  "instance_id": "pydata__xarray-4911",
  "base_commit": "7c4e2ac83f7b4306296ff9b7b51aaf016e5ad614",
  "patch": "diff --git a/xarray/core/dtypes.py b/xarray/core/dtypes.py\n--- a/xarray/core/dtypes.py\n+++ b/xarray/core/dtypes.py\n@@ -78,7 +78,7 @@ def maybe_promote(dtype):\n     return np.dtype(dtype), fill_value\n \n \n-NAT_TYPES = (np.datetime64(\"NaT\"), np.timedelta64(\"NaT\"))\n+NAT_TYPES = {np.datetime64(\"NaT\").dtype, np.timedelta64(\"NaT\").dtype}\n \n \n def get_fill_value(dtype):\ndiff --git a/xarray/core/nanops.py b/xarray/core/nanops.py\n--- a/xarray/core/nanops.py\n+++ b/xarray/core/nanops.py\n@@ -3,7 +3,14 @@\n import numpy as np\n \n from . import dtypes, nputils, utils\n-from .duck_array_ops import _dask_or_eager_func, count, fillna, isnull, where_method\n+from .duck_array_ops import (\n+    _dask_or_eager_func,\n+    count,\n+    fillna,\n+    isnull,\n+    where,\n+    where_method,\n+)\n from .pycompat import dask_array_type\n \n try:\n@@ -28,18 +35,14 @@ def _maybe_null_out(result, axis, mask, min_count=1):\n     \"\"\"\n     xarray version of pandas.core.nanops._maybe_null_out\n     \"\"\"\n-\n     if axis is not None and getattr(result, \"ndim\", False):\n         null_mask = (np.take(mask.shape, axis).prod() - mask.sum(axis) - min_count) < 0\n-        if null_mask.any():\n-            dtype, fill_value = dtypes.maybe_promote(result.dtype)\n-            result = result.astype(dtype)\n-            result[null_mask] = fill_value\n+        dtype, fill_value = dtypes.maybe_promote(result.dtype)\n+        result = where(null_mask, fill_value, result.astype(dtype))\n \n     elif getattr(result, \"dtype\", None) not in dtypes.NAT_TYPES:\n         null_mask = mask.size - mask.sum()\n-        if null_mask < min_count:\n-            result = np.nan\n+        result = where(null_mask < min_count, np.nan, result)\n \n     return result\n \ndiff --git a/xarray/core/ops.py b/xarray/core/ops.py\n--- a/xarray/core/ops.py\n+++ b/xarray/core/ops.py\n@@ -114,9 +114,12 @@\n \n _MINCOUNT_DOCSTRING = \"\"\"\n min_count : int, default: None\n-    The required number of valid values to perform the operation.\n-    If fewer than min_count non-NA values are present the result will\n-    be NA. New in version 0.10.8: Added with the default being None.\"\"\"\n+    The required number of valid values to perform the operation. If\n+    fewer than min_count non-NA values are present the result will be\n+    NA. Only used if skipna is set to True or defaults to True for the\n+    array's dtype. New in version 0.10.8: Added with the default being\n+    None. Changed in version 0.17.0: if specified on an integer array\n+    and skipna=True, the result will be a float array.\"\"\"\n \n _COARSEN_REDUCE_DOCSTRING_TEMPLATE = \"\"\"\\\n Coarsen this object by applying `{name}` along its dimensions.\n",
  "test_patch": "diff --git a/xarray/tests/test_dtypes.py b/xarray/tests/test_dtypes.py\n--- a/xarray/tests/test_dtypes.py\n+++ b/xarray/tests/test_dtypes.py\n@@ -90,3 +90,9 @@ def test_maybe_promote(kind, expected):\n     actual = dtypes.maybe_promote(np.dtype(kind))\n     assert actual[0] == expected[0]\n     assert str(actual[1]) == expected[1]\n+\n+\n+def test_nat_types_membership():\n+    assert np.datetime64(\"NaT\").dtype in dtypes.NAT_TYPES\n+    assert np.timedelta64(\"NaT\").dtype in dtypes.NAT_TYPES\n+    assert np.float64 not in dtypes.NAT_TYPES\ndiff --git a/xarray/tests/test_duck_array_ops.py b/xarray/tests/test_duck_array_ops.py\n--- a/xarray/tests/test_duck_array_ops.py\n+++ b/xarray/tests/test_duck_array_ops.py\n@@ -34,6 +34,7 @@\n     assert_array_equal,\n     has_dask,\n     has_scipy,\n+    raise_if_dask_computes,\n     raises_regex,\n     requires_cftime,\n     requires_dask,\n@@ -587,7 +588,10 @@ def test_min_count(dim_num, dtype, dask, func, aggdim, contains_nan, skipna):\n     da = construct_dataarray(dim_num, dtype, contains_nan=contains_nan, dask=dask)\n     min_count = 3\n \n-    actual = getattr(da, func)(dim=aggdim, skipna=skipna, min_count=min_count)\n+    # If using Dask, the function call should be lazy.\n+    with raise_if_dask_computes():\n+        actual = getattr(da, func)(dim=aggdim, skipna=skipna, min_count=min_count)\n+\n     expected = series_reduce(da, func, skipna=skipna, dim=aggdim, min_count=min_count)\n     assert_allclose(actual, expected)\n     assert_dask_array(actual, dask)\n@@ -603,7 +607,13 @@ def test_min_count_nd(dtype, dask, func):\n     min_count = 3\n     dim_num = 3\n     da = construct_dataarray(dim_num, dtype, contains_nan=True, dask=dask)\n-    actual = getattr(da, func)(dim=[\"x\", \"y\", \"z\"], skipna=True, min_count=min_count)\n+\n+    # If using Dask, the function call should be lazy.\n+    with raise_if_dask_computes():\n+        actual = getattr(da, func)(\n+            dim=[\"x\", \"y\", \"z\"], skipna=True, min_count=min_count\n+        )\n+\n     # Supplying all dims is equivalent to supplying `...` or `None`\n     expected = getattr(da, func)(dim=..., skipna=True, min_count=min_count)\n \n@@ -611,6 +621,48 @@ def test_min_count_nd(dtype, dask, func):\n     assert_dask_array(actual, dask)\n \n \n+@pytest.mark.parametrize(\"dask\", [False, True])\n+@pytest.mark.parametrize(\"func\", [\"sum\", \"prod\"])\n+@pytest.mark.parametrize(\"dim\", [None, \"a\", \"b\"])\n+def test_min_count_specific(dask, func, dim):\n+    if dask and not has_dask:\n+        pytest.skip(\"requires dask\")\n+\n+    # Simple array with four non-NaN values.\n+    da = DataArray(np.ones((6, 6), dtype=np.float64) * np.nan, dims=(\"a\", \"b\"))\n+    da[0][0] = 2\n+    da[0][3] = 2\n+    da[3][0] = 2\n+    da[3][3] = 2\n+    if dask:\n+        da = da.chunk({\"a\": 3, \"b\": 3})\n+\n+    # Expected result if we set min_count to the number of non-NaNs in a\n+    # row/column/the entire array.\n+    if dim:\n+        min_count = 2\n+        expected = DataArray(\n+            [4.0, np.nan, np.nan] * 2, dims=(\"a\" if dim == \"b\" else \"b\",)\n+        )\n+    else:\n+        min_count = 4\n+        expected = DataArray(8.0 if func == \"sum\" else 16.0)\n+\n+    # Check for that min_count.\n+    with raise_if_dask_computes():\n+        actual = getattr(da, func)(dim, skipna=True, min_count=min_count)\n+    assert_dask_array(actual, dask)\n+    assert_allclose(actual, expected)\n+\n+    # With min_count being one higher, should get all NaN.\n+    min_count += 1\n+    expected *= np.nan\n+    with raise_if_dask_computes():\n+        actual = getattr(da, func)(dim, skipna=True, min_count=min_count)\n+    assert_dask_array(actual, dask)\n+    assert_allclose(actual, expected)\n+\n+\n @pytest.mark.parametrize(\"func\", [\"sum\", \"prod\"])\n def test_min_count_dataset(func):\n     da = construct_dataarray(2, dtype=float, contains_nan=True, dask=False)\n@@ -655,9 +707,12 @@ def test_docs():\n             have a sentinel missing value (int) or skipna=True has not been\n             implemented (object, datetime64 or timedelta64).\n         min_count : int, default: None\n-            The required number of valid values to perform the operation.\n-            If fewer than min_count non-NA values are present the result will\n-            be NA. New in version 0.10.8: Added with the default being None.\n+            The required number of valid values to perform the operation. If\n+            fewer than min_count non-NA values are present the result will be\n+            NA. Only used if skipna is set to True or defaults to True for the\n+            array's dtype. New in version 0.10.8: Added with the default being\n+            None. Changed in version 0.17.0: if specified on an integer array\n+            and skipna=True, the result will be a float array.\n         keep_attrs : bool, optional\n             If True, the attributes (`attrs`) will be copied from the original\n             object to the new one.  If False (default), the new object will be\n",
  "problem_statement": "Sum and prod with min_count forces evaluation\nIf I use the `sum` method on a lazy array with `min_count != None` then evaluation is forced. If there is some limitation of the implementation which means it cannot be added to the computation graph for lazy evaluation then this should be mentioned in the docs.\r\n\r\n**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\nimport numpy as np\r\nimport xarray as xr\r\n\r\n\r\ndef worker(da):\r\n    if da.shape == (0, 0):\r\n        return da\r\n\r\n    raise RuntimeError(\"I was evaluated\")\r\n\r\n\r\nda = xr.DataArray(\r\n    np.random.normal(size=(20, 500)),\r\n    dims=(\"x\", \"y\"),\r\n    coords=(np.arange(20), np.arange(500)),\r\n)\r\n\r\nda = da.chunk(dict(x=5))\r\nlazy = da.map_blocks(worker)\r\nresult1 = lazy.sum(\"x\", skipna=True)\r\nresult2 = lazy.sum(\"x\", skipna=True, min_count=5)\r\n\r\n```\r\n\r\n**What happened**: ``RuntimeError: I was evaluated``\r\n\r\n**What you expected to happen**: No output or exceptions, as the result1 and result2 arrays are not printed or saved.\r\n\r\n**Environment**:\r\n\r\n<details><summary>Output of <tt>xr.show_versions()</tt></summary>\r\n\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit: None\r\npython: 3.9.1 (default, Feb  6 2021, 06:49:13) \r\n[GCC 10.2.0]\r\npython-bits: 64\r\nOS: Linux\r\nOS-release: 5.10.15-arch1-1\r\nmachine: x86_64\r\nprocessor: \r\nbyteorder: little\r\nLC_ALL: None\r\nLANG: en_NZ.UTF-8\r\nLOCALE: en_NZ.UTF-8\r\nlibhdf5: 1.12.0\r\nlibnetcdf: 4.7.4\r\n\r\nxarray: 0.16.2\r\npandas: 1.2.1\r\nnumpy: 1.20.0\r\nscipy: 1.6.0\r\nnetCDF4: 1.5.5.1\r\npydap: None\r\nh5netcdf: 0.9.0\r\nh5py: 3.1.0\r\nNio: None\r\nzarr: None\r\ncftime: 1.4.1\r\nnc_time_axis: None\r\nPseudoNetCDF: None\r\nrasterio: 1.2.0\r\ncfgrib: None\r\niris: None\r\nbottleneck: 1.3.2\r\ndask: 2020.12.0\r\ndistributed: 2020.12.0\r\nmatplotlib: 3.3.4\r\ncartopy: 0.18.0\r\nseaborn: None\r\nnumbagg: None\r\npint: None\r\nsetuptools: 53.0.0\r\npip: 20.3.1\r\nconda: None\r\npytest: 6.2.1\r\nIPython: 7.19.0\r\nsphinx: 3.4.3\r\n\r\n</details>\r\n\n",
  "hints_text": "Thanks for the report, the culprit is likely\r\n\r\nhttps://github.com/pydata/xarray/blob/5296ed18272a856d478fbbb3d3253205508d1c2d/xarray/core/nanops.py#L34\r\n\r\nWe fixed a similar problem in [weighted](https://github.com/pydata/xarray/blob/master/xarray/core/weighted.py#L100).\ngrepping the code, the only other function that calls `_maybe_null_out` is prod, and I can confirm the problem also exists there. Updated the title, MCVE for prod:\r\n\r\n```python\r\nimport numpy as np\r\nimport xarray as xr\r\n\r\n\r\ndef worker(da):\r\n    if da.shape == (0, 0):\r\n        return da\r\n\r\n    raise RuntimeError(\"I was evaluated\")\r\n\r\n\r\nda = xr.DataArray(\r\n    np.random.normal(size=(20, 500)),\r\n    dims=(\"x\", \"y\"),\r\n    coords=(np.arange(20), np.arange(500)),\r\n)\r\n\r\nda = da.chunk(dict(x=5))\r\nlazy = da.map_blocks(worker)\r\nresult1 = lazy.prod(\"x\", skipna=True)\r\nresult2 = lazy.prod(\"x\", skipna=True, min_count=5)\r\n```\nCan we use `np.where` instead of this if condition?\nA quick check with the debugger and it is the `null_mask.any()` call that is causing it to compute.\r\n\r\nI think I've found another problem with `_maybe_null_out` if it is reducing over all dimensions. With the altered MCVE\r\n\r\n```python\r\nimport numpy as np\r\nimport xarray as xr\r\n\r\ndef worker(da):\r\n    if da.shape == (0, 0):\r\n        return da\r\n\r\n    res = xr.full_like(da, np.nan)\r\n    res[0, 0] = 1\r\n    return res\r\n\r\n\r\nda = xr.DataArray(\r\n    np.random.normal(size=(20, 500)),\r\n    dims=(\"x\", \"y\"),\r\n    coords=(np.arange(20), np.arange(500)),\r\n)\r\n\r\nda = da.chunk(dict(x=5))\r\nlazy = da.map_blocks(worker)\r\nresult_allaxes = lazy.sum(skipna=True, min_count=5)\r\nresult_allaxes.load()\r\n```\r\n\r\nI would expect `result_allaxes` to be nan since there are four blocks and therefore four non-nan values, less than min_count. Instead it is 4.\r\n\r\nThe problem seems to be the dtype check:\r\n\r\nhttps://github.com/pydata/xarray/blob/5296ed18272a856d478fbbb3d3253205508d1c2d/xarray/core/nanops.py#L39\r\n\r\nThe test returns True for float64 and so the block isn't run. Another MCVE:\r\n\r\n```python\r\nimport numpy as np\r\nfrom xarray.core import dtypes\r\n\r\nprint(dtypes.NAT_TYPES)\r\nprint(np.dtype(\"float64\") in dtypes.NAT_TYPES)\r\n```\r\n\r\nOutput:\r\n```console\r\n(numpy.datetime64('NaT'), numpy.timedelta64('NaT'))\r\nTrue\r\n```\r\nwhere I think False would be expected. Should I open a separate issue for this or can we track it here too?\n@dcherian it looks like that works. A better test script:\r\n\r\n```python\r\nimport numpy as np\r\nimport xarray as xr\r\nfrom xarray.tests import raise_if_dask_computes\r\n\r\n\r\ndef worker(da):\r\n    if da.shape == (0, 0):\r\n        return da\r\n\r\n    return da.where(da > 1)\r\n\r\n\r\nnp.random.seed(1023)\r\nda = xr.DataArray(\r\n    np.random.normal(size=(20, 500)),\r\n    dims=(\"x\", \"y\"),\r\n    coords=(np.arange(20), np.arange(500)),\r\n)\r\n\r\nda = da.chunk(dict(x=5))\r\nlazy = da.map_blocks(worker)\r\n\r\nwith raise_if_dask_computes():\r\n    result = lazy.sum(\"x\", skipna=True, min_count=5)\r\n\r\nresult.load()\r\n\r\nassert np.isnan(result[0])\r\nassert not np.isnan(result[6])\r\n```\r\n\r\nIf I then remove the `if null_mask.any()` check and the following block, and replace it with\r\n\r\n```python\r\ndtype, fill_value = dtypes.maybe_promote(result.dtype)\r\nresult = result.astype(dtype)\r\nresult = np.where(null_mask, fill_value, result)\r\n```\r\nit passes. I can start working on a pull request with these tests and changes if that looks acceptable to you.\r\n\r\n~~How would you suggest handling the possible type promotion from the current `dtype, fill_value = dtypes.maybe_promote(result.dtype)` line? Currently it only tries promoting if the mask is True anywhere. Always promote, or just use the fill value and hope it works out?~~",
  "created_at": "2021-02-15T13:53:34Z",
  "version": "0.12",
  "FAIL_TO_PASS": "[\"xarray/tests/test_dtypes.py::test_nat_types_membership\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[None-sum-False]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[None-prod-False]\", \"xarray/tests/test_duck_array_ops.py::test_docs\"]",
  "PASS_TO_PASS": "[\"xarray/tests/test_dtypes.py::test_result_type[args0-bool]\", \"xarray/tests/test_dtypes.py::test_result_type[args1-object_]\", \"xarray/tests/test_dtypes.py::test_result_type[args2-float64]\", \"xarray/tests/test_dtypes.py::test_result_type[args3-object_]\", \"xarray/tests/test_dtypes.py::test_result_type[args4-object_]\", \"xarray/tests/test_dtypes.py::test_result_type[args5-str_]\", \"xarray/tests/test_dtypes.py::test_result_type[args6-object_]\", \"xarray/tests/test_dtypes.py::test_result_type_scalar\", \"xarray/tests/test_dtypes.py::test_result_type_dask_array\", \"xarray/tests/test_dtypes.py::test_inf[1.0]\", \"xarray/tests/test_dtypes.py::test_inf[inf]\", \"xarray/tests/test_dtypes.py::test_inf[ab]\", \"xarray/tests/test_dtypes.py::test_inf[(1+1j)]\", \"xarray/tests/test_dtypes.py::test_inf[True]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[a-expected0]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[b-expected1]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[B-expected2]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[c-expected3]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[D-expected4]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[d-expected5]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[e-expected6]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[F-expected7]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[f-expected8]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[h-expected9]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[H-expected10]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[i-expected11]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[I-expected12]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[l-expected13]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[L-expected14]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[m-expected15]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[M-expected16]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[O-expected17]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[p-expected18]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[P-expected19]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[q-expected20]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[Q-expected21]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[S-expected22]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[U-expected23]\", \"xarray/tests/test_dtypes.py::test_maybe_promote[V-expected24]\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_first\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_last\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_count\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_where_type_promotion\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_stack_type_promotion\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_concatenate_type_promotion\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_all_nan_arrays\", \"xarray/tests/test_duck_array_ops.py::test_cumsum_1d\", \"xarray/tests/test_duck_array_ops.py::test_cumsum_2d\", \"xarray/tests/test_duck_array_ops.py::test_cumprod_2d\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_equal[arr10-arr20]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_equal[arr11-arr21]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_equal[arr12-arr22]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_some_not_equal\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_wrong_shape\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_types[val10-val20-val30-null0]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_types[1.0-2.0-3.0-nan]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_types[foo-bar-baz-None]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_types[foo-bar-baz-nan]\", \"xarray/tests/test_duck_array_ops.py::test_cftime_datetime_mean\", \"xarray/tests/test_duck_array_ops.py::test_cftime_datetime_mean_long_time_period\", \"xarray/tests/test_duck_array_ops.py::test_cftime_datetime_mean_dask_error\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-True-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-True-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-True-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max_error\", \"xarray/tests/test_duck_array_ops.py::test_isnull[array0]\", \"xarray/tests/test_duck_array_ops.py::test_isnull[array1]\", \"xarray/tests/test_duck_array_ops.py::test_isnull[array2]\", \"xarray/tests/test_duck_array_ops.py::test_isnull[array3]\", \"xarray/tests/test_duck_array_ops.py::test_isnull[array4]\", \"xarray/tests/test_duck_array_ops.py::test_isnull_with_dask\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[True-3-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[True-3--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[True-8-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[True-8--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[True-11-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[True-11--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[False-3-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[False-3--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[False-8-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[False-8--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[False-11-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_rolling[False-11--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[1-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[1--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[1-1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[2-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[2--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[2-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[sum-False-float]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[sum-False-int]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[sum-False-float32]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[sum-False-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[sum-True-float]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[sum-True-int]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[sum-True-float32]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[sum-True-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[prod-False-float]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[prod-False-int]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[prod-False-float32]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[prod-False-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[prod-True-float]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[prod-True-int]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[prod-True-float32]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[prod-True-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[None-sum-True]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[None-prod-True]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[a-sum-False]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[a-sum-True]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[a-prod-False]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[a-prod-True]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[b-sum-False]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[b-sum-True]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[b-prod-False]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[b-prod-True]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_dataset[sum]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_dataset[prod]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-False-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-False-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-False-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-False-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-True-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-True-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-True-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-True-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-False-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-False-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-False-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-False-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-False-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-False-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-False-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-False-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-True-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-True-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-True-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-True-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-False-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-False-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-False-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-False-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-True-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-True-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-True-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-True-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_datetime_to_numeric_datetime64\", \"xarray/tests/test_duck_array_ops.py::test_datetime_to_numeric_cftime\", \"xarray/tests/test_duck_array_ops.py::test_datetime_to_numeric_potential_overflow\", \"xarray/tests/test_duck_array_ops.py::test_py_timedelta_to_float\", \"xarray/tests/test_duck_array_ops.py::test_np_timedelta64_to_float[td0-86400000000000.0]\", \"xarray/tests/test_duck_array_ops.py::test_np_timedelta64_to_float[td1-1.0]\", \"xarray/tests/test_duck_array_ops.py::test_pd_timedelta_to_float[td0-86400000000000.0]\", \"xarray/tests/test_duck_array_ops.py::test_pd_timedelta_to_float[td1-1.0]\", \"xarray/tests/test_duck_array_ops.py::test_timedelta_to_numeric[td0]\", \"xarray/tests/test_duck_array_ops.py::test_timedelta_to_numeric[td1]\", \"xarray/tests/test_duck_array_ops.py::test_timedelta_to_numeric[td2]\", \"xarray/tests/test_duck_array_ops.py::test_timedelta_to_numeric[1\", \"xarray/tests/test_duck_array_ops.py::test_least_squares[True-True]\", \"xarray/tests/test_duck_array_ops.py::test_least_squares[True-False]\", \"xarray/tests/test_duck_array_ops.py::test_least_squares[False-True]\", \"xarray/tests/test_duck_array_ops.py::test_least_squares[False-False]\"]",
  "environment_setup_commit": "1c198a191127c601d091213c4b3292a8bb3054e1",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.885594",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}