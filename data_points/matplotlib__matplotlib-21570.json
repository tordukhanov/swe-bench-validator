{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-21570",
  "base_commit": "f0632c0fc7339f68e992ed63ae4cfac76cd41aad",
  "patch": "diff --git a/lib/matplotlib/spines.py b/lib/matplotlib/spines.py\n--- a/lib/matplotlib/spines.py\n+++ b/lib/matplotlib/spines.py\n@@ -550,7 +550,7 @@ def __getattr__(self, name):\n         try:\n             return self._dict[name]\n         except KeyError:\n-            raise ValueError(\n+            raise AttributeError(\n                 f\"'Spines' object does not contain a '{name}' spine\")\n \n     def __getitem__(self, key):\n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_spines.py b/lib/matplotlib/tests/test_spines.py\n--- a/lib/matplotlib/tests/test_spines.py\n+++ b/lib/matplotlib/tests/test_spines.py\n@@ -35,6 +35,8 @@ def set_val(self, val):\n     spines[:].set_val('y')\n     assert all(spine.val == 'y' for spine in spines.values())\n \n+    with pytest.raises(AttributeError, match='foo'):\n+        spines.foo\n     with pytest.raises(KeyError, match='foo'):\n         spines['foo']\n     with pytest.raises(KeyError, match='foo, bar'):\n",
  "problem_statement": "[Bug]: `ValueError` upon deepcopy of a `Figure` object\n### Bug summary\r\n\r\nA deepcopy of a `Figure` object results in `ValueError: 'Spines' object does not contain a '__deepcopy__' spine`.\r\n\r\nThis issue surfaced in a bug report of `schemdraw`: https://bitbucket.org/cdelker/schemdraw/issues/56/copydeepcopy-drawing-fails Nevertheless, the current issue is unrelated to `schemdraw`. I'm just mentioning this to illustrate a relevant use case leading to this problem.\r\n\r\n\r\n### Code for reproduction\r\n\r\n```python\r\nimport matplotlib.pyplot as plt\r\nimport copy\r\nfig, ax = plt.subplots()\r\ncopy.deepcopy(fig)\r\n```\r\n\r\nDisclaimer: this is taken from a message of `cdelker` on https://bitbucket.org/cdelker/schemdraw/issues/56/copydeepcopy-drawing-fails\r\n\r\n\r\n### Actual outcome\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/lib64/python3.9/site-packages/matplotlib/spines.py\", line 551, in __getattr__\r\n    return self._dict[name]\r\nKeyError: '__deepcopy__'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib64/python3.9/copy.py\", line 172, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"/usr/lib64/python3.9/copy.py\", line 270, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/usr/lib64/python3.9/copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/usr/lib64/python3.9/copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/usr/lib64/python3.9/copy.py\", line 172, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"/usr/lib64/python3.9/copy.py\", line 270, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/usr/lib64/python3.9/copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/usr/lib64/python3.9/copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/usr/lib64/python3.9/copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/usr/lib64/python3.9/copy.py\", line 205, in _deepcopy_list\r\n    append(deepcopy(a, memo))\r\n  File \"/usr/lib64/python3.9/copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/usr/lib64/python3.9/copy.py\", line 210, in _deepcopy_tuple\r\n    y = [deepcopy(a, memo) for a in x]\r\n  File \"/usr/lib64/python3.9/copy.py\", line 210, in <listcomp>\r\n    y = [deepcopy(a, memo) for a in x]\r\n  File \"/usr/lib64/python3.9/copy.py\", line 172, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n  File \"/usr/lib64/python3.9/copy.py\", line 270, in _reconstruct\r\n    state = deepcopy(state, memo)\r\n  File \"/usr/lib64/python3.9/copy.py\", line 146, in deepcopy\r\n    y = copier(x, memo)\r\n  File \"/usr/lib64/python3.9/copy.py\", line 230, in _deepcopy_dict\r\n    y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n  File \"/usr/lib64/python3.9/copy.py\", line 151, in deepcopy\r\n    copier = getattr(x, \"__deepcopy__\", None)\r\n  File \"/usr/lib64/python3.9/site-packages/matplotlib/spines.py\", line 553, in __getattr__\r\n    raise ValueError(\r\nValueError: 'Spines' object does not contain a '__deepcopy__' spine\r\n```\r\n\r\n### Expected outcome\r\n\r\nEither a deepcopy of the figure or a meaningful error message explaining that this operation is not supported.\r\n\r\n### Operating system\r\n\r\nFedora Linux\r\n\r\n### Matplotlib Version\r\n\r\n3.4.3\r\n\r\n### Matplotlib Backend\r\n\r\nQt5Agg\r\n\r\n### Python version\r\n\r\n3.9.7\r\n\r\n### Jupyter version\r\n\r\n6.1.6, (not installed)\r\n\r\n### Other libraries\r\n\r\nNone\r\n\r\n### Installation\r\n\r\nLinux package manager (Debian/Fedora/etc.)\r\n\r\n### Conda channel\r\n\r\n_No response_\n",
  "hints_text": "My (unverified) guess is that this is a regression due to https://github.com/matplotlib/matplotlib/pull/17107 and https://bugs.python.org/issue19364), hence milestoning as 3.5.\nIn 3.3.4 (ie. before #17107) this still errors, but with a different message:\r\n```python\r\nNotImplementedError: TransformNode instances can not be copied. Consider using frozen() instead.\r\n```\r\n\r\n@tovrstra do you know if this has ever worked in Matplotlib?\nI only ran into this recently. (beginning of October this year) I'm not sure what would have happened with earlier versions of matplotlib.\r\n\r\nI'm also wondering if the operation should be supported. Would the deepcopy result in two different `Figure` instances with the same figure number? I'm not sure if that would make sense.\nGood catch @dstansby; I guess this may have never worked, sorry for the wrong alert.",
  "created_at": "2021-11-09T06:20:19Z",
  "version": "3.4",
  "FAIL_TO_PASS": "[\"lib/matplotlib/tests/test_spines.py::test_spine_class\"]",
  "PASS_TO_PASS": "[\"lib/matplotlib/tests/test_spines.py::test_spines_axes_positions[png]\", \"lib/matplotlib/tests/test_spines.py::test_spines_axes_positions[pdf]\", \"lib/matplotlib/tests/test_spines.py::test_spines_data_positions[png]\", \"lib/matplotlib/tests/test_spines.py::test_spines_data_positions[pdf]\", \"lib/matplotlib/tests/test_spines.py::test_spine_nonlinear_data_positions[png]\", \"lib/matplotlib/tests/test_spines.py::test_spines_capstyle[png]\", \"lib/matplotlib/tests/test_spines.py::test_spines_capstyle[pdf]\", \"lib/matplotlib/tests/test_spines.py::test_label_without_ticks\"]",
  "environment_setup_commit": "f93c0a3dcb82feed0262d758626c90d4002685f3",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.794393",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}