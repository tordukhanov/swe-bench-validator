{
  "repo": "scikit-learn/scikit-learn",
  "instance_id": "scikit-learn__scikit-learn-12733",
  "base_commit": "cd8fe168fbc2c5cfe1cb11a1cfbd7a1b7aec0acc",
  "patch": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -1794,23 +1794,25 @@ def _validate_shuffle_split_init(test_size, train_size):\n \n     if test_size is not None:\n         if np.asarray(test_size).dtype.kind == 'f':\n-            if test_size >= 1.:\n+            if test_size >= 1. or test_size <= 0:\n                 raise ValueError(\n-                    'test_size=%f should be smaller '\n-                    'than 1.0 or be an integer' % test_size)\n+                    'test_size=%f should be in the (0, 1) range '\n+                    'or be an integer' % test_size)\n         elif np.asarray(test_size).dtype.kind != 'i':\n             # int values are checked during split based on the input\n             raise ValueError(\"Invalid value for test_size: %r\" % test_size)\n \n     if train_size is not None:\n         if np.asarray(train_size).dtype.kind == 'f':\n-            if train_size >= 1.:\n-                raise ValueError(\"train_size=%f should be smaller \"\n-                                 \"than 1.0 or be an integer\" % train_size)\n+            if train_size >= 1. or train_size <= 0:\n+                raise ValueError('train_size=%f should be in the (0, 1) range '\n+                                 'or be an integer' % train_size)\n             elif (np.asarray(test_size).dtype.kind == 'f' and\n-                    (train_size + test_size) > 1.):\n+                    (\n+                        (train_size + test_size) > 1. or\n+                        (train_size + test_size) < 0)):\n                 raise ValueError('The sum of test_size and train_size = %f, '\n-                                 'should be smaller than 1.0. Reduce '\n+                                 'should be in the (0, 1) range. Reduce '\n                                  'test_size and/or train_size.' %\n                                  (train_size + test_size))\n         elif np.asarray(train_size).dtype.kind != 'i':\n@@ -1824,16 +1826,22 @@ def _validate_shuffle_split(n_samples, test_size, train_size):\n     size of the data (n_samples)\n     \"\"\"\n     if (test_size is not None and\n-            np.asarray(test_size).dtype.kind == 'i' and\n-            test_size >= n_samples):\n-        raise ValueError('test_size=%d should be smaller than the number of '\n-                         'samples %d' % (test_size, n_samples))\n+            (np.asarray(test_size).dtype.kind == 'i' and\n+                (test_size >= n_samples or test_size <= 0)) or\n+            (np.asarray(test_size).dtype.kind == 'f' and\n+                (test_size <= 0 or test_size >= 1))):\n+        raise ValueError('test_size=%d should be either positive and smaller '\n+                         'than the number of samples %d or a float in the '\n+                         '(0,1) range' % (test_size, n_samples))\n \n     if (train_size is not None and\n-            np.asarray(train_size).dtype.kind == 'i' and\n-            train_size >= n_samples):\n-        raise ValueError(\"train_size=%d should be smaller than the number of\"\n-                         \" samples %d\" % (train_size, n_samples))\n+            (np.asarray(train_size).dtype.kind == 'i' and\n+                (train_size >= n_samples or train_size <= 0)) or\n+            (np.asarray(train_size).dtype.kind == 'f' and\n+                (train_size <= 0 or train_size >= 1))):\n+        raise ValueError('train_size=%d should be either positive and smaller '\n+                         'than the number of samples %d or a float in the '\n+                         '(0,1) range' % (train_size, n_samples))\n \n     if test_size == \"default\":\n         test_size = 0.1\n",
  "test_patch": "diff --git a/sklearn/model_selection/tests/test_split.py b/sklearn/model_selection/tests/test_split.py\n--- a/sklearn/model_selection/tests/test_split.py\n+++ b/sklearn/model_selection/tests/test_split.py\n@@ -1006,27 +1006,60 @@ def test_repeated_stratified_kfold_determinstic_split():\n \n \n def test_train_test_split_errors():\n-    assert_raises(ValueError, train_test_split)\n+    pytest.raises(ValueError, train_test_split)\n     with warnings.catch_warnings():\n         # JvR: Currently, a future warning is raised if test_size is not\n         # given. As that is the point of this test, ignore the future warning\n         warnings.filterwarnings(\"ignore\", category=FutureWarning)\n-        assert_raises(ValueError, train_test_split, range(3), train_size=1.1)\n+        pytest.raises(ValueError, train_test_split, range(3), train_size=1.1)\n \n-    assert_raises(ValueError, train_test_split, range(3), test_size=0.6,\n+    pytest.raises(ValueError, train_test_split, range(3), test_size=0.6,\n                   train_size=0.6)\n-    assert_raises(ValueError, train_test_split, range(3),\n+    pytest.raises(ValueError, train_test_split, range(3),\n                   test_size=np.float32(0.6), train_size=np.float32(0.6))\n-    assert_raises(ValueError, train_test_split, range(3),\n+    pytest.raises(ValueError, train_test_split, range(3),\n                   test_size=\"wrong_type\")\n-    assert_raises(ValueError, train_test_split, range(3), test_size=2,\n+    pytest.raises(ValueError, train_test_split, range(3), test_size=2,\n                   train_size=4)\n-    assert_raises(TypeError, train_test_split, range(3),\n+    pytest.raises(TypeError, train_test_split, range(3),\n                   some_argument=1.1)\n-    assert_raises(ValueError, train_test_split, range(3), range(42))\n-    assert_raises(ValueError, train_test_split, range(10),\n+    pytest.raises(ValueError, train_test_split, range(3), range(42))\n+    pytest.raises(ValueError, train_test_split, range(10),\n                   shuffle=False, stratify=True)\n \n+    with pytest.raises(ValueError,\n+                       match=r'train_size=11 should be either positive and '\n+                             r'smaller than the number of samples 10 or a '\n+                             r'float in the \\(0,1\\) range'):\n+        train_test_split(range(10), train_size=11, test_size=1)\n+\n+\n+@pytest.mark.parametrize(\"train_size,test_size\", [\n+    (1.2, 0.8),\n+    (1., 0.8),\n+    (0.0, 0.8),\n+    (-.2, 0.8),\n+    (0.8, 1.2),\n+    (0.8, 1.),\n+    (0.8, 0.),\n+    (0.8, -.2)])\n+def test_train_test_split_invalid_sizes1(train_size, test_size):\n+    with pytest.raises(ValueError, match=r'should be in the \\(0, 1\\) range'):\n+        train_test_split(range(10), train_size=train_size, test_size=test_size)\n+\n+\n+@pytest.mark.parametrize(\"train_size,test_size\", [\n+    (-10, 0.8),\n+    (0, 0.8),\n+    (11, 0.8),\n+    (0.8, -10),\n+    (0.8, 0),\n+    (0.8, 11)])\n+def test_train_test_split_invalid_sizes2(train_size, test_size):\n+    with pytest.raises(ValueError,\n+                       match=r'should be either positive and smaller'):\n+        train_test_split(range(10), train_size=train_size, test_size=test_size)\n+\n \n def test_train_test_split():\n     X = np.arange(100).reshape((10, 10))\n",
  "problem_statement": "train_test_split excepting negative integers and floats\nThe following minimal example doesn't fail:\r\n\r\n```python\r\nfrom sklearn.model_selection import train_test_split\r\nl = list(range(100))\r\ntrain_test_split(l, test_size=-2)\r\ntrain_test_split(l, test_size=-2.)\r\n```\r\n\r\nIs it a bug or indented feature? According to the docs neither of the above should make sense. See for reference [this line](https://github.com/scikit-learn/scikit-learn/blob/7f6cb8330a2da1f9810a4f89d4b47ca61a6918b6/sklearn/model_selection/_split.py#L1796) for example.\n",
  "hints_text": "",
  "created_at": "2018-12-06T20:40:48Z",
  "version": "0.21",
  "FAIL_TO_PASS": "[\"sklearn/model_selection/tests/test_split.py::test_train_test_split_errors\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[1.2-0.8]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[1.0-0.8]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[0.0-0.8]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[-0.2-0.8]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[0.8-1.2]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[0.8-1.0]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[0.8-0.0]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes1[0.8--0.2]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[-10-0.8]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[0-0.8]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[11-0.8]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[0.8--10]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[0.8-0]\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_invalid_sizes2[0.8-11]\"]",
  "PASS_TO_PASS": "[\"sklearn/model_selection/tests/test_split.py::test_cross_validator_with_default_params\", \"sklearn/model_selection/tests/test_split.py::test_2d_y\", \"sklearn/model_selection/tests/test_split.py::test_kfold_valueerrors\", \"sklearn/model_selection/tests/test_split.py::test_kfold_indices\", \"sklearn/model_selection/tests/test_split.py::test_kfold_no_shuffle\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_no_shuffle\", \"sklearn/model_selection/tests/test_split.py::test_stratified_kfold_ratios\", \"sklearn/model_selection/tests/test_split.py::test_kfold_balance\", \"sklearn/model_selection/tests/test_split.py::test_stratifiedkfold_balance\", \"sklearn/model_selection/tests/test_split.py::test_shuffle_kfold\", \"sklearn/model_selection/tests/test_split.py::test_shuffle_stratifiedkfold\", \"sklearn/model_selection/tests/test_split.py::test_kfold_can_detect_dependent_samples_on_digits\", \"sklearn/model_selection/tests/test_split.py::test_shuffle_split\", \"sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_init\", \"sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_respects_test_size\", \"sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_iter\", \"sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_even\", \"sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_overlap_train_test_bug\", \"sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_multilabel\", \"sklearn/model_selection/tests/test_split.py::test_stratified_shuffle_split_multilabel_many_labels\", \"sklearn/model_selection/tests/test_split.py::test_predefinedsplit_with_kfold_split\", \"sklearn/model_selection/tests/test_split.py::test_group_shuffle_split\", \"sklearn/model_selection/tests/test_split.py::test_leave_one_p_group_out\", \"sklearn/model_selection/tests/test_split.py::test_leave_group_out_changing_groups\", \"sklearn/model_selection/tests/test_split.py::test_leave_one_p_group_out_error_on_fewer_number_of_groups\", \"sklearn/model_selection/tests/test_split.py::test_repeated_cv_value_errors\", \"sklearn/model_selection/tests/test_split.py::test_repeated_kfold_determinstic_split\", \"sklearn/model_selection/tests/test_split.py::test_get_n_splits_for_repeated_kfold\", \"sklearn/model_selection/tests/test_split.py::test_get_n_splits_for_repeated_stratified_kfold\", \"sklearn/model_selection/tests/test_split.py::test_repeated_stratified_kfold_determinstic_split\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split\", \"sklearn/model_selection/tests/test_split.py::test_shufflesplit_errors\", \"sklearn/model_selection/tests/test_split.py::test_shufflesplit_reproducible\", \"sklearn/model_selection/tests/test_split.py::test_stratifiedshufflesplit_list_input\", \"sklearn/model_selection/tests/test_split.py::test_train_test_split_allow_nans\", \"sklearn/model_selection/tests/test_split.py::test_check_cv\", \"sklearn/model_selection/tests/test_split.py::test_cv_iterable_wrapper\", \"sklearn/model_selection/tests/test_split.py::test_group_kfold\", \"sklearn/model_selection/tests/test_split.py::test_time_series_cv\", \"sklearn/model_selection/tests/test_split.py::test_time_series_max_train_size\", \"sklearn/model_selection/tests/test_split.py::test_nested_cv\", \"sklearn/model_selection/tests/test_split.py::test_train_test_default_warning\", \"sklearn/model_selection/tests/test_split.py::test_nsplit_default_warn\", \"sklearn/model_selection/tests/test_split.py::test_check_cv_default_warn\", \"sklearn/model_selection/tests/test_split.py::test_build_repr\"]",
  "environment_setup_commit": "7813f7efb5b2012412888b69e73d76f2df2b50b6",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.967055",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}