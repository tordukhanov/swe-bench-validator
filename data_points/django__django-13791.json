{
  "repo": "django/django",
  "instance_id": "django__django-13791",
  "base_commit": "577f2338f16bea055abc49c5a43fa3ecb05dffc8",
  "patch": "diff --git a/django/utils/dateparse.py b/django/utils/dateparse.py\n--- a/django/utils/dateparse.py\n+++ b/django/utils/dateparse.py\n@@ -144,4 +144,6 @@ def parse_duration(value):\n             kw['microseconds'] = '-' + kw['microseconds']\n         kw = {k: float(v.replace(',', '.')) for k, v in kw.items() if v is not None}\n         days = datetime.timedelta(kw.pop('days', .0) or .0)\n+        if match.re == iso8601_duration_re:\n+            days *= sign\n         return days + sign * datetime.timedelta(**kw)\n",
  "test_patch": "diff --git a/tests/utils_tests/test_dateparse.py b/tests/utils_tests/test_dateparse.py\n--- a/tests/utils_tests/test_dateparse.py\n+++ b/tests/utils_tests/test_dateparse.py\n@@ -70,6 +70,7 @@ def test_parse_python_format(self):\n     def test_parse_postgresql_format(self):\n         test_values = (\n             ('1 day', timedelta(1)),\n+            ('-1 day', timedelta(-1)),\n             ('1 day 0:00:01', timedelta(days=1, seconds=1)),\n             ('1 day -0:00:01', timedelta(days=1, seconds=-1)),\n             ('-1 day -0:00:01', timedelta(days=-1, seconds=-1)),\n@@ -134,13 +135,22 @@ def test_iso_8601(self):\n             ('P4M', None),\n             ('P4W', None),\n             ('P4D', timedelta(days=4)),\n+            ('-P1D', timedelta(days=-1)),\n             ('P0.5D', timedelta(hours=12)),\n             ('P0,5D', timedelta(hours=12)),\n+            ('-P0.5D', timedelta(hours=-12)),\n+            ('-P0,5D', timedelta(hours=-12)),\n             ('PT5H', timedelta(hours=5)),\n+            ('-PT5H', timedelta(hours=-5)),\n             ('PT5M', timedelta(minutes=5)),\n+            ('-PT5M', timedelta(minutes=-5)),\n             ('PT5S', timedelta(seconds=5)),\n+            ('-PT5S', timedelta(seconds=-5)),\n             ('PT0.000005S', timedelta(microseconds=5)),\n             ('PT0,000005S', timedelta(microseconds=5)),\n+            ('-PT0.000005S', timedelta(microseconds=-5)),\n+            ('-PT0,000005S', timedelta(microseconds=-5)),\n+            ('-P4DT1H', timedelta(days=-4, hours=-1)),\n         )\n         for source, expected in test_values:\n             with self.subTest(source=source):\n",
  "problem_statement": "parse_duration() ISO string sign is ignored when the timedelta only has days\nDescription\n\t\nI'm pretty sure that this is a bug even though I'm not an expert on the ISO 8601 standard. The sign of a timedelta string will be ignored by django.utils.dateparse.parse_duration if the input string only contains days. Compare the following (notice the minus signs):\nIn [4]: timedelta(days=-1)\nOut[4]: datetime.timedelta(days=-1)\nIn [5]: td = timedelta(days=-1)\nIn [6]: duration_iso_string(td)\nOut[6]: '-P1DT00H00M00S'\nIn [7]: parse_duration(duration_iso_string(td))\nOut[7]: datetime.timedelta(days=1) # <-- Why is this 1 and not -1?\nIn [8]: td = timedelta(days=-1, microseconds=1)\nIn [9]: duration_iso_string(td)\nOut[9]: '-P0DT23H59M59.999999S'\nIn [10]: parse_duration(duration_iso_string(td))\nOut[10]: datetime.timedelta(days=-1, microseconds=1)\nI guess the problem is in django/utils/dateparse.py line 147 that reads return days + sign * datetime.timedelta(**kw).\nHowever, if datetime.timedelta(**kw) ends up being zero (timedelta(0)) then the sign multiplication ends up in zero, not -0. This is just a preliminary quick look though and maybe the problem is something else.\n",
  "hints_text": "Great catch. Would you like to prepare a patch?\nI can try! Hopefully I can find the time.",
  "created_at": "2020-12-19T09:55:40Z",
  "version": "3.2",
  "FAIL_TO_PASS": "[\"test_iso_8601 (utils_tests.test_dateparse.DurationParseTests)\", \"test_minutes_seconds (utils_tests.test_dateparse.DurationParseTests)\"]",
  "PASS_TO_PASS": "[\"test_parse_date (utils_tests.test_dateparse.DateParseTests)\", \"test_parse_datetime (utils_tests.test_dateparse.DateParseTests)\", \"test_parse_time (utils_tests.test_dateparse.DateParseTests)\", \"test_days (utils_tests.test_dateparse.DurationParseTests)\", \"test_fractions_of_seconds (utils_tests.test_dateparse.DurationParseTests)\", \"test_hours_minutes_seconds (utils_tests.test_dateparse.DurationParseTests)\", \"test_negative (utils_tests.test_dateparse.DurationParseTests)\", \"test_parse_postgresql_format (utils_tests.test_dateparse.DurationParseTests)\", \"test_parse_python_format (utils_tests.test_dateparse.DurationParseTests)\", \"test_seconds (utils_tests.test_dateparse.DurationParseTests)\"]",
  "environment_setup_commit": "65dfb06a1ab56c238cc80f5e1c31f61210c4577d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.669677",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}