{
  "repo": "pytest-dev/pytest",
  "instance_id": "pytest-dev__pytest-7673",
  "base_commit": "75af2bfa06436752165df884d4666402529b1d6a",
  "patch": "diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py\n--- a/src/_pytest/logging.py\n+++ b/src/_pytest/logging.py\n@@ -439,7 +439,8 @@ def set_level(self, level: Union[int, str], logger: Optional[str] = None) -> Non\n         # Save the original log-level to restore it during teardown.\n         self._initial_logger_levels.setdefault(logger, logger_obj.level)\n         logger_obj.setLevel(level)\n-        self._initial_handler_level = self.handler.level\n+        if self._initial_handler_level is None:\n+            self._initial_handler_level = self.handler.level\n         self.handler.setLevel(level)\n \n     @contextmanager\n",
  "test_patch": "diff --git a/testing/logging/test_fixture.py b/testing/logging/test_fixture.py\n--- a/testing/logging/test_fixture.py\n+++ b/testing/logging/test_fixture.py\n@@ -65,6 +65,7 @@ def test_change_level_undos_handler_level(testdir: Testdir) -> None:\n \n         def test1(caplog):\n             assert caplog.handler.level == 0\n+            caplog.set_level(9999)\n             caplog.set_level(41)\n             assert caplog.handler.level == 41\n \n",
  "problem_statement": "logging: handler level restored incorrectly if caplog.set_level is called more than once\npytest version: 6.0.1\r\n\r\nThe fix in #7571 (backported to 6.0.1) has a bug where it does a \"set\" instead of \"setdefault\" to the `_initial_handler_level`. So if there are multiple calls to `caplog.set_level`, the level will be restored to that of the one-before-last call, instead of the value before the test.\r\n\r\nWill submit a fix for this shortly.\n",
  "hints_text": "",
  "created_at": "2020-08-22T14:47:31Z",
  "version": "6.0",
  "FAIL_TO_PASS": "[\"testing/logging/test_fixture.py::test_change_level_undos_handler_level\"]",
  "PASS_TO_PASS": "[\"testing/logging/test_fixture.py::test_change_level\", \"testing/logging/test_fixture.py::test_with_statement\", \"testing/logging/test_fixture.py::test_log_access\", \"testing/logging/test_fixture.py::test_messages\", \"testing/logging/test_fixture.py::test_record_tuples\", \"testing/logging/test_fixture.py::test_unicode\", \"testing/logging/test_fixture.py::test_clear\", \"testing/logging/test_fixture.py::test_caplog_captures_for_all_stages\", \"testing/logging/test_fixture.py::test_fixture_help\", \"testing/logging/test_fixture.py::test_change_level_undo\", \"testing/logging/test_fixture.py::test_ini_controls_global_log_level\", \"testing/logging/test_fixture.py::test_caplog_can_override_global_log_level\", \"testing/logging/test_fixture.py::test_caplog_captures_despite_exception\", \"testing/logging/test_fixture.py::test_log_report_captures_according_to_config_option_upon_failure\"]",
  "environment_setup_commit": "634cde9506eb1f48dec3ec77974ee8dc952207c6",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.939649",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}