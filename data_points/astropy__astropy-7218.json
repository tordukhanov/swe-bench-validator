{
  "repo": "astropy/astropy",
  "instance_id": "astropy__astropy-7218",
  "base_commit": "9626265d77b8a21c113615c08bc6782deb52eaed",
  "patch": "diff --git a/astropy/io/fits/hdu/hdulist.py b/astropy/io/fits/hdu/hdulist.py\n--- a/astropy/io/fits/hdu/hdulist.py\n+++ b/astropy/io/fits/hdu/hdulist.py\n@@ -510,6 +510,25 @@ def fileinfo(self, index):\n \n         return output\n \n+    def __copy__(self):\n+        \"\"\"\n+        Return a shallow copy of an HDUList.\n+\n+        Returns\n+        -------\n+        copy : `HDUList`\n+            A shallow copy of this `HDUList` object.\n+\n+        \"\"\"\n+\n+        return self[:]\n+\n+    # Syntactic sugar for `__copy__()` magic method\n+    copy = __copy__\n+\n+    def __deepcopy__(self, memo=None):\n+        return HDUList([hdu.copy() for hdu in self])\n+\n     def pop(self, index=-1):\n         \"\"\" Remove an item from the list and return it.\n \n",
  "test_patch": "diff --git a/astropy/io/fits/tests/test_hdulist.py b/astropy/io/fits/tests/test_hdulist.py\n--- a/astropy/io/fits/tests/test_hdulist.py\n+++ b/astropy/io/fits/tests/test_hdulist.py\n@@ -5,6 +5,7 @@\n import os\n import platform\n import sys\n+import copy\n \n import pytest\n import numpy as np\n@@ -376,6 +377,43 @@ def test_file_like_3(self):\n         info = [(0, 'PRIMARY', 1, 'PrimaryHDU', 5, (100,), 'int32', '')]\n         assert fits.info(self.temp('tmpfile.fits'), output=False) == info\n \n+    def test_shallow_copy(self):\n+        \"\"\"\n+        Tests that `HDUList.__copy__()` and `HDUList.copy()` return a\n+        shallow copy (regression test for #7211).\n+        \"\"\"\n+\n+        n = np.arange(10.0)\n+        primary_hdu = fits.PrimaryHDU(n)\n+        hdu = fits.ImageHDU(n)\n+        hdul = fits.HDUList([primary_hdu, hdu])\n+\n+        for hdulcopy in (hdul.copy(), copy.copy(hdul)):\n+            assert isinstance(hdulcopy, fits.HDUList)\n+            assert hdulcopy is not hdul\n+            assert hdulcopy[0] is hdul[0]\n+            assert hdulcopy[1] is hdul[1]\n+\n+    def test_deep_copy(self):\n+        \"\"\"\n+        Tests that `HDUList.__deepcopy__()` returns a deep copy.\n+        \"\"\"\n+\n+        n = np.arange(10.0)\n+        primary_hdu = fits.PrimaryHDU(n)\n+        hdu = fits.ImageHDU(n)\n+        hdul = fits.HDUList([primary_hdu, hdu])\n+\n+        hdulcopy = copy.deepcopy(hdul)\n+\n+        assert isinstance(hdulcopy, fits.HDUList)\n+        assert hdulcopy is not hdul\n+\n+        for index in range(len(hdul)):\n+            assert hdulcopy[index] is not hdul[index]\n+            assert hdulcopy[index].header == hdul[index].header\n+            np.testing.assert_array_equal(hdulcopy[index].data, hdul[index].data)\n+\n     def test_new_hdu_extname(self):\n         \"\"\"\n         Tests that new extension HDUs that are added to an HDUList can be\n",
  "problem_statement": "HDUList.copy() returns a list\nCurrently ``HDUList.copy()`` returns a list rather than an ``HDUList``:\r\n\r\n```python\r\nIn [1]: from astropy.io.fits import HDUList\r\n\r\nIn [2]: hdulist = HDUList()\r\n\r\nIn [3]: hdulist.copy()\r\nOut[3]: []\r\n\r\nIn [4]: type(_)\r\nOut[4]: list\r\n```\r\n\r\nThis is with Python 3.6.\n",
  "hints_text": "This might be related to another issue reported in #7185 where adding two `HDUList`s also produces a `list` instead of another `HDUList`.\nWe should be able to fix this specific case by overriding `list.copy()` method with:\r\n```python\r\nclass HDUList(list, _Verify):\r\n    ...\r\n    def copy(self):\r\n        return self[:]\r\n    ...\r\n```\r\n\r\nAnd the result:\r\n```python\r\n>>> type(HDUList().copy())\r\nastropy.io.fits.hdu.hdulist.HDUList\r\n```",
  "created_at": "2018-02-20T11:36:56Z",
  "version": "1.3",
  "FAIL_TO_PASS": "[\"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_shallow_copy\"]",
  "PASS_TO_PASS": "[\"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_update_name\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_create_from_multiple_primary\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_append_primary_to_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_append_extension_to_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_append_groupshdu_to_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_append_primary_to_non_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_append_groupshdu_to_non_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_insert_primary_to_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_insert_extension_to_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_insert_groupshdu_to_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_insert_primary_to_non_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_insert_groupshdu_to_non_empty_list\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_insert_groupshdu_to_begin_of_hdulist_with_groupshdu\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_filename\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_file_like\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_file_like_2\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_file_like_3\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_deep_copy\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_new_hdu_extname\", \"astropy/io/fits/tests/test_hdulist.py::TestHDUListFunctions::test_update_filelike\"]",
  "environment_setup_commit": "848c8fa21332abd66b44efe3cb48b72377fb32cc",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.545026",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}