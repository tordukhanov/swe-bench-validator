{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-10353",
  "base_commit": "9236b4247ee8e00ed89eb3ccc456236cdd8eaaea",
  "patch": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -487,6 +487,12 @@ def __call__(self) -> None:\n     def __eq__(self, other: Any) -> bool:\n         return self.name == other\n \n+    def __hash__(self) -> int:\n+        return hash(self.name)\n+\n+    def __repr__(self) -> str:\n+        return self.name\n+\n \n class TypeAliasModule:\n     \"\"\"Pseudo module class for autodoc_type_aliases.\"\"\"\n",
  "test_patch": "diff --git a/tests/roots/test-ext-autodoc/target/autodoc_type_aliases.py b/tests/roots/test-ext-autodoc/target/autodoc_type_aliases.py\n--- a/tests/roots/test-ext-autodoc/target/autodoc_type_aliases.py\n+++ b/tests/roots/test-ext-autodoc/target/autodoc_type_aliases.py\n@@ -1,7 +1,7 @@\n from __future__ import annotations\n \n import io\n-from typing import overload\n+from typing import Optional, overload\n \n myint = int\n \n@@ -11,6 +11,9 @@\n #: docstring\n variable2 = None  # type: myint\n \n+#: docstring\n+variable3: Optional[myint]\n+\n \n def read(r: io.BytesIO) -> io.StringIO:\n     \"\"\"docstring\"\"\"\ndiff --git a/tests/test_ext_autodoc_configs.py b/tests/test_ext_autodoc_configs.py\n--- a/tests/test_ext_autodoc_configs.py\n+++ b/tests/test_ext_autodoc_configs.py\n@@ -1144,6 +1144,13 @@ def test_autodoc_type_aliases(app):\n         '',\n         '   docstring',\n         '',\n+        '',\n+        '.. py:data:: variable3',\n+        '   :module: target.autodoc_type_aliases',\n+        '   :type: Optional[int]',\n+        '',\n+        '   docstring',\n+        '',\n     ]\n \n     # define aliases\n@@ -1208,6 +1215,13 @@ def test_autodoc_type_aliases(app):\n         '',\n         '   docstring',\n         '',\n+        '',\n+        '.. py:data:: variable3',\n+        '   :module: target.autodoc_type_aliases',\n+        '   :type: Optional[myint]',\n+        '',\n+        '   docstring',\n+        '',\n     ]\n \n \ndiff --git a/tests/test_util_inspect.py b/tests/test_util_inspect.py\n--- a/tests/test_util_inspect.py\n+++ b/tests/test_util_inspect.py\n@@ -7,11 +7,21 @@\n import sys\n import types\n from inspect import Parameter\n+from typing import Optional\n \n import pytest\n \n from sphinx.util import inspect\n-from sphinx.util.inspect import TypeAliasNamespace, stringify_signature\n+from sphinx.util.inspect import TypeAliasForwardRef, TypeAliasNamespace, stringify_signature\n+from sphinx.util.typing import stringify\n+\n+\n+def test_TypeAliasForwardRef():\n+    alias = TypeAliasForwardRef('example')\n+    assert stringify(alias) == 'example'\n+\n+    alias = Optional[alias]\n+    assert stringify(alias) == 'Optional[example]'\n \n \n def test_TypeAliasNamespace():\n",
  "problem_statement": "Reference targets not found when using `autodoc_typehints = \"both\"`\n### Describe the bug\n\nWhen using the above directive in my `conf.py` for sphinx, I suddenly get the following output:\r\n\r\n```\r\n(hondana-epKOD00U-py3.9)  π hondana/docs docs/fixup ✗ ❯ poe docs\r\nPoe => poetry run sphinx-build -a -E -n -T -W --keep-going docs/ docs/_build\r\nRunning Sphinx v4.5.0\r\nloading intersphinx inventory from https://docs.python.org/3/objects.inv...\r\nloading intersphinx inventory from https://docs.aiohttp.org/en/stable/objects.inv...\r\nbuilding [mo]: all of 0 po files\r\nbuilding [html]: all source files\r\nupdating environment: [new config] 5 added, 0 changed, 0 removed\r\nreading sources... [100%] types                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \r\nlooking for now-outdated files... none found\r\npickling environment... done\r\nchecking consistency... done\r\npreparing documents... done\r\nwriting output... [100%] types                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client.follow_manga:: WARNING: py:class reference target not found: hondana.enums.ReadingStatus\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client.update_manga_reading_status:: WARNING: py:class reference target not found: hondana.enums.ReadingStatus\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client.create_manga_relation:: WARNING: py:class reference target not found: hondana.enums.MangaRelationType\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client.upload_cover:: WARNING: py:class reference target not found: common.LanguageCode\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client.legacy_id_mapping:: WARNING: py:class reference target not found: legacy.LegacyMappingType\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client.create_custom_list:: WARNING: py:class reference target not found: hondana.enums.CustomListVisibility\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client.update_custom_list:: WARNING: py:class reference target not found: hondana.enums.CustomListVisibility\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client.get_custom_list_manga_feed:: WARNING: py:class reference target not found: common.LanguageCode\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client.get_custom_list_manga_feed:: WARNING: py:class reference target not found: common.LanguageCode\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client.get_custom_list_manga_feed:: WARNING: py:class reference target not found: common.LanguageCode\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client.update_scanlation_group:: WARNING: py:class reference target not found: common.LanguageCode\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client.get_report_list:: WARNING: py:class reference target not found: hondana.enums.ReportCategory\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client.create_report:: WARNING: py:class reference target not found: hondana.enums.ReportCategory\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client.upload_session:: WARNING: py:class reference target not found: common.LanguageCode\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client.upload_chapter:: WARNING: py:class reference target not found: common.LanguageCode\r\n/home/penumbra/projects/personal/hondana/hondana/chapter.py:docstring of hondana.chapter.Chapter.download:: WARNING: py:class reference target not found: PathLike\r\n/home/penumbra/projects/personal/hondana/hondana/chapter.py:docstring of hondana.chapter.ChapterUpload:: WARNING: py:class reference target not found: HTTPClient\r\n/home/penumbra/projects/personal/hondana/hondana/chapter.py:docstring of hondana.chapter.ChapterUpload:: WARNING: py:class reference target not found: LanguageCode\r\n/home/penumbra/projects/personal/hondana/hondana/collections.py:docstring of hondana.collections.BaseCollection.items:: WARNING: py:class reference target not found: T\r\n/home/penumbra/projects/personal/hondana/hondana/manga.py:docstring of hondana.manga.Manga.follow:: WARNING: py:class reference target not found: hondana.enums.ReadingStatus\r\n/home/penumbra/projects/personal/hondana/hondana/manga.py:docstring of hondana.manga.Manga.localised_title:: WARNING: py:class reference target not found: LanguageCode\r\n/home/penumbra/projects/personal/hondana/hondana/manga.py:docstring of hondana.manga.Manga.localised_title:: WARNING: py:class reference target not found: LanguageCode\r\n/home/penumbra/projects/personal/hondana/hondana/manga.py:docstring of hondana.manga.Manga.localised_description:: WARNING: py:class reference target not found: LanguageCode\r\n/home/penumbra/projects/personal/hondana/hondana/manga.py:docstring of hondana.manga.Manga.localised_description:: WARNING: py:class reference target not found: LanguageCode\r\n/home/penumbra/projects/personal/hondana/hondana/manga.py:docstring of hondana.manga.Manga.update_reading_status:: WARNING: py:class reference target not found: hondana.enums.ReadingStatus\r\n/home/penumbra/projects/personal/hondana/hondana/manga.py:docstring of hondana.manga.Manga.upload_cover:: WARNING: py:class reference target not found: LanguageCode\r\n/home/penumbra/projects/personal/hondana/hondana/manga.py:docstring of hondana.manga.Manga.create_relation:: WARNING: py:class reference target not found: hondana.enums.MangaRelationType\r\n/home/penumbra/projects/personal/hondana/hondana/query.py:docstring of hondana.query.MangaListOrderQuery:: WARNING: py:class reference target not found: hondana.enums.Order\r\n/home/penumbra/projects/personal/hondana/hondana/query.py:docstring of hondana.query.FeedOrderQuery:: WARNING: py:class reference target not found: hondana.enums.Order\r\n/home/penumbra/projects/personal/hondana/hondana/query.py:docstring of hondana.query.MangaDraftListOrderQuery:: WARNING: py:class reference target not found: hondana.enums.Order\r\n/home/penumbra/projects/personal/hondana/hondana/query.py:docstring of hondana.query.CoverArtListOrderQuery:: WARNING: py:class reference target not found: hondana.enums.Order\r\n/home/penumbra/projects/personal/hondana/hondana/query.py:docstring of hondana.query.ScanlatorGroupListOrderQuery:: WARNING: py:class reference target not found: hondana.enums.Order\r\n/home/penumbra/projects/personal/hondana/hondana/query.py:docstring of hondana.query.AuthorListOrderQuery:: WARNING: py:class reference target not found: hondana.enums.Order\r\n/home/penumbra/projects/personal/hondana/hondana/query.py:docstring of hondana.query.UserListOrderQuery:: WARNING: py:class reference target not found: hondana.enums.Order\r\n/home/penumbra/projects/personal/hondana/hondana/scanlator_group.py:docstring of hondana.scanlator_group.ScanlatorGroup.update:: WARNING: py:class reference target not found: LanguageCode\r\n```\r\n\r\nPreviously I had `autodoc_typehints = \"none\"`, but when changing this behaviour suddenly it cannot find these names/targets.\r\n\r\nNOTE: I use the following command to generate my docs, hence being able to see all warnings as errors:-\r\n`sphinx-build -a -E -n -T -W --keep-going docs/ docs/_build`\n\n### How to Reproduce\n\n```\r\n$ git clone -b docs/fixup https://github.com/AbstractUmbra/Hondana\r\n$ cd Hondana\r\n$ poetry install\r\n$ sphinx-build -a -E -n -T -W --keep-going docs/ docs/_build\r\n$ # see the resulting errors in console, as well as the generated html pages having text but no resolved items/links.\r\n```\r\n\n\n### Expected behavior\n\nI expected the docs to build correctly with the resolved types and reference links.\n\n### Your project\n\nN/A I think\n\n### Screenshots\n\n![Code_StPl3JdtDP](https://user-images.githubusercontent.com/16031716/160460016-9e2be941-47fc-4a79-82bb-0ea36f8cf8ec.png)\r\n\n\n### OS\n\nLinux - Debian 10\n\n### Python version\n\n3.9.6\n\n### Sphinx version\n\n4.5.0\n\n### Sphinx extensions\n\nsphinx.ext.autodoc, sphinx.ext.extlinks, sphinx.ext.intersphinx, sphinx.ext.napoleon, sphinxcontrib_trio, resource_links\n\n### Extra tools\n\n_No response_\n\n### Additional context\n\n_No response_\n",
  "hints_text": "It seems some objects are described manually via `class` directive. For example, `hondana.enums.ReadingStatus` is described as following:\r\n\r\n```\r\n.. currentmdoule:: hondana\r\n\r\n(snip)\r\n\r\n.. class:: ReadingStatus\r\n\r\n   Specifies the current reading status for this manga\r\n```\r\n\r\nBut autodoc generates a reference `hondana.enums.ReadingStatus` instead of `hondana.ReadingStatus` because autodoc generates document from real python objects.\r\n\r\nTo avoid such mismatches, you can use `:canonical:` option to this declaration:\r\n\r\n```\r\n.. currentmdoule:: hondana\r\n\r\n(snip)\r\n\r\n.. class:: ReadingStatus\r\n   :canonical: hondana.enums.ReadingStatus\r\n\r\n   Specifies the current reading status for this manga\r\n```\r\n\r\nThis describe `ReadingStatus` class is described as `hondana.ReadingStatus` in document, and its canonical name is `hondana.enums.ReadingStatus`. This helps to resolve cross references from autodoc.\nNote: Dockerfile to reproduce the warnings\r\n```\r\nFROM python:3.9-slim\r\n\r\nRUN apt update; apt install -y build-essential curl git unzip vim\r\nRUN git clone -b docs/fixup https://github.com/AbstractUmbra/Hondana\r\nWORKDIR Hondana\r\nRUN pip install poetry\r\nRUN poetry install -E docs\r\nRUN poetry run sphinx-build -a -E -n -T docs/ docs/_build\r\n```\nWow, thank you for this, I appreciate it a lot.\r\n\r\nCan I be a bother once more and query something else. If you have a look at this patch:\r\n\r\n```diff\r\niff --git a/hondana/client.py b/hondana/client.py\r\nindex f6e8782..4d59373 100644\r\n--- a/hondana/client.py\r\n+++ b/hondana/client.py\r\n@@ -89,7 +89,7 @@ from .utils import MISSING, require_authentication\r\n \r\n \r\n if TYPE_CHECKING:\r\n-    import aiohttp\r\n+    from aiohttp import ClientSession\r\n \r\n     from .tags import QueryTags\r\n     from .types import common, legacy, manga\r\n@@ -141,7 +141,7 @@ class Client:\r\n         username: None = ...,\r\n         email: None = ...,\r\n         password: None = ...,\r\n-        session: Optional[aiohttp.ClientSession] = ...,\r\n+        session: Optional[ClientSession] = ...,\r\n         refresh_token: None = ...,\r\n     ) -> None:\r\n         ...\r\n... truncated for brevity, but it's just more overloads being edited\r\n```\r\n\r\nThis then generates the following error:\r\n```\r\nPoe => poetry run sphinx-build -a -E -n -T -W --keep-going docs/ docs/_build\r\nRunning Sphinx v4.5.0\r\nloading intersphinx inventory from https://docs.python.org/3/objects.inv...\r\nloading intersphinx inventory from https://docs.aiohttp.org/en/stable/objects.inv...\r\nbuilding [mo]: all of 0 po files\r\nbuilding [html]: all source files\r\nupdating environment: [new config] 5 added, 0 changed, 0 removed\r\nreading sources... [100%] types                                                                                                                                                                                                                                                                                                                 \r\nlooking for now-outdated files... none found\r\npickling environment... done\r\nchecking consistency... done\r\npreparing documents... done\r\nwriting output... [100%] types                                                                                                                                                                                                                                                                                                                  \r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client:: WARNING: py:class reference target not found: ClientSession\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client:: WARNING: py:class reference target not found: ClientSession\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client:: WARNING: py:class reference target not found: ClientSession\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client:: WARNING: py:class reference target not found: ClientSession\r\n/home/penumbra/projects/personal/hondana/hondana/client.py:docstring of hondana.client.Client:: WARNING: py:class reference target not found: ClientSession\r\n...\r\n```\r\n\r\nAs this is a third party dependency I cannot edit how this reference is found.\r\nThe \"fix\" I found was to import the whole module and use the whole path but this is not really ideal. Is there a way I can resolve this, or?\r\n\r\nI have pushed the changes you suggested to the same branch but am still having some issues with more types. Could I bother you for some more guidance on those too?\nIs there no way to add the `:canonical:` directive to `:autoclass:` objects?\r\nI have [these definitions](https://github.com/AbstractUmbra/Hondana/blob/docs/fixup/docs/types.rst#L9-L15) and it seems sphinx does not like these paths for the `autodoc_typehints`:\r\n![Code_J9pgTG4s9s](https://user-images.githubusercontent.com/16031716/162406350-3fbc0909-21cb-41e5-b786-fc6d8f646540.png)\r\nI can see that they are documented just fine, but no matter what I try I cannot stop the errors in the console go away.\r\n\r\nThe file in question is [here](https://github.com/AbstractUmbra/Hondana/blob/b00b4f5cd420010890f16f4c48af8d10ac253f01/hondana/types/common.py).\r\n",
  "created_at": "2022-04-16T18:11:35Z",
  "version": "5.0",
  "FAIL_TO_PASS": "[\"tests/test_util_inspect.py::test_TypeAliasForwardRef\"]",
  "PASS_TO_PASS": "[\"tests/test_ext_autodoc_configs.py::test_autoclass_content_class\", \"tests/test_ext_autodoc_configs.py::test_autoclass_content_init\", \"tests/test_ext_autodoc_configs.py::test_autodoc_class_signature_mixed\", \"tests/test_ext_autodoc_configs.py::test_autodoc_class_signature_separated_init\", \"tests/test_ext_autodoc_configs.py::test_autodoc_class_signature_separated_new\", \"tests/test_ext_autodoc_configs.py::test_autoclass_content_both\", \"tests/test_ext_autodoc_configs.py::test_autodoc_inherit_docstrings\", \"tests/test_ext_autodoc_configs.py::test_autodoc_docstring_signature\", \"tests/test_ext_autodoc_configs.py::test_autoclass_content_and_docstring_signature_class\", \"tests/test_ext_autodoc_configs.py::test_autoclass_content_and_docstring_signature_init\", \"tests/test_ext_autodoc_configs.py::test_autoclass_content_and_docstring_signature_both\", \"tests/test_ext_autodoc_configs.py::test_mocked_module_imports\", \"tests/test_ext_autodoc_configs.py::test_autodoc_typehints_signature\", \"tests/test_ext_autodoc_configs.py::test_autodoc_typehints_none\", \"tests/test_ext_autodoc_configs.py::test_autodoc_typehints_none_for_overload\", \"tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description\", \"tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description_no_undoc\", \"tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description_no_undoc_doc_rtype\", \"tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description_with_documented_init\", \"tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description_with_documented_init_no_undoc\", \"tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description_with_documented_init_no_undoc_doc_rtype\", \"tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description_for_invalid_node\", \"tests/test_ext_autodoc_configs.py::test_autodoc_typehints_both\", \"tests/test_ext_autodoc_configs.py::test_autodoc_type_aliases\", \"tests/test_ext_autodoc_configs.py::test_autodoc_typehints_description_and_type_aliases\", \"tests/test_ext_autodoc_configs.py::test_autodoc_typehints_format_fully_qualified\", \"tests/test_ext_autodoc_configs.py::test_autodoc_typehints_format_fully_qualified_for_class_alias\", \"tests/test_ext_autodoc_configs.py::test_autodoc_typehints_format_fully_qualified_for_generic_alias\", \"tests/test_ext_autodoc_configs.py::test_autodoc_typehints_format_fully_qualified_for_newtype_alias\", \"tests/test_ext_autodoc_configs.py::test_autodoc_default_options\", \"tests/test_ext_autodoc_configs.py::test_autodoc_default_options_with_values\", \"tests/test_util_inspect.py::test_TypeAliasNamespace\", \"tests/test_util_inspect.py::test_signature\", \"tests/test_util_inspect.py::test_signature_partial\", \"tests/test_util_inspect.py::test_signature_methods\", \"tests/test_util_inspect.py::test_signature_partialmethod\", \"tests/test_util_inspect.py::test_signature_annotations\", \"tests/test_util_inspect.py::test_signature_annotations_py38\", \"tests/test_util_inspect.py::test_signature_from_str_basic\", \"tests/test_util_inspect.py::test_signature_from_str_default_values\", \"tests/test_util_inspect.py::test_signature_from_str_annotations\", \"tests/test_util_inspect.py::test_signature_from_str_complex_annotations\", \"tests/test_util_inspect.py::test_signature_from_str_kwonly_args\", \"tests/test_util_inspect.py::test_signature_from_str_positionaly_only_args\", \"tests/test_util_inspect.py::test_signature_from_str_invalid\", \"tests/test_util_inspect.py::test_signature_from_ast\", \"tests/test_util_inspect.py::test_safe_getattr_with_default\", \"tests/test_util_inspect.py::test_safe_getattr_with_exception\", \"tests/test_util_inspect.py::test_safe_getattr_with_property_exception\", \"tests/test_util_inspect.py::test_safe_getattr_with___dict___override\", \"tests/test_util_inspect.py::test_dictionary_sorting\", \"tests/test_util_inspect.py::test_set_sorting\", \"tests/test_util_inspect.py::test_set_sorting_fallback\", \"tests/test_util_inspect.py::test_frozenset_sorting\", \"tests/test_util_inspect.py::test_frozenset_sorting_fallback\", \"tests/test_util_inspect.py::test_dict_customtype\", \"tests/test_util_inspect.py::test_object_description_enum\", \"tests/test_util_inspect.py::test_getslots\", \"tests/test_util_inspect.py::test_isclassmethod\", \"tests/test_util_inspect.py::test_isstaticmethod\", \"tests/test_util_inspect.py::test_iscoroutinefunction\", \"tests/test_util_inspect.py::test_isfunction\", \"tests/test_util_inspect.py::test_isbuiltin\", \"tests/test_util_inspect.py::test_isdescriptor\", \"tests/test_util_inspect.py::test_isattributedescriptor\", \"tests/test_util_inspect.py::test_isproperty\", \"tests/test_util_inspect.py::test_isgenericalias\", \"tests/test_util_inspect.py::test_unpartial\", \"tests/test_util_inspect.py::test_getdoc_inherited_classmethod\", \"tests/test_util_inspect.py::test_getdoc_inherited_decorated_method\", \"tests/test_util_inspect.py::test_is_builtin_class_method\"]",
  "environment_setup_commit": "60775ec4c4ea08509eee4b564cbf90f316021aff",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.032340",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}