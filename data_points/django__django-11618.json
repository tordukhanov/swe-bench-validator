{
  "repo": "django/django",
  "instance_id": "django__django-11618",
  "base_commit": "d14fa04ab398e77e6f19b0453af4183b5e4cd14e",
  "patch": "diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py\n--- a/django/contrib/staticfiles/storage.py\n+++ b/django/contrib/staticfiles/storage.py\n@@ -382,7 +382,7 @@ def read_manifest(self):\n         try:\n             with self.open(self.manifest_name) as manifest:\n                 return manifest.read().decode()\n-        except OSError:\n+        except FileNotFoundError:\n             return None\n \n     def load_manifest(self):\n",
  "test_patch": "diff --git a/tests/staticfiles_tests/test_storage.py b/tests/staticfiles_tests/test_storage.py\n--- a/tests/staticfiles_tests/test_storage.py\n+++ b/tests/staticfiles_tests/test_storage.py\n@@ -4,6 +4,7 @@\n import tempfile\n import unittest\n from io import StringIO\n+from unittest import mock\n \n from django.conf import settings\n from django.contrib.staticfiles import finders, storage\n@@ -385,6 +386,15 @@ def test_manifest_exists(self):\n         path = storage.staticfiles_storage.path(filename)\n         self.assertTrue(os.path.exists(path))\n \n+    def test_manifest_does_not_exist(self):\n+        storage.staticfiles_storage.manifest_name = 'does.not.exist.json'\n+        self.assertIsNone(storage.staticfiles_storage.read_manifest())\n+\n+    def test_manifest_does_not_ignore_permission_error(self):\n+        with mock.patch('builtins.open', side_effect=PermissionError):\n+            with self.assertRaises(PermissionError):\n+                storage.staticfiles_storage.read_manifest()\n+\n     def test_loaded_cache(self):\n         self.assertNotEqual(storage.staticfiles_storage.hashed_files, {})\n         manifest_content = storage.staticfiles_storage.read_manifest()\n",
  "problem_statement": "Cloaking PermissionErrors raised in ManifestFilesMixin.read_manifest().\nDescription\n\t\nWhile using the ManifestStaticFilesStorage, I encountered the ValueError shown below.\n <trim>\n File \"/<some venv>/site-packages/django/contrib/staticfiles/storage.py\", line 134, in _url\n\thashed_name = hashed_name_func(*args)\n File \"/<some venv>/site-packages/django/contrib/staticfiles/storage.py\", line 422, in stored_name\n\traise ValueError(\"Missing staticfiles manifest entry for '%s'\" % clean_name)\nValueError: Missing staticfiles manifest entry for 'images/twitter.png'\nFurther debugging showed that staticfile_storage.hashed_files was empty. This was odd to me because staticfiles.json existed on my system in its proper location in STATIC_ROOT. Additionally, the 'images/twitter.png' existed as a key in the staticfiles.json so I was very confused.\nI did more debugging of the manifest loading process and hit the root problem. Reading the manifest file raised a PermissionError because the user account running the Django app did not have proper permission to read from where the file was stored on the filesystem. Unfortunately, ​https://github.com/django/django/blob/master/django/contrib/staticfiles/storage.py#L385 catches any OSError and proceeds by returning no content.\nThis was in a Vagrant virtual machine so I switched to the root user to bypass any permission errors and the manifest loading worked. I confirmed that I was able to load a page without any issue.\nI'd like to suggest that ManifestFilesMixin.read_manifest either a) not catch OSError at all to let the system fail so a developer can fix it, b) have more granular error handling of different OSError exception subclasses, or c) do some kind of logging to hint to the app developer that there was a problem.\nI'm making this suggestion because catching this error and proceeding left the app in an unrecoverable state. The ValueError listed at the beginning of the issue was actually a side effect of the deeper underlying PermissionError problem from attempting to read the manifest file.\nIf there is any more info you need from me, please let me know. Thanks!\n",
  "hints_text": "Thanks for the report. I agree that we should catch more specific exception (probably FileNotFoundError) or re-raise PermissionError.\n​PR",
  "created_at": "2019-08-01T14:51:49Z",
  "version": "3.0",
  "FAIL_TO_PASS": "[\"test_manifest_does_not_ignore_permission_error (staticfiles_tests.test_storage.TestCollectionManifestStorage)\"]",
  "PASS_TO_PASS": "[\"test_warning (staticfiles_tests.test_storage.TestCachedStaticFilesStorageDeprecation)\", \"test_collect_static_files_default_permissions (staticfiles_tests.test_storage.TestStaticFilePermissions)\", \"test_collect_static_files_permissions (staticfiles_tests.test_storage.TestStaticFilePermissions)\", \"test_collect_static_files_subclass_of_static_storage (staticfiles_tests.test_storage.TestStaticFilePermissions)\", \"test_multi_extension_patterns (staticfiles_tests.test_storage.TestExtraPatternsStorage)\", \"test_template_tag_return (staticfiles_tests.test_storage.TestCollectionSimpleStorage)\", \"test_template_tag_simple_content (staticfiles_tests.test_storage.TestCollectionSimpleStorage)\", \"test_file_change_after_collectstatic (staticfiles_tests.test_storage.TestCollectionHashedFilesCache)\", \"test_cache_invalidation (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"test_cache_key_memcache_validation (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"test_corrupt_intermediate_files (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"test_css_import_case_insensitive (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"test_import_loop (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"See #18050\", \"test_path_ignored_completely (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"test_path_with_fragment (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"test_path_with_querystring (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"test_path_with_querystring_and_fragment (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"test_post_processing (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"test_post_processing_failure (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"test_template_tag_absolute (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"test_template_tag_absolute_root (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"test_template_tag_deep_relative (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"test_template_tag_relative (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"test_template_tag_return (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"test_template_tag_simple_content (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"test_template_tag_url (staticfiles_tests.test_storage.TestCollectionCachedStorage)\", \"test_clear_empties_manifest (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_css_import_case_insensitive (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_import_loop (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_intermediate_files (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_loaded_cache (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_manifest_does_not_exist (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_manifest_exists (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_missing_entry (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_parse_cache (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_path_ignored_completely (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_path_with_fragment (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_path_with_querystring (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_path_with_querystring_and_fragment (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_post_processing (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_post_processing_failure (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_template_tag_absolute (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_template_tag_absolute_root (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_template_tag_deep_relative (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_template_tag_relative (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_template_tag_return (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_template_tag_simple_content (staticfiles_tests.test_storage.TestCollectionManifestStorage)\", \"test_template_tag_url (staticfiles_tests.test_storage.TestCollectionManifestStorage)\"]",
  "environment_setup_commit": "419a78300f7cd27611196e1e464d50fd0385ff27",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.578747",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}