{
  "repo": "pallets/flask",
  "instance_id": "pallets__flask-4935",
  "base_commit": "fa1ee7066807c21256e90089731c548b313394d2",
  "patch": "diff --git a/src/flask/blueprints.py b/src/flask/blueprints.py\n--- a/src/flask/blueprints.py\n+++ b/src/flask/blueprints.py\n@@ -358,6 +358,9 @@ def register(self, app: \"Flask\", options: dict) -> None:\n         :param options: Keyword arguments forwarded from\n             :meth:`~Flask.register_blueprint`.\n \n+        .. versionchanged:: 2.3\n+            Nested blueprints now correctly apply subdomains.\n+\n         .. versionchanged:: 2.0.1\n             Nested blueprints are registered with their dotted name.\n             This allows different blueprints with the same name to be\n@@ -453,6 +456,17 @@ def extend(bp_dict, parent_dict):\n         for blueprint, bp_options in self._blueprints:\n             bp_options = bp_options.copy()\n             bp_url_prefix = bp_options.get(\"url_prefix\")\n+            bp_subdomain = bp_options.get(\"subdomain\")\n+\n+            if bp_subdomain is None:\n+                bp_subdomain = blueprint.subdomain\n+\n+            if state.subdomain is not None and bp_subdomain is not None:\n+                bp_options[\"subdomain\"] = bp_subdomain + \".\" + state.subdomain\n+            elif bp_subdomain is not None:\n+                bp_options[\"subdomain\"] = bp_subdomain\n+            elif state.subdomain is not None:\n+                bp_options[\"subdomain\"] = state.subdomain\n \n             if bp_url_prefix is None:\n                 bp_url_prefix = blueprint.url_prefix\n",
  "test_patch": "diff --git a/tests/test_blueprints.py b/tests/test_blueprints.py\n--- a/tests/test_blueprints.py\n+++ b/tests/test_blueprints.py\n@@ -950,6 +950,55 @@ def index():\n     assert response.status_code == 200\n \n \n+def test_nesting_subdomains(app, client) -> None:\n+    subdomain = \"api\"\n+    parent = flask.Blueprint(\"parent\", __name__)\n+    child = flask.Blueprint(\"child\", __name__)\n+\n+    @child.route(\"/child/\")\n+    def index():\n+        return \"child\"\n+\n+    parent.register_blueprint(child)\n+    app.register_blueprint(parent, subdomain=subdomain)\n+\n+    client.allow_subdomain_redirects = True\n+\n+    domain_name = \"domain.tld\"\n+    app.config[\"SERVER_NAME\"] = domain_name\n+    response = client.get(\"/child/\", base_url=\"http://api.\" + domain_name)\n+\n+    assert response.status_code == 200\n+\n+\n+def test_child_and_parent_subdomain(app, client) -> None:\n+    child_subdomain = \"api\"\n+    parent_subdomain = \"parent\"\n+    parent = flask.Blueprint(\"parent\", __name__)\n+    child = flask.Blueprint(\"child\", __name__, subdomain=child_subdomain)\n+\n+    @child.route(\"/\")\n+    def index():\n+        return \"child\"\n+\n+    parent.register_blueprint(child)\n+    app.register_blueprint(parent, subdomain=parent_subdomain)\n+\n+    client.allow_subdomain_redirects = True\n+\n+    domain_name = \"domain.tld\"\n+    app.config[\"SERVER_NAME\"] = domain_name\n+    response = client.get(\n+        \"/\", base_url=f\"http://{child_subdomain}.{parent_subdomain}.{domain_name}\"\n+    )\n+\n+    assert response.status_code == 200\n+\n+    response = client.get(\"/\", base_url=f\"http://{parent_subdomain}.{domain_name}\")\n+\n+    assert response.status_code == 404\n+\n+\n def test_unique_blueprint_names(app, client) -> None:\n     bp = flask.Blueprint(\"bp\", __name__)\n     bp2 = flask.Blueprint(\"bp\", __name__)\n",
  "problem_statement": "Nested blueprints are not respected when mounted on subdomains\nHello, and thanks for all your work üôèüèª \r\n\r\nNested blueprints [as described in the docs](https://flask.palletsprojects.com/en/2.2.x/blueprints/#nesting-blueprints) work perfectly fine when using `url_prefix`. However, when mounting the parent blueprint using a subdomain, the child routes are not accessible.\r\n\r\n```python\r\nfrom flask import Flask\r\nfrom flask import Blueprint\r\n\r\napp = Flask(__name__)\r\napp.config[\"SERVER_NAME\"] = \"localhost:5000\"\r\nparent = Blueprint(\"parent\", __name__)\r\nchild = Blueprint(\"child\", __name__)\r\n\r\n@app.route('/')\r\ndef index():\r\n    return \"index\"\r\n\r\n@parent.route('/')\r\ndef parent_index():\r\n    return \"parent\"\r\n\r\n@child.route('/child/')\r\ndef child_index():\r\n    return \"child\"\r\n\r\nparent.register_blueprint(child)\r\napp.register_blueprint(parent, subdomain=\"api\")\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n```\r\n\r\nThe index route works as expected:\r\n\r\n```\r\n‚ùØ http http://localhost:5000/\r\nHTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 5\r\nContent-Type: text/html; charset=utf-8\r\nDate: Tue, 04 Oct 2022 10:44:10 GMT\r\nServer: Werkzeug/2.2.2 Python/3.10.4\r\n\r\nindex\r\n```\r\n\r\nSo does the parent route in the subdomain:\r\n\r\n```\r\n‚ùØ http http://api.localhost:5000/\r\nHTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 6\r\nContent-Type: text/html; charset=utf-8\r\nDate: Tue, 04 Oct 2022 10:44:06 GMT\r\nServer: Werkzeug/2.2.2 Python/3.10.4\r\n\r\nparent\r\n```\r\n\r\nBut the child responds with a 404:\r\n\r\n```\r\n‚ùØ http http://api.localhost:5000/child/\r\nHTTP/1.1 404 NOT FOUND\r\nConnection: close\r\nContent-Length: 207\r\nContent-Type: text/html; charset=utf-8\r\nDate: Tue, 04 Oct 2022 10:45:42 GMT\r\nServer: Werkzeug/2.2.2 Python/3.10.4\r\n\r\n<!doctype html>\r\n<html lang=en>\r\n<title>404 Not Found</title>\r\n<h1>Not Found</h1>\r\n<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>\r\n```\r\n\r\nIf we change the `subdomain=\"api\"` for `url_prefix=\"/api\"` when registering the blueprint however everything works as expected:\r\n\r\n```\r\n‚ùØ http http://localhost:5000/api/\r\nHTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 6\r\nContent-Type: text/html; charset=utf-8\r\nDate: Tue, 04 Oct 2022 10:46:53 GMT\r\nServer: Werkzeug/2.2.2 Python/3.10.4\r\n\r\nparent\r\n\r\n‚ùØ http http://localhost:5000/api/child/\r\nHTTP/1.1 200 OK\r\nConnection: close\r\nContent-Length: 5\r\nContent-Type: text/html; charset=utf-8\r\nDate: Tue, 04 Oct 2022 10:46:59 GMT\r\nServer: Werkzeug/2.2.2 Python/3.10.4\r\n\r\nchild\r\n```\r\n\r\nThis was surprising to me as I expected the same nesting to apply regardless of whether the parent is mounted using a subdomain or a URL prefix. Am I missing something?\r\n\r\nEnvironment:\r\n\r\n- Python version: 3.10\r\n- Flask version: 2.2.2\r\n\n",
  "hints_text": "It looks like if you request `http://localhost:5000/child/`, you'll get 200 OK.\r\n\r\nIt means that when registering child blueprints, they don't respect the subdomain set by the parent.\r\n\r\nI submitted a PR at #4855.",
  "created_at": "2023-01-04T16:50:46Z",
  "version": "2.3",
  "FAIL_TO_PASS": "[\"tests/test_blueprints.py::test_nesting_subdomains\", \"tests/test_blueprints.py::test_child_and_parent_subdomain\"]",
  "PASS_TO_PASS": "[\"tests/test_blueprints.py::test_templates_list\", \"tests/test_blueprints.py::test_dotted_name_not_allowed\", \"tests/test_blueprints.py::test_route_decorator_custom_endpoint_with_dots\", \"tests/test_blueprints.py::test_template_filter\", \"tests/test_blueprints.py::test_add_template_filter\", \"tests/test_blueprints.py::test_template_filter_with_name\", \"tests/test_blueprints.py::test_add_template_filter_with_name\", \"tests/test_blueprints.py::test_template_test\", \"tests/test_blueprints.py::test_add_template_test\", \"tests/test_blueprints.py::test_template_test_with_name\", \"tests/test_blueprints.py::test_add_template_test_with_name\", \"tests/test_blueprints.py::test_template_global\", \"tests/test_blueprints.py::test_unique_blueprint_names\", \"tests/test_blueprints.py::test_self_registration\"]",
  "environment_setup_commit": "182ce3dd15dfa3537391c3efaf9c3ff407d134d4",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.844689",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}