{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-20488",
  "base_commit": "b7ce415c15eb39b026a097a2865da73fbcf15c9c",
  "patch": "diff --git a/lib/matplotlib/image.py b/lib/matplotlib/image.py\n--- a/lib/matplotlib/image.py\n+++ b/lib/matplotlib/image.py\n@@ -532,9 +532,9 @@ def _make_image(self, A, in_bbox, out_bbox, clip_bbox, magnification=1.0,\n                 # we have re-set the vmin/vmax to account for small errors\n                 # that may have moved input values in/out of range\n                 s_vmin, s_vmax = vrange\n-                if isinstance(self.norm, mcolors.LogNorm):\n-                    if s_vmin < 0:\n-                        s_vmin = max(s_vmin, np.finfo(scaled_dtype).eps)\n+                if isinstance(self.norm, mcolors.LogNorm) and s_vmin <= 0:\n+                    # Don't give 0 or negative values to LogNorm\n+                    s_vmin = np.finfo(scaled_dtype).eps\n                 with cbook._setattr_cm(self.norm,\n                                        vmin=s_vmin,\n                                        vmax=s_vmax,\n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_image.py b/lib/matplotlib/tests/test_image.py\n--- a/lib/matplotlib/tests/test_image.py\n+++ b/lib/matplotlib/tests/test_image.py\n@@ -1233,23 +1233,24 @@ def test_imshow_quantitynd():\n     fig.canvas.draw()\n \n \n+@pytest.mark.parametrize('x', [-1, 1])\n @check_figures_equal(extensions=['png'])\n-def test_huge_range_log(fig_test, fig_ref):\n-    data = np.full((5, 5), -1, dtype=np.float64)\n+def test_huge_range_log(fig_test, fig_ref, x):\n+    # parametrize over bad lognorm -1 values and large range 1 -> 1e20\n+    data = np.full((5, 5), x, dtype=np.float64)\n     data[0:2, :] = 1E20\n \n     ax = fig_test.subplots()\n-    im = ax.imshow(data, norm=colors.LogNorm(vmin=100, vmax=data.max()),\n-                   interpolation='nearest', cmap='viridis')\n+    ax.imshow(data, norm=colors.LogNorm(vmin=1, vmax=data.max()),\n+              interpolation='nearest', cmap='viridis')\n \n-    data = np.full((5, 5), -1, dtype=np.float64)\n+    data = np.full((5, 5), x, dtype=np.float64)\n     data[0:2, :] = 1000\n \n-    cmap = copy(plt.get_cmap('viridis'))\n-    cmap.set_under('w')\n     ax = fig_ref.subplots()\n-    im = ax.imshow(data, norm=colors.Normalize(vmin=100, vmax=data.max()),\n-                   interpolation='nearest', cmap=cmap)\n+    cmap = plt.get_cmap('viridis').with_extremes(under='w')\n+    ax.imshow(data, norm=colors.Normalize(vmin=1, vmax=data.max()),\n+              interpolation='nearest', cmap=cmap)\n \n \n @check_figures_equal()\n",
  "problem_statement": "test_huge_range_log is failing...\n<!--To help us understand and resolve your issue, please fill out the form to the best of your ability.-->\r\n<!--You can feel free to delete the sections that do not apply.-->\r\n\r\n### Bug report\r\n\r\n`lib/matplotlib/tests/test_image.py::test_huge_range_log` is failing quite a few of the CI runs with a Value Error.  \r\n\r\nI cannot reproduce locally, so I assume there was a numpy change somewhere...\r\n\r\nThis test came in #18458\r\n\r\n\r\n```\r\nlib/matplotlib/image.py:638: in draw\r\n    im, l, b, trans = self.make_image(\r\nlib/matplotlib/image.py:924: in make_image\r\n    return self._make_image(self._A, bbox, transformed_bbox, clip,\r\nlib/matplotlib/image.py:542: in _make_image\r\n    output = self.norm(resampled_masked)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <matplotlib.colors.LogNorm object at 0x7f057193f430>\r\nvalue = masked_array(\r\n  data=[[--, --, --, ..., --, --, --],\r\n        [--, --, --, ..., --, --, --],\r\n        [--, --, --, ..., ... False, False, ..., False, False, False],\r\n        [False, False, False, ..., False, False, False]],\r\n  fill_value=1e+20)\r\nclip = False\r\n\r\n    def __call__(self, value, clip=None):\r\n        value, is_scalar = self.process_value(value)\r\n        self.autoscale_None(value)\r\n        if self.vmin > self.vmax:\r\n            raise ValueError(\"vmin must be less or equal to vmax\")\r\n        if self.vmin == self.vmax:\r\n            return np.full_like(value, 0)\r\n        if clip is None:\r\n            clip = self.clip\r\n        if clip:\r\n            value = np.clip(value, self.vmin, self.vmax)\r\n        t_value = self._trf.transform(value).reshape(np.shape(value))\r\n        t_vmin, t_vmax = self._trf.transform([self.vmin, self.vmax])\r\n        if not np.isfinite([t_vmin, t_vmax]).all():\r\n>           raise ValueError(\"Invalid vmin or vmax\")\r\nE           ValueError: Invalid vmin or vmax\r\nlib/matplotlib/colors.py:1477: ValueError\r\n```\r\n\r\n\n",
  "hints_text": "Yeah, OK, np 1.21.0 dropped 8hr ago... ",
  "created_at": "2021-06-23T03:05:05Z",
  "version": "3.4",
  "FAIL_TO_PASS": "[\"lib/matplotlib/tests/test_image.py::test_huge_range_log[png--1]\"]",
  "PASS_TO_PASS": "[\"lib/matplotlib/tests/test_image.py::test_image_interps[png]\", \"lib/matplotlib/tests/test_image.py::test_image_interps[pdf]\", \"lib/matplotlib/tests/test_image.py::test_alpha_interp[png]\", \"lib/matplotlib/tests/test_image.py::test_figimage[png-False]\", \"lib/matplotlib/tests/test_image.py::test_figimage[png-True]\", \"lib/matplotlib/tests/test_image.py::test_figimage[pdf-False]\", \"lib/matplotlib/tests/test_image.py::test_figimage[pdf-True]\", \"lib/matplotlib/tests/test_image.py::test_image_python_io\", \"lib/matplotlib/tests/test_image.py::test_imshow_antialiased[png-5-2-hanning]\", \"lib/matplotlib/tests/test_image.py::test_imshow_antialiased[png-5-5-nearest]\", \"lib/matplotlib/tests/test_image.py::test_imshow_antialiased[png-5-10-nearest]\", \"lib/matplotlib/tests/test_image.py::test_imshow_antialiased[png-3-2.9-hanning]\", \"lib/matplotlib/tests/test_image.py::test_imshow_antialiased[png-3-9.1-nearest]\", \"lib/matplotlib/tests/test_image.py::test_imshow_zoom[png]\", \"lib/matplotlib/tests/test_image.py::test_imshow_pil[png]\", \"lib/matplotlib/tests/test_image.py::test_imshow_pil[pdf]\", \"lib/matplotlib/tests/test_image.py::test_imread_pil_uint16\", \"lib/matplotlib/tests/test_image.py::test_imread_fspath\", \"lib/matplotlib/tests/test_image.py::test_imsave[png]\", \"lib/matplotlib/tests/test_image.py::test_imsave[jpg]\", \"lib/matplotlib/tests/test_image.py::test_imsave[jpeg]\", \"lib/matplotlib/tests/test_image.py::test_imsave[tiff]\", \"lib/matplotlib/tests/test_image.py::test_imsave_fspath[png]\", \"lib/matplotlib/tests/test_image.py::test_imsave_fspath[pdf]\", \"lib/matplotlib/tests/test_image.py::test_imsave_fspath[ps]\", \"lib/matplotlib/tests/test_image.py::test_imsave_fspath[eps]\", \"lib/matplotlib/tests/test_image.py::test_imsave_fspath[svg]\", \"lib/matplotlib/tests/test_image.py::test_imsave_color_alpha\", \"lib/matplotlib/tests/test_image.py::test_imsave_pil_kwargs_png\", \"lib/matplotlib/tests/test_image.py::test_imsave_pil_kwargs_tiff\", \"lib/matplotlib/tests/test_image.py::test_image_alpha[png]\", \"lib/matplotlib/tests/test_image.py::test_image_alpha[pdf]\", \"lib/matplotlib/tests/test_image.py::test_cursor_data\", \"lib/matplotlib/tests/test_image.py::test_format_cursor_data[data0-[1e+04]-[10001]]\", \"lib/matplotlib/tests/test_image.py::test_format_cursor_data[data1-[0.123]-[0.123]]\", \"lib/matplotlib/tests/test_image.py::test_image_clip[png]\", \"lib/matplotlib/tests/test_image.py::test_image_cliprect[png]\", \"lib/matplotlib/tests/test_image.py::test_imshow[png]\", \"lib/matplotlib/tests/test_image.py::test_imshow[pdf]\", \"lib/matplotlib/tests/test_image.py::test_imshow_10_10_1[png]\", \"lib/matplotlib/tests/test_image.py::test_imshow_10_10_2\", \"lib/matplotlib/tests/test_image.py::test_imshow_10_10_5\", \"lib/matplotlib/tests/test_image.py::test_no_interpolation_origin[png]\", \"lib/matplotlib/tests/test_image.py::test_no_interpolation_origin[pdf]\", \"lib/matplotlib/tests/test_image.py::test_image_shift[pdf]\", \"lib/matplotlib/tests/test_image.py::test_image_edges\", \"lib/matplotlib/tests/test_image.py::test_image_composite_background[png]\", \"lib/matplotlib/tests/test_image.py::test_image_composite_alpha[png]\", \"lib/matplotlib/tests/test_image.py::test_image_composite_alpha[pdf]\", \"lib/matplotlib/tests/test_image.py::test_clip_path_disables_compositing[pdf]\", \"lib/matplotlib/tests/test_image.py::test_bbox_image_inverted[png]\", \"lib/matplotlib/tests/test_image.py::test_get_window_extent_for_AxisImage\", \"lib/matplotlib/tests/test_image.py::test_zoom_and_clip_upper_origin[png]\", \"lib/matplotlib/tests/test_image.py::test_nonuniformimage_setcmap\", \"lib/matplotlib/tests/test_image.py::test_nonuniformimage_setnorm\", \"lib/matplotlib/tests/test_image.py::test_jpeg_2d\", \"lib/matplotlib/tests/test_image.py::test_jpeg_alpha\", \"lib/matplotlib/tests/test_image.py::test_axesimage_setdata\", \"lib/matplotlib/tests/test_image.py::test_figureimage_setdata\", \"lib/matplotlib/tests/test_image.py::test_setdata_xya[NonUniformImage-x0-y0-a0]\", \"lib/matplotlib/tests/test_image.py::test_setdata_xya[PcolorImage-x1-y1-a1]\", \"lib/matplotlib/tests/test_image.py::test_minimized_rasterized\", \"lib/matplotlib/tests/test_image.py::test_load_from_url\", \"lib/matplotlib/tests/test_image.py::test_log_scale_image[png]\", \"lib/matplotlib/tests/test_image.py::test_log_scale_image[pdf]\", \"lib/matplotlib/tests/test_image.py::test_rotate_image[png]\", \"lib/matplotlib/tests/test_image.py::test_rotate_image[pdf]\", \"lib/matplotlib/tests/test_image.py::test_image_preserve_size\", \"lib/matplotlib/tests/test_image.py::test_image_preserve_size2\", \"lib/matplotlib/tests/test_image.py::test_mask_image_over_under[png]\", \"lib/matplotlib/tests/test_image.py::test_mask_image[png]\", \"lib/matplotlib/tests/test_image.py::test_mask_image_all\", \"lib/matplotlib/tests/test_image.py::test_imshow_endianess[png]\", \"lib/matplotlib/tests/test_image.py::test_imshow_masked_interpolation[png]\", \"lib/matplotlib/tests/test_image.py::test_imshow_masked_interpolation[pdf]\", \"lib/matplotlib/tests/test_image.py::test_imshow_no_warn_invalid\", \"lib/matplotlib/tests/test_image.py::test_imshow_clips_rgb_to_valid_range[dtype0]\", \"lib/matplotlib/tests/test_image.py::test_imshow_clips_rgb_to_valid_range[dtype1]\", \"lib/matplotlib/tests/test_image.py::test_imshow_clips_rgb_to_valid_range[dtype2]\", \"lib/matplotlib/tests/test_image.py::test_imshow_clips_rgb_to_valid_range[dtype3]\", \"lib/matplotlib/tests/test_image.py::test_imshow_clips_rgb_to_valid_range[dtype4]\", \"lib/matplotlib/tests/test_image.py::test_imshow_clips_rgb_to_valid_range[dtype5]\", \"lib/matplotlib/tests/test_image.py::test_imshow_clips_rgb_to_valid_range[dtype6]\", \"lib/matplotlib/tests/test_image.py::test_imshow_flatfield[png]\", \"lib/matplotlib/tests/test_image.py::test_imshow_bignumbers[png]\", \"lib/matplotlib/tests/test_image.py::test_imshow_bignumbers_real[png]\", \"lib/matplotlib/tests/test_image.py::test_empty_imshow[Normalize]\", \"lib/matplotlib/tests/test_image.py::test_empty_imshow[LogNorm]\", \"lib/matplotlib/tests/test_image.py::test_empty_imshow[<lambda>0]\", \"lib/matplotlib/tests/test_image.py::test_empty_imshow[<lambda>1]\", \"lib/matplotlib/tests/test_image.py::test_imshow_float16\", \"lib/matplotlib/tests/test_image.py::test_imshow_float128\", \"lib/matplotlib/tests/test_image.py::test_imshow_bool\", \"lib/matplotlib/tests/test_image.py::test_composite[True-1-ps-\", \"lib/matplotlib/tests/test_image.py::test_composite[True-1-svg-<image]\", \"lib/matplotlib/tests/test_image.py::test_composite[False-2-ps-\", \"lib/matplotlib/tests/test_image.py::test_composite[False-2-svg-<image]\", \"lib/matplotlib/tests/test_image.py::test_relim\", \"lib/matplotlib/tests/test_image.py::test_unclipped\", \"lib/matplotlib/tests/test_image.py::test_respects_bbox\", \"lib/matplotlib/tests/test_image.py::test_image_cursor_formatting\", \"lib/matplotlib/tests/test_image.py::test_image_array_alpha[png]\", \"lib/matplotlib/tests/test_image.py::test_image_array_alpha[pdf]\", \"lib/matplotlib/tests/test_image.py::test_image_array_alpha_validation\", \"lib/matplotlib/tests/test_image.py::test_exact_vmin\", \"lib/matplotlib/tests/test_image.py::test_https_imread_smoketest\", \"lib/matplotlib/tests/test_image.py::test_quantitynd\", \"lib/matplotlib/tests/test_image.py::test_huge_range_log[png-1]\", \"lib/matplotlib/tests/test_image.py::test_spy_box[png]\", \"lib/matplotlib/tests/test_image.py::test_spy_box[pdf]\", \"lib/matplotlib/tests/test_image.py::test_nonuniform_and_pcolor[png]\"]",
  "environment_setup_commit": "f93c0a3dcb82feed0262d758626c90d4002685f3",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.789623",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}