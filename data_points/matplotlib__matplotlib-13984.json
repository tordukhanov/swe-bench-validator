{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-13984",
  "base_commit": "76db50151a65927c19c83a8c3c195c87dbcc0556",
  "patch": "diff --git a/lib/mpl_toolkits/mplot3d/axis3d.py b/lib/mpl_toolkits/mplot3d/axis3d.py\n--- a/lib/mpl_toolkits/mplot3d/axis3d.py\n+++ b/lib/mpl_toolkits/mplot3d/axis3d.py\n@@ -81,8 +81,7 @@ def __init__(self, adir, v_intervalx, d_intervalx, axes, *args,\n                            'ha': 'center'},\n                  'tick': {'inward_factor': 0.2,\n                           'outward_factor': 0.1,\n-                          'linewidth': rcParams['lines.linewidth'],\n-                          'color': 'k'},\n+                          'linewidth': rcParams['lines.linewidth']},\n                  'axisline': {'linewidth': 0.75,\n                               'color': (0, 0, 0, 1)},\n                  'grid': {'color': (0.9, 0.9, 0.9, 1),\n@@ -97,10 +96,7 @@ def __init__(self, adir, v_intervalx, d_intervalx, axes, *args,\n                           'outward_factor': 0.1,\n                           'linewidth': rcParams.get(\n                               adir + 'tick.major.width',\n-                              rcParams['xtick.major.width']),\n-                          'color': rcParams.get(\n-                              adir + 'tick.color',\n-                              rcParams['xtick.color'])},\n+                              rcParams['xtick.major.width'])},\n                  'axisline': {'linewidth': rcParams['axes.linewidth'],\n                               'color': rcParams['axes.edgecolor']},\n                  'grid': {'color': rcParams['grid.color'],\n@@ -265,7 +261,7 @@ def draw(self, renderer):\n         dx, dy = (self.axes.transAxes.transform([peparray[0:2, 1]]) -\n                   self.axes.transAxes.transform([peparray[0:2, 0]]))[0]\n \n-        lxyz = 0.5*(edgep1 + edgep2)\n+        lxyz = 0.5 * (edgep1 + edgep2)\n \n         # A rough estimate; points are ambiguous since 3D plots rotate\n         ax_scale = self.axes.bbox.size / self.figure.bbox.size\n@@ -391,7 +387,6 @@ def draw(self, renderer):\n             ticksign = -1\n \n         for tick in ticks:\n-\n             # Get tick line positions\n             pos = copy.copy(edgep1)\n             pos[index] = tick.get_loc()\n@@ -420,7 +415,6 @@ def draw(self, renderer):\n \n             tick_update_position(tick, (x1, x2), (y1, y2), (lx, ly))\n             tick.tick1line.set_linewidth(info['tick']['linewidth'])\n-            tick.tick1line.set_color(info['tick']['color'])\n             tick.draw(renderer)\n \n         renderer.close_group('axis3d')\n",
  "test_patch": "diff --git a/lib/mpl_toolkits/tests/test_mplot3d.py b/lib/mpl_toolkits/tests/test_mplot3d.py\n--- a/lib/mpl_toolkits/tests/test_mplot3d.py\n+++ b/lib/mpl_toolkits/tests/test_mplot3d.py\n@@ -924,3 +924,20 @@ def test_proj3d_deprecated():\n \n     with pytest.warns(MatplotlibDeprecationWarning):\n         proj3d.proj_trans_clip_points(np.ones((4, 3)), M)\n+\n+\n+def test_ax3d_tickcolour():\n+    fig = plt.figure()\n+    ax = Axes3D(fig)\n+\n+    ax.tick_params(axis='x', colors='red')\n+    ax.tick_params(axis='y', colors='red')\n+    ax.tick_params(axis='z', colors='red')\n+    fig.canvas.draw()\n+\n+    for tick in ax.xaxis.get_major_ticks():\n+        assert tick.tick1line._color == 'red'\n+    for tick in ax.yaxis.get_major_ticks():\n+        assert tick.tick1line._color == 'red'\n+    for tick in ax.zaxis.get_major_ticks():\n+        assert tick.tick1line._color == 'red'\n",
  "problem_statement": "Tick mark color cannot be set on Axes3D\nAs [mentioned on StackOverflow](https://stackoverflow.com/questions/53549960/setting-tick-colors-of-matplotlib-3d-plot/), the `ax.tick_params` method does not change the color of tick marks on `Axes3D`, only the color of tick labels. Several workarounds were proposed, and according to one comment, this used to work as expected in version 1.3.1.\r\n\r\nHere is code that tries to change the colors of all the axes but fails to get the tick marks:\r\n\r\n```python\r\nfrom mpl_toolkits.mplot3d import Axes3D\r\nfrom matplotlib import pyplot as plt\r\n\r\nfig = plt.figure()\r\nax = Axes3D(fig)\r\n\r\nax.scatter((0, 0, 1), (0, 1, 0), (1, 0, 0))\r\nax.w_xaxis.line.set_color('red')\r\nax.w_yaxis.line.set_color('red')\r\nax.w_zaxis.line.set_color('red')\r\nax.xaxis.label.set_color('red')\r\nax.yaxis.label.set_color('red')\r\nax.zaxis.label.set_color('red')\r\nax.tick_params(axis='x', colors='red')  # only affects\r\nax.tick_params(axis='y', colors='red')  # tick labels\r\nax.tick_params(axis='z', colors='red')  # not tick marks\r\n\r\nfig.show()\r\n```\r\n\r\n\r\n![](https://i.stack.imgur.com/0Q8FM.png)\r\n\n",
  "hints_text": "Something to do with https://github.com/matplotlib/matplotlib/blob/2c1cd6bb0f4037805011b082258c6c3923e4cf29/lib/mpl_toolkits/mplot3d/axis3d.py#L439\r\n\r\nwhich overwrites the line color. This seems to be some external setting, but I'm not enough into the 3d toolkit to know how to fix it properly.\nAh, yes, I remember now.\n\nSeveral years ago, mplot3d had just about everything hard-coded. Being new\nto matplotlib at the time and wary of breaking anything, I decided that I\nwould at least consolidate all of the hard-coded stuff into a dictionary at\nthe top of the Axis3D class.\n\nFeel free to make changes to whittle away at this dictionary.\n\n\nOn Sat, Dec 1, 2018 at 10:04 AM Tim Hoffmann <notifications@github.com>\nwrote:\n\n> Something to do with\n> https://github.com/matplotlib/matplotlib/blob/2c1cd6bb0f4037805011b082258c6c3923e4cf29/lib/mpl_toolkits/mplot3d/axis3d.py#L439\n>\n> which overwrites the line color. This seems to be some external setting,\n> but I'm not enough into the 3d toolkit to know how to fix it properly.\n>\n> â€”\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/matplotlib/matplotlib/issues/12911#issuecomment-443432522>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AARy-E_LaoALSxthjCD3bXrLFkkQExgBks5u0pp9gaJpZM4Y7nF0>\n> .\n>\n\nRemoving this line will fix the issue at hand https://github.com/matplotlib/matplotlib/blob/2c1cd6bb0f4037805011b082258c6c3923e4cf29/lib/mpl_toolkits/mplot3d/axis3d.py#L439\r\nbut the bigger underlying problem is that the Axis3D class extends XAxis which breaks many things..\r\n\r\nOne example is changing default xtick colors will change colors for all axis ticks instead of just the x axis\r\n```python\r\nfrom matplotlib import pyplot as plt, rcParams\r\n\r\nrcParams['xtick.color'] = 'red'\r\n\r\nfig = plt.figure()\r\n\r\nax = plt.gca(projection='3d')\r\n\r\nplt.show()\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/17525659/54079101-89c4f680-42a3-11e9-82db-a5e12228453f.png)\r\n",
  "created_at": "2019-04-18T11:21:30Z",
  "version": "3.0",
  "FAIL_TO_PASS": "[\"lib/mpl_toolkits/tests/test_mplot3d.py::test_ax3d_tickcolour\"]",
  "PASS_TO_PASS": "[\"lib/mpl_toolkits/tests/test_mplot3d.py::test_aspect_equal_error\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d_shaded[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_bar3d_notshaded[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_contour3d[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_contourf3d[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_contourf3d_fill[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_tricontour[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_lines3d[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_mixedsubplots[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_tight_layout_text[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_scatter3d_color[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_plot_3d_from_2d[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_surface3d[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_surface3d_shaded[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_trisurf3d[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_trisurf3d_shaded[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_wireframe3d[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_wireframe3dzerocstride[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_wireframe3dzerorstride[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_wireframe3dzerostrideraises\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_mixedsamplesraises\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_quiver3d[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_quiver3d_empty[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_quiver3d_masked[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_quiver3d_pivot_middle[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_quiver3d_pivot_tail[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_poly3dcollection_closed[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_poly_collection_2d_to_3d_empty\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_poly3dcollection_alpha[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_plotsurface_1d_raises\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_proj_transform\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_rot\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_world\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_lines_dists[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_autoscale\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_xlim3d-left-inf]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_xlim3d-left-nan]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_xlim3d-right-inf]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_xlim3d-right-nan]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_ylim3d-bottom-inf]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_ylim3d-bottom-nan]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_ylim3d-top-inf]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_ylim3d-top-nan]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_zlim3d-bottom-inf]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_zlim3d-bottom-nan]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_zlim3d-top-inf]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_invalid_axes_limits[set_zlim3d-top-nan]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_simple[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_edge_style[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_named_colors[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_rgb_data[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_alpha[png]\", \"lib/mpl_toolkits/tests/test_mplot3d.py::TestVoxels::test_calling_conventions\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_line3d_set_get_data_3d\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_inverted_cla\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_art3d_deprecated\", \"lib/mpl_toolkits/tests/test_mplot3d.py::test_proj3d_deprecated\"]",
  "environment_setup_commit": "d0628598f8d9ec7b0da6b60e7b29be2067b6ea17",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.785966",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}