{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-9828",
  "base_commit": "563936b969dfc29ade7d48f1a802d5f6f6348f4c",
  "patch": "diff --git a/sphinx/application.py b/sphinx/application.py\n--- a/sphinx/application.py\n+++ b/sphinx/application.py\n@@ -284,7 +284,8 @@ def _init_i18n(self) -> None:\n                                      self.config.language, self.config.source_encoding)\n             for catalog in repo.catalogs:\n                 if catalog.domain == 'sphinx' and catalog.is_outdated():\n-                    catalog.write_mo(self.config.language)\n+                    catalog.write_mo(self.config.language,\n+                                     self.config.gettext_allow_fuzzy_translations)\n \n             locale_dirs: List[Optional[str]] = list(repo.locale_dirs)\n             locale_dirs += [None]\ndiff --git a/sphinx/builders/__init__.py b/sphinx/builders/__init__.py\n--- a/sphinx/builders/__init__.py\n+++ b/sphinx/builders/__init__.py\n@@ -217,7 +217,8 @@ def cat2relpath(cat: CatalogInfo) -> str:\n         for catalog in status_iterator(catalogs, __('writing output... '), \"darkgreen\",\n                                        len(catalogs), self.app.verbosity,\n                                        stringify_func=cat2relpath):\n-            catalog.write_mo(self.config.language)\n+            catalog.write_mo(self.config.language,\n+                             self.config.gettext_allow_fuzzy_translations)\n \n     def compile_all_catalogs(self) -> None:\n         repo = CatalogRepository(self.srcdir, self.config.locale_dirs,\ndiff --git a/sphinx/config.py b/sphinx/config.py\n--- a/sphinx/config.py\n+++ b/sphinx/config.py\n@@ -103,6 +103,7 @@ class Config:\n         'language': (None, 'env', [str]),\n         'locale_dirs': (['locales'], 'env', []),\n         'figure_language_filename': ('{root}.{language}{ext}', 'env', [str]),\n+        'gettext_allow_fuzzy_translations': (False, 'gettext', []),\n \n         'master_doc': ('index', 'env', []),\n         'root_doc': (lambda config: config.master_doc, 'env', []),\ndiff --git a/sphinx/util/i18n.py b/sphinx/util/i18n.py\n--- a/sphinx/util/i18n.py\n+++ b/sphinx/util/i18n.py\n@@ -59,7 +59,7 @@ def is_outdated(self) -> bool:\n             not path.exists(self.mo_path) or\n             path.getmtime(self.mo_path) < path.getmtime(self.po_path))\n \n-    def write_mo(self, locale: str) -> None:\n+    def write_mo(self, locale: str, use_fuzzy: bool = False) -> None:\n         with open(self.po_path, encoding=self.charset) as file_po:\n             try:\n                 po = read_po(file_po, locale)\n@@ -69,7 +69,7 @@ def write_mo(self, locale: str) -> None:\n \n         with open(self.mo_path, 'wb') as file_mo:\n             try:\n-                write_mo(file_mo, po)\n+                write_mo(file_mo, po, use_fuzzy)\n             except Exception as exc:\n                 logger.warning(__('writing error: %s, %s'), self.mo_path, exc)\n \n",
  "test_patch": "diff --git a/tests/test_intl.py b/tests/test_intl.py\n--- a/tests/test_intl.py\n+++ b/tests/test_intl.py\n@@ -1301,6 +1301,44 @@ def getwarning(warnings):\n     return strip_escseq(warnings.getvalue().replace(os.sep, '/'))\n \n \n+@pytest.mark.sphinx('html', testroot='basic',\n+                    srcdir='gettext_allow_fuzzy_translations',\n+                    confoverrides={\n+                        'language': 'de',\n+                        'gettext_allow_fuzzy_translations': True\n+                    })\n+def test_gettext_allow_fuzzy_translations(app):\n+    locale_dir = app.srcdir / 'locales' / 'de' / 'LC_MESSAGES'\n+    locale_dir.makedirs()\n+    with (locale_dir / 'index.po').open('wb') as f:\n+        catalog = Catalog()\n+        catalog.add('features', 'FEATURES', flags=('fuzzy',))\n+        pofile.write_po(f, catalog)\n+\n+    app.build()\n+    content = (app.outdir / 'index.html').read_text()\n+    assert 'FEATURES' in content\n+\n+\n+@pytest.mark.sphinx('html', testroot='basic',\n+                    srcdir='gettext_disallow_fuzzy_translations',\n+                    confoverrides={\n+                        'language': 'de',\n+                        'gettext_allow_fuzzy_translations': False\n+                    })\n+def test_gettext_disallow_fuzzy_translations(app):\n+    locale_dir = app.srcdir / 'locales' / 'de' / 'LC_MESSAGES'\n+    locale_dir.makedirs()\n+    with (locale_dir / 'index.po').open('wb') as f:\n+        catalog = Catalog()\n+        catalog.add('features', 'FEATURES', flags=('fuzzy',))\n+        pofile.write_po(f, catalog)\n+\n+    app.build()\n+    content = (app.outdir / 'index.html').read_text()\n+    assert 'FEATURES' not in content\n+\n+\n @pytest.mark.sphinx('html', testroot='basic', confoverrides={'language': 'de'})\n def test_customize_system_message(make_app, app_params, sphinx_test_tempdir):\n     try:\n",
  "problem_statement": "Support for fuzzy translations\nProblem\r\n---------\r\nEntries in po files that are currently marked as \"fuzzy\" are not used in \"mo\" files. The original source language is used instead of the translated language. Fuzzy translations are translations that in general need to be reviewed by a translator. For example all machine translations could be marked as fuzzy. It would be desirable to let the user decide whether to include these fuzzy translations in the generated documentation.\r\n\r\nProposed solution\r\n------------------\r\nAdd a new configuration parameter \"use_fuzzy_translations\".\r\n\r\nChange in line 72 of the file sphinx/sphinx/util/i18n.py \r\n\r\n   write_mo(file_mo, po)\r\n\r\nto \r\n               \r\n   write_mo(file_mo, po, use_fuzzy_translations)\r\n\r\nWriting mo files with fuzzy translations is supported by the babel package, as can be seen in the documentation:\r\n\r\nhttp://babel.pocoo.org/en/latest/api/messages/mofile.html\r\n\n",
  "hints_text": "+1: Reasonable. I prefer to name it as `gettext_allow_fuzzy_translations` for the setting because we've given \"gettext_\" prefix to the i18n settings so far.\r\nhttps://www.sphinx-doc.org/en/master/usage/configuration.html#options-for-internationalization",
  "created_at": "2021-11-08T16:30:59Z",
  "version": "4.3",
  "FAIL_TO_PASS": "[\"tests/test_intl.py::test_gettext_allow_fuzzy_translations\"]",
  "PASS_TO_PASS": "[\"tests/test_intl.py::test_text_emit_warnings\", \"tests/test_intl.py::test_text_warning_node\", \"tests/test_intl.py::test_text_title_underline\", \"tests/test_intl.py::test_text_subdirs\", \"tests/test_intl.py::test_text_inconsistency_warnings\", \"tests/test_intl.py::test_text_literalblock_warnings\", \"tests/test_intl.py::test_text_definition_terms\", \"tests/test_intl.py::test_text_glossary_term\", \"tests/test_intl.py::test_text_glossary_term_inconsistencies\", \"tests/test_intl.py::test_gettext_section\", \"tests/test_intl.py::test_text_section\", \"tests/test_intl.py::test_text_seealso\", \"tests/test_intl.py::test_text_figure_captions\", \"tests/test_intl.py::test_text_rubric\", \"tests/test_intl.py::test_text_docfields\", \"tests/test_intl.py::test_text_admonitions\", \"tests/test_intl.py::test_gettext_toctree\", \"tests/test_intl.py::test_gettext_table\", \"tests/test_intl.py::test_text_table\", \"tests/test_intl.py::test_text_toctree\", \"tests/test_intl.py::test_gettext_topic\", \"tests/test_intl.py::test_text_topic\", \"tests/test_intl.py::test_gettext_definition_terms\", \"tests/test_intl.py::test_gettext_glossary_terms\", \"tests/test_intl.py::test_gettext_glossary_term_inconsistencies\", \"tests/test_intl.py::test_gettext_literalblock\", \"tests/test_intl.py::test_gettext_buildr_ignores_only_directive\", \"tests/test_intl.py::test_gettext_dont_rebuild_mo\", \"tests/test_intl.py::test_html_meta\", \"tests/test_intl.py::test_html_footnotes\", \"tests/test_intl.py::test_html_undefined_refs\", \"tests/test_intl.py::test_html_index_entries\", \"tests/test_intl.py::test_html_versionchanges\", \"tests/test_intl.py::test_html_docfields\", \"tests/test_intl.py::test_html_template\", \"tests/test_intl.py::test_html_rebuild_mo\", \"tests/test_intl.py::test_xml_footnotes\", \"tests/test_intl.py::test_xml_footnote_backlinks\", \"tests/test_intl.py::test_xml_refs_in_python_domain\", \"tests/test_intl.py::test_xml_keep_external_links\", \"tests/test_intl.py::test_xml_role_xref\", \"tests/test_intl.py::test_xml_warnings\", \"tests/test_intl.py::test_xml_label_targets\", \"tests/test_intl.py::test_text_references\", \"tests/test_intl.py::test_image_glob_intl\", \"tests/test_intl.py::test_image_glob_intl_using_figure_language_filename\", \"tests/test_intl.py::test_gettext_disallow_fuzzy_translations\", \"tests/test_intl.py::test_customize_system_message\"]",
  "environment_setup_commit": "6c6cc8a6f50b18331cb818160d168d7bb9c03e55",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.069904",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}