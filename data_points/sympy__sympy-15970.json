{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-15970",
  "base_commit": "c267d554e16f0392af2b22a2922cbe0db7e8c798",
  "patch": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -1673,7 +1673,7 @@ def _print_TensorIndex(self, expr):\n \n     def _print_tuple(self, expr):\n         return r\"\\left( %s\\right)\" % \\\n-            r\", \\quad \".join([ self._print(i) for i in expr ])\n+            r\", \\  \".join([ self._print(i) for i in expr ])\n \n     def _print_TensorProduct(self, expr):\n         elements = [self._print(a) for a in expr.args]\n@@ -1688,7 +1688,7 @@ def _print_Tuple(self, expr):\n \n     def _print_list(self, expr):\n         return r\"\\left[ %s\\right]\" % \\\n-            r\", \\quad \".join([ self._print(i) for i in expr ])\n+            r\", \\  \".join([ self._print(i) for i in expr ])\n \n     def _print_dict(self, d):\n         keys = sorted(d.keys(), key=default_sort_key)\n@@ -1698,7 +1698,7 @@ def _print_dict(self, d):\n             val = d[key]\n             items.append(\"%s : %s\" % (self._print(key), self._print(val)))\n \n-        return r\"\\left\\{ %s\\right\\}\" % r\", \\quad \".join(items)\n+        return r\"\\left\\{ %s\\right\\}\" % r\", \\  \".join(items)\n \n     def _print_Dict(self, expr):\n         return self._print_dict(expr)\n@@ -2450,7 +2450,7 @@ def latex(expr, fold_frac_powers=False, fold_func_brackets=False,\n     dictionary.\n \n     >>> print(latex([2/x, y], mode='inline'))\n-    $\\left[ 2 / x, \\quad y\\right]$\n+    $\\left[ 2 / x, \\  y\\right]$\n \n     \"\"\"\n     if symbol_names is None:\n",
  "test_patch": "diff --git a/sympy/interactive/tests/test_ipythonprinting.py b/sympy/interactive/tests/test_ipythonprinting.py\n--- a/sympy/interactive/tests/test_ipythonprinting.py\n+++ b/sympy/interactive/tests/test_ipythonprinting.py\n@@ -88,7 +88,7 @@ def test_print_builtin_option():\n                     u'{n\\N{LATIN SUBSCRIPT SMALL LETTER I}: 3, \\N{GREEK SMALL LETTER PI}: 3.14}',\n                     \"{n_i: 3, pi: 3.14}\",\n                     u'{\\N{GREEK SMALL LETTER PI}: 3.14, n\\N{LATIN SUBSCRIPT SMALL LETTER I}: 3}')\n-    assert latex == r'$\\displaystyle \\left\\{ n_{i} : 3, \\quad \\pi : 3.14\\right\\}$'\n+    assert latex == r'$\\displaystyle \\left\\{ n_{i} : 3, \\  \\pi : 3.14\\right\\}$'\n \n     app.run_cell(\"inst.display_formatter.formatters['text/latex'].enabled = True\")\n     app.run_cell(\"init_printing(use_latex=True, print_builtin=False)\")\ndiff --git a/sympy/printing/tests/test_latex.py b/sympy/printing/tests/test_latex.py\n--- a/sympy/printing/tests/test_latex.py\n+++ b/sympy/printing/tests/test_latex.py\n@@ -342,9 +342,9 @@ def test_latex_functions():\n     assert latex(Order(x, (x, 0))) == r\"O\\left(x\\right)\"\n     assert latex(Order(x, (x, oo))) == r\"O\\left(x; x\\rightarrow \\infty\\right)\"\n     assert latex(Order(x - y, (x, y))) == r\"O\\left(x - y; x\\rightarrow y\\right)\"\n-    assert latex(Order(x, x, y)) == r\"O\\left(x; \\left( x, \\quad y\\right)\\rightarrow \\left( 0, \\quad 0\\right)\\right)\"\n-    assert latex(Order(x, x, y)) == r\"O\\left(x; \\left( x, \\quad y\\right)\\rightarrow \\left( 0, \\quad 0\\right)\\right)\"\n-    assert latex(Order(x, (x, oo), (y, oo))) == r\"O\\left(x; \\left( x, \\quad y\\right)\\rightarrow \\left( \\infty, \\quad \\infty\\right)\\right)\"\n+    assert latex(Order(x, x, y)) == r\"O\\left(x; \\left( x, \\  y\\right)\\rightarrow \\left( 0, \\  0\\right)\\right)\"\n+    assert latex(Order(x, x, y)) == r\"O\\left(x; \\left( x, \\  y\\right)\\rightarrow \\left( 0, \\  0\\right)\\right)\"\n+    assert latex(Order(x, (x, oo), (y, oo))) == r\"O\\left(x; \\left( x, \\  y\\right)\\rightarrow \\left( \\infty, \\  \\infty\\right)\\right)\"\n     assert latex(lowergamma(x, y)) == r'\\gamma\\left(x, y\\right)'\n     assert latex(uppergamma(x, y)) == r'\\Gamma\\left(x, y\\right)'\n \n@@ -867,19 +867,19 @@ def test_latex():\n         \"\\\\begin{equation*}8 \\\\sqrt{2} \\\\mu^{\\\\frac{7}{2}}\\\\end{equation*}\"\n     assert latex((2*mu)**Rational(7, 2), mode='equation', itex=True) == \\\n         \"$$8 \\\\sqrt{2} \\\\mu^{\\\\frac{7}{2}}$$\"\n-    assert latex([2/x, y]) == r\"\\left[ \\frac{2}{x}, \\quad y\\right]\"\n+    assert latex([2/x, y]) == r\"\\left[ \\frac{2}{x}, \\  y\\right]\"\n \n \n def test_latex_dict():\n     d = {Rational(1): 1, x**2: 2, x: 3, x**3: 4}\n-    assert latex(d) == r'\\left\\{ 1 : 1, \\quad x : 3, \\quad x^{2} : 2, \\quad x^{3} : 4\\right\\}'\n+    assert latex(d) == r'\\left\\{ 1 : 1, \\  x : 3, \\  x^{2} : 2, \\  x^{3} : 4\\right\\}'\n     D = Dict(d)\n-    assert latex(D) == r'\\left\\{ 1 : 1, \\quad x : 3, \\quad x^{2} : 2, \\quad x^{3} : 4\\right\\}'\n+    assert latex(D) == r'\\left\\{ 1 : 1, \\  x : 3, \\  x^{2} : 2, \\  x^{3} : 4\\right\\}'\n \n \n def test_latex_list():\n     l = [Symbol('omega1'), Symbol('a'), Symbol('alpha')]\n-    assert latex(l) == r'\\left[ \\omega_{1}, \\quad a, \\quad \\alpha\\right]'\n+    assert latex(l) == r'\\left[ \\omega_{1}, \\  a, \\  \\alpha\\right]'\n \n \n def test_latex_rational():\n@@ -1104,7 +1104,7 @@ def test_latex_Lambda():\n     assert latex(Lambda(x, x + 1)) == \\\n         r\"\\left( x \\mapsto x + 1 \\right)\"\n     assert latex(Lambda((x, y), x + 1)) == \\\n-        r\"\\left( \\left( x, \\quad y\\right) \\mapsto x + 1 \\right)\"\n+        r\"\\left( \\left( x, \\  y\\right) \\mapsto x + 1 \\right)\"\n \n \n def test_latex_PolyElement():\n@@ -1325,19 +1325,19 @@ def test_categories():\n \n     d = Diagram({f1: \"unique\", f2: S.EmptySet})\n     assert latex(d) == r\"\\left\\{ f_{2}\\circ f_{1}:A_{1}\" \\\n-        r\"\\rightarrow A_{3} : \\emptyset, \\quad id:A_{1}\\rightarrow \" \\\n-        r\"A_{1} : \\emptyset, \\quad id:A_{2}\\rightarrow A_{2} : \" \\\n-        r\"\\emptyset, \\quad id:A_{3}\\rightarrow A_{3} : \\emptyset, \" \\\n-        r\"\\quad f_{1}:A_{1}\\rightarrow A_{2} : \\left\\{unique\\right\\}, \" \\\n-        r\"\\quad f_{2}:A_{2}\\rightarrow A_{3} : \\emptyset\\right\\}\"\n+        r\"\\rightarrow A_{3} : \\emptyset, \\  id:A_{1}\\rightarrow \" \\\n+        r\"A_{1} : \\emptyset, \\  id:A_{2}\\rightarrow A_{2} : \" \\\n+        r\"\\emptyset, \\  id:A_{3}\\rightarrow A_{3} : \\emptyset, \" \\\n+        r\"\\  f_{1}:A_{1}\\rightarrow A_{2} : \\left\\{unique\\right\\}, \" \\\n+        r\"\\  f_{2}:A_{2}\\rightarrow A_{3} : \\emptyset\\right\\}\"\n \n     d = Diagram({f1: \"unique\", f2: S.EmptySet}, {f2 * f1: \"unique\"})\n     assert latex(d) == r\"\\left\\{ f_{2}\\circ f_{1}:A_{1}\" \\\n-        r\"\\rightarrow A_{3} : \\emptyset, \\quad id:A_{1}\\rightarrow \" \\\n-        r\"A_{1} : \\emptyset, \\quad id:A_{2}\\rightarrow A_{2} : \" \\\n-        r\"\\emptyset, \\quad id:A_{3}\\rightarrow A_{3} : \\emptyset, \" \\\n-        r\"\\quad f_{1}:A_{1}\\rightarrow A_{2} : \\left\\{unique\\right\\},\" \\\n-        r\" \\quad f_{2}:A_{2}\\rightarrow A_{3} : \\emptyset\\right\\}\" \\\n+        r\"\\rightarrow A_{3} : \\emptyset, \\  id:A_{1}\\rightarrow \" \\\n+        r\"A_{1} : \\emptyset, \\  id:A_{2}\\rightarrow A_{2} : \" \\\n+        r\"\\emptyset, \\  id:A_{3}\\rightarrow A_{3} : \\emptyset, \" \\\n+        r\"\\  f_{1}:A_{1}\\rightarrow A_{2} : \\left\\{unique\\right\\},\" \\\n+        r\" \\  f_{2}:A_{2}\\rightarrow A_{3} : \\emptyset\\right\\}\" \\\n         r\"\\Longrightarrow \\left\\{ f_{2}\\circ f_{1}:A_{1}\" \\\n         r\"\\rightarrow A_{3} : \\left\\{unique\\right\\}\\right\\}\"\n \n",
  "problem_statement": "Use '\\ ' instead of '\\quad' for latex of lists, tuples, and dicts\nSee [this](https://twitter.com/asmeurer/status/487982939536248833) Twitter\ndiscussion.\n\n",
  "hints_text": "",
  "created_at": "2019-02-12T18:36:06Z",
  "version": "1.4",
  "FAIL_TO_PASS": "[\"test_latex_functions\", \"test_latex\", \"test_latex_dict\", \"test_latex_list\", \"test_latex_Lambda\", \"test_categories\"]",
  "PASS_TO_PASS": "[\"test_printmethod\", \"test_latex_basic\", \"test_latex_builtins\", \"test_latex_SingularityFunction\", \"test_latex_cycle\", \"test_latex_permutation\", \"test_latex_Float\", \"test_latex_vector_expressions\", \"test_latex_symbols\", \"test_function_subclass_different_name\", \"test_hyper_printing\", \"test_latex_bessel\", \"test_latex_fresnel\", \"test_latex_brackets\", \"test_latex_indexed\", \"test_latex_derivatives\", \"test_latex_subs\", \"test_latex_integrals\", \"test_latex_sets\", \"test_latex_SetExpr\", \"test_latex_Range\", \"test_latex_sequences\", \"test_latex_FourierSeries\", \"test_latex_FormalPowerSeries\", \"test_latex_intervals\", \"test_latex_AccumuBounds\", \"test_latex_emptyset\", \"test_latex_commutator\", \"test_latex_union\", \"test_latex_symmetric_difference\", \"test_latex_Complement\", \"test_latex_Complexes\", \"test_latex_productset\", \"test_latex_Naturals\", \"test_latex_Naturals0\", \"test_latex_Integers\", \"test_latex_ImageSet\", \"test_latex_ConditionSet\", \"test_latex_ComplexRegion\", \"test_latex_Contains\", \"test_latex_sum\", \"test_latex_product\", \"test_latex_limits\", \"test_latex_log\", \"test_issue_3568\", \"test_latex_rational\", \"test_latex_inverse\", \"test_latex_DiracDelta\", \"test_latex_Heaviside\", \"test_latex_KroneckerDelta\", \"test_latex_LeviCivita\", \"test_mode\", \"test_latex_Piecewise\", \"test_latex_Matrix\", \"test_latex_matrix_with_functions\", \"test_latex_NDimArray\", \"test_latex_mul_symbol\", \"test_latex_issue_4381\", \"test_latex_issue_4576\", \"test_latex_pow_fraction\", \"test_noncommutative\", \"test_latex_order\", \"test_latex_PolyElement\", \"test_latex_FracElement\", \"test_latex_Poly\", \"test_latex_Poly_order\", \"test_latex_ComplexRootOf\", \"test_latex_RootSum\", \"test_settings\", \"test_latex_numbers\", \"test_latex_euler\", \"test_lamda\", \"test_custom_symbol_names\", \"test_matAdd\", \"test_matMul\", \"test_latex_MatrixSlice\", \"test_latex_RandomDomain\", \"test_PrettyPoly\", \"test_integral_transforms\", \"test_PolynomialRingBase\", \"test_Modules\", \"test_QuotientRing\", \"test_Tr\", \"test_Adjoint\", \"test_Hadamard\", \"test_ZeroMatrix\", \"test_boolean_args_order\", \"test_imaginary\", \"test_builtins_without_args\", \"test_latex_greek_functions\", \"test_translate\", \"test_other_symbols\", \"test_modifiers\", \"test_greek_symbols\", \"test_builtin_no_args\", \"test_issue_6853\", \"test_Mul\", \"test_Pow\", \"test_issue_7180\", \"test_issue_8409\", \"test_issue_7117\", \"test_issue_15439\", \"test_issue_2934\", \"test_issue_10489\", \"test_issue_12886\", \"test_issue_13651\", \"test_latex_UnevaluatedExpr\", \"test_MatrixElement_printing\", \"test_MatrixSymbol_printing\", \"test_Quaternion_latex_printing\", \"test_TensorProduct_printing\", \"test_WedgeProduct_printing\", \"test_issue_14041\", \"test_issue_9216\", \"test_latex_printer_tensor\", \"test_trace\", \"test_print_basic\"]",
  "environment_setup_commit": "73b3f90093754c5ed1561bd885242330e3583004",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.104594",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}