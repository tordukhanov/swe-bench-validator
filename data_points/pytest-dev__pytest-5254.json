{
  "repo": "pytest-dev/pytest",
  "instance_id": "pytest-dev__pytest-5254",
  "base_commit": "654d8da9f7ffd7a88e02ae2081ffcb2ca2e765b3",
  "patch": "diff --git a/src/_pytest/fixtures.py b/src/_pytest/fixtures.py\n--- a/src/_pytest/fixtures.py\n+++ b/src/_pytest/fixtures.py\n@@ -1129,18 +1129,40 @@ def __init__(self, session):\n         self._nodeid_and_autousenames = [(\"\", self.config.getini(\"usefixtures\"))]\n         session.config.pluginmanager.register(self, \"funcmanage\")\n \n+    def _get_direct_parametrize_args(self, node):\n+        \"\"\"This function returns all the direct parametrization\n+        arguments of a node, so we don't mistake them for fixtures\n+\n+        Check https://github.com/pytest-dev/pytest/issues/5036\n+\n+        This things are done later as well when dealing with parametrization\n+        so this could be improved\n+        \"\"\"\n+        from _pytest.mark import ParameterSet\n+\n+        parametrize_argnames = []\n+        for marker in node.iter_markers(name=\"parametrize\"):\n+            if not marker.kwargs.get(\"indirect\", False):\n+                p_argnames, _ = ParameterSet._parse_parametrize_args(\n+                    *marker.args, **marker.kwargs\n+                )\n+                parametrize_argnames.extend(p_argnames)\n+\n+        return parametrize_argnames\n+\n     def getfixtureinfo(self, node, func, cls, funcargs=True):\n         if funcargs and not getattr(node, \"nofuncargs\", False):\n             argnames = getfuncargnames(func, cls=cls)\n         else:\n             argnames = ()\n+\n         usefixtures = itertools.chain.from_iterable(\n             mark.args for mark in node.iter_markers(name=\"usefixtures\")\n         )\n         initialnames = tuple(usefixtures) + argnames\n         fm = node.session._fixturemanager\n         initialnames, names_closure, arg2fixturedefs = fm.getfixtureclosure(\n-            initialnames, node\n+            initialnames, node, ignore_args=self._get_direct_parametrize_args(node)\n         )\n         return FuncFixtureInfo(argnames, initialnames, names_closure, arg2fixturedefs)\n \n@@ -1174,7 +1196,7 @@ def _getautousenames(self, nodeid):\n                 autousenames.extend(basenames)\n         return autousenames\n \n-    def getfixtureclosure(self, fixturenames, parentnode):\n+    def getfixtureclosure(self, fixturenames, parentnode, ignore_args=()):\n         # collect the closure of all fixtures , starting with the given\n         # fixturenames as the initial set.  As we have to visit all\n         # factory definitions anyway, we also return an arg2fixturedefs\n@@ -1202,6 +1224,8 @@ def merge(otherlist):\n         while lastlen != len(fixturenames_closure):\n             lastlen = len(fixturenames_closure)\n             for argname in fixturenames_closure:\n+                if argname in ignore_args:\n+                    continue\n                 if argname in arg2fixturedefs:\n                     continue\n                 fixturedefs = self.getfixturedefs(argname, parentid)\ndiff --git a/src/_pytest/mark/structures.py b/src/_pytest/mark/structures.py\n--- a/src/_pytest/mark/structures.py\n+++ b/src/_pytest/mark/structures.py\n@@ -103,8 +103,11 @@ def extract_from(cls, parameterset, force_tuple=False):\n         else:\n             return cls(parameterset, marks=[], id=None)\n \n-    @classmethod\n-    def _for_parametrize(cls, argnames, argvalues, func, config, function_definition):\n+    @staticmethod\n+    def _parse_parametrize_args(argnames, argvalues, **_):\n+        \"\"\"It receives an ignored _ (kwargs) argument so this function can\n+        take also calls from parametrize ignoring scope, indirect, and other\n+        arguments...\"\"\"\n         if not isinstance(argnames, (tuple, list)):\n             argnames = [x.strip() for x in argnames.split(\",\") if x.strip()]\n             force_tuple = len(argnames) == 1\n@@ -113,6 +116,11 @@ def _for_parametrize(cls, argnames, argvalues, func, config, function_definition\n         parameters = [\n             ParameterSet.extract_from(x, force_tuple=force_tuple) for x in argvalues\n         ]\n+        return argnames, parameters\n+\n+    @classmethod\n+    def _for_parametrize(cls, argnames, argvalues, func, config, function_definition):\n+        argnames, parameters = cls._parse_parametrize_args(argnames, argvalues)\n         del argvalues\n \n         if parameters:\n",
  "test_patch": "diff --git a/testing/python/fixtures.py b/testing/python/fixtures.py\n--- a/testing/python/fixtures.py\n+++ b/testing/python/fixtures.py\n@@ -3950,3 +3950,46 @@ def fix():\n \n     with pytest.raises(pytest.fail.Exception):\n         assert fix() == 1\n+\n+\n+def test_fixture_param_shadowing(testdir):\n+    \"\"\"Parametrized arguments would be shadowed if a fixture with the same name also exists (#5036)\"\"\"\n+    testdir.makepyfile(\n+        \"\"\"\n+        import pytest\n+\n+        @pytest.fixture(params=['a', 'b'])\n+        def argroot(request):\n+            return request.param\n+\n+        @pytest.fixture\n+        def arg(argroot):\n+            return argroot\n+\n+        # This should only be parametrized directly\n+        @pytest.mark.parametrize(\"arg\", [1])\n+        def test_direct(arg):\n+            assert arg == 1\n+\n+        # This should be parametrized based on the fixtures\n+        def test_normal_fixture(arg):\n+            assert isinstance(arg, str)\n+\n+        # Indirect should still work:\n+\n+        @pytest.fixture\n+        def arg2(request):\n+            return 2*request.param\n+\n+        @pytest.mark.parametrize(\"arg2\", [1], indirect=True)\n+        def test_indirect(arg2):\n+            assert arg2 == 2\n+    \"\"\"\n+    )\n+    # Only one test should have run\n+    result = testdir.runpytest(\"-v\")\n+    result.assert_outcomes(passed=4)\n+    result.stdout.fnmatch_lines([\"*::test_direct[[]1[]]*\"])\n+    result.stdout.fnmatch_lines([\"*::test_normal_fixture[[]a[]]*\"])\n+    result.stdout.fnmatch_lines([\"*::test_normal_fixture[[]b[]]*\"])\n+    result.stdout.fnmatch_lines([\"*::test_indirect[[]1[]]*\"])\n",
  "problem_statement": "`pytest.mark.parametrize` does not correctly hide fixtures of the same name (it misses its dependencies)\nFrom https://github.com/smarie/python-pytest-cases/issues/36\r\n\r\nThis works:\r\n\r\n```python\r\n@pytest.fixture(params=['a', 'b'])\r\ndef arg(request):\r\n    return request.param\r\n\r\n@pytest.mark.parametrize(\"arg\", [1])\r\ndef test_reference(arg, request):\r\n    assert '[1]' in request.node.nodeid\r\n```\r\n\r\nthe `arg` parameter in the test correctly hides the `arg` fixture so the unique pytest node has id `[1]` (instead of there being two nodes because of the fixture).\r\n\r\nHowever if the fixture that is hidden by the parameter depends on another fixture, that other fixture is mistakenly kept in the fixtures closure, even if it is not needed anymore. Therefore the test fails:\r\n\r\n```python\r\n@pytest.fixture(params=['a', 'b'])\r\ndef argroot(request):\r\n    return request.param\r\n\r\n@pytest.fixture\r\ndef arg(argroot):\r\n    return argroot\r\n\r\n@pytest.mark.parametrize(\"arg\", [1])\r\ndef test_reference(arg, request):\r\n    assert '[1]' in request.node.nodeid\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\n",
  "hints_text": "",
  "created_at": "2019-05-12T23:50:35Z",
  "version": "4.5",
  "FAIL_TO_PASS": "[\"testing/python/fixtures.py::test_fixture_param_shadowing\"]",
  "PASS_TO_PASS": "[\"testing/python/fixtures.py::test_getfuncargnames\", \"testing/python/fixtures.py::TestFillFixtures::test_fillfuncargs_exposed\", \"testing/python/fixtures.py::TestShowFixtures::test_fixture_disallow_twice\", \"testing/python/fixtures.py::test_call_fixture_function_error\", \"testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookupfails\", \"testing/python/fixtures.py::TestFillFixtures::test_detect_recursive_dependency_error\", \"testing/python/fixtures.py::TestFillFixtures::test_funcarg_basic\", \"testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookup_modulelevel\", \"testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookup_classlevel\", \"testing/python/fixtures.py::TestFillFixtures::test_conftest_funcargs_only_available_in_subdir\", \"testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_module_class\", \"testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_conftest_module\", \"testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_conftest_conftest\", \"testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_conftest_plugin\", \"testing/python/fixtures.py::TestFillFixtures::test_extend_fixture_plugin_plugin\", \"testing/python/fixtures.py::TestFillFixtures::test_override_parametrized_fixture_conftest_module\", \"testing/python/fixtures.py::TestFillFixtures::test_override_parametrized_fixture_conftest_conftest\", \"testing/python/fixtures.py::TestFillFixtures::test_override_non_parametrized_fixture_conftest_module\", \"testing/python/fixtures.py::TestFillFixtures::test_override_non_parametrized_fixture_conftest_conftest\", \"testing/python/fixtures.py::TestFillFixtures::test_override_autouse_fixture_with_parametrized_fixture_conftest_conftest\", \"testing/python/fixtures.py::TestFillFixtures::test_autouse_fixture_plugin\", \"testing/python/fixtures.py::TestFillFixtures::test_funcarg_lookup_error\", \"testing/python/fixtures.py::TestFillFixtures::test_fixture_excinfo_leak\", \"testing/python/fixtures.py::TestRequestBasic::test_request_attributes\", \"testing/python/fixtures.py::TestRequestBasic::test_request_attributes_method\", \"testing/python/fixtures.py::TestRequestBasic::test_request_contains_funcarg_arg2fixturedefs\", \"testing/python/fixtures.py::TestRequestBasic::test_request_garbage\", \"testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue_recursive\", \"testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue_teardown\", \"testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue[getfixturevalue]\", \"testing/python/fixtures.py::TestRequestBasic::test_getfixturevalue[getfuncargvalue]\", \"testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer\", \"testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer_failing_setup\", \"testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer_failing_setup_module\", \"testing/python/fixtures.py::TestRequestBasic::test_request_addfinalizer_partial_setup_failure\", \"testing/python/fixtures.py::TestRequestBasic::test_request_subrequest_addfinalizer_exceptions\", \"testing/python/fixtures.py::TestRequestBasic::test_request_getmodulepath\", \"testing/python/fixtures.py::TestRequestBasic::test_request_fixturenames\", \"testing/python/fixtures.py::TestRequestBasic::test_request_fixturenames_dynamic_fixture\", \"testing/python/fixtures.py::TestRequestBasic::test_funcargnames_compatattr\", \"testing/python/fixtures.py::TestRequestBasic::test_setupdecorator_and_xunit\", \"testing/python/fixtures.py::TestRequestBasic::test_fixtures_sub_subdir_normalize_sep\", \"testing/python/fixtures.py::TestRequestBasic::test_show_fixtures_color_yes\", \"testing/python/fixtures.py::TestRequestBasic::test_newstyle_with_request\", \"testing/python/fixtures.py::TestRequestBasic::test_setupcontext_no_param\", \"testing/python/fixtures.py::TestRequestMarking::test_applymarker\", \"testing/python/fixtures.py::TestRequestMarking::test_accesskeywords\", \"testing/python/fixtures.py::TestRequestMarking::test_accessmarker_dynamic\", \"testing/python/fixtures.py::TestFixtureUsages::test_noargfixturedec\", \"testing/python/fixtures.py::TestFixtureUsages::test_receives_funcargs\", \"testing/python/fixtures.py::TestFixtureUsages::test_receives_funcargs_scope_mismatch\", \"testing/python/fixtures.py::TestFixtureUsages::test_receives_funcargs_scope_mismatch_issue660\", \"testing/python/fixtures.py::TestFixtureUsages::test_invalid_scope\", \"testing/python/fixtures.py::TestFixtureUsages::test_funcarg_parametrized_and_used_twice\", \"testing/python/fixtures.py::TestFixtureUsages::test_factory_uses_unknown_funcarg_as_dependency_error\", \"testing/python/fixtures.py::TestFixtureUsages::test_factory_setup_as_classes_fails\", \"testing/python/fixtures.py::TestFixtureUsages::test_request_can_be_overridden\", \"testing/python/fixtures.py::TestFixtureUsages::test_usefixtures_marker\", \"testing/python/fixtures.py::TestFixtureUsages::test_usefixtures_ini\", \"testing/python/fixtures.py::TestFixtureUsages::test_usefixtures_seen_in_showmarkers\", \"testing/python/fixtures.py::TestFixtureUsages::test_request_instance_issue203\", \"testing/python/fixtures.py::TestFixtureUsages::test_fixture_parametrized_with_iterator\", \"testing/python/fixtures.py::TestFixtureUsages::test_setup_functions_as_fixtures\", \"testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_evil_objects_issue214\", \"testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_conftest\", \"testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_conftest_and_module_and_class\", \"testing/python/fixtures.py::TestFixtureManagerParseFactories::test_parsefactories_relative_node_ids\", \"testing/python/fixtures.py::TestFixtureManagerParseFactories::test_package_xunit_fixture\", \"testing/python/fixtures.py::TestFixtureManagerParseFactories::test_package_fixture_complex\", \"testing/python/fixtures.py::TestFixtureManagerParseFactories::test_collect_custom_items\", \"testing/python/fixtures.py::TestAutouseDiscovery::test_parsefactories_conftest\", \"testing/python/fixtures.py::TestAutouseDiscovery::test_two_classes_separated_autouse\", \"testing/python/fixtures.py::TestAutouseDiscovery::test_setup_at_classlevel\", \"testing/python/fixtures.py::TestAutouseDiscovery::test_callables_nocode\", \"testing/python/fixtures.py::TestAutouseDiscovery::test_autouse_in_conftests\", \"testing/python/fixtures.py::TestAutouseDiscovery::test_autouse_in_module_and_two_classes\", \"testing/python/fixtures.py::TestAutouseManagement::test_autouse_conftest_mid_directory\", \"testing/python/fixtures.py::TestAutouseManagement::test_funcarg_and_setup\", \"testing/python/fixtures.py::TestAutouseManagement::test_uses_parametrized_resource\", \"testing/python/fixtures.py::TestAutouseManagement::test_session_parametrized_function\", \"testing/python/fixtures.py::TestAutouseManagement::test_class_function_parametrization_finalization\", \"testing/python/fixtures.py::TestAutouseManagement::test_scope_ordering\", \"testing/python/fixtures.py::TestAutouseManagement::test_parametrization_setup_teardown_ordering\", \"testing/python/fixtures.py::TestAutouseManagement::test_ordering_autouse_before_explicit\", \"testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p10-p00]\", \"testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p10-p01]\", \"testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p11-p00]\", \"testing/python/fixtures.py::TestAutouseManagement::test_ordering_dependencies_torndown_first[p11-p01]\", \"testing/python/fixtures.py::TestFixtureMarker::test_parametrize\", \"testing/python/fixtures.py::TestFixtureMarker::test_multiple_parametrization_issue_736\", \"testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979['fixt,\", \"testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979['fixt,val']\", \"testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979[['fixt',\", \"testing/python/fixtures.py::TestFixtureMarker::test_override_parametrized_fixture_issue_979[('fixt',\", \"testing/python/fixtures.py::TestFixtureMarker::test_scope_session\", \"testing/python/fixtures.py::TestFixtureMarker::test_scope_session_exc\", \"testing/python/fixtures.py::TestFixtureMarker::test_scope_session_exc_two_fix\", \"testing/python/fixtures.py::TestFixtureMarker::test_scope_exc\", \"testing/python/fixtures.py::TestFixtureMarker::test_scope_module_uses_session\", \"testing/python/fixtures.py::TestFixtureMarker::test_scope_module_and_finalizer\", \"testing/python/fixtures.py::TestFixtureMarker::test_scope_mismatch_various\", \"testing/python/fixtures.py::TestFixtureMarker::test_register_only_with_mark\", \"testing/python/fixtures.py::TestFixtureMarker::test_parametrize_and_scope\", \"testing/python/fixtures.py::TestFixtureMarker::test_scope_mismatch\", \"testing/python/fixtures.py::TestFixtureMarker::test_parametrize_separated_order\", \"testing/python/fixtures.py::TestFixtureMarker::test_module_parametrized_ordering\", \"testing/python/fixtures.py::TestFixtureMarker::test_dynamic_parametrized_ordering\", \"testing/python/fixtures.py::TestFixtureMarker::test_class_ordering\", \"testing/python/fixtures.py::TestFixtureMarker::test_parametrize_separated_order_higher_scope_first\", \"testing/python/fixtures.py::TestFixtureMarker::test_parametrized_fixture_teardown_order\", \"testing/python/fixtures.py::TestFixtureMarker::test_fixture_finalizer\", \"testing/python/fixtures.py::TestFixtureMarker::test_class_scope_with_normal_tests\", \"testing/python/fixtures.py::TestFixtureMarker::test_request_is_clean\", \"testing/python/fixtures.py::TestFixtureMarker::test_parametrize_separated_lifecycle\", \"testing/python/fixtures.py::TestFixtureMarker::test_parametrize_function_scoped_finalizers_called\", \"testing/python/fixtures.py::TestFixtureMarker::test_finalizer_order_on_parametrization[session]\", \"testing/python/fixtures.py::TestFixtureMarker::test_finalizer_order_on_parametrization[function]\", \"testing/python/fixtures.py::TestFixtureMarker::test_finalizer_order_on_parametrization[module]\", \"testing/python/fixtures.py::TestFixtureMarker::test_class_scope_parametrization_ordering\", \"testing/python/fixtures.py::TestFixtureMarker::test_parametrize_setup_function\", \"testing/python/fixtures.py::TestFixtureMarker::test_fixture_marked_function_not_collected_as_test\", \"testing/python/fixtures.py::TestFixtureMarker::test_params_and_ids\", \"testing/python/fixtures.py::TestFixtureMarker::test_params_and_ids_yieldfixture\", \"testing/python/fixtures.py::TestFixtureMarker::test_deterministic_fixture_collection\", \"testing/python/fixtures.py::TestRequestScopeAccess::test_setup[session--fspath\", \"testing/python/fixtures.py::TestRequestScopeAccess::test_setup[module-module\", \"testing/python/fixtures.py::TestRequestScopeAccess::test_setup[class-module\", \"testing/python/fixtures.py::TestRequestScopeAccess::test_setup[function-module\", \"testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[session--fspath\", \"testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[module-module\", \"testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[class-module\", \"testing/python/fixtures.py::TestRequestScopeAccess::test_funcarg[function-module\", \"testing/python/fixtures.py::TestErrors::test_subfactory_missing_funcarg\", \"testing/python/fixtures.py::TestErrors::test_issue498_fixture_finalizer_failing\", \"testing/python/fixtures.py::TestErrors::test_setupfunc_missing_funcarg\", \"testing/python/fixtures.py::TestShowFixtures::test_funcarg_compat\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_verbose\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_testmodule\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_conftest[True]\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_conftest[False]\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_trimmed_doc\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_indented_doc\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_indented_doc_first_line_unindented\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_indented_in_class\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_different_files\", \"testing/python/fixtures.py::TestShowFixtures::test_show_fixtures_with_same_name\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_simple[fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_simple[yield_fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_scoped[fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_scoped[yield_fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_setup_exception[fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_setup_exception[yield_fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_teardown_exception[fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_teardown_exception[yield_fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_yields_more_than_one[fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_yields_more_than_one[yield_fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_custom_name[fixture]\", \"testing/python/fixtures.py::TestContextManagerFixtureFuncs::test_custom_name[yield_fixture]\", \"testing/python/fixtures.py::TestParameterizedSubRequest::test_call_from_fixture\", \"testing/python/fixtures.py::TestParameterizedSubRequest::test_call_from_test\", \"testing/python/fixtures.py::TestParameterizedSubRequest::test_external_fixture\", \"testing/python/fixtures.py::TestParameterizedSubRequest::test_non_relative_path\", \"testing/python/fixtures.py::test_pytest_fixture_setup_and_post_finalizer_hook\", \"testing/python/fixtures.py::TestScopeOrdering::test_func_closure_module_auto[mark]\", \"testing/python/fixtures.py::TestScopeOrdering::test_func_closure_module_auto[autouse]\", \"testing/python/fixtures.py::TestScopeOrdering::test_func_closure_with_native_fixtures\", \"testing/python/fixtures.py::TestScopeOrdering::test_func_closure_module\", \"testing/python/fixtures.py::TestScopeOrdering::test_func_closure_scopes_reordered\", \"testing/python/fixtures.py::TestScopeOrdering::test_func_closure_same_scope_closer_root_first\", \"testing/python/fixtures.py::TestScopeOrdering::test_func_closure_all_scopes_complex\", \"testing/python/fixtures.py::TestScopeOrdering::test_multiple_packages\"]",
  "environment_setup_commit": "693c3b7f61d4d32f8927a74f34ce8ac56d63958e",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.926972",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}