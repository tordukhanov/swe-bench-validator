{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-24362",
  "base_commit": "aca6e9d5e98811ca37c442217914b15e78127c89",
  "patch": "diff --git a/lib/matplotlib/gridspec.py b/lib/matplotlib/gridspec.py\n--- a/lib/matplotlib/gridspec.py\n+++ b/lib/matplotlib/gridspec.py\n@@ -276,21 +276,12 @@ def subplots(self, *, sharex=False, sharey=False, squeeze=True,\n             raise ValueError(\"GridSpec.subplots() only works for GridSpecs \"\n                              \"created with a parent figure\")\n \n-        if isinstance(sharex, bool):\n+        if not isinstance(sharex, str):\n             sharex = \"all\" if sharex else \"none\"\n-        if isinstance(sharey, bool):\n+        if not isinstance(sharey, str):\n             sharey = \"all\" if sharey else \"none\"\n-        # This check was added because it is very easy to type\n-        # `subplots(1, 2, 1)` when `subplot(1, 2, 1)` was intended.\n-        # In most cases, no error will ever occur, but mysterious behavior\n-        # will result because what was intended to be the subplot index is\n-        # instead treated as a bool for sharex.  This check should go away\n-        # once sharex becomes kwonly.\n-        if isinstance(sharex, Integral):\n-            _api.warn_external(\n-                \"sharex argument to subplots() was an integer.  Did you \"\n-                \"intend to use subplot() (without 's')?\")\n-        _api.check_in_list([\"all\", \"row\", \"col\", \"none\"],\n+\n+        _api.check_in_list([\"all\", \"row\", \"col\", \"none\", False, True],\n                            sharex=sharex, sharey=sharey)\n         if subplot_kw is None:\n             subplot_kw = {}\n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_subplots.py b/lib/matplotlib/tests/test_subplots.py\n--- a/lib/matplotlib/tests/test_subplots.py\n+++ b/lib/matplotlib/tests/test_subplots.py\n@@ -84,7 +84,7 @@ def test_shared():\n     plt.close(f)\n \n     # test all option combinations\n-    ops = [False, True, 'all', 'none', 'row', 'col']\n+    ops = [False, True, 'all', 'none', 'row', 'col', 0, 1]\n     for xo in ops:\n         for yo in ops:\n             f, ((a1, a2), (a3, a4)) = plt.subplots(2, 2, sharex=xo, sharey=yo)\n",
  "problem_statement": "[Bug]: sharex and sharey don't accept 0 and 1 as bool values\n### Bug summary\r\n\r\nWhen using `0` or `1` in place of `False` or `True` in `sharex` or `sharex` arguments of `pyplot.subplots` an error is raised.\r\n\r\n### Code for reproduction\r\n\r\n```python\r\nimport matplotlib.pyplot as plt\r\n\r\nfig, ax = plt.subplots(ncols=2,sharey=1)\r\n```\r\n\r\n\r\n### Actual outcome\r\n\r\nWe get the following error : \r\n```\r\nTraceback (most recent call last):\r\n  File \"/***/shareyArg.py\", line 3, in <module>\r\n    fig, ax = plt.subplots(ncols=2,sharey=1)\r\n  File \"/***/matplotlib/lib/matplotlib/pyplot.py\", line 1448, in subplots\r\n    axs = fig.subplots(nrows=nrows, ncols=ncols, sharex=sharex, sharey=sharey,\r\n  File \"/***/matplotlib/lib/matplotlib/figure.py\", line 889, in subplots\r\n    axs = gs.subplots(sharex=sharex, sharey=sharey, squeeze=squeeze,\r\n  File \"/***/matplotlib/lib/matplotlib/gridspec.py\", line 293, in subplots\r\n    _api.check_in_list([\"all\", \"row\", \"col\", \"none\"],\r\n  File \"/***/matplotlib/lib/matplotlib/_api/__init__.py\", line 131, in check_in_list\r\n    raise ValueError(msg)\r\nValueError: 1 is not a valid value for sharey; supported values are 'all', 'row', 'col', 'none'\r\n```\r\n\r\nNote that using `sharex` instead of `sharey` produces the same error (albeit with the following warning :\r\n```\r\nUserWarning: sharex argument to subplots() was an integer.  Did you intend to use subplot() (without 's')?\r\n```\r\nbut this is expected and not part of the present issue)\r\n\r\n### Expected outcome\r\n\r\nI expected values 1 and 0 to be understood as bool.\r\n\r\n\r\n\r\n### Additional information\r\n\r\nSuggested fix : \r\n\r\n```patch\r\ndiff --git a/lib/matplotlib/gridspec.py b/lib/matplotlib/gridspec.py\r\nindex 06dd3f19f6..32ee7c306e 100644\r\n--- a/lib/matplotlib/gridspec.py\r\n+++ b/lib/matplotlib/gridspec.py\r\n@@ -276,9 +276,9 @@ class GridSpecBase:\r\n             raise ValueError(\"GridSpec.subplots() only works for GridSpecs \"\r\n                              \"created with a parent figure\")\r\n \r\n-        if isinstance(sharex, bool):\r\n+        if isinstance(sharex, bool) or sharex == 1 or sharex == 0:\r\n             sharex = \"all\" if sharex else \"none\"\r\n-        if isinstance(sharey, bool):\r\n+        if isinstance(sharey, bool) or sharey == 1 or sharey == 0:\r\n             sharey = \"all\" if sharey else \"none\"\r\n         # This check was added because it is very easy to type\r\n         # `subplots(1, 2, 1)` when `subplot(1, 2, 1)` was intended.\r\n```\r\n\r\nMaybe not accepting 1 or 0 was done on purpose, but I did not find it very clear from the error message as `True` and `False` are accepted but not listed. \r\n\r\nI am happy to chat about an other fix, if this one doesn't do the trick. I can also create a PR in case you think this fix is good enough !\r\n\r\n### Operating system\r\n\r\nLinux 5.10.0-19-amd64 #1 SMP Debian 5.10.149-2\r\n\r\n### Matplotlib Version\r\n\r\n3.7.0.dev600+g0b6d3703ff\r\n\r\n### Matplotlib Backend\r\n\r\nTkAgg\r\n\r\n### Python version\r\n\r\n3.10.0\r\n\r\n### Jupyter version\r\n\r\nNot applicable\r\n\r\n### Installation\r\n\r\ngit checkout\n",
  "hints_text": "",
  "created_at": "2022-11-04T10:37:58Z",
  "version": "3.6",
  "FAIL_TO_PASS": "[\"lib/matplotlib/tests/test_subplots.py::test_shared\"]",
  "PASS_TO_PASS": "[\"lib/matplotlib/tests/test_subplots.py::test_label_outer_span\", \"lib/matplotlib/tests/test_subplots.py::test_label_outer_non_gridspec\", \"lib/matplotlib/tests/test_subplots.py::test_shared_and_moved\", \"lib/matplotlib/tests/test_subplots.py::test_exceptions\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_offsettext[png]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_offsettext[pdf]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_ticklabels[True-True-True-True]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_ticklabels[True-True-True-False]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_ticklabels[True-True-False-True]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_ticklabels[True-True-False-False]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_ticklabels[True-False-True-True]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_ticklabels[True-False-True-False]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_ticklabels[True-False-False-True]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_ticklabels[True-False-False-False]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_ticklabels[False-True-True-True]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_ticklabels[False-True-True-False]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_ticklabels[False-True-False-True]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_ticklabels[False-True-False-False]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_ticklabels[False-False-True-True]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_ticklabels[False-False-True-False]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_ticklabels[False-False-False-True]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_ticklabels[False-False-False-False]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_axislabels[left-bottom]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_axislabels[left-top]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_axislabels[right-bottom]\", \"lib/matplotlib/tests/test_subplots.py::test_subplots_hide_axislabels[right-top]\", \"lib/matplotlib/tests/test_subplots.py::test_get_gridspec\", \"lib/matplotlib/tests/test_subplots.py::test_dont_mutate_kwargs\", \"lib/matplotlib/tests/test_subplots.py::test_width_and_height_ratios[png-None-None]\", \"lib/matplotlib/tests/test_subplots.py::test_width_and_height_ratios[png-None-width_ratios1]\", \"lib/matplotlib/tests/test_subplots.py::test_width_and_height_ratios[png-height_ratios1-None]\", \"lib/matplotlib/tests/test_subplots.py::test_width_and_height_ratios[png-height_ratios1-width_ratios1]\", \"lib/matplotlib/tests/test_subplots.py::test_width_and_height_ratios_mosaic[png-None-None]\", \"lib/matplotlib/tests/test_subplots.py::test_width_and_height_ratios_mosaic[png-None-width_ratios1]\", \"lib/matplotlib/tests/test_subplots.py::test_width_and_height_ratios_mosaic[png-height_ratios1-None]\", \"lib/matplotlib/tests/test_subplots.py::test_width_and_height_ratios_mosaic[png-height_ratios1-width_ratios1]\", \"lib/matplotlib/tests/test_subplots.py::test_ratio_overlapping_kws[subplots-args0]\", \"lib/matplotlib/tests/test_subplots.py::test_ratio_overlapping_kws[subplot_mosaic-args1]\", \"lib/matplotlib/tests/test_subplots.py::test_old_subplot_compat\"]",
  "environment_setup_commit": "73909bcb408886a22e2b84581d6b9e6d9907c813",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.811822",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}