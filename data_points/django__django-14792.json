{
  "repo": "django/django",
  "instance_id": "django__django-14792",
  "base_commit": "d89f976bddb49fb168334960acc8979c3de991fa",
  "patch": "diff --git a/django/utils/timezone.py b/django/utils/timezone.py\n--- a/django/utils/timezone.py\n+++ b/django/utils/timezone.py\n@@ -72,8 +72,11 @@ def get_current_timezone_name():\n \n \n def _get_timezone_name(timezone):\n-    \"\"\"Return the name of ``timezone``.\"\"\"\n-    return str(timezone)\n+    \"\"\"\n+    Return the offset for fixed offset timezones, or the name of timezone if\n+    not set.\n+    \"\"\"\n+    return timezone.tzname(None) or str(timezone)\n \n # Timezone selection functions.\n \n",
  "test_patch": "diff --git a/tests/utils_tests/test_timezone.py b/tests/utils_tests/test_timezone.py\n--- a/tests/utils_tests/test_timezone.py\n+++ b/tests/utils_tests/test_timezone.py\n@@ -260,6 +260,31 @@ def test_make_aware_zoneinfo_non_existent(self):\n         self.assertEqual(std.utcoffset(), datetime.timedelta(hours=1))\n         self.assertEqual(dst.utcoffset(), datetime.timedelta(hours=2))\n \n+    def test_get_timezone_name(self):\n+        \"\"\"\n+        The _get_timezone_name() helper must return the offset for fixed offset\n+        timezones, for usage with Trunc DB functions.\n+\n+        The datetime.timezone examples show the current behavior.\n+        \"\"\"\n+        tests = [\n+            # datetime.timezone, fixed offset with and without `name`.\n+            (datetime.timezone(datetime.timedelta(hours=10)), 'UTC+10:00'),\n+            (datetime.timezone(datetime.timedelta(hours=10), name='Etc/GMT-10'), 'Etc/GMT-10'),\n+            # pytz, named and fixed offset.\n+            (pytz.timezone('Europe/Madrid'), 'Europe/Madrid'),\n+            (pytz.timezone('Etc/GMT-10'), '+10'),\n+        ]\n+        if HAS_ZONEINFO:\n+            tests += [\n+                # zoneinfo, named and fixed offset.\n+                (zoneinfo.ZoneInfo('Europe/Madrid'), 'Europe/Madrid'),\n+                (zoneinfo.ZoneInfo('Etc/GMT-10'), '+10'),\n+            ]\n+        for tz, expected in tests:\n+            with self.subTest(tz=tz, expected=expected):\n+                self.assertEqual(timezone._get_timezone_name(tz), expected)\n+\n     def test_get_default_timezone(self):\n         self.assertEqual(timezone.get_default_timezone_name(), 'America/Chicago')\n \n",
  "problem_statement": "Reverse time zone conversion in Trunc()/Extract() database functions.\nDescription\n\t\nWhen using a time zone of \"Etc/GMT-10\" (or similar) for a Trunc class tzinfo, it appears there's a different behavior as of Django 3.2 in the resulting database query. I think it's due to a change in the return value of timezone._get_timezone_name() that's called by the TimezoneMixin.\nOn Django 3.1 the TimezoneMixin method get_tzname() returns \"+10\" for a \"Etc/GMT-10\" time zone after calling ​_get_timezone_name(). This later becomes \"-10\" in the resulting query due to the return value of _prepare_tzname_delta() of the Postgres DatabaseOperations class, i.e. the time zone 10 hours east from UTC.\nSELECT ... DATE_TRUNC(\\'day\\', \"my_model\".\"start_at\" AT TIME ZONE \\'-10\\') AS \"date\" ...\nOn Django 3.2 the TimezoneMixin method get_tzname() returns \"Etc/GMT-10\" for a \"Etc/GMT-10\" time zone after calling ​_get_timezone_name(). This later, incorrectly, becomes \"Etc/GMT+10\" in the resulting query due to the return value of _prepare_tzname_delta() of the Postgres DatabaseOperations class, i.e. the time zone 10 hours west from UTC, which is the opposite direction from the behavior in Django 3.1.\nSELECT ... DATE_TRUNC(\\'day\\', \"my_model\".\"start_at\" AT TIME ZONE \\'Etc/GMT+10\\') AS \"date\" ...\n# Django 3.1\n>>> timezone._get_timezone_name(pytz.timezone(\"Etc/GMT-10\"))\n'+10'\n# Django 3.2\n>>> timezone._get_timezone_name(pytz.timezone(\"Etc/GMT-10\"))\n'Etc/GMT-10'\nThe above is the same when using Python's zoneinfo.ZoneInfo() too.\n",
  "hints_text": "Thanks for the report. Regression in 10d126198434810529e0220b0c6896ed64ca0e88. Reproduced at 4fe3774c729f3fd5105b3001fe69a70bdca95ac3.\nThis problem is also affecting MySQL, the timezone \"Etc/GMT-10\" is returning \"-10\" instead of \"-10:00\". #33037",
  "created_at": "2021-08-24T09:25:15Z",
  "version": "4.0",
  "FAIL_TO_PASS": "[\"The _get_timezone_name() helper must return the offset for fixed offset\", \"test_is_aware (utils_tests.test_timezone.TimezoneTests)\"]",
  "PASS_TO_PASS": "[\"test_activate_invalid_timezone (utils_tests.test_timezone.TimezoneTests)\", \"test_fixedoffset_negative_timedelta (utils_tests.test_timezone.TimezoneTests)\", \"test_fixedoffset_timedelta (utils_tests.test_timezone.TimezoneTests)\", \"test_get_default_timezone (utils_tests.test_timezone.TimezoneTests)\", \"test_get_default_timezone_utc (utils_tests.test_timezone.TimezoneTests)\", \"test_is_naive (utils_tests.test_timezone.TimezoneTests)\", \"test_localdate (utils_tests.test_timezone.TimezoneTests)\", \"test_make_aware (utils_tests.test_timezone.TimezoneTests)\", \"test_make_aware2 (utils_tests.test_timezone.TimezoneTests)\", \"test_make_aware_no_tz (utils_tests.test_timezone.TimezoneTests)\", \"test_make_aware_pytz_ambiguous (utils_tests.test_timezone.TimezoneTests)\", \"test_make_aware_pytz_non_existent (utils_tests.test_timezone.TimezoneTests)\", \"test_make_aware_zoneinfo_ambiguous (utils_tests.test_timezone.TimezoneTests)\", \"test_make_aware_zoneinfo_non_existent (utils_tests.test_timezone.TimezoneTests)\", \"test_make_naive (utils_tests.test_timezone.TimezoneTests)\", \"test_make_naive_no_tz (utils_tests.test_timezone.TimezoneTests)\", \"test_make_naive_pytz (utils_tests.test_timezone.TimezoneTests)\", \"test_make_naive_zoneinfo (utils_tests.test_timezone.TimezoneTests)\", \"test_now (utils_tests.test_timezone.TimezoneTests)\", \"test_override (utils_tests.test_timezone.TimezoneTests)\", \"test_override_decorator (utils_tests.test_timezone.TimezoneTests)\", \"test_override_fixed_offset (utils_tests.test_timezone.TimezoneTests)\", \"test_override_string_tz (utils_tests.test_timezone.TimezoneTests)\"]",
  "environment_setup_commit": "475cffd1d64c690cdad16ede4d5e81985738ceb4",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.703637",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}