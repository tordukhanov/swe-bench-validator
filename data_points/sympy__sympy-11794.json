{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-11794",
  "base_commit": "8e80c0be90728b915942d7953e4b2c5d56deb570",
  "patch": "diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py\n--- a/sympy/printing/pretty/pretty.py\n+++ b/sympy/printing/pretty/pretty.py\n@@ -1151,7 +1151,10 @@ def _print_SingularityFunction(self, e):\n             pform = base**n\n             return pform\n         else:\n-            return self._print_Function(e)\n+            n = self._print(e.args[2])\n+            shift = self._print(e.args[0]-e.args[1])\n+            base = self._print_seq(shift, \"<\", \">\", ' ')\n+            return base**n\n \n     def _print_gamma(self, e):\n         if self._use_unicode:\n",
  "test_patch": "diff --git a/sympy/printing/pretty/tests/test_pretty.py b/sympy/printing/pretty/tests/test_pretty.py\n--- a/sympy/printing/pretty/tests/test_pretty.py\n+++ b/sympy/printing/pretty/tests/test_pretty.py\n@@ -4476,6 +4476,31 @@ def test_SingularityFunction():\n \"\"\"\\\n        n\\n\\\n <x - y> \\\n+\"\"\")\n+    assert xpretty(SingularityFunction(x, 0, n), use_unicode=False) == (\n+\"\"\"\\\n+   n\\n\\\n+<x> \\\n+\"\"\")\n+    assert xpretty(SingularityFunction(x, 1, n), use_unicode=False) == (\n+\"\"\"\\\n+       n\\n\\\n+<x - 1> \\\n+\"\"\")\n+    assert xpretty(SingularityFunction(x, -1, n), use_unicode=False) == (\n+\"\"\"\\\n+       n\\n\\\n+<x + 1> \\\n+\"\"\")\n+    assert xpretty(SingularityFunction(x, a, n), use_unicode=False) == (\n+\"\"\"\\\n+        n\\n\\\n+<-a + x> \\\n+\"\"\")\n+    assert xpretty(SingularityFunction(x, y, n), use_unicode=False) == (\n+\"\"\"\\\n+       n\\n\\\n+<x - y> \\\n \"\"\")\n \n \n",
  "problem_statement": "ASCII printing for Singularity Function.\nImplementation of ASCII printing for Singularity Functions is needed.\n\n",
  "hints_text": "@sampadsaha5 I would like to work on this. Can you please tell me how to start ?\n\n@kritkaran94 You can look into pretty printing module and figure out how to print Singularity Functions in the case of `use_unicode=False`.\n\n@sampadsaha5 Could u give an example. I am not able to understand. Thank You.\n\n@kritkaran94 , is the issue fixed?\n\n@parsoyaarihant Working on it buddy :)\n\n@kritkaran94 , any update?\n\n@parsoyaarihant You can work on this issue Bro. Little busy with other stuff. Sorry, for making you wait.\n\nThanks :)\n",
  "created_at": "2016-11-01T17:50:38Z",
  "version": "1.0",
  "FAIL_TO_PASS": "[\"test_SingularityFunction\"]",
  "PASS_TO_PASS": "[\"test_pretty_ascii_str\", \"test_pretty_unicode_str\", \"test_upretty_greek\", \"test_upretty_multiindex\", \"test_upretty_sub_super\", \"test_upretty_subs_missing_in_24\", \"test_upretty_modifiers\", \"test_pretty_Cycle\", \"test_pretty_basic\", \"test_negative_fractions\", \"test_issue_5524\", \"test_EulerGamma\", \"test_GoldenRatio\", \"test_pretty_relational\", \"test_Assignment\", \"test_AugmentedAssignment\", \"test_issue_7117\", \"test_pretty_rational\", \"test_pretty_functions\", \"test_pretty_sqrt\", \"test_pretty_sqrt_char_knob\", \"test_pretty_sqrt_longsymbol_no_sqrt_char\", \"test_pretty_KroneckerDelta\", \"test_pretty_product\", \"test_pretty_lambda\", \"test_pretty_integrals\", \"test_pretty_matrix\", \"test_Adjoint\", \"test_pretty_Trace_issue_9044\", \"test_MatrixExpressions\", \"test_pretty_dotproduct\", \"test_pretty_piecewise\", \"test_pretty_seq\", \"test_any_object_in_sequence\", \"test_pretty_sets\", \"test_pretty_ConditionSet\", \"test_pretty_ComplexRegion\", \"test_pretty_Union_issue_10414\", \"test_pretty_Intersection_issue_10414\", \"test_ProductSet_paranthesis\", \"test_ProductSet_prod_char_issue_10413\", \"test_pretty_sequences\", \"test_pretty_limits\", \"test_pretty_ComplexRootOf\", \"test_pretty_RootSum\", \"test_GroebnerBasis\", \"test_pretty_Boolean\", \"test_pretty_Domain\", \"test_pretty_prec\", \"test_pprint\", \"test_pretty_class\", \"test_pretty_no_wrap_line\", \"test_settings\", \"test_pretty_sum\", \"test_units\", \"test_gammas\", \"test_deltas\", \"test_hyper\", \"test_meijerg\", \"test_noncommutative\", \"test_pretty_special_functions\", \"test_RandomDomain\", \"test_PrettyPoly\", \"test_issue_6739\", \"test_complicated_symbol_unchanged\", \"test_categories\", \"test_QuotientRing\", \"test_Homomorphism\", \"test_Tr\", \"test_pretty_Add\", \"test_issue_7179\", \"test_issue_7180\", \"test_pretty_Complement\", \"test_pretty_SymmetricDifference\", \"test_pretty_Contains\", \"test_issue_6324\", \"test_issue_7927\", \"test_issue_6134\", \"test_issue_9877\", \"test_pretty_primenu\", \"test_pretty_primeomega\"]",
  "environment_setup_commit": "50b81f9f6be151014501ffac44e5dc6b2416938f",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.073084",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}