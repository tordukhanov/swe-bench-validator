{
  "repo": "django/django",
  "instance_id": "django__django-11727",
  "base_commit": "44077985f58be02214a11ffde35776fed3c960e1",
  "patch": "diff --git a/django/contrib/admin/templatetags/admin_modify.py b/django/contrib/admin/templatetags/admin_modify.py\n--- a/django/contrib/admin/templatetags/admin_modify.py\n+++ b/django/contrib/admin/templatetags/admin_modify.py\n@@ -54,12 +54,20 @@ def submit_row(context):\n     is_popup = context['is_popup']\n     save_as = context['save_as']\n     show_save = context.get('show_save', True)\n+    show_save_and_add_another = context.get('show_save_and_add_another', True)\n     show_save_and_continue = context.get('show_save_and_continue', True)\n     has_add_permission = context['has_add_permission']\n     has_change_permission = context['has_change_permission']\n     has_view_permission = context['has_view_permission']\n     has_editable_inline_admin_formsets = context['has_editable_inline_admin_formsets']\n     can_save = (has_change_permission and change) or (has_add_permission and add) or has_editable_inline_admin_formsets\n+    can_save_and_add_another = (\n+        has_add_permission and\n+        not is_popup and\n+        (not save_as or add) and\n+        can_save and\n+        show_save_and_add_another\n+    )\n     can_save_and_continue = not is_popup and can_save and has_view_permission and show_save_and_continue\n     can_change = has_change_permission or has_editable_inline_admin_formsets\n     ctx = Context(context)\n@@ -70,10 +78,7 @@ def submit_row(context):\n             change and context.get('show_delete', True)\n         ),\n         'show_save_as_new': not is_popup and has_change_permission and change and save_as,\n-        'show_save_and_add_another': (\n-            has_add_permission and not is_popup and\n-            (not save_as or add) and can_save\n-        ),\n+        'show_save_and_add_another': can_save_and_add_another,\n         'show_save_and_continue': can_save_and_continue,\n         'show_save': show_save and can_save,\n         'show_close': not(show_save and can_save)\n",
  "test_patch": "diff --git a/tests/admin_views/test_templatetags.py b/tests/admin_views/test_templatetags.py\n--- a/tests/admin_views/test_templatetags.py\n+++ b/tests/admin_views/test_templatetags.py\n@@ -29,6 +29,25 @@ def test_submit_row(self):\n         self.assertIs(template_context['extra'], True)\n         self.assertIs(template_context['show_save'], True)\n \n+    def test_override_show_save_and_add_another(self):\n+        request = self.request_factory.get(\n+            reverse('admin:auth_user_change', args=[self.superuser.pk]),\n+        )\n+        request.user = self.superuser\n+        admin = UserAdmin(User, site)\n+        for extra_context, expected_flag in (\n+            ({}, True),  # Default.\n+            ({'show_save_and_add_another': False}, False),\n+        ):\n+            with self.subTest(show_save_and_add_another=expected_flag):\n+                response = admin.change_view(\n+                    request,\n+                    str(self.superuser.pk),\n+                    extra_context=extra_context,\n+                )\n+                template_context = submit_row(response.context_data)\n+                self.assertIs(template_context['show_save_and_add_another'], expected_flag)\n+\n     def test_override_change_form_template_tags(self):\n         \"\"\"\n         admin_modify template tags follow the standard search pattern\n",
  "problem_statement": "Allow hiding the \"Save and Add Another\" button with a `show_save_and_add_another` context variable\nDescription\n\t\nTo provide better adjustability, to introduce new context var - show_save_and_add_another.\nE.g. if I want to hide button \"Save and add another\", I can just modify extra_context - write False to the variable.\nFor other buttons - \"Save\" and \"Save and continue editing\", this already works exactly in this manner.\n",
  "hints_text": "​PR\nThe options for Save and Save and continue were originally added to ensure correct behaviour when hitting Save New and getting a validation error. See ​0894643e4. They weren't really for direct usage... ... however, maybe it's reasonable. Tentatively Accept to see how the patch turns out, and what others think. This isn't really documented (like much around extending the admin). Not sure where it would go if we were to add something.\nA ​Stackoverflow question suggests several alternatives including overriding the template tag or adding some CSS. I guess I'm okay with the patch (even if undocumented) but it needs a test.\nReplying to Tim Graham: A ​Stackoverflow question suggests several alternatives including overriding the template tag or adding some CSS. I guess I'm okay with the patch (even if undocumented) but it needs a test. The test is the only thing missing? I would like to work on it\nHey Tim, Is this still available to work, if yes - I would like to add unit tests to it ?",
  "created_at": "2019-08-29T14:32:01Z",
  "version": "3.1",
  "FAIL_TO_PASS": "[\"test_override_show_save_and_add_another (admin_views.test_templatetags.AdminTemplateTagsTest)\", \"test_submit_row (admin_views.test_templatetags.AdminTemplateTagsTest)\"]",
  "PASS_TO_PASS": "[\"test_choice_links (admin_views.test_templatetags.DateHierarchyTests)\", \"test_override_change_form_template_tags (admin_views.test_templatetags.AdminTemplateTagsTest)\", \"test_override_change_list_template_tags (admin_views.test_templatetags.AdminTemplateTagsTest)\"]",
  "environment_setup_commit": "0668164b4ac93a5be79f5b87fae83c657124d9ab",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.581819",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}