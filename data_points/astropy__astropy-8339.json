{
  "repo": "astropy/astropy",
  "instance_id": "astropy__astropy-8339",
  "base_commit": "69e2fabd847db3e0964ce0825c89741fb922fccb",
  "patch": "diff --git a/astropy/stats/bayesian_blocks.py b/astropy/stats/bayesian_blocks.py\n--- a/astropy/stats/bayesian_blocks.py\n+++ b/astropy/stats/bayesian_blocks.py\n@@ -289,15 +289,14 @@ def compute_ncp_prior(self, N):\n         If ``ncp_prior`` is not explicitly defined, compute it from ``gamma``\n         or ``p0``.\n         \"\"\"\n-        if self.ncp_prior is not None:\n-            return self.ncp_prior\n-        elif self.gamma is not None:\n+\n+        if self.gamma is not None:\n             return -np.log(self.gamma)\n         elif self.p0 is not None:\n             return self.p0_prior(N)\n         else:\n-            raise ValueError(\"``ncp_prior`` is not defined, and cannot compute \"\n-                             \"it as neither ``gamma`` nor ``p0`` is defined.\")\n+            raise ValueError(\"``ncp_prior`` cannot be computed as neither \"\n+                             \"``gamma`` nor ``p0`` is defined.\")\n \n     def fit(self, t, x=None, sigma=None):\n         \"\"\"Fit the Bayesian Blocks model given the specified fitness function.\n@@ -340,6 +339,9 @@ def fit(self, t, x=None, sigma=None):\n         # Compute ncp_prior if not defined\n         if self.ncp_prior is None:\n             ncp_prior = self.compute_ncp_prior(N)\n+        else:\n+            ncp_prior = self.ncp_prior\n+\n         # ----------------------------------------------------------------\n         # Start with first data cell; add one cell at each iteration\n         # ----------------------------------------------------------------\n",
  "test_patch": "diff --git a/astropy/stats/tests/test_bayesian_blocks.py b/astropy/stats/tests/test_bayesian_blocks.py\n--- a/astropy/stats/tests/test_bayesian_blocks.py\n+++ b/astropy/stats/tests/test_bayesian_blocks.py\n@@ -143,4 +143,22 @@ def test_fitness_function_results():\n     sigma = 0.1\n     x_obs = x + sigma * rng.randn(len(x))\n     edges = bayesian_blocks(t, x_obs, sigma, fitness='measures')\n-    assert_allclose(edges, [4.360377, 48.456895, 52.597917, 99.455051])\n+    expected = [4.360377, 48.456895, 52.597917, 99.455051]\n+    assert_allclose(edges, expected)\n+\n+    # Optional arguments are passed (p0)\n+    p0_sel = 0.05\n+    edges = bayesian_blocks(t, x_obs, sigma, fitness='measures', p0=p0_sel)\n+    assert_allclose(edges, expected)\n+\n+    # Optional arguments are passed (ncp_prior)\n+    ncp_prior_sel = 4 - np.log(73.53 * p0_sel * (len(t) ** -0.478))\n+    edges = bayesian_blocks(t, x_obs, sigma, fitness='measures',\n+                            ncp_prior=ncp_prior_sel)\n+    assert_allclose(edges, expected)\n+\n+    # Optional arguments are passed (gamma)\n+    gamma_sel = np.exp(-ncp_prior_sel)\n+    edges = bayesian_blocks(t, x_obs, sigma, fitness='measures',\n+                            gamma=gamma_sel)\n+    assert_allclose(edges, expected)\n",
  "problem_statement": "ncp_prior referenced before assignment in Bayesian Blocks\nThere is a bug in the bayesian blocks algorithm of astropy.stats. It's not a big deal so I show you below how to solve it directly.\r\n\r\nWhen I call:\r\n```python\r\nbayesian_blocks(tt, ff, sig, fitness='measures', ncp_prior=ncpp)\r\n```\r\n\r\nI get:\r\n```\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-29-9adfe04a2714>\", line 1, in <module>\r\n    bayesian_blocks(tt, ff, sig, fitness='measures',ncp_prior=ncpp)\r\n\r\n  File \"bayesian_blocks.py\", line 154, in bayesian_blocks\r\n    return fitfunc.fit(t, x, sigma)\r\n\r\n  File \"bayesian_blocks.py\", line 373, in fit\r\n    A_R = fit_vec - ncp_prior\r\n\r\nUnboundLocalError: local variable 'ncp_prior' referenced before assignment\r\n```\r\nYou can fix this just by changing:\r\n```python\r\n        if self.ncp_prior is None:\r\n            ncp_prior = self.compute_ncp_prior(N)\r\n```\r\nadding an else sentence\r\n```python\r\n        else:\r\n            ncp_prior = self.ncp_prior\r\n```\r\nEDIT: Text formatting\nncp_prior referenced before assignment in Bayesian Blocks\nThere is a bug in the bayesian blocks algorithm of astropy.stats. It's not a big deal so I show you below how to solve it directly.\r\n\r\nWhen I call:\r\n```python\r\nbayesian_blocks(tt, ff, sig, fitness='measures', ncp_prior=ncpp)\r\n```\r\n\r\nI get:\r\n```\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-29-9adfe04a2714>\", line 1, in <module>\r\n    bayesian_blocks(tt, ff, sig, fitness='measures',ncp_prior=ncpp)\r\n\r\n  File \"bayesian_blocks.py\", line 154, in bayesian_blocks\r\n    return fitfunc.fit(t, x, sigma)\r\n\r\n  File \"bayesian_blocks.py\", line 373, in fit\r\n    A_R = fit_vec - ncp_prior\r\n\r\nUnboundLocalError: local variable 'ncp_prior' referenced before assignment\r\n```\r\nYou can fix this just by changing:\r\n```python\r\n        if self.ncp_prior is None:\r\n            ncp_prior = self.compute_ncp_prior(N)\r\n```\r\nadding an else sentence\r\n```python\r\n        else:\r\n            ncp_prior = self.ncp_prior\r\n```\r\nEDIT: Text formatting\n",
  "hints_text": "Thanks, @javier-iaa . If you already have the fix, for proper credit, I would recommend that you submit your proposed patch as a proper pull request. Please refer to http://docs.astropy.org/en/latest/development/workflow/development_workflow.html\nI'll do that. I'm pretty new to github so this will be nice practice. Thanks! \nThanks, @javier-iaa . If you already have the fix, for proper credit, I would recommend that you submit your proposed patch as a proper pull request. Please refer to http://docs.astropy.org/en/latest/development/workflow/development_workflow.html\nI'll do that. I'm pretty new to github so this will be nice practice. Thanks! ",
  "created_at": "2019-01-10T02:47:47Z",
  "version": "3.0",
  "FAIL_TO_PASS": "[\"astropy/stats/tests/test_bayesian_blocks.py::test_fitness_function_results\"]",
  "PASS_TO_PASS": "[\"astropy/stats/tests/test_bayesian_blocks.py::test_single_change_point\", \"astropy/stats/tests/test_bayesian_blocks.py::test_duplicate_events\", \"astropy/stats/tests/test_bayesian_blocks.py::test_measures_fitness_homoscedastic\", \"astropy/stats/tests/test_bayesian_blocks.py::test_measures_fitness_heteroscedastic\", \"astropy/stats/tests/test_bayesian_blocks.py::test_regular_events\", \"astropy/stats/tests/test_bayesian_blocks.py::test_errors\"]",
  "environment_setup_commit": "de88208326dc4cd68be1c3030f4f6d2eddf04520",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.547859",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}