{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-24189",
  "base_commit": "deb7b1145b71c9f60b87d4eaf32e848b1ea5ebe6",
  "patch": "diff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -1838,13 +1838,15 @@ def subplot_mosaic(self, mosaic, *, sharex=False, sharey=False,\n             Defines the relative widths of the columns. Each column gets a\n             relative width of ``width_ratios[i] / sum(width_ratios)``.\n             If not given, all columns will have the same width.  Equivalent\n-            to ``gridspec_kw={'width_ratios': [...]}``.\n+            to ``gridspec_kw={'width_ratios': [...]}``. In the case of nested\n+            layouts, this argument applies only to the outer layout.\n \n         height_ratios : array-like of length *nrows*, optional\n             Defines the relative heights of the rows. Each row gets a\n             relative height of ``height_ratios[i] / sum(height_ratios)``.\n             If not given, all rows will have the same height. Equivalent\n-            to ``gridspec_kw={'height_ratios': [...]}``.\n+            to ``gridspec_kw={'height_ratios': [...]}``. In the case of nested\n+            layouts, this argument applies only to the outer layout.\n \n         subplot_kw : dict, optional\n             Dictionary with keywords passed to the `.Figure.add_subplot` call\n@@ -1852,7 +1854,10 @@ def subplot_mosaic(self, mosaic, *, sharex=False, sharey=False,\n \n         gridspec_kw : dict, optional\n             Dictionary with keywords passed to the `.GridSpec` constructor used\n-            to create the grid the subplots are placed on.\n+            to create the grid the subplots are placed on. In the case of\n+            nested layouts, this argument applies only to the outer layout.\n+            For more complex layouts, users should use `.Figure.subfigures`\n+            to create the nesting.\n \n         empty_sentinel : object, optional\n             Entry in the layout to mean \"leave this space empty\".  Defaults\n@@ -2022,7 +2027,7 @@ def _do_layout(gs, mosaic, unique_ids, nested):\n                     # recursively add the nested mosaic\n                     rows, cols = nested_mosaic.shape\n                     nested_output = _do_layout(\n-                        gs[j, k].subgridspec(rows, cols, **gridspec_kw),\n+                        gs[j, k].subgridspec(rows, cols),\n                         nested_mosaic,\n                         *_identify_keys_and_nested(nested_mosaic)\n                     )\n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_figure.py b/lib/matplotlib/tests/test_figure.py\n--- a/lib/matplotlib/tests/test_figure.py\n+++ b/lib/matplotlib/tests/test_figure.py\n@@ -922,6 +922,26 @@ def test_nested_tuple(self, fig_test, fig_ref):\n         fig_ref.subplot_mosaic([[\"F\"], [x]])\n         fig_test.subplot_mosaic([[\"F\"], [xt]])\n \n+    def test_nested_width_ratios(self):\n+        x = [[\"A\", [[\"B\"],\n+                    [\"C\"]]]]\n+        width_ratios = [2, 1]\n+\n+        fig, axd = plt.subplot_mosaic(x, width_ratios=width_ratios)\n+\n+        assert axd[\"A\"].get_gridspec().get_width_ratios() == width_ratios\n+        assert axd[\"B\"].get_gridspec().get_width_ratios() != width_ratios\n+\n+    def test_nested_height_ratios(self):\n+        x = [[\"A\", [[\"B\"],\n+                    [\"C\"]]], [\"D\", \"D\"]]\n+        height_ratios = [1, 2]\n+\n+        fig, axd = plt.subplot_mosaic(x, height_ratios=height_ratios)\n+\n+        assert axd[\"D\"].get_gridspec().get_height_ratios() == height_ratios\n+        assert axd[\"B\"].get_gridspec().get_height_ratios() != height_ratios\n+\n     @check_figures_equal(extensions=[\"png\"])\n     @pytest.mark.parametrize(\n         \"x, empty_sentinel\",\n",
  "problem_statement": "[Bug]: Error using width_ratios with nested mosaic in subplot_mosaic()\n### Bug summary\r\n\r\nplt.subplot_mosaic() fails with a confusing error message when passing width_ratios (or height_ratios) with a nested list mosaic, unless all outer and inner mosaics have the same number of columns (or rows).\r\n\r\n### Code for reproduction\r\n\r\n```python\r\nimport matplotlib.pyplot as plt\r\n\r\nmosaic = [[\"A\", [[\"B\"],\r\n                 [\"C\"]]]]\r\n\r\nfig, axd = plt.subplot_mosaic(mosaic, width_ratios=[2, 1])\r\n```\r\n\r\n\r\n### Actual outcome\r\n```\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\bneary3\\test_layouts.py\", line 6, in <module>\r\n    fig, axd = plt.subplot_mosaic(mosaic, width_ratios=[2, 1])\r\n  File \"C:\\Users\\bneary3\\Anaconda3\\envs\\mpl36\\lib\\site-packages\\matplotlib\\pyplot.py\", line 1533, in subplot_mosaic\r\n    ax_dict = fig.subplot_mosaic(\r\n  File \"C:\\Users\\bneary3\\Anaconda3\\envs\\mpl36\\lib\\site-packages\\matplotlib\\figure.py\", line 2042, in subplot_mosaic\r\n    ret = _do_layout(gs, mosaic, *_identify_keys_and_nested(mosaic))\r\n  File \"C:\\Users\\bneary3\\Anaconda3\\envs\\mpl36\\lib\\site-packages\\matplotlib\\figure.py\", line 2023, in _do_layout\r\n    gs[j, k].subgridspec(rows, cols, **gridspec_kw),\r\n  File \"C:\\Users\\bneary3\\Anaconda3\\envs\\mpl36\\lib\\site-packages\\matplotlib\\gridspec.py\", line 749, in subgridspec\r\n    return GridSpecFromSubplotSpec(nrows, ncols, self, **kwargs)\r\n  File \"C:\\Users\\bneary3\\Anaconda3\\envs\\mpl36\\lib\\site-packages\\matplotlib\\gridspec.py\", line 516, in __init__\r\n    super().__init__(nrows, ncols,\r\n  File \"C:\\Users\\bneary3\\Anaconda3\\envs\\mpl36\\lib\\site-packages\\matplotlib\\gridspec.py\", line 56, in __init__\r\n    self.set_width_ratios(width_ratios)\r\n  File \"C:\\Users\\bneary3\\Anaconda3\\envs\\mpl36\\lib\\site-packages\\matplotlib\\gridspec.py\", line 111, in set_width_ratios\r\n    raise ValueError('Expected the given number of width ratios to '\r\nValueError: Expected the given number of width ratios to match the number of columns of the grid\r\n```\r\n### Expected outcome\r\n\r\n![image](https://user-images.githubusercontent.com/49699691/194143571-cdfec1c5-fcc0-46cc-a4e3-95838225874f.png)\r\n\r\n### Additional information\r\n\r\nFrom what I can tell, this happens because the layout is built recursively, passing the same gridspec_kw to subgridspec() at each level of nesting. I realize that the use of width_ratios / height_ratios / gridspec_kw with nested list mosaics could get complicated, but it would be nice to be able to at least specify them for the outer list, or in some other way implement this feature for nested list layouts. If not, maybe include a helpful error message that explains this limitation so the user doesn't think they have specified the wrong number of ratios.\r\n\r\n### Operating system\r\n\r\nWindows 10\r\n\r\n### Matplotlib Version\r\n\r\n3.6.0\r\n\r\n### Matplotlib Backend\r\n\r\nQtAgg\r\n\r\n### Python version\r\n\r\n3.10\r\n\r\n### Jupyter version\r\n\r\n_No response_\r\n\r\n### Installation\r\n\r\nconda\n",
  "hints_text": "I advocate that passing these kwargs to nested definitions is simply a bug. We should only apply them to the outermost grid. - Typically it does not make sense to use the same parameters for inner definitions even if they are compatible.\r\n\r\nDefining parameters for inner layouts might be added later by supporting nested datastructures for *gridspec_kw*. *width_ratios* / *height_ratios* are only a convenience layer and don't need to handle complex cases such as passing parameters to inner layouts.\nMarking as good first issue.\r\n\r\nThings to do:\r\n- do not pass `width_ratios`, `height_ratios` to nested layouts\r\n- document this in the parameter descriptions\r\n- add a test: `subplot_mosaic([['A', [['B', 'C']]]], width_ratios=[2, 1])` should be good. You can check that the width ratios of the outer layout is [2, 1] but of the inner is not.",
  "created_at": "2022-10-16T15:17:40Z",
  "version": "3.6",
  "FAIL_TO_PASS": "[\"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_nested_width_ratios\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_nested_height_ratios\"]",
  "PASS_TO_PASS": "[\"lib/matplotlib/tests/test_figure.py::test_align_labels[png]\", \"lib/matplotlib/tests/test_figure.py::test_align_labels_stray_axes\", \"lib/matplotlib/tests/test_figure.py::test_figure_label\", \"lib/matplotlib/tests/test_figure.py::test_fignum_exists\", \"lib/matplotlib/tests/test_figure.py::test_clf_keyword\", \"lib/matplotlib/tests/test_figure.py::test_figure[png]\", \"lib/matplotlib/tests/test_figure.py::test_figure[pdf]\", \"lib/matplotlib/tests/test_figure.py::test_figure_legend[png]\", \"lib/matplotlib/tests/test_figure.py::test_figure_legend[pdf]\", \"lib/matplotlib/tests/test_figure.py::test_gca\", \"lib/matplotlib/tests/test_figure.py::test_add_subplot_subclass\", \"lib/matplotlib/tests/test_figure.py::test_add_subplot_invalid\", \"lib/matplotlib/tests/test_figure.py::test_suptitle[png]\", \"lib/matplotlib/tests/test_figure.py::test_suptitle[pdf]\", \"lib/matplotlib/tests/test_figure.py::test_suptitle_fontproperties\", \"lib/matplotlib/tests/test_figure.py::test_alpha[png]\", \"lib/matplotlib/tests/test_figure.py::test_too_many_figures\", \"lib/matplotlib/tests/test_figure.py::test_iterability_axes_argument\", \"lib/matplotlib/tests/test_figure.py::test_set_fig_size\", \"lib/matplotlib/tests/test_figure.py::test_axes_remove\", \"lib/matplotlib/tests/test_figure.py::test_figaspect\", \"lib/matplotlib/tests/test_figure.py::test_autofmt_xdate[both]\", \"lib/matplotlib/tests/test_figure.py::test_autofmt_xdate[major]\", \"lib/matplotlib/tests/test_figure.py::test_autofmt_xdate[minor]\", \"lib/matplotlib/tests/test_figure.py::test_change_dpi\", \"lib/matplotlib/tests/test_figure.py::test_invalid_figure_size[1-nan]\", \"lib/matplotlib/tests/test_figure.py::test_invalid_figure_size[-1-1]\", \"lib/matplotlib/tests/test_figure.py::test_invalid_figure_size[inf-1]\", \"lib/matplotlib/tests/test_figure.py::test_invalid_figure_add_axes\", \"lib/matplotlib/tests/test_figure.py::test_subplots_shareax_loglabels\", \"lib/matplotlib/tests/test_figure.py::test_savefig\", \"lib/matplotlib/tests/test_figure.py::test_savefig_warns\", \"lib/matplotlib/tests/test_figure.py::test_savefig_backend\", \"lib/matplotlib/tests/test_figure.py::test_savefig_pixel_ratio[Agg]\", \"lib/matplotlib/tests/test_figure.py::test_savefig_pixel_ratio[Cairo]\", \"lib/matplotlib/tests/test_figure.py::test_figure_repr\", \"lib/matplotlib/tests/test_figure.py::test_valid_layouts\", \"lib/matplotlib/tests/test_figure.py::test_invalid_layouts\", \"lib/matplotlib/tests/test_figure.py::test_add_artist[png]\", \"lib/matplotlib/tests/test_figure.py::test_add_artist[pdf]\", \"lib/matplotlib/tests/test_figure.py::test_fspath[png]\", \"lib/matplotlib/tests/test_figure.py::test_fspath[pdf]\", \"lib/matplotlib/tests/test_figure.py::test_fspath[ps]\", \"lib/matplotlib/tests/test_figure.py::test_fspath[eps]\", \"lib/matplotlib/tests/test_figure.py::test_fspath[svg]\", \"lib/matplotlib/tests/test_figure.py::test_tightbbox\", \"lib/matplotlib/tests/test_figure.py::test_axes_removal\", \"lib/matplotlib/tests/test_figure.py::test_removed_axis\", \"lib/matplotlib/tests/test_figure.py::test_figure_clear[clear]\", \"lib/matplotlib/tests/test_figure.py::test_figure_clear[clf]\", \"lib/matplotlib/tests/test_figure.py::test_clf_not_redefined\", \"lib/matplotlib/tests/test_figure.py::test_picking_does_not_stale\", \"lib/matplotlib/tests/test_figure.py::test_add_subplot_twotuple\", \"lib/matplotlib/tests/test_figure.py::test_animated_with_canvas_change[pdf]\", \"lib/matplotlib/tests/test_figure.py::test_animated_with_canvas_change[eps]\", \"lib/matplotlib/tests/test_figure.py::test_animated_with_canvas_change[png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_basic[x0-png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_basic[x1-png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_all_nested[png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_nested[png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_nested_tuple[png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_empty[x0-None-png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_empty[x1-SKIP-png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_empty[x2-0-png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_empty[x3-None-png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_empty[x4-SKIP-png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_empty[x5-0-png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_fail_list_of_str\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_subplot_kw[subplot_kw0-png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_subplot_kw[subplot_kw1-png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_subplot_kw[None-png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_string_parser\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_single_str_input[AAA\\\\nBBB-png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_single_str_input[\\\\nAAA\\\\nBBB\\\\n-png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_single_str_input[ABC\\\\nDEF-png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_fail[x0-(?m)we\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_fail[x1-There\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_fail[AAA\\\\nc\\\\nBBB-All\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_fail[x3-All\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_hashable_keys[png]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_user_order[abc]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_user_order[cab]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_user_order[bca]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_user_order[cba]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_user_order[acb]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_user_order[bac]\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_nested_user_order\", \"lib/matplotlib/tests/test_figure.py::TestSubplotMosaic::test_share_all\", \"lib/matplotlib/tests/test_figure.py::test_reused_gridspec\", \"lib/matplotlib/tests/test_figure.py::test_subfigure[png]\", \"lib/matplotlib/tests/test_figure.py::test_subfigure_tightbbox\", \"lib/matplotlib/tests/test_figure.py::test_subfigure_dpi\", \"lib/matplotlib/tests/test_figure.py::test_subfigure_ss[png]\", \"lib/matplotlib/tests/test_figure.py::test_subfigure_double[png]\", \"lib/matplotlib/tests/test_figure.py::test_subfigure_spanning\", \"lib/matplotlib/tests/test_figure.py::test_subfigure_ticks\", \"lib/matplotlib/tests/test_figure.py::test_subfigure_scatter_size[png]\", \"lib/matplotlib/tests/test_figure.py::test_subfigure_pdf\", \"lib/matplotlib/tests/test_figure.py::test_add_subplot_kwargs\", \"lib/matplotlib/tests/test_figure.py::test_add_axes_kwargs\", \"lib/matplotlib/tests/test_figure.py::test_ginput\", \"lib/matplotlib/tests/test_figure.py::test_waitforbuttonpress\", \"lib/matplotlib/tests/test_figure.py::test_kwargs_pass\", \"lib/matplotlib/tests/test_figure.py::test_rcparams[png]\", \"lib/matplotlib/tests/test_figure.py::test_deepcopy\", \"lib/matplotlib/tests/test_figure.py::test_unpickle_with_device_pixel_ratio\"]",
  "environment_setup_commit": "73909bcb408886a22e2b84581d6b9e6d9907c813",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.808866",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}