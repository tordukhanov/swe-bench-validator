{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-22883",
  "base_commit": "e0773948af38c8c5123fda0d90cf40140d8b020c",
  "patch": "diff --git a/lib/matplotlib/tri/tripcolor.py b/lib/matplotlib/tri/tripcolor.py\n--- a/lib/matplotlib/tri/tripcolor.py\n+++ b/lib/matplotlib/tri/tripcolor.py\n@@ -79,12 +79,14 @@ def tripcolor(ax, *args, alpha=1.0, norm=None, cmap=None, vmin=None,\n     else:\n         # Color from positional parameter C\n         if not args:\n-            raise ValueError(\n-                \"Missing color parameter. Please pass C positionally or \"\n-                \"facecolors via keyword\")\n+            raise TypeError(\n+                \"tripcolor() missing 1 required positional argument: 'C'; or \"\n+                \"1 required keyword-only argument: 'facecolors'\")\n         elif len(args) > 1:\n-            _api.warn_external(\n-                \"Additional positional parameters {args[1:]!r} are ignored\")\n+            _api.warn_deprecated(\n+                \"3.6\", message=f\"Additional positional parameters \"\n+                f\"{args[1:]!r} are ignored; support for them is deprecated \"\n+                f\"since %(since)s and will be removed %(removal)s\")\n         C = np.asarray(args[0])\n         if len(C) == len(tri.x):\n             # having this before the len(tri.triangles) comparison gives\n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_triangulation.py b/lib/matplotlib/tests/test_triangulation.py\n--- a/lib/matplotlib/tests/test_triangulation.py\n+++ b/lib/matplotlib/tests/test_triangulation.py\n@@ -242,7 +242,7 @@ def test_tripcolor_color():\n     x = [-1, 0, 1, 0]\n     y = [0, -1, 0, 1]\n     fig, ax = plt.subplots()\n-    with pytest.raises(ValueError, match=\"Missing color parameter\"):\n+    with pytest.raises(TypeError, match=r\"tripcolor\\(\\) missing 1 required \"):\n         ax.tripcolor(x, y)\n     with pytest.raises(ValueError, match=\"The length of C must match either\"):\n         ax.tripcolor(x, y, [1, 2, 3])\n@@ -255,8 +255,8 @@ def test_tripcolor_color():\n     with pytest.raises(ValueError,\n                        match=\"'gouraud' .* at the points.* not at the faces\"):\n         ax.tripcolor(x, y, [1, 2], shading='gouraud')  # faces\n-    with pytest.raises(ValueError,\n-                       match=r\"pass C positionally or facecolors via keyword\"):\n+    with pytest.raises(TypeError,\n+                       match=\"positional.*'C'.*keyword-only.*'facecolors'\"):\n         ax.tripcolor(x, y, C=[1, 2, 3, 4])\n \n     # smoke test for valid color specifications (via C or facecolors)\n@@ -282,7 +282,7 @@ def test_tripcolor_warnings():\n     C = [0.4, 0.5]\n     fig, ax = plt.subplots()\n     # additional parameters\n-    with pytest.warns(UserWarning, match=\"Additional positional parameters\"):\n+    with pytest.warns(DeprecationWarning, match=\"Additional positional param\"):\n         ax.tripcolor(x, y, C, 'unused_positional')\n     # facecolors takes precednced over C\n     with pytest.warns(UserWarning, match=\"Positional parameter C .*no effect\"):\n",
  "problem_statement": "Missing `f` prefix on f-strings\nSome strings looks like they're meant to be f-strings but are missing the `f` prefix meaning variable interpolation won't happen.\n\nhttps://github.com/matplotlib/matplotlib/blob/2666b0da44c244ce79febcee73a4dbf31700a187/lib/matplotlib/tri/tripcolor.py#L87\n\nI found this issue automatically. I'm a bot. Beep Boop ðŸ¦Š. See other issues I found in your repo [here](https://codereview.doctor/matplotlib/matplotlib)\n",
  "hints_text": "",
  "created_at": "2022-04-23T23:27:05Z",
  "version": "3.5",
  "FAIL_TO_PASS": "[\"lib/matplotlib/tests/test_triangulation.py::test_tripcolor_color\", \"lib/matplotlib/tests/test_triangulation.py::test_tripcolor_warnings\"]",
  "PASS_TO_PASS": "[\"lib/matplotlib/tests/test_triangulation.py::TestTriangulationParams::test_extract_triangulation_params[args0-kwargs0-expected0]\", \"lib/matplotlib/tests/test_triangulation.py::TestTriangulationParams::test_extract_triangulation_params[args1-kwargs1-expected1]\", \"lib/matplotlib/tests/test_triangulation.py::TestTriangulationParams::test_extract_triangulation_params[args2-kwargs2-expected2]\", \"lib/matplotlib/tests/test_triangulation.py::TestTriangulationParams::test_extract_triangulation_params[args3-kwargs3-expected3]\", \"lib/matplotlib/tests/test_triangulation.py::TestTriangulationParams::test_extract_triangulation_params[args4-kwargs4-expected4]\", \"lib/matplotlib/tests/test_triangulation.py::TestTriangulationParams::test_extract_triangulation_params[args5-kwargs5-expected5]\", \"lib/matplotlib/tests/test_triangulation.py::test_extract_triangulation_positional_mask\", \"lib/matplotlib/tests/test_triangulation.py::test_triangulation_init\", \"lib/matplotlib/tests/test_triangulation.py::test_delaunay\", \"lib/matplotlib/tests/test_triangulation.py::test_delaunay_duplicate_points\", \"lib/matplotlib/tests/test_triangulation.py::test_delaunay_points_in_line\", \"lib/matplotlib/tests/test_triangulation.py::test_delaunay_insufficient_points[x0-y0]\", \"lib/matplotlib/tests/test_triangulation.py::test_delaunay_insufficient_points[x1-y1]\", \"lib/matplotlib/tests/test_triangulation.py::test_delaunay_insufficient_points[x2-y2]\", \"lib/matplotlib/tests/test_triangulation.py::test_delaunay_insufficient_points[x3-y3]\", \"lib/matplotlib/tests/test_triangulation.py::test_delaunay_insufficient_points[x4-y4]\", \"lib/matplotlib/tests/test_triangulation.py::test_delaunay_insufficient_points[x5-y5]\", \"lib/matplotlib/tests/test_triangulation.py::test_delaunay_robust\", \"lib/matplotlib/tests/test_triangulation.py::test_tripcolor[png]\", \"lib/matplotlib/tests/test_triangulation.py::test_tripcolor_clim\", \"lib/matplotlib/tests/test_triangulation.py::test_no_modify\", \"lib/matplotlib/tests/test_triangulation.py::test_trifinder\", \"lib/matplotlib/tests/test_triangulation.py::test_triinterp\", \"lib/matplotlib/tests/test_triangulation.py::test_triinterpcubic_C1_continuity\", \"lib/matplotlib/tests/test_triangulation.py::test_triinterpcubic_cg_solver\", \"lib/matplotlib/tests/test_triangulation.py::test_triinterpcubic_geom_weights\", \"lib/matplotlib/tests/test_triangulation.py::test_triinterp_colinear\", \"lib/matplotlib/tests/test_triangulation.py::test_triinterp_transformations\", \"lib/matplotlib/tests/test_triangulation.py::test_tri_smooth_contouring[png]\", \"lib/matplotlib/tests/test_triangulation.py::test_tri_smooth_gradient[png]\", \"lib/matplotlib/tests/test_triangulation.py::test_tritools\", \"lib/matplotlib/tests/test_triangulation.py::test_trirefine\", \"lib/matplotlib/tests/test_triangulation.py::test_trirefine_masked[linear]\", \"lib/matplotlib/tests/test_triangulation.py::test_trirefine_masked[cubic]\", \"lib/matplotlib/tests/test_triangulation.py::test_triplot_return\", \"lib/matplotlib/tests/test_triangulation.py::test_trirefiner_fortran_contiguous_triangles\", \"lib/matplotlib/tests/test_triangulation.py::test_qhull_triangle_orientation\", \"lib/matplotlib/tests/test_triangulation.py::test_trianalyzer_mismatched_indices\", \"lib/matplotlib/tests/test_triangulation.py::test_tricontourf_decreasing_levels\", \"lib/matplotlib/tests/test_triangulation.py::test_internal_cpp_api\", \"lib/matplotlib/tests/test_triangulation.py::test_qhull_large_offset\", \"lib/matplotlib/tests/test_triangulation.py::test_tricontour_non_finite_z\", \"lib/matplotlib/tests/test_triangulation.py::test_tricontourset_reuse\", \"lib/matplotlib/tests/test_triangulation.py::test_triplot_with_ls[png]\", \"lib/matplotlib/tests/test_triangulation.py::test_triplot_with_ls[pdf]\"]",
  "environment_setup_commit": "de98877e3dc45de8dd441d008f23d88738dc015d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.796448",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}