{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-22706",
  "base_commit": "d5f5ed31adf36c8f98459acb87ba97d62ee135b6",
  "patch": "diff --git a/sympy/printing/str.py b/sympy/printing/str.py\n--- a/sympy/printing/str.py\n+++ b/sympy/printing/str.py\n@@ -287,13 +287,15 @@ def _print_Mul(self, expr):\n                     e = Mul._from_args(dargs)\n                 d[i] = Pow(di.base, e, evaluate=False) if e - 1 else di.base\n \n+            pre = []\n             # don't parenthesize first factor if negative\n-            if n[0].could_extract_minus_sign():\n+            if n and n[0].could_extract_minus_sign():\n                 pre = [str(n.pop(0))]\n-            else:\n-                pre = []\n+\n             nfactors = pre + [self.parenthesize(a, prec, strict=False)\n                 for a in n]\n+            if not nfactors:\n+                nfactors = ['1']\n \n             # don't parenthesize first of denominator unless singleton\n             if len(d) > 1 and d[0].could_extract_minus_sign():\n",
  "test_patch": "diff --git a/sympy/printing/tests/test_str.py b/sympy/printing/tests/test_str.py\n--- a/sympy/printing/tests/test_str.py\n+++ b/sympy/printing/tests/test_str.py\n@@ -1103,6 +1103,10 @@ def test_issue_21823():\n     assert str(Partition({1, 2})) == 'Partition({1, 2})'\n \n \n+def test_issue_22689():\n+    assert str(Mul(Pow(x,-2, evaluate=False), Pow(3,-1,evaluate=False), evaluate=False)) == \"1/(x**2*3)\"\n+\n+\n def test_issue_21119_21460():\n     ss = lambda x: str(S(x, evaluate=False))\n     assert ss('4/2') == '4/2'\n",
  "problem_statement": "IndexError in StrPrinter for UnevaluatedMul\n`print(Mul(Pow(x,-2, evaluate=False), Pow(3,-1,evaluate=False), evaluate=False))` gives \r\n`    if _coeff_isneg(n[0]):\r\nIndexError: list index out of range`\n",
  "hints_text": "",
  "created_at": "2021-12-18T21:55:53Z",
  "version": "1.10",
  "FAIL_TO_PASS": "[\"test_issue_22689\"]",
  "PASS_TO_PASS": "[\"test_printmethod\", \"test_Abs\", \"test_Add\", \"test_Catalan\", \"test_ComplexInfinity\", \"test_Derivative\", \"test_dict\", \"test_Dict\", \"test_Dummy\", \"test_EulerGamma\", \"test_Exp\", \"test_factorial\", \"test_Function\", \"test_Geometry\", \"test_GoldenRatio\", \"test_Heaviside\", \"test_TribonacciConstant\", \"test_ImaginaryUnit\", \"test_Infinity\", \"test_Integer\", \"test_Integral\", \"test_Interval\", \"test_AccumBounds\", \"test_Lambda\", \"test_Limit\", \"test_list\", \"test_Matrix_str\", \"test_Mul\", \"test_NaN\", \"test_NegativeInfinity\", \"test_Order\", \"test_Permutation_Cycle\", \"test_Pi\", \"test_Poly\", \"test_PolyRing\", \"test_FracField\", \"test_PolyElement\", \"test_FracElement\", \"test_GaussianInteger\", \"test_GaussianRational\", \"test_Pow\", \"test_sqrt\", \"test_Rational\", \"test_Float\", \"test_Relational\", \"test_AppliedBinaryRelation\", \"test_CRootOf\", \"test_RootSum\", \"test_GroebnerBasis\", \"test_set\", \"test_SparseMatrix\", \"test_Sum\", \"test_Symbol\", \"test_tuple\", \"test_Series_str\", \"test_MIMOSeries_str\", \"test_TransferFunction_str\", \"test_Parallel_str\", \"test_MIMOParallel_str\", \"test_Feedback_str\", \"test_MIMOFeedback_str\", \"test_TransferFunctionMatrix_str\", \"test_Quaternion_str_printer\", \"test_Quantity_str\", \"test_wild_str\", \"test_wild_matchpy\", \"test_zeta\", \"test_issue_3101\", \"test_issue_3103\", \"test_issue_4021\", \"test_sstrrepr\", \"test_infinity\", \"test_full_prec\", \"test_noncommutative\", \"test_empty_printer\", \"test_settings\", \"test_RandomDomain\", \"test_FiniteSet\", \"test_Partition\", \"test_UniversalSet\", \"test_PrettyPoly\", \"test_categories\", \"test_Tr\", \"test_issue_6387\", \"test_MatMul_MatAdd\", \"test_MatrixSlice\", \"test_true_false\", \"test_Equivalent\", \"test_Xor\", \"test_Complement\", \"test_SymmetricDifference\", \"test_UnevaluatedExpr\", \"test_MatrixElement_printing\", \"test_MatrixSymbol_printing\", \"test_MatrixExpressions\", \"test_Subs_printing\", \"test_issue_15716\", \"test_str_special_matrices\", \"test_issue_14567\", \"test_issue_21823\", \"test_issue_21119_21460\", \"test_Str\", \"test_diffgeom\", \"test_NDimArray\", \"test_Predicate\", \"test_AppliedPredicate\"]",
  "environment_setup_commit": "fd40404e72921b9e52a5f9582246e4a6cd96c431",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.150153",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}