{
  "repo": "astropy/astropy",
  "instance_id": "astropy__astropy-13032",
  "base_commit": "d707b792d3ca45518a53b4a395c81ee86bd7b451",
  "patch": "diff --git a/astropy/modeling/bounding_box.py b/astropy/modeling/bounding_box.py\n--- a/astropy/modeling/bounding_box.py\n+++ b/astropy/modeling/bounding_box.py\n@@ -694,6 +694,12 @@ def _validate_dict(self, bounding_box: dict):\n         for key, value in bounding_box.items():\n             self[key] = value\n \n+    @property\n+    def _available_input_index(self):\n+        model_input_index = [self._get_index(_input) for _input in self._model.inputs]\n+\n+        return [_input for _input in model_input_index if _input not in self._ignored]\n+\n     def _validate_sequence(self, bounding_box, order: str = None):\n         \"\"\"Validate passing tuple of tuples representation (or related) and setting them.\"\"\"\n         order = self._get_order(order)\n@@ -703,7 +709,7 @@ def _validate_sequence(self, bounding_box, order: str = None):\n             bounding_box = bounding_box[::-1]\n \n         for index, value in enumerate(bounding_box):\n-            self[index] = value\n+            self[self._available_input_index[index]] = value\n \n     @property\n     def _n_inputs(self) -> int:\n@@ -727,7 +733,7 @@ def _validate_iterable(self, bounding_box, order: str = None):\n     def _validate(self, bounding_box, order: str = None):\n         \"\"\"Validate and set any representation\"\"\"\n         if self._n_inputs == 1 and not isinstance(bounding_box, dict):\n-            self[0] = bounding_box\n+            self[self._available_input_index[0]] = bounding_box\n         else:\n             self._validate_iterable(bounding_box, order)\n \n@@ -751,7 +757,7 @@ def validate(cls, model, bounding_box,\n             order = bounding_box.order\n             if _preserve_ignore:\n                 ignored = bounding_box.ignored\n-            bounding_box = bounding_box.intervals\n+            bounding_box = bounding_box.named_intervals\n \n         new = cls({}, model, ignored=ignored, order=order)\n         new._validate(bounding_box)\n",
  "test_patch": "diff --git a/astropy/modeling/tests/test_bounding_box.py b/astropy/modeling/tests/test_bounding_box.py\n--- a/astropy/modeling/tests/test_bounding_box.py\n+++ b/astropy/modeling/tests/test_bounding_box.py\n@@ -12,7 +12,7 @@\n                                            _ignored_interval, _Interval, _SelectorArgument,\n                                            _SelectorArguments)\n from astropy.modeling.core import Model, fix_inputs\n-from astropy.modeling.models import Gaussian1D, Gaussian2D, Identity, Scale, Shift\n+from astropy.modeling.models import Gaussian1D, Gaussian2D, Identity, Polynomial2D, Scale, Shift\n \n \n class Test_Interval:\n@@ -1633,6 +1633,15 @@ def test_prepare_inputs(self):\n         assert (valid_index[0] == []).all()\n         assert all_out and isinstance(all_out, bool)\n \n+    def test_bounding_box_ignore(self):\n+        \"\"\"Regression test for #13028\"\"\"\n+\n+        bbox_x = ModelBoundingBox((9, 10), Polynomial2D(1), ignored=[\"x\"])\n+        assert bbox_x.ignored_inputs == ['x']\n+\n+        bbox_y = ModelBoundingBox((11, 12), Polynomial2D(1), ignored=[\"y\"])\n+        assert bbox_y.ignored_inputs == ['y']\n+\n \n class Test_SelectorArgument:\n     def test_create(self):\n@@ -2098,15 +2107,17 @@ def test___repr__(self):\n             \"    bounding_boxes={\\n\" + \\\n             \"        (1,) = ModelBoundingBox(\\n\" + \\\n             \"                intervals={\\n\" + \\\n-            \"                    x: Interval(lower=-1, upper=1)\\n\" + \\\n+            \"                    y: Interval(lower=-1, upper=1)\\n\" + \\\n             \"                }\\n\" + \\\n+            \"                ignored=['x']\\n\" + \\\n             \"                model=Gaussian2D(inputs=('x', 'y'))\\n\" + \\\n             \"                order='C'\\n\" + \\\n             \"            )\\n\" + \\\n             \"        (2,) = ModelBoundingBox(\\n\" + \\\n             \"                intervals={\\n\" + \\\n-            \"                    x: Interval(lower=-2, upper=2)\\n\" + \\\n+            \"                    y: Interval(lower=-2, upper=2)\\n\" + \\\n             \"                }\\n\" + \\\n+            \"                ignored=['x']\\n\" + \\\n             \"                model=Gaussian2D(inputs=('x', 'y'))\\n\" + \\\n             \"                order='C'\\n\" + \\\n             \"            )\\n\" + \\\n@@ -2650,3 +2661,12 @@ def test_fix_inputs(self):\n         assert bbox._bounding_boxes[(1,)] == (-np.inf, np.inf)\n         assert bbox._bounding_boxes[(1,)].order == 'F'\n         assert len(bbox._bounding_boxes) == 2\n+\n+    def test_complex_compound_bounding_box(self):\n+        model = Identity(4)\n+        bounding_boxes = {(2.5, 1.3): ((-1, 1), (-3, 3)), (2.5, 2.71): ((-3, 3), (-1, 1))}\n+        selector_args = (('x0', True), ('x1', True))\n+\n+        bbox = CompoundBoundingBox.validate(model, bounding_boxes, selector_args)\n+        assert bbox[(2.5, 1.3)] == ModelBoundingBox(((-1, 1), (-3, 3)), model, ignored=['x0', 'x1'])\n+        assert bbox[(2.5, 2.71)] == ModelBoundingBox(((-3, 3), (-1, 1)), model, ignored=['x0', 'x1'])\n",
  "problem_statement": "Incorrect ignored usage in `ModelBoundingBox`\n<!-- This comments are hidden when you submit the issue,\r\nso you do not need to remove them! -->\r\n\r\n<!-- Please be sure to check out our contributing guidelines,\r\nhttps://github.com/astropy/astropy/blob/main/CONTRIBUTING.md .\r\nPlease be sure to check out our code of conduct,\r\nhttps://github.com/astropy/astropy/blob/main/CODE_OF_CONDUCT.md . -->\r\n\r\n<!-- Please have a search on our GitHub repository to see if a similar\r\nissue has already been posted.\r\nIf a similar issue is closed, have a quick look to see if you are satisfied\r\nby the resolution.\r\nIf not please go ahead and open an issue! -->\r\n\r\n<!-- Please check that the development version still produces the same bug.\r\nYou can install development version with\r\npip install git+https://github.com/astropy/astropy\r\ncommand. -->\r\n\r\n### Description\r\n<!-- Provide a general description of the bug. -->\r\n\r\nProviding `ignored` inputs to `ModelBoundingBox` does not always work as expected.\r\n\r\nRunning the following code:\r\n```python\r\nfrom astropy.modeling.bounding_box import ModelBoundingBox\r\nfrom astropy.modeling import models as astropy_models\r\n\r\nbbox = ModelBoundingBox((9, 10), astropy_models.Polynomial2D(1), ignored=[\"x\"])\r\nprint(bbox)\r\nprint(bbox.ignored_inputs)\r\n```\r\nProduces:\r\n```\r\nModelBoundingBox(\r\n    intervals={\r\n        x: Interval(lower=9, upper=10)\r\n    }\r\n    model=Polynomial2D(inputs=('x', 'y'))\r\n    order='C'\r\n)\r\n[]\r\n```\r\nThis is incorrect. It instead should produce:\r\n```\r\nModelBoundingBox(\r\n    intervals={\r\n        y: Interval(lower=9, upper=10)\r\n    }\r\n    model=Polynomial2D(inputs=('x', 'y'))\r\n    order='C'\r\n)\r\n['x']\r\n```\r\n\r\nSomehow the `ignored` status of the `x` input is being accounted for during the validation which occurs during the construction of the bounding box; however, it is getting \"lost\" somehow resulting in the weird behavior we see above.\r\n\r\nOddly enough ignoring `y` does not have an issue. E.G. this code:\r\n```python\r\nfrom astropy.modeling.bounding_box import ModelBoundingBox\r\nfrom astropy.modeling import models as astropy_models\r\n\r\nbbox = ModelBoundingBox((11, 12), astropy_models.Polynomial2D(1), ignored=[\"y\"])\r\nprint(bbox)\r\nprint(bbox.ignored_inputs)\r\n```\r\nProduces:\r\n```\r\nModelBoundingBox(\r\n    intervals={\r\n        x: Interval(lower=11, upper=12)\r\n    }\r\n    ignored=['y']\r\n    model=Polynomial2D(inputs=('x', 'y'))\r\n    order='C'\r\n)\r\n['y']\r\n```\r\nas expected.\r\n\r\n### System Details\r\nThis is present in both astropy 5.03 and astropy develop\r\n\n",
  "hints_text": "You just can't differentiate between a robot and the very best of humans.\n\n*(A special day message.)*",
  "created_at": "2022-03-31T16:32:46Z",
  "version": "4.3",
  "FAIL_TO_PASS": "[\"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test_bounding_box_ignore\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test___repr__\"]",
  "PASS_TO_PASS": "[\"astropy/modeling/tests/test_bounding_box.py::Test_Interval::test_create\", \"astropy/modeling/tests/test_bounding_box.py::Test_Interval::test_copy\", \"astropy/modeling/tests/test_bounding_box.py::Test_Interval::test__validate_shape\", \"astropy/modeling/tests/test_bounding_box.py::Test_Interval::test__validate_bounds\", \"astropy/modeling/tests/test_bounding_box.py::Test_Interval::test_validate\", \"astropy/modeling/tests/test_bounding_box.py::Test_Interval::test_outside\", \"astropy/modeling/tests/test_bounding_box.py::Test_Interval::test_domain\", \"astropy/modeling/tests/test_bounding_box.py::Test_Interval::test__ignored_interval\", \"astropy/modeling/tests/test_bounding_box.py::Test_Interval::test_validate_with_SpectralCoord\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test_create\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test_copy\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test_intervals\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test_named_intervals\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test___repr__\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test___len__\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test___contains__\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test___getitem__\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test_bounding_box\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test___eq__\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test__setitem__\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test___delitem__\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test__validate_dict\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test__validate_sequence\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test__n_inputs\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test__validate_iterable\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test__validate\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test_validate\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test_fix_inputs\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test_dimension\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test_domain\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test__outside\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test__valid_index\", \"astropy/modeling/tests/test_bounding_box.py::TestModelBoundingBox::test_prepare_inputs\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArgument::test_create\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArgument::test_validate\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArgument::test_get_selector\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArgument::test_name\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArgument::test_pretty_repr\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArgument::test_get_fixed_value\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArgument::test_is_argument\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArgument::test_named_tuple\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArguments::test_create\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArguments::test_pretty_repr\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArguments::test_ignore\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArguments::test_validate\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArguments::test_get_selector\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArguments::test_is_selector\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArguments::test_get_fixed_values\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArguments::test_is_argument\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArguments::test_selector_index\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArguments::test_add_ignore\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArguments::test_reduce\", \"astropy/modeling/tests/test_bounding_box.py::Test_SelectorArguments::test_named_tuple\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test_create\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test_copy\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test_bounding_boxes\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test_selector_args\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test_create_selector\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test__get_selector_key\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test___setitem__\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test__validate\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test___eq__\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test_validate\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test___contains__\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test__create_bounding_box\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test___getitem__\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test__select_bounding_box\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test_prepare_inputs\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test__matching_bounding_boxes\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test__fix_input_selector_arg\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test__fix_input_bbox_arg\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test_fix_inputs\", \"astropy/modeling/tests/test_bounding_box.py::TestCompoundBoundingBox::test_complex_compound_bounding_box\"]",
  "environment_setup_commit": "298ccb478e6bf092953bca67a3d29dc6c35f6752",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.524407",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}