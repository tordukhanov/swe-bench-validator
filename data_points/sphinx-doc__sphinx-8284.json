{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-8284",
  "base_commit": "f1af7dc84fed8143e8bf7a51edb1338e21e6f901",
  "patch": "diff --git a/sphinx/builders/manpage.py b/sphinx/builders/manpage.py\n--- a/sphinx/builders/manpage.py\n+++ b/sphinx/builders/manpage.py\n@@ -120,7 +120,7 @@ def setup(app: Sphinx) -> Dict[str, Any]:\n \n     app.add_config_value('man_pages', default_man_pages, None)\n     app.add_config_value('man_show_urls', False, None)\n-    app.add_config_value('man_make_section_directory', False, None)\n+    app.add_config_value('man_make_section_directory', True, None)\n \n     return {\n         'version': 'builtin',\n",
  "test_patch": "diff --git a/tests/test_build_manpage.py b/tests/test_build_manpage.py\n--- a/tests/test_build_manpage.py\n+++ b/tests/test_build_manpage.py\n@@ -17,9 +17,9 @@\n @pytest.mark.sphinx('man')\n def test_all(app, status, warning):\n     app.builder.build_all()\n-    assert (app.outdir / 'sphinxtests.1').exists()\n+    assert (app.outdir / '1' / 'sphinxtests.1').exists()\n \n-    content = (app.outdir / 'sphinxtests.1').read_text()\n+    content = (app.outdir / '1' / 'sphinxtests.1').read_text()\n     assert r'\\fBprint \\fP\\fIi\\fP\\fB\\en\\fP' in content\n     assert r'\\fBmanpage\\en\\fP' in content\n \n@@ -31,16 +31,16 @@ def test_all(app, status, warning):\n \n \n @pytest.mark.sphinx('man', testroot='basic',\n-                    confoverrides={'man_make_section_directory': True})\n+                    confoverrides={'man_make_section_directory': False})\n def test_man_make_section_directory(app, status, warning):\n     app.build()\n-    assert (app.outdir / '1' / 'python.1').exists()\n+    assert (app.outdir / 'python.1').exists()\n \n \n @pytest.mark.sphinx('man', testroot='directive-code')\n def test_captioned_code_block(app, status, warning):\n     app.builder.build_all()\n-    content = (app.outdir / 'python.1').read_text()\n+    content = (app.outdir / '1' / 'python.1').read_text()\n \n     assert ('.sp\\n'\n             'caption \\\\fItest\\\\fP rb\\n'\n@@ -71,5 +71,5 @@ def test_default_man_pages():\n @pytest.mark.sphinx('man', testroot='markup-rubric')\n def test_rubric(app, status, warning):\n     app.build()\n-    content = (app.outdir / 'python.1').read_text()\n+    content = (app.outdir / '1' / 'python.1').read_text()\n     assert 'This is a rubric\\n' in content\ndiff --git a/tests/test_smartquotes.py b/tests/test_smartquotes.py\n--- a/tests/test_smartquotes.py\n+++ b/tests/test_smartquotes.py\n@@ -31,7 +31,7 @@ def test_text_builder(app, status, warning):\n def test_man_builder(app, status, warning):\n     app.build()\n \n-    content = (app.outdir / 'python.1').read_text()\n+    content = (app.outdir / '1' / 'python.1').read_text()\n     assert '\\\\-\\\\- \"Sphinx\" is a tool that makes it easy ...' in content\n \n \n@@ -84,5 +84,5 @@ def test_smartquotes_excludes_language(app, status, warning):\n def test_smartquotes_excludes_builders(app, status, warning):\n     app.build()\n \n-    content = (app.outdir / 'python.1').read_text()\n+    content = (app.outdir / '1' / 'python.1').read_text()\n     assert '– “Sphinx” is a tool that makes it easy …' in content\n",
  "problem_statement": "Generate man page section directories\n**Current man page generation does not conform to `MANPATH` search functionality**\r\nCurrently, all generated man pages are placed in to a single-level directory: `<build-dir>/man`. Unfortunately, this cannot be used in combination with the unix `MANPATH` environment variable. The `man` program explicitly looks for man pages in section directories (such as `man/man1`, etc.). \r\n\r\n**Describe the solution you'd like**\r\nIt would be great if sphinx would automatically create the section directories (e.g., `man/man1/`, `man/man3/`, etc.) and place each generated man page within appropriate section.\r\n\r\n**Describe alternatives you've considered**\r\nThis problem can be over come within our project’s build system, ensuring the built man pages are installed in a correct location, but it would be nice if the build directory had the proper layout.\r\n\r\nI’m happy to take a crack at implementing a fix, though this change in behavior may break some people who expect everything to appear in a `man/` directory. \r\n\n",
  "hints_text": "I think that users should copy the generated man file to the appropriate directory. The build directory is not an appropriate directory to manage man pages. So no section directory is needed, AFAIK. I don't know why do you want to set `MANPATH` to the output directory. To check the output, you can give the path to the man file for man command like `man _build/man/sphinx-build.1`. Please let me know your purpose in detail.\nFrom a [separate github thread](https://github.com/flux-framework/flux-core/pull/3033#issuecomment-662515605) that describes the specific use case in some more detail:\r\n> When run in a builddir, `src/cmd/flux` sets `MANPATH` such that `man flux` will display the current builddir version of `flux.1`. This is done so that documentation matches the version of Flux being run.\r\n\r\nEssentially, we are trying to make running in-tree look as similar to running an installed version as possible.\r\n\r\n---\r\n\r\n> I think that users should copy the generated man file to the appropriate directory.\r\n\r\nOn `make install`, we do have the automake setup to copy the manpages to `$prefix/man/man1`, `$prefix/man/man3`, etc.  This did require some extra work though, since each source file and its destination has to be explicitly enumerated in the automake file.  If the man pages were built into their respective sections, a recursive copy would work too.  Not a huge deal, but just another factor I wanted to bring up.\nUnderstandable. +1 to change the structure of output directory. As commented, it causes a breaking change for users. So I propose you to add a configuration `man_make_section_directory = (True | False)` for migration. During 3.x, it defaults to False, and it will default to True on 4.0 release. What do you think?\r\n\r\n>I’m happy to take a crack at implementing a fix, though this change in behavior may break some people who expect everything to appear in a man/ directory.\r\n\r\nIt would be very nice if you send us a PR :-)\r\n",
  "created_at": "2020-10-04T13:54:47Z",
  "version": "4.0",
  "FAIL_TO_PASS": "[\"tests/test_build_manpage.py::test_all\", \"tests/test_build_manpage.py::test_captioned_code_block\", \"tests/test_build_manpage.py::test_rubric\", \"tests/test_smartquotes.py::test_smartquotes_excludes_builders\"]",
  "PASS_TO_PASS": "[\"tests/test_build_manpage.py::test_man_make_section_directory\", \"tests/test_build_manpage.py::test_default_man_pages\", \"tests/test_smartquotes.py::test_basic\", \"tests/test_smartquotes.py::test_text_builder\", \"tests/test_smartquotes.py::test_latex_builder\", \"tests/test_smartquotes.py::test_ja_html_builder\", \"tests/test_smartquotes.py::test_smartquotes_disabled\", \"tests/test_smartquotes.py::test_smartquotes_action\", \"tests/test_smartquotes.py::test_smartquotes_excludes_language\"]",
  "environment_setup_commit": "8939a75efaa911a12dbe6edccedf261e88bf7eef",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.053715",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}