{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-13980",
  "base_commit": "4236b571cb2f0b741c40788d471d3aa553421e7b",
  "patch": "diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py\n--- a/lib/matplotlib/axes/_base.py\n+++ b/lib/matplotlib/axes/_base.py\n@@ -2402,14 +2402,14 @@ def autoscale_view(self, tight=None, scalex=True, scaley=True):\n                 (self._xmargin and scalex and self._autoscaleXon) or\n                 (self._ymargin and scaley and self._autoscaleYon)):\n             stickies = [artist.sticky_edges for artist in self.get_children()]\n-            x_stickies = np.array([x for sticky in stickies for x in sticky.x])\n-            y_stickies = np.array([y for sticky in stickies for y in sticky.y])\n-            if self.get_xscale().lower() == 'log':\n-                x_stickies = x_stickies[x_stickies > 0]\n-            if self.get_yscale().lower() == 'log':\n-                y_stickies = y_stickies[y_stickies > 0]\n         else:  # Small optimization.\n-            x_stickies, y_stickies = [], []\n+            stickies = []\n+        x_stickies = np.sort([x for sticky in stickies for x in sticky.x])\n+        y_stickies = np.sort([y for sticky in stickies for y in sticky.y])\n+        if self.get_xscale().lower() == 'log':\n+            x_stickies = x_stickies[x_stickies > 0]\n+        if self.get_yscale().lower() == 'log':\n+            y_stickies = y_stickies[y_stickies > 0]\n \n         def handle_single_axis(scale, autoscaleon, shared_axes, interval,\n                                minpos, axis, margin, stickies, set_bound):\n@@ -2450,29 +2450,34 @@ def handle_single_axis(scale, autoscaleon, shared_axes, interval,\n             locator = axis.get_major_locator()\n             x0, x1 = locator.nonsingular(x0, x1)\n \n+            # Prevent margin addition from crossing a sticky value.  Small\n+            # tolerances (whose values come from isclose()) must be used due to\n+            # floating point issues with streamplot.\n+            def tol(x): return 1e-5 * abs(x) + 1e-8\n+            # Index of largest element < x0 + tol, if any.\n+            i0 = stickies.searchsorted(x0 + tol(x0)) - 1\n+            x0bound = stickies[i0] if i0 != -1 else None\n+            # Index of smallest element > x1 - tol, if any.\n+            i1 = stickies.searchsorted(x1 - tol(x1))\n+            x1bound = stickies[i1] if i1 != len(stickies) else None\n+\n             # Add the margin in figure space and then transform back, to handle\n             # non-linear scales.\n             minpos = getattr(bb, minpos)\n             transform = axis.get_transform()\n             inverse_trans = transform.inverted()\n-            # We cannot use exact equality due to floating point issues e.g.\n-            # with streamplot.\n-            do_lower_margin = not np.any(np.isclose(x0, stickies))\n-            do_upper_margin = not np.any(np.isclose(x1, stickies))\n             x0, x1 = axis._scale.limit_range_for_scale(x0, x1, minpos)\n             x0t, x1t = transform.transform([x0, x1])\n-\n-            if np.isfinite(x1t) and np.isfinite(x0t):\n-                delta = (x1t - x0t) * margin\n-            else:\n-                # If at least one bound isn't finite, set margin to zero\n-                delta = 0\n-\n-            if do_lower_margin:\n-                x0t -= delta\n-            if do_upper_margin:\n-                x1t += delta\n-            x0, x1 = inverse_trans.transform([x0t, x1t])\n+            delta = (x1t - x0t) * margin\n+            if not np.isfinite(delta):\n+                delta = 0  # If a bound isn't finite, set margin to zero.\n+            x0, x1 = inverse_trans.transform([x0t - delta, x1t + delta])\n+\n+            # Apply sticky bounds.\n+            if x0bound is not None:\n+                x0 = max(x0, x0bound)\n+            if x1bound is not None:\n+                x1 = min(x1, x1bound)\n \n             if not self._tight:\n                 x0, x1 = locator.view_limits(x0, x1)\n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_axes.py b/lib/matplotlib/tests/test_axes.py\n--- a/lib/matplotlib/tests/test_axes.py\n+++ b/lib/matplotlib/tests/test_axes.py\n@@ -797,6 +797,12 @@ def test_polar_rlim_bottom(fig_test, fig_ref):\n     ax.set_rmin(.5)\n \n \n+def test_polar_rlim_zero():\n+    ax = plt.figure().add_subplot(projection='polar')\n+    ax.plot(np.arange(10), np.arange(10) + .01)\n+    assert ax.get_ylim()[0] == 0\n+\n+\n @image_comparison(baseline_images=['axvspan_epoch'])\n def test_axvspan_epoch():\n     from datetime import datetime\ndiff --git a/lib/matplotlib/tests/test_streamplot.py b/lib/matplotlib/tests/test_streamplot.py\n--- a/lib/matplotlib/tests/test_streamplot.py\n+++ b/lib/matplotlib/tests/test_streamplot.py\n@@ -55,9 +55,13 @@ def test_linewidth():\n     X, Y, U, V = velocity_field()\n     speed = np.hypot(U, V)\n     lw = 5 * speed / speed.max()\n-    df = 25 / 30   # Compatibility factor for old test image\n-    plt.streamplot(X, Y, U, V, density=[0.5 * df, 1. * df], color='k',\n-                   linewidth=lw)\n+    # Compatibility for old test image\n+    df = 25 / 30\n+    ax = plt.figure().subplots()\n+    ax.set(xlim=(-3.0, 2.9999999999999947),\n+           ylim=(-3.0000000000000004, 2.9999999999999947))\n+    ax.streamplot(X, Y, U, V, density=[0.5 * df, 1. * df], color='k',\n+                  linewidth=lw)\n \n \n @image_comparison(baseline_images=['streamplot_masks_and_nans'],\n@@ -69,16 +73,24 @@ def test_masks_and_nans():\n     mask[40:60, 40:60] = 1\n     U[:20, :20] = np.nan\n     U = np.ma.array(U, mask=mask)\n+    # Compatibility for old test image\n+    ax = plt.figure().subplots()\n+    ax.set(xlim=(-3.0, 2.9999999999999947),\n+           ylim=(-3.0000000000000004, 2.9999999999999947))\n     with np.errstate(invalid='ignore'):\n-        plt.streamplot(X, Y, U, V, color=U, cmap=plt.cm.Blues)\n+        ax.streamplot(X, Y, U, V, color=U, cmap=plt.cm.Blues)\n \n \n @image_comparison(baseline_images=['streamplot_maxlength'],\n                   extensions=['png'], remove_text=True, style='mpl20')\n def test_maxlength():\n     x, y, U, V = swirl_velocity_field()\n-    plt.streamplot(x, y, U, V, maxlength=10., start_points=[[0., 1.5]],\n-                   linewidth=2, density=2)\n+    ax = plt.figure().subplots()\n+    ax.streamplot(x, y, U, V, maxlength=10., start_points=[[0., 1.5]],\n+                  linewidth=2, density=2)\n+    assert ax.get_xlim()[-1] == ax.get_ylim()[-1] == 3\n+    # Compatibility for old test image\n+    ax.set(xlim=(None, 3.2555988021882305), ylim=(None, 3.078326760195413))\n \n \n @image_comparison(baseline_images=['streamplot_direction'],\n",
  "problem_statement": "Non-sensical negative radial scale minimum autoset in polar plot\nWhen plotting a set of data on a polar plot, the default bottom y_limit might not be zero unexpectedly from the perspective of the user, resulting in confusion about the meaning of the plot, especially for a person (like me) unfamiliar with the concept of a polar plot where r=0 is not at the very center point of the plot.\r\n\r\n**In a Jupyter Notebook**\r\n\r\n```python\r\n%pylab inline\r\nnpoints = 10_000\r\ntheta = 360 * random.random(npoints)\r\nr = random.random(npoints)\r\n\r\nfig, (ax1, ax2) = subplots(1, 2, figsize=(8, 4), dpi=120, facecolor='white', subplot_kw=dict(projection='polar'))\r\nax1.plot(radians(theta), r, 'o', markersize=1)\r\nax1.set_title('expected', pad=12)\r\nax2.plot(radians(theta), r, 'o', markersize=1)\r\nax2.set_title('unexpected', pad=12)\r\nax1.set_ylim(bottom=0)\r\n# ax2.set_ylim(bottom=0)\r\nprint(ax2.get_ylim())\r\n```\r\n    >>> (-0.04989219852580686, 1.0497180912808268)\r\n\r\n![image](https://user-images.githubusercontent.com/9872343/51791999-235f9b00-2171-11e9-9ea4-ac823720260f.png)\r\n\r\n\r\nI ran across this when plotting data and wondering if I had a bug in my analysis somewhere that was giving me a hole around the origin.  It took me some time to figure out that the problem was simply in the axis scaling as I expected the version on the left (which seems sensible to me as the default) and not the version on the right which has a hole in the middle.\r\n\r\n**Matplotlib version**\r\n\r\n  * Operating system: Windows 10, also Ubuntu Linux\r\n  * Matplotlib version: 3.0.2 from pip\r\n  * Matplotlib backend (`print(matplotlib.get_backend())`): inline\r\n  * Python version: 3.7, 3.6\r\n  * Jupyter version (if applicable): JupyterLab 0.35.4\n",
  "hints_text": "I agree the behavior is less than optimal.  Perhaps polar plots should just be created with 0 as explicit lower r-lim?  (I think negative r-lims should be explicitly requested.)\r\n(And then #10101 could be reverted as unnecessary anymore.)\nI think the issue here is the autoscaling is including a bit of the plot with `r<0`, I would guess because the markers overlap into that area. @dvincentwest if you want a workaround in the meantime using `scatter` instead of `plot` *might* work.\nUnfortunately, I think right now there's no mechanism to disable autoscaling on one of the two bounds (r=0) while keeping it on the other (upper r bound) :/\nCan it be handled in `projections.polar.RadialLocator.autoscale()`?\nI doubt so.  In fact, Locator.autoscale() seems completely unused right now (since 5964da2, hey you wrote that :)).\r\n\r\n(Aside re: autoscale(): it seems like it got superseded by view_limits() (for \"round\" autoscaling mode), except that dates.py has never been updated so date locators still define the unused autoscale() but don't define view_limits()?)\r\n\r\nHowever, the use of sticky_edges in #13444 gave me another idea: we can slightly change the semantics of sticky edges to mean \"an autoscale call cannot move a limit *beyond* a sticky edge through margins application\" (including when the limit is already touching the sticky edge, which is the case in all use cases so far), then keep the sticky edge at zero and set the lower datalim to zero.\nLooks like the following patch implements the strategy above (of slightly changing the semantics of sticky_edges to fix this issue):\r\n```patch\r\ndiff --git i/lib/matplotlib/axes/_base.py w/lib/matplotlib/axes/_base.py\r\nindex 9515e03e5..8d02a0e68 100644\r\n--- i/lib/matplotlib/axes/_base.py\r\n+++ w/lib/matplotlib/axes/_base.py\r\n@@ -2387,8 +2387,8 @@ class _AxesBase(martist.Artist):\r\n                 (self._xmargin and scalex and self._autoscaleXon) or\r\n                 (self._ymargin and scaley and self._autoscaleYon)):\r\n             stickies = [artist.sticky_edges for artist in self.get_children()]\r\n-            x_stickies = np.array([x for sticky in stickies for x in sticky.x])\r\n-            y_stickies = np.array([y for sticky in stickies for y in sticky.y])\r\n+            x_stickies = np.sort([x for sticky in stickies for x in sticky.x])\r\n+            y_stickies = np.sort([y for sticky in stickies for y in sticky.y])\r\n             if self.get_xscale().lower() == 'log':\r\n                 x_stickies = x_stickies[x_stickies > 0]\r\n             if self.get_yscale().lower() == 'log':\r\n@@ -2421,7 +2421,7 @@ class _AxesBase(martist.Artist):\r\n                 dl.extend(y_finite)\r\n \r\n             bb = mtransforms.BboxBase.union(dl)\r\n-            x0, x1 = getattr(bb, interval)\r\n+            x0orig, x1orig = x0, x1 = getattr(bb, interval)\r\n             locator = axis.get_major_locator()\r\n             x0, x1 = locator.nonsingular(x0, x1)\r\n \r\n@@ -2430,10 +2430,6 @@ class _AxesBase(martist.Artist):\r\n             minpos = getattr(bb, minpos)\r\n             transform = axis.get_transform()\r\n             inverse_trans = transform.inverted()\r\n-            # We cannot use exact equality due to floating point issues e.g.\r\n-            # with streamplot.\r\n-            do_lower_margin = not np.any(np.isclose(x0, stickies))\r\n-            do_upper_margin = not np.any(np.isclose(x1, stickies))\r\n             x0, x1 = axis._scale.limit_range_for_scale(x0, x1, minpos)\r\n             x0t, x1t = transform.transform([x0, x1])\r\n \r\n@@ -2443,12 +2439,23 @@ class _AxesBase(martist.Artist):\r\n                 # If at least one bound isn't finite, set margin to zero\r\n                 delta = 0\r\n \r\n-            if do_lower_margin:\r\n-                x0t -= delta\r\n-            if do_upper_margin:\r\n-                x1t += delta\r\n+            x0t -= delta\r\n+            x1t += delta\r\n+\r\n             x0, x1 = inverse_trans.transform([x0t, x1t])\r\n \r\n+            # We cannot use exact equality due to floating point issues e.g.\r\n+            # with streamplot.  The tolerances come from isclose().\r\n+            stickies_minus_tol = stickies - 1e-5 * np.abs(stickies) - 1e-8\r\n+            stickies_plus_tol = stickies + 1e-5 * np.abs(stickies) + 1e-8\r\n+\r\n+            i0orig, i0 = stickies_minus_tol.searchsorted([x0orig, x0])\r\n+            if i0orig != i0:  # Crossed a sticky boundary.\r\n+                x0 = stickies[i0orig - 1]  # Go back to sticky boundary.\r\n+            i1orig, i1 = stickies_plus_tol.searchsorted([x1orig, x1])\r\n+            if i1orig != i1:\r\n+                x1 = stickies[i1orig]\r\n+\r\n             if not self._tight:\r\n                 x0, x1 = locator.view_limits(x0, x1)\r\n             set_bound(x0, x1)\r\n```\r\n\r\nHaven't tested if this breaks other stuff.  Also needs changelog.",
  "created_at": "2019-04-18T10:09:26Z",
  "version": "3.0",
  "FAIL_TO_PASS": "[\"lib/matplotlib/tests/test_streamplot.py::test_maxlength[png]\"]",
  "PASS_TO_PASS": "[\"lib/matplotlib/tests/test_axes.py::test_get_labels\", \"lib/matplotlib/tests/test_axes.py::test_spy_invalid_kwargs\", \"lib/matplotlib/tests/test_axes.py::test_twinx_cla\", \"lib/matplotlib/tests/test_axes.py::test_twinx_axis_scales[png]\", \"lib/matplotlib/tests/test_axes.py::test_twin_inherit_autoscale_setting\", \"lib/matplotlib/tests/test_axes.py::test_inverted_cla\", \"lib/matplotlib/tests/test_axes.py::test_minorticks_on_rcParams_both[png]\", \"lib/matplotlib/tests/test_axes.py::test_autoscale_tiny_range[png]\", \"lib/matplotlib/tests/test_axes.py::test_autoscale_tight\", \"lib/matplotlib/tests/test_axes.py::test_autoscale_log_shared\", \"lib/matplotlib/tests/test_axes.py::test_use_sticky_edges\", \"lib/matplotlib/tests/test_axes.py::test_arrow_simple[png]\", \"lib/matplotlib/tests/test_axes.py::test_arrow_empty\", \"lib/matplotlib/tests/test_axes.py::test_annotate_default_arrow\", \"lib/matplotlib/tests/test_axes.py::test_structured_data\", \"lib/matplotlib/tests/test_axes.py::test_polar_rlim[png]\", \"lib/matplotlib/tests/test_axes.py::test_polar_rlim_bottom[png]\", \"lib/matplotlib/tests/test_axes.py::test_polar_rlim_zero\", \"lib/matplotlib/tests/test_axes.py::test_hexbin_extent[png]\", \"lib/matplotlib/tests/test_axes.py::test_hexbin_empty[png]\", \"lib/matplotlib/tests/test_axes.py::test_hexbin_pickable\", \"lib/matplotlib/tests/test_axes.py::test_inverted_limits\", \"lib/matplotlib/tests/test_axes.py::test_imshow[png]\", \"lib/matplotlib/tests/test_axes.py::test_polycollection_joinstyle[png]\", \"lib/matplotlib/tests/test_axes.py::test_fill_between_input[2d_x_input]\", \"lib/matplotlib/tests/test_axes.py::test_fill_between_input[2d_y1_input]\", \"lib/matplotlib/tests/test_axes.py::test_fill_between_input[2d_y2_input]\", \"lib/matplotlib/tests/test_axes.py::test_fill_betweenx_input[2d_y_input]\", \"lib/matplotlib/tests/test_axes.py::test_fill_betweenx_input[2d_x1_input]\", \"lib/matplotlib/tests/test_axes.py::test_fill_betweenx_input[2d_x2_input]\", \"lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate[png]\", \"lib/matplotlib/tests/test_axes.py::test_fill_between_interpolate_decreasing[png]\", \"lib/matplotlib/tests/test_axes.py::test_pcolorargs_5205\", \"lib/matplotlib/tests/test_axes.py::test_pcolormesh[png]\", \"lib/matplotlib/tests/test_axes.py::test_pcolorargs\", \"lib/matplotlib/tests/test_axes.py::test_arc_angles[png]\", \"lib/matplotlib/tests/test_axes.py::test_arc_ellipse[png]\", \"lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales[png]\", \"lib/matplotlib/tests/test_axes.py::test_markevery_linear_scales_zoomed[png]\", \"lib/matplotlib/tests/test_axes.py::test_markevery_log_scales[png]\", \"lib/matplotlib/tests/test_axes.py::test_markevery_polar[png]\", \"lib/matplotlib/tests/test_axes.py::test_marker_edges[png]\", \"lib/matplotlib/tests/test_axes.py::test_bar_ticklabel_fail\", \"lib/matplotlib/tests/test_axes.py::test_bar_color_none_alpha\", \"lib/matplotlib/tests/test_axes.py::test_bar_edgecolor_none_alpha\", \"lib/matplotlib/tests/test_axes.py::test_bar_timedelta\", \"lib/matplotlib/tests/test_axes.py::test_hist_log[png]\", \"lib/matplotlib/tests/test_axes.py::test_hist_bar_empty[png]\", \"lib/matplotlib/tests/test_axes.py::test_hist_step_empty[png]\", \"lib/matplotlib/tests/test_axes.py::test_hist_steplog[png]\", \"lib/matplotlib/tests/test_axes.py::test_hist_step_filled[png]\", \"lib/matplotlib/tests/test_axes.py::test_hist_step_log_bottom[png]\", \"lib/matplotlib/tests/test_axes.py::test_hist_unequal_bins_density\", \"lib/matplotlib/tests/test_axes.py::test_hist_datetime_datasets\", \"lib/matplotlib/tests/test_axes.py::test_hist_with_empty_input[data0-1]\", \"lib/matplotlib/tests/test_axes.py::test_hist_with_empty_input[data1-1]\", \"lib/matplotlib/tests/test_axes.py::test_hist_with_empty_input[data2-2]\", \"lib/matplotlib/tests/test_axes.py::test_contour_hatching[png]\", \"lib/matplotlib/tests/test_axes.py::test_hist2d[png]\", \"lib/matplotlib/tests/test_axes.py::test_hist2d_transpose[png]\", \"lib/matplotlib/tests/test_axes.py::test_hist2d_density_normed\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_plot[png]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_marker[png]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_2D[png]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_color\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_size_arg_size\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_invalid_color[png]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_no_invalid_color[png]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_single_point[png]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_different_shapes[png]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[0.5-None]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[rgby-None]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[rgb-shape]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[rgbrgb-shape]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case4-conversion]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[red-None]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[none-None]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[None-None]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case8-None]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[jaune-conversion]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case10-conversion]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case11-conversion]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case12-None]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case13-None]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case14-shape]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case15-None]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case16-None]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case17-conversion]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case18-None]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case19-shape]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case20-None]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case21-shape]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case22-None]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case23-shape]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case24-None]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case25-shape]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case26-None]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case27-shape]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case28-None]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case29-shape]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case30-conversion]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case31-conversion]\", \"lib/matplotlib/tests/test_axes.py::TestScatter::test_scatter_c[c_case32-conversion]\", \"lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params0-expected_result0]\", \"lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params1-expected_result1]\", \"lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params2-expected_result2]\", \"lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params3-expected_result3]\", \"lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args[params4-expected_result4]\", \"lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs0-None]\", \"lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs1-None]\", \"lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs2-r]\", \"lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs3-expected_edgecolors3]\", \"lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs4-r]\", \"lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs5-face]\", \"lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs6-none]\", \"lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs7-r]\", \"lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs8-r]\", \"lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs9-r]\", \"lib/matplotlib/tests/test_axes.py::test_parse_scatter_color_args_edgecolors[kwargs10-g]\", \"lib/matplotlib/tests/test_axes.py::test_pyplot_axes\", \"lib/matplotlib/tests/test_axes.py::test_stackplot_baseline[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_horizontal[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_patchartist[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_custompatchartist[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_customoutlier[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_showcustommean[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_custombox[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_custommedian[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_customcap[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_customwhisker[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_shownotches[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_nocaps[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_nobox[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_no_flier_stats[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_showmean[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_showmeanasline[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_scalarwidth[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_customwidths[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_custompositions[png]\", \"lib/matplotlib/tests/test_axes.py::test_bxp_bad_widths\", \"lib/matplotlib/tests/test_axes.py::test_bxp_bad_positions\", \"lib/matplotlib/tests/test_axes.py::test_boxplot_sym2[png]\", \"lib/matplotlib/tests/test_axes.py::test_boxplot_sym[png]\", \"lib/matplotlib/tests/test_axes.py::test_boxplot_rc_parameters[png]\", \"lib/matplotlib/tests/test_axes.py::test_boxplot_with_CIarray[png]\", \"lib/matplotlib/tests/test_axes.py::test_boxplot_no_weird_whisker[png]\", \"lib/matplotlib/tests/test_axes.py::test_boxplot_bad_medians_1\", \"lib/matplotlib/tests/test_axes.py::test_boxplot_bad_medians_2\", \"lib/matplotlib/tests/test_axes.py::test_boxplot_bad_ci_1\", \"lib/matplotlib/tests/test_axes.py::test_boxplot_zorder\", \"lib/matplotlib/tests/test_axes.py::test_boxplot_bad_ci_2\", \"lib/matplotlib/tests/test_axes.py::test_boxplot_mod_artist_after_plotting[png]\", \"lib/matplotlib/tests/test_axes.py::test_violinplot_bad_positions\", \"lib/matplotlib/tests/test_axes.py::test_violinplot_bad_widths\", \"lib/matplotlib/tests/test_axes.py::test_manage_xticks\", \"lib/matplotlib/tests/test_axes.py::test_boxplot_not_single\", \"lib/matplotlib/tests/test_axes.py::test_tick_space_size_0\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_colorcycle\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_shape\", \"lib/matplotlib/tests/test_axes.py::test_errobar_nonefmt\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_with_prop_cycle[png]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_offsets[png]\", \"lib/matplotlib/tests/test_axes.py::test_hist_step[png]\", \"lib/matplotlib/tests/test_axes.py::test_stem[png-w/\", \"lib/matplotlib/tests/test_axes.py::test_stem[png-w/o\", \"lib/matplotlib/tests/test_axes.py::test_stem_params[png]\", \"lib/matplotlib/tests/test_axes.py::test_stem_args\", \"lib/matplotlib/tests/test_axes.py::test_stem_dates\", \"lib/matplotlib/tests/test_axes.py::test_hist_normed_density[False-False]\", \"lib/matplotlib/tests/test_axes.py::test_hist_normed_density[False-True]\", \"lib/matplotlib/tests/test_axes.py::test_hist_normed_density[True-False]\", \"lib/matplotlib/tests/test_axes.py::test_hist_normed_density[True-True]\", \"lib/matplotlib/tests/test_axes.py::test_hist_step_bottom[png]\", \"lib/matplotlib/tests/test_axes.py::test_hist_emptydata\", \"lib/matplotlib/tests/test_axes.py::test_hist_labels\", \"lib/matplotlib/tests/test_axes.py::test_transparent_markers[png]\", \"lib/matplotlib/tests/test_axes.py::test_rgba_markers[png]\", \"lib/matplotlib/tests/test_axes.py::test_mollweide_grid[png]\", \"lib/matplotlib/tests/test_axes.py::test_mollweide_forward_inverse_closure\", \"lib/matplotlib/tests/test_axes.py::test_mollweide_inverse_forward_closure\", \"lib/matplotlib/tests/test_axes.py::test_alpha[png]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot[png]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_defaults[png]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_colors[colors0]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_colors[colors1]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_colors[colors2]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_colors[colors3]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_problem_kwargs[png]\", \"lib/matplotlib/tests/test_axes.py::test_empty_eventplot\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[data0-_empty]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[data1-vertical]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[data2-horizontal]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[data3-None]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[data4-none]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[data5-_empty]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[data6-vertical]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[data7-horizontal]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[data8-None]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[data9-none]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[data10-_empty]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[data11-vertical]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[data12-horizontal]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[data13-None]\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_orientation[data14-none]\", \"lib/matplotlib/tests/test_axes.py::test_marker_styles[png]\", \"lib/matplotlib/tests/test_axes.py::test_vertex_markers[png]\", \"lib/matplotlib/tests/test_axes.py::test_step_linestyle[png]\", \"lib/matplotlib/tests/test_axes.py::test_mixed_collection[png]\", \"lib/matplotlib/tests/test_axes.py::test_subplot_key_hash\", \"lib/matplotlib/tests/test_axes.py::test_specgram_freqs[png]\", \"lib/matplotlib/tests/test_axes.py::test_specgram_noise[png]\", \"lib/matplotlib/tests/test_axes.py::test_specgram_magnitude_freqs[png]\", \"lib/matplotlib/tests/test_axes.py::test_specgram_magnitude_noise[png]\", \"lib/matplotlib/tests/test_axes.py::test_specgram_angle_freqs[png]\", \"lib/matplotlib/tests/test_axes.py::test_specgram_noise_angle[png]\", \"lib/matplotlib/tests/test_axes.py::test_specgram_freqs_phase[png]\", \"lib/matplotlib/tests/test_axes.py::test_specgram_noise_phase[png]\", \"lib/matplotlib/tests/test_axes.py::test_psd_freqs[png]\", \"lib/matplotlib/tests/test_axes.py::test_psd_noise[png]\", \"lib/matplotlib/tests/test_axes.py::test_csd_freqs[png]\", \"lib/matplotlib/tests/test_axes.py::test_csd_noise[png]\", \"lib/matplotlib/tests/test_axes.py::test_magnitude_spectrum_freqs[png]\", \"lib/matplotlib/tests/test_axes.py::test_magnitude_spectrum_noise[png]\", \"lib/matplotlib/tests/test_axes.py::test_angle_spectrum_freqs[png]\", \"lib/matplotlib/tests/test_axes.py::test_angle_spectrum_noise[png]\", \"lib/matplotlib/tests/test_axes.py::test_phase_spectrum_freqs[png]\", \"lib/matplotlib/tests/test_axes.py::test_phase_spectrum_noise[png]\", \"lib/matplotlib/tests/test_axes.py::test_twin_spines[png]\", \"lib/matplotlib/tests/test_axes.py::test_twin_spines_on_top[png]\", \"lib/matplotlib/tests/test_axes.py::test_rcparam_grid_minor\", \"lib/matplotlib/tests/test_axes.py::test_vline_limit\", \"lib/matplotlib/tests/test_axes.py::test_empty_shared_subplots\", \"lib/matplotlib/tests/test_axes.py::test_shared_with_aspect_1\", \"lib/matplotlib/tests/test_axes.py::test_shared_with_aspect_2\", \"lib/matplotlib/tests/test_axes.py::test_shared_with_aspect_3\", \"lib/matplotlib/tests/test_axes.py::test_twin_with_aspect[x]\", \"lib/matplotlib/tests/test_axes.py::test_twin_with_aspect[y]\", \"lib/matplotlib/tests/test_axes.py::test_relim_visible_only\", \"lib/matplotlib/tests/test_axes.py::test_text_labelsize\", \"lib/matplotlib/tests/test_axes.py::test_pie_textprops\", \"lib/matplotlib/tests/test_axes.py::test_tick_label_update\", \"lib/matplotlib/tests/test_axes.py::test_margins\", \"lib/matplotlib/tests/test_axes.py::test_length_one_hist\", \"lib/matplotlib/tests/test_axes.py::test_pathological_hexbin\", \"lib/matplotlib/tests/test_axes.py::test_color_None\", \"lib/matplotlib/tests/test_axes.py::test_color_alias\", \"lib/matplotlib/tests/test_axes.py::test_numerical_hist_label\", \"lib/matplotlib/tests/test_axes.py::test_unicode_hist_label\", \"lib/matplotlib/tests/test_axes.py::test_move_offsetlabel\", \"lib/matplotlib/tests/test_axes.py::test_rc_tick\", \"lib/matplotlib/tests/test_axes.py::test_rc_major_minor_tick\", \"lib/matplotlib/tests/test_axes.py::test_square_plot\", \"lib/matplotlib/tests/test_axes.py::test_no_None\", \"lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy0-AxesImage]\", \"lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy1-AxesImage]\", \"lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy2-AxesImage]\", \"lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy3-PcolorImage]\", \"lib/matplotlib/tests/test_axes.py::test_pcolorfast[data0-xy4-QuadMesh]\", \"lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy0-AxesImage]\", \"lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy1-AxesImage]\", \"lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy2-AxesImage]\", \"lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy3-PcolorImage]\", \"lib/matplotlib/tests/test_axes.py::test_pcolorfast[data1-xy4-QuadMesh]\", \"lib/matplotlib/tests/test_axes.py::test_shared_scale\", \"lib/matplotlib/tests/test_axes.py::test_violin_point_mass\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs0]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs1]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs2]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs3]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs4]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs5]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs6]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs7]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs8]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs9]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs10]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs11]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs12]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs13]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs14]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs15]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs16]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs17]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs18]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs19]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs20]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs21]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs22]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs23]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs24]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs25]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs26]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs27]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs28]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs29]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs30]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs31]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs32]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs33]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs34]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs35]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs36]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs37]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs38]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs39]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs40]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs41]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs42]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs43]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs44]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs45]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs46]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs47]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs48]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs49]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs50]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs51]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs52]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs53]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs54]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs55]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs56]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs57]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs58]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs59]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs60]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs61]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs62]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs63]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs64]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs65]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs66]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs67]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs68]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs69]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs70]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs71]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs72]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs73]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs74]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs75]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs76]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs77]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs78]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs79]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs80]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs81]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs82]\", \"lib/matplotlib/tests/test_axes.py::test_errorbar_inputs_shotgun[kwargs83]\", \"lib/matplotlib/tests/test_axes.py::test_dash_offset[png]\", \"lib/matplotlib/tests/test_axes.py::test_title_pad\", \"lib/matplotlib/tests/test_axes.py::test_title_location_roundtrip\", \"lib/matplotlib/tests/test_axes.py::test_loglog[png]\", \"lib/matplotlib/tests/test_axes.py::test_loglog_nonpos[png]\", \"lib/matplotlib/tests/test_axes.py::test_axes_margins\", \"lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[gca-x]\", \"lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[gca-y]\", \"lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots-x]\", \"lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots-y]\", \"lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots_shared-x]\", \"lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[subplots_shared-y]\", \"lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[add_axes-x]\", \"lib/matplotlib/tests/test_axes.py::test_remove_shared_axes[add_axes-y]\", \"lib/matplotlib/tests/test_axes.py::test_remove_shared_axes_relim\", \"lib/matplotlib/tests/test_axes.py::test_shared_axes_autoscale\", \"lib/matplotlib/tests/test_axes.py::test_adjust_numtick_aspect\", \"lib/matplotlib/tests/test_axes.py::test_broken_barh_empty\", \"lib/matplotlib/tests/test_axes.py::test_broken_barh_timedelta\", \"lib/matplotlib/tests/test_axes.py::test_axis_set_tick_params_labelsize_labelcolor\", \"lib/matplotlib/tests/test_axes.py::test_axes_tick_params_gridlines\", \"lib/matplotlib/tests/test_axes.py::test_axes_tick_params_ylabelside\", \"lib/matplotlib/tests/test_axes.py::test_axes_tick_params_xlabelside\", \"lib/matplotlib/tests/test_axes.py::test_none_kwargs\", \"lib/matplotlib/tests/test_axes.py::test_ls_ds_conflict\", \"lib/matplotlib/tests/test_axes.py::test_bar_uint8\", \"lib/matplotlib/tests/test_axes.py::test_axisbelow[png]\", \"lib/matplotlib/tests/test_axes.py::test_titlesetpos\", \"lib/matplotlib/tests/test_axes.py::test_title_xticks_top\", \"lib/matplotlib/tests/test_axes.py::test_title_xticks_top_both\", \"lib/matplotlib/tests/test_axes.py::test_offset_label_color\", \"lib/matplotlib/tests/test_axes.py::test_large_offset\", \"lib/matplotlib/tests/test_axes.py::test_barb_units\", \"lib/matplotlib/tests/test_axes.py::test_quiver_units\", \"lib/matplotlib/tests/test_axes.py::test_bar_color_cycle\", \"lib/matplotlib/tests/test_axes.py::test_tick_param_label_rotation\", \"lib/matplotlib/tests/test_axes.py::test_fillbetween_cycle\", \"lib/matplotlib/tests/test_axes.py::test_log_margins\", \"lib/matplotlib/tests/test_axes.py::test_color_length_mismatch\", \"lib/matplotlib/tests/test_axes.py::test_eventplot_legend\", \"lib/matplotlib/tests/test_axes.py::test_bar_broadcast_args\", \"lib/matplotlib/tests/test_axes.py::test_invalid_axis_limits\", \"lib/matplotlib/tests/test_axes.py::test_minorticks_on[symlog-symlog]\", \"lib/matplotlib/tests/test_axes.py::test_minorticks_on[symlog-log]\", \"lib/matplotlib/tests/test_axes.py::test_minorticks_on[log-symlog]\", \"lib/matplotlib/tests/test_axes.py::test_minorticks_on[log-log]\", \"lib/matplotlib/tests/test_axes.py::test_twinx_knows_limits\", \"lib/matplotlib/tests/test_axes.py::test_zero_linewidth\", \"lib/matplotlib/tests/test_axes.py::test_polar_gridlines\", \"lib/matplotlib/tests/test_axes.py::test_empty_errorbar_legend\", \"lib/matplotlib/tests/test_axes.py::test_plot_columns_cycle_deprecation\", \"lib/matplotlib/tests/test_axes.py::test_markerfacecolor_none_alpha[png]\", \"lib/matplotlib/tests/test_axes.py::test_tick_padding_tightbbox\", \"lib/matplotlib/tests/test_axes.py::test_zoom_inset\", \"lib/matplotlib/tests/test_axes.py::test_set_position\", \"lib/matplotlib/tests/test_axes.py::test_spines_properbbox_after_zoom\", \"lib/matplotlib/tests/test_axes.py::test_cartopy_backcompat\", \"lib/matplotlib/tests/test_axes.py::test_gettightbbox_ignoreNaN\", \"lib/matplotlib/tests/test_axes.py::test_scatter_empty_data\", \"lib/matplotlib/tests/test_axes.py::test_annotate_across_transforms[png]\", \"lib/matplotlib/tests/test_axes.py::test_deprecated_uppercase_colors\", \"lib/matplotlib/tests/test_axes.py::test_secondary_fail\", \"lib/matplotlib/tests/test_axes.py::test_secondary_resize\", \"lib/matplotlib/tests/test_axes.py::test_nodecorator\", \"lib/matplotlib/tests/test_axes.py::test_displaced_spine\", \"lib/matplotlib/tests/test_axes.py::test_tickdirs\", \"lib/matplotlib/tests/test_axes.py::test_minor_accountedfor\", \"lib/matplotlib/tests/test_axes.py::test_axis_bool_arguments[png]\", \"lib/matplotlib/tests/test_axes.py::test_datetime_masked\", \"lib/matplotlib/tests/test_axes.py::test_hist_auto_bins\", \"lib/matplotlib/tests/test_axes.py::test_hist_nan_data\", \"lib/matplotlib/tests/test_axes.py::test_hist_range_and_density\", \"lib/matplotlib/tests/test_axes.py::test_bar_errbar_zorder\", \"lib/matplotlib/tests/test_streamplot.py::test_startpoints[png]\", \"lib/matplotlib/tests/test_streamplot.py::test_colormap[png]\", \"lib/matplotlib/tests/test_streamplot.py::test_linewidth[png]\", \"lib/matplotlib/tests/test_streamplot.py::test_masks_and_nans[png]\", \"lib/matplotlib/tests/test_streamplot.py::test_direction[png]\", \"lib/matplotlib/tests/test_streamplot.py::test_streamplot_limits\"]",
  "environment_setup_commit": "d0628598f8d9ec7b0da6b60e7b29be2067b6ea17",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.785570",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}