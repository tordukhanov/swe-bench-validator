{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-7923",
  "base_commit": "533b4ac7d6f2a1a20f08c3a595a2580a9742d944",
  "patch": "diff --git a/sphinx/util/rst.py b/sphinx/util/rst.py\n--- a/sphinx/util/rst.py\n+++ b/sphinx/util/rst.py\n@@ -103,6 +103,11 @@ def prepend_prolog(content: StringList, prolog: str) -> None:\n def append_epilog(content: StringList, epilog: str) -> None:\n     \"\"\"Append a string to content body as epilog.\"\"\"\n     if epilog:\n-        content.append('', '<generated>', 0)\n+        if 0 < len(content):\n+            source, lineno = content.info(-1)\n+        else:\n+            source = '<generated>'\n+            lineno = 0\n+        content.append('', source, lineno + 1)\n         for lineno, line in enumerate(epilog.splitlines()):\n             content.append(line, '<rst_epilog>', lineno)\n",
  "test_patch": "diff --git a/tests/test_parser.py b/tests/test_parser.py\n--- a/tests/test_parser.py\n+++ b/tests/test_parser.py\n@@ -50,7 +50,7 @@ def test_RSTParser_prolog_epilog(RSTStateMachine, app):\n     (content, _), _ = RSTStateMachine().run.call_args\n     assert list(content.xitems()) == [('dummy.rst', 0, 'hello Sphinx world'),\n                                       ('dummy.rst', 1, 'Sphinx is a document generator'),\n-                                      ('<generated>', 0, ''),\n+                                      ('dummy.rst', 2, ''),\n                                       ('<rst_epilog>', 0, 'this is rst_epilog'),\n                                       ('<rst_epilog>', 1, 'good-bye reST!')]\n \ndiff --git a/tests/test_util_rst.py b/tests/test_util_rst.py\n--- a/tests/test_util_rst.py\n+++ b/tests/test_util_rst.py\n@@ -32,7 +32,7 @@ def test_append_epilog(app):\n \n     assert list(content.xitems()) == [('dummy.rst', 0, 'hello Sphinx world'),\n                                       ('dummy.rst', 1, 'Sphinx is a document generator'),\n-                                      ('<generated>', 0, ''),\n+                                      ('dummy.rst', 2, ''),\n                                       ('<rst_epilog>', 0, 'this is rst_epilog'),\n                                       ('<rst_epilog>', 1, 'good-bye reST!')]\n \n",
  "problem_statement": "Bad refs in pot files, when using rst_epilog\n**To Reproduce**\r\nconf.py\r\n```python\r\nrst_epilog = \"\"\"\r\n.. |var1| replace:: VAR1\r\n\"\"\"\r\n```\r\nindex.rst\r\n```\r\nA\r\n======\r\n\r\na\r\n   b\r\n```\r\n\r\n`make gettext` produces index.pot with bad string numbers and \"\\<generated\\>\" refs:\r\n```\r\n#: ../../index.rst:2\r\nmsgid \"A\"\r\nmsgstr \"\"\r\n\r\n#: ../../<generated>:1\r\nmsgid \"a\"\r\nmsgstr \"\"\r\n\r\n#: ../../index.rst:5\r\nmsgid \"b\"\r\nmsgstr \"\"\r\n```\r\n\r\n\n",
  "hints_text": "",
  "created_at": "2020-07-06T16:23:19Z",
  "version": "3.2",
  "FAIL_TO_PASS": "[\"tests/test_parser.py::test_RSTParser_prolog_epilog\", \"tests/test_util_rst.py::test_append_epilog\"]",
  "PASS_TO_PASS": "[\"tests/test_util_rst.py::test_escape\", \"tests/test_util_rst.py::test_prepend_prolog\", \"tests/test_util_rst.py::test_prepend_prolog_with_CR\", \"tests/test_util_rst.py::test_prepend_prolog_without_CR\", \"tests/test_util_rst.py::test_textwidth\", \"tests/test_util_rst.py::test_heading\"]",
  "environment_setup_commit": "f92fa6443fe6f457ab0c26d41eb229e825fda5e1",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.048473",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}