{
  "repo": "pydata/xarray",
  "instance_id": "pydata__xarray-4510",
  "base_commit": "7ce0110f727b37a776d509174365cf0905163234",
  "patch": "diff --git a/xarray/core/common.py b/xarray/core/common.py\n--- a/xarray/core/common.py\n+++ b/xarray/core/common.py\n@@ -811,10 +811,6 @@ def rolling(\n             setting min_periods equal to the size of the window.\n         center : bool or mapping, default: False\n             Set the labels at the center of the window.\n-        keep_attrs : bool, optional\n-            If True, the object's attributes (`attrs`) will be copied from\n-            the original object to the new one.  If False (default), the new\n-            object will be returned without attributes.\n         **window_kwargs : optional\n             The keyword arguments form of ``dim``.\n             One of dim or window_kwargs must be provided.\n@@ -863,8 +859,6 @@ def rolling(\n         core.rolling.DataArrayRolling\n         core.rolling.DatasetRolling\n         \"\"\"\n-        if keep_attrs is None:\n-            keep_attrs = _get_keep_attrs(default=False)\n \n         dim = either_dict_or_kwargs(dim, window_kwargs, \"rolling\")\n         return self._rolling_cls(\ndiff --git a/xarray/core/rolling.py b/xarray/core/rolling.py\n--- a/xarray/core/rolling.py\n+++ b/xarray/core/rolling.py\n@@ -22,6 +22,10 @@\n \n Parameters\n ----------\n+keep_attrs : bool, default: None\n+    If True, the attributes (``attrs``) will be copied from the original\n+    object to the new one. If False, the new object will be returned\n+    without attributes. If None uses the global default.\n **kwargs : dict\n     Additional keyword arguments passed on to `{name}`.\n \n@@ -56,17 +60,13 @@ def __init__(self, obj, windows, min_periods=None, center=False, keep_attrs=None\n             Object to window.\n         windows : mapping of hashable to int\n             A mapping from the name of the dimension to create the rolling\n-            exponential window along (e.g. `time`) to the size of the moving window.\n+            window along (e.g. `time`) to the size of the moving window.\n         min_periods : int, default: None\n             Minimum number of observations in window required to have a value\n             (otherwise result is NA). The default, None, is equivalent to\n             setting min_periods equal to the size of the window.\n         center : bool, default: False\n             Set the labels at the center of the window.\n-        keep_attrs : bool, optional\n-            If True, the object's attributes (`attrs`) will be copied from\n-            the original object to the new one.  If False (default), the new\n-            object will be returned without attributes.\n \n         Returns\n         -------\n@@ -88,8 +88,13 @@ def __init__(self, obj, windows, min_periods=None, center=False, keep_attrs=None\n \n         self.min_periods = np.prod(self.window) if min_periods is None else min_periods\n \n-        if keep_attrs is None:\n-            keep_attrs = _get_keep_attrs(default=False)\n+        if keep_attrs is not None:\n+            warnings.warn(\n+                \"Passing ``keep_attrs`` to ``rolling`` is deprecated and will raise an\"\n+                \" error in xarray 0.18. Please pass ``keep_attrs`` directly to the\"\n+                \" applied function. Note that keep_attrs is now True per default.\",\n+                FutureWarning,\n+            )\n         self.keep_attrs = keep_attrs\n \n     def __repr__(self):\n@@ -110,9 +115,12 @@ def _reduce_method(name: str) -> Callable:  # type: ignore\n         array_agg_func = getattr(duck_array_ops, name)\n         bottleneck_move_func = getattr(bottleneck, \"move_\" + name, None)\n \n-        def method(self, **kwargs):\n+        def method(self, keep_attrs=None, **kwargs):\n+\n+            keep_attrs = self._get_keep_attrs(keep_attrs)\n+\n             return self._numpy_or_bottleneck_reduce(\n-                array_agg_func, bottleneck_move_func, **kwargs\n+                array_agg_func, bottleneck_move_func, keep_attrs=keep_attrs, **kwargs\n             )\n \n         method.__name__ = name\n@@ -130,8 +138,9 @@ def method(self, **kwargs):\n     var = _reduce_method(\"var\")\n     median = _reduce_method(\"median\")\n \n-    def count(self):\n-        rolling_count = self._counts()\n+    def count(self, keep_attrs=None):\n+        keep_attrs = self._get_keep_attrs(keep_attrs)\n+        rolling_count = self._counts(keep_attrs=keep_attrs)\n         enough_periods = rolling_count >= self.min_periods\n         return rolling_count.where(enough_periods)\n \n@@ -157,6 +166,19 @@ def _mapping_to_list(\n                 \"Mapping argument is necessary for {}d-rolling.\".format(len(self.dim))\n             )\n \n+    def _get_keep_attrs(self, keep_attrs):\n+\n+        if keep_attrs is None:\n+            # TODO: uncomment the next line and remove the others after the deprecation\n+            # keep_attrs = _get_keep_attrs(default=True)\n+\n+            if self.keep_attrs is None:\n+                keep_attrs = _get_keep_attrs(default=True)\n+            else:\n+                keep_attrs = self.keep_attrs\n+\n+        return keep_attrs\n+\n \n class DataArrayRolling(Rolling):\n     __slots__ = (\"window_labels\",)\n@@ -180,10 +202,6 @@ def __init__(self, obj, windows, min_periods=None, center=False, keep_attrs=None\n             setting min_periods equal to the size of the window.\n         center : bool, default: False\n             Set the labels at the center of the window.\n-        keep_attrs : bool, optional\n-            If True, the object's attributes (`attrs`) will be copied from\n-            the original object to the new one.  If False (default), the new\n-            object will be returned without attributes.\n \n         Returns\n         -------\n@@ -196,8 +214,6 @@ def __init__(self, obj, windows, min_periods=None, center=False, keep_attrs=None\n         Dataset.rolling\n         Dataset.groupby\n         \"\"\"\n-        if keep_attrs is None:\n-            keep_attrs = _get_keep_attrs(default=False)\n         super().__init__(\n             obj, windows, min_periods=min_periods, center=center, keep_attrs=keep_attrs\n         )\n@@ -220,7 +236,12 @@ def __iter__(self):\n             yield (label, window)\n \n     def construct(\n-        self, window_dim=None, stride=1, fill_value=dtypes.NA, **window_dim_kwargs\n+        self,\n+        window_dim=None,\n+        stride=1,\n+        fill_value=dtypes.NA,\n+        keep_attrs=None,\n+        **window_dim_kwargs,\n     ):\n         \"\"\"\n         Convert this rolling object to xr.DataArray,\n@@ -230,11 +251,14 @@ def construct(\n         ----------\n         window_dim : str or mapping, optional\n             A mapping from dimension name to the new window dimension names.\n-            Just a string can be used for 1d-rolling.\n-        stride : int or mapping of int, optional\n+        stride : int or mapping of int, default: 1\n             Size of stride for the rolling window.\n         fill_value : default: dtypes.NA\n             Filling value to match the dimension size.\n+        keep_attrs : bool, default: None\n+            If True, the attributes (``attrs``) will be copied from the original\n+            object to the new one. If False, the new object will be returned\n+            without attributes. If None uses the global default.\n         **window_dim_kwargs : {dim: new_name, ...}, optional\n             The keyword arguments form of ``window_dim``.\n \n@@ -279,6 +303,8 @@ def construct(\n \n         from .dataarray import DataArray\n \n+        keep_attrs = self._get_keep_attrs(keep_attrs)\n+\n         if window_dim is None:\n             if len(window_dim_kwargs) == 0:\n                 raise ValueError(\n@@ -294,14 +320,21 @@ def construct(\n         window = self.obj.variable.rolling_window(\n             self.dim, self.window, window_dim, self.center, fill_value=fill_value\n         )\n+\n+        attrs = self.obj.attrs if keep_attrs else {}\n+\n         result = DataArray(\n-            window, dims=self.obj.dims + tuple(window_dim), coords=self.obj.coords\n+            window,\n+            dims=self.obj.dims + tuple(window_dim),\n+            coords=self.obj.coords,\n+            attrs=attrs,\n+            name=self.obj.name,\n         )\n         return result.isel(\n             **{d: slice(None, None, s) for d, s in zip(self.dim, stride)}\n         )\n \n-    def reduce(self, func, **kwargs):\n+    def reduce(self, func, keep_attrs=None, **kwargs):\n         \"\"\"Reduce the items in this group by applying `func` along some\n         dimension(s).\n \n@@ -311,6 +344,10 @@ def reduce(self, func, **kwargs):\n             Function which can be called in the form\n             `func(x, **kwargs)` to return the result of collapsing an\n             np.ndarray over an the rolling dimension.\n+        keep_attrs : bool, default: None\n+            If True, the attributes (``attrs``) will be copied from the original\n+            object to the new one. If False, the new object will be returned\n+            without attributes. If None uses the global default.\n         **kwargs : dict\n             Additional keyword arguments passed on to `func`.\n \n@@ -349,19 +386,24 @@ def reduce(self, func, **kwargs):\n                [ 4.,  9., 15., 18.]])\n         Dimensions without coordinates: a, b\n         \"\"\"\n+\n+        keep_attrs = self._get_keep_attrs(keep_attrs)\n+\n         rolling_dim = {\n             d: utils.get_temp_dimname(self.obj.dims, f\"_rolling_dim_{d}\")\n             for d in self.dim\n         }\n-        windows = self.construct(rolling_dim)\n-        result = windows.reduce(func, dim=list(rolling_dim.values()), **kwargs)\n+        windows = self.construct(rolling_dim, keep_attrs=keep_attrs)\n+        result = windows.reduce(\n+            func, dim=list(rolling_dim.values()), keep_attrs=keep_attrs, **kwargs\n+        )\n \n         # Find valid windows based on count.\n-        counts = self._counts()\n+        counts = self._counts(keep_attrs=False)\n         return result.where(counts >= self.min_periods)\n \n-    def _counts(self):\n-        \"\"\" Number of non-nan entries in each rolling window. \"\"\"\n+    def _counts(self, keep_attrs):\n+        \"\"\"Number of non-nan entries in each rolling window.\"\"\"\n \n         rolling_dim = {\n             d: utils.get_temp_dimname(self.obj.dims, f\"_rolling_dim_{d}\")\n@@ -372,17 +414,17 @@ def _counts(self):\n         # The use of skipna==False is also faster since it does not need to\n         # copy the strided array.\n         counts = (\n-            self.obj.notnull()\n+            self.obj.notnull(keep_attrs=keep_attrs)\n             .rolling(\n                 center={d: self.center[i] for i, d in enumerate(self.dim)},\n                 **{d: w for d, w in zip(self.dim, self.window)},\n             )\n-            .construct(rolling_dim, fill_value=False)\n-            .sum(dim=list(rolling_dim.values()), skipna=False)\n+            .construct(rolling_dim, fill_value=False, keep_attrs=keep_attrs)\n+            .sum(dim=list(rolling_dim.values()), skipna=False, keep_attrs=keep_attrs)\n         )\n         return counts\n \n-    def _bottleneck_reduce(self, func, **kwargs):\n+    def _bottleneck_reduce(self, func, keep_attrs, **kwargs):\n         from .dataarray import DataArray\n \n         # bottleneck doesn't allow min_count to be 0, although it should\n@@ -398,8 +440,8 @@ def _bottleneck_reduce(self, func, **kwargs):\n         padded = self.obj.variable\n         if self.center[0]:\n             if is_duck_dask_array(padded.data):\n-                # Workaround to make the padded chunk size is larger than\n-                # self.window-1\n+                # workaround to make the padded chunk size larger than\n+                # self.window - 1\n                 shift = -(self.window[0] + 1) // 2\n                 offset = (self.window[0] - 1) // 2\n                 valid = (slice(None),) * axis + (\n@@ -422,16 +464,19 @@ def _bottleneck_reduce(self, func, **kwargs):\n \n         if self.center[0]:\n             values = values[valid]\n-        result = DataArray(values, self.obj.coords)\n \n-        return result\n+        attrs = self.obj.attrs if keep_attrs else {}\n+\n+        return DataArray(values, self.obj.coords, attrs=attrs, name=self.obj.name)\n \n     def _numpy_or_bottleneck_reduce(\n-        self, array_agg_func, bottleneck_move_func, **kwargs\n+        self, array_agg_func, bottleneck_move_func, keep_attrs, **kwargs\n     ):\n         if \"dim\" in kwargs:\n             warnings.warn(\n-                f\"Reductions will be applied along the rolling dimension '{self.dim}'. Passing the 'dim' kwarg to reduction operations has no effect and will raise an error in xarray 0.16.0.\",\n+                f\"Reductions are applied along the rolling dimension(s) \"\n+                f\"'{self.dim}'. Passing the 'dim' kwarg to reduction \"\n+                f\"operations has no effect.\",\n                 DeprecationWarning,\n                 stacklevel=3,\n             )\n@@ -445,9 +490,11 @@ def _numpy_or_bottleneck_reduce(\n             # TODO: renable bottleneck with dask after the issues\n             # underlying https://github.com/pydata/xarray/issues/2940 are\n             # fixed.\n-            return self._bottleneck_reduce(bottleneck_move_func, **kwargs)\n+            return self._bottleneck_reduce(\n+                bottleneck_move_func, keep_attrs=keep_attrs, **kwargs\n+            )\n         else:\n-            return self.reduce(array_agg_func, **kwargs)\n+            return self.reduce(array_agg_func, keep_attrs=keep_attrs, **kwargs)\n \n \n class DatasetRolling(Rolling):\n@@ -472,10 +519,6 @@ def __init__(self, obj, windows, min_periods=None, center=False, keep_attrs=None\n             setting min_periods equal to the size of the window.\n         center : bool or mapping of hashable to bool, default: False\n             Set the labels at the center of the window.\n-        keep_attrs : bool, optional\n-            If True, the object's attributes (`attrs`) will be copied from\n-            the original object to the new one.  If False (default), the new\n-            object will be returned without attributes.\n \n         Returns\n         -------\n@@ -494,7 +537,7 @@ def __init__(self, obj, windows, min_periods=None, center=False, keep_attrs=None\n         # Keep each Rolling object as a dictionary\n         self.rollings = {}\n         for key, da in self.obj.data_vars.items():\n-            # keeps rollings only for the dataset depending on slf.dim\n+            # keeps rollings only for the dataset depending on self.dim\n             dims, center = [], {}\n             for i, d in enumerate(self.dim):\n                 if d in da.dims:\n@@ -503,23 +546,27 @@ def __init__(self, obj, windows, min_periods=None, center=False, keep_attrs=None\n \n             if len(dims) > 0:\n                 w = {d: windows[d] for d in dims}\n-                self.rollings[key] = DataArrayRolling(\n-                    da, w, min_periods, center, keep_attrs\n-                )\n+                self.rollings[key] = DataArrayRolling(da, w, min_periods, center)\n \n-    def _dataset_implementation(self, func, **kwargs):\n+    def _dataset_implementation(self, func, keep_attrs, **kwargs):\n         from .dataset import Dataset\n \n+        keep_attrs = self._get_keep_attrs(keep_attrs)\n+\n         reduced = {}\n         for key, da in self.obj.data_vars.items():\n             if any(d in da.dims for d in self.dim):\n-                reduced[key] = func(self.rollings[key], **kwargs)\n+                reduced[key] = func(self.rollings[key], keep_attrs=keep_attrs, **kwargs)\n             else:\n-                reduced[key] = self.obj[key]\n-        attrs = self.obj.attrs if self.keep_attrs else {}\n+                reduced[key] = self.obj[key].copy()\n+                # we need to delete the attrs of the copied DataArray\n+                if not keep_attrs:\n+                    reduced[key].attrs = {}\n+\n+        attrs = self.obj.attrs if keep_attrs else {}\n         return Dataset(reduced, coords=self.obj.coords, attrs=attrs)\n \n-    def reduce(self, func, **kwargs):\n+    def reduce(self, func, keep_attrs=None, **kwargs):\n         \"\"\"Reduce the items in this group by applying `func` along some\n         dimension(s).\n \n@@ -529,6 +576,10 @@ def reduce(self, func, **kwargs):\n             Function which can be called in the form\n             `func(x, **kwargs)` to return the result of collapsing an\n             np.ndarray over an the rolling dimension.\n+        keep_attrs : bool, default: None\n+            If True, the attributes (``attrs``) will be copied from the original\n+            object to the new one. If False, the new object will be returned\n+            without attributes. If None uses the global default.\n         **kwargs : dict\n             Additional keyword arguments passed on to `func`.\n \n@@ -538,14 +589,18 @@ def reduce(self, func, **kwargs):\n             Array with summarized data.\n         \"\"\"\n         return self._dataset_implementation(\n-            functools.partial(DataArrayRolling.reduce, func=func), **kwargs\n+            functools.partial(DataArrayRolling.reduce, func=func),\n+            keep_attrs=keep_attrs,\n+            **kwargs,\n         )\n \n-    def _counts(self):\n-        return self._dataset_implementation(DataArrayRolling._counts)\n+    def _counts(self, keep_attrs):\n+        return self._dataset_implementation(\n+            DataArrayRolling._counts, keep_attrs=keep_attrs\n+        )\n \n     def _numpy_or_bottleneck_reduce(\n-        self, array_agg_func, bottleneck_move_func, **kwargs\n+        self, array_agg_func, bottleneck_move_func, keep_attrs, **kwargs\n     ):\n         return self._dataset_implementation(\n             functools.partial(\n@@ -553,6 +608,7 @@ def _numpy_or_bottleneck_reduce(\n                 array_agg_func=array_agg_func,\n                 bottleneck_move_func=bottleneck_move_func,\n             ),\n+            keep_attrs=keep_attrs,\n             **kwargs,\n         )\n \n@@ -587,6 +643,8 @@ def construct(\n \n         from .dataset import Dataset\n \n+        keep_attrs = self._get_keep_attrs(keep_attrs)\n+\n         if window_dim is None:\n             if len(window_dim_kwargs) == 0:\n                 raise ValueError(\n@@ -599,22 +657,30 @@ def construct(\n         )\n         stride = self._mapping_to_list(stride, default=1)\n \n-        if keep_attrs is None:\n-            keep_attrs = _get_keep_attrs(default=True)\n-\n         dataset = {}\n         for key, da in self.obj.data_vars.items():\n-            # keeps rollings only for the dataset depending on slf.dim\n+            # keeps rollings only for the dataset depending on self.dim\n             dims = [d for d in self.dim if d in da.dims]\n             if len(dims) > 0:\n                 wi = {d: window_dim[i] for i, d in enumerate(self.dim) if d in da.dims}\n                 st = {d: stride[i] for i, d in enumerate(self.dim) if d in da.dims}\n+\n                 dataset[key] = self.rollings[key].construct(\n-                    window_dim=wi, fill_value=fill_value, stride=st\n+                    window_dim=wi,\n+                    fill_value=fill_value,\n+                    stride=st,\n+                    keep_attrs=keep_attrs,\n                 )\n             else:\n-                dataset[key] = da\n-        return Dataset(dataset, coords=self.obj.coords).isel(\n+                dataset[key] = da.copy()\n+\n+            # as the DataArrays can be copied we need to delete the attrs\n+            if not keep_attrs:\n+                dataset[key].attrs = {}\n+\n+        attrs = self.obj.attrs if keep_attrs else {}\n+\n+        return Dataset(dataset, coords=self.obj.coords, attrs=attrs).isel(\n             **{d: slice(None, None, s) for d, s in zip(self.dim, stride)}\n         )\n \n",
  "test_patch": "diff --git a/xarray/tests/test_dataarray.py b/xarray/tests/test_dataarray.py\n--- a/xarray/tests/test_dataarray.py\n+++ b/xarray/tests/test_dataarray.py\n@@ -6297,6 +6297,7 @@ def test_rolling_properties(da):\n     # catching invalid args\n     with pytest.raises(ValueError, match=\"window must be > 0\"):\n         da.rolling(time=-2)\n+\n     with pytest.raises(ValueError, match=\"min_periods must be greater than zero\"):\n         da.rolling(time=2, min_periods=0)\n \n@@ -6317,7 +6318,7 @@ def test_rolling_wrapped_bottleneck(da, name, center, min_periods):\n     )\n     assert_array_equal(actual.values, expected)\n \n-    with pytest.warns(DeprecationWarning, match=\"Reductions will be applied\"):\n+    with pytest.warns(DeprecationWarning, match=\"Reductions are applied\"):\n         getattr(rolling_obj, name)(dim=\"time\")\n \n     # Test center\n@@ -6336,7 +6337,7 @@ def test_rolling_wrapped_dask(da_dask, name, center, min_periods, window):\n     rolling_obj = da_dask.rolling(time=window, min_periods=min_periods, center=center)\n     actual = getattr(rolling_obj, name)().load()\n     if name != \"count\":\n-        with pytest.warns(DeprecationWarning, match=\"Reductions will be applied\"):\n+        with pytest.warns(DeprecationWarning, match=\"Reductions are applied\"):\n             getattr(rolling_obj, name)(dim=\"time\")\n     # numpy version\n     rolling_obj = da_dask.load().rolling(\n@@ -6540,6 +6541,92 @@ def test_ndrolling_construct(center, fill_value):\n     assert_allclose(actual, expected)\n \n \n+@pytest.mark.parametrize(\n+    \"funcname, argument\",\n+    [\n+        (\"reduce\", (np.mean,)),\n+        (\"mean\", ()),\n+        (\"construct\", (\"window_dim\",)),\n+        (\"count\", ()),\n+    ],\n+)\n+def test_rolling_keep_attrs(funcname, argument):\n+\n+    attrs_da = {\"da_attr\": \"test\"}\n+\n+    data = np.linspace(10, 15, 100)\n+    coords = np.linspace(1, 10, 100)\n+\n+    da = DataArray(\n+        data, dims=(\"coord\"), coords={\"coord\": coords}, attrs=attrs_da, name=\"name\"\n+    )\n+\n+    # attrs are now kept per default\n+    func = getattr(da.rolling(dim={\"coord\": 5}), funcname)\n+    result = func(*argument)\n+    assert result.attrs == attrs_da\n+    assert result.name == \"name\"\n+\n+    # discard attrs\n+    func = getattr(da.rolling(dim={\"coord\": 5}), funcname)\n+    result = func(*argument, keep_attrs=False)\n+    assert result.attrs == {}\n+    assert result.name == \"name\"\n+\n+    # test discard attrs using global option\n+    func = getattr(da.rolling(dim={\"coord\": 5}), funcname)\n+    with set_options(keep_attrs=False):\n+        result = func(*argument)\n+    assert result.attrs == {}\n+    assert result.name == \"name\"\n+\n+    # keyword takes precedence over global option\n+    func = getattr(da.rolling(dim={\"coord\": 5}), funcname)\n+    with set_options(keep_attrs=False):\n+        result = func(*argument, keep_attrs=True)\n+    assert result.attrs == attrs_da\n+    assert result.name == \"name\"\n+\n+    func = getattr(da.rolling(dim={\"coord\": 5}), funcname)\n+    with set_options(keep_attrs=True):\n+        result = func(*argument, keep_attrs=False)\n+    assert result.attrs == {}\n+    assert result.name == \"name\"\n+\n+\n+def test_rolling_keep_attrs_deprecated():\n+\n+    attrs_da = {\"da_attr\": \"test\"}\n+\n+    data = np.linspace(10, 15, 100)\n+    coords = np.linspace(1, 10, 100)\n+\n+    da = DataArray(\n+        data,\n+        dims=(\"coord\"),\n+        coords={\"coord\": coords},\n+        attrs=attrs_da,\n+    )\n+\n+    # deprecated option\n+    with pytest.warns(\n+        FutureWarning, match=\"Passing ``keep_attrs`` to ``rolling`` is deprecated\"\n+    ):\n+        result = da.rolling(dim={\"coord\": 5}, keep_attrs=False).construct(\"window_dim\")\n+\n+    assert result.attrs == {}\n+\n+    # the keep_attrs in the reduction function takes precedence\n+    with pytest.warns(\n+        FutureWarning, match=\"Passing ``keep_attrs`` to ``rolling`` is deprecated\"\n+    ):\n+        result = da.rolling(dim={\"coord\": 5}, keep_attrs=True).construct(\n+            \"window_dim\", keep_attrs=False\n+        )\n+\n+    assert result.attrs == {}\n+\n+\n def test_raise_no_warning_for_nan_in_binary_ops():\n     with pytest.warns(None) as record:\n         xr.DataArray([1, 2, np.NaN]) > 0\ndiff --git a/xarray/tests/test_dataset.py b/xarray/tests/test_dataset.py\n--- a/xarray/tests/test_dataset.py\n+++ b/xarray/tests/test_dataset.py\n@@ -5989,33 +5989,115 @@ def test_coarsen_keep_attrs():\n     xr.testing.assert_identical(ds, ds2)\n \n \n-def test_rolling_keep_attrs():\n-    _attrs = {\"units\": \"test\", \"long_name\": \"testing\"}\n+@pytest.mark.parametrize(\n+    \"funcname, argument\",\n+    [\n+        (\"reduce\", (np.mean,)),\n+        (\"mean\", ()),\n+        (\"construct\", (\"window_dim\",)),\n+        (\"count\", ()),\n+    ],\n+)\n+def test_rolling_keep_attrs(funcname, argument):\n+    global_attrs = {\"units\": \"test\", \"long_name\": \"testing\"}\n+    da_attrs = {\"da_attr\": \"test\"}\n+    da_not_rolled_attrs = {\"da_not_rolled_attr\": \"test\"}\n \n-    var1 = np.linspace(10, 15, 100)\n-    var2 = np.linspace(5, 10, 100)\n+    data = np.linspace(10, 15, 100)\n     coords = np.linspace(1, 10, 100)\n \n     ds = Dataset(\n-        data_vars={\"var1\": (\"coord\", var1), \"var2\": (\"coord\", var2)},\n+        data_vars={\"da\": (\"coord\", data), \"da_not_rolled\": (\"no_coord\", data)},\n         coords={\"coord\": coords},\n-        attrs=_attrs,\n+        attrs=global_attrs,\n     )\n+    ds.da.attrs = da_attrs\n+    ds.da_not_rolled.attrs = da_not_rolled_attrs\n+\n+    # attrs are now kept per default\n+    func = getattr(ds.rolling(dim={\"coord\": 5}), funcname)\n+    result = func(*argument)\n+    assert result.attrs == global_attrs\n+    assert result.da.attrs == da_attrs\n+    assert result.da_not_rolled.attrs == da_not_rolled_attrs\n+    assert result.da.name == \"da\"\n+    assert result.da_not_rolled.name == \"da_not_rolled\"\n+\n+    # discard attrs\n+    func = getattr(ds.rolling(dim={\"coord\": 5}), funcname)\n+    result = func(*argument, keep_attrs=False)\n+    assert result.attrs == {}\n+    assert result.da.attrs == {}\n+    assert result.da_not_rolled.attrs == {}\n+    assert result.da.name == \"da\"\n+    assert result.da_not_rolled.name == \"da_not_rolled\"\n+\n+    # test discard attrs using global option\n+    func = getattr(ds.rolling(dim={\"coord\": 5}), funcname)\n+    with set_options(keep_attrs=False):\n+        result = func(*argument)\n+\n+    assert result.attrs == {}\n+    assert result.da.attrs == {}\n+    assert result.da_not_rolled.attrs == {}\n+    assert result.da.name == \"da\"\n+    assert result.da_not_rolled.name == \"da_not_rolled\"\n+\n+    # keyword takes precedence over global option\n+    func = getattr(ds.rolling(dim={\"coord\": 5}), funcname)\n+    with set_options(keep_attrs=False):\n+        result = func(*argument, keep_attrs=True)\n+\n+    assert result.attrs == global_attrs\n+    assert result.da.attrs == da_attrs\n+    assert result.da_not_rolled.attrs == da_not_rolled_attrs\n+    assert result.da.name == \"da\"\n+    assert result.da_not_rolled.name == \"da_not_rolled\"\n+\n+    func = getattr(ds.rolling(dim={\"coord\": 5}), funcname)\n+    with set_options(keep_attrs=True):\n+        result = func(*argument, keep_attrs=False)\n \n-    # Test dropped attrs\n-    dat = ds.rolling(dim={\"coord\": 5}, min_periods=None, center=False).mean()\n-    assert dat.attrs == {}\n+    assert result.attrs == {}\n+    assert result.da.attrs == {}\n+    assert result.da_not_rolled.attrs == {}\n+    assert result.da.name == \"da\"\n+    assert result.da_not_rolled.name == \"da_not_rolled\"\n \n-    # Test kept attrs using dataset keyword\n-    dat = ds.rolling(\n-        dim={\"coord\": 5}, min_periods=None, center=False, keep_attrs=True\n-    ).mean()\n-    assert dat.attrs == _attrs\n \n-    # Test kept attrs using global option\n-    with set_options(keep_attrs=True):\n-        dat = ds.rolling(dim={\"coord\": 5}, min_periods=None, center=False).mean()\n-    assert dat.attrs == _attrs\n+def test_rolling_keep_attrs_deprecated():\n+    global_attrs = {\"units\": \"test\", \"long_name\": \"testing\"}\n+    attrs_da = {\"da_attr\": \"test\"}\n+\n+    data = np.linspace(10, 15, 100)\n+    coords = np.linspace(1, 10, 100)\n+\n+    ds = Dataset(\n+        data_vars={\"da\": (\"coord\", data)},\n+        coords={\"coord\": coords},\n+        attrs=global_attrs,\n+    )\n+    ds.da.attrs = attrs_da\n+\n+    # deprecated option\n+    with pytest.warns(\n+        FutureWarning, match=\"Passing ``keep_attrs`` to ``rolling`` is deprecated\"\n+    ):\n+        result = ds.rolling(dim={\"coord\": 5}, keep_attrs=False).construct(\"window_dim\")\n+\n+    assert result.attrs == {}\n+    assert result.da.attrs == {}\n+\n+    # the keep_attrs in the reduction function takes precedence\n+    with pytest.warns(\n+        FutureWarning, match=\"Passing ``keep_attrs`` to ``rolling`` is deprecated\"\n+    ):\n+        result = ds.rolling(dim={\"coord\": 5}, keep_attrs=True).construct(\n+            \"window_dim\", keep_attrs=False\n+        )\n+\n+    assert result.attrs == {}\n+    assert result.da.attrs == {}\n \n \n def test_rolling_properties(ds):\n",
  "problem_statement": "ds.rolling() drops attributes and name \nHi all, \r\n\r\nI just played around with some data and found that xarray's \"rolling\" drops the attributes and name (even if I say ```keep_attrs=True```):\r\n\r\n```\r\nnt, nx = 100, 30\r\nda = xr.DataArray(np.random.randn(nt, nx), dims=['time', 'x'],\r\n                  name='foo') \r\nda.attrs['place'] = 'here'\r\nda.attrs['long_name'] = 'test'\r\n\r\nda\r\nxarray.DataArray'foo'time: 100x: 30\r\narray([[ 0.14720402, -0.29625209, -0.13164254, ...,  0.58363874,\r\n         0.20588748,  1.21594309],\r\n       [ 1.23770654, -0.18156258,  0.9182397 , ...,  0.16810624,\r\n        -0.40726509,  0.2328856 ],\r\n       [-0.10127142,  0.55696125,  0.7765333 , ..., -1.24054728,\r\n        -0.3520287 ,  0.34090885],\r\n       ...,\r\n       [-0.62290589,  0.95234302,  1.33738597, ...,  1.25784705,\r\n         0.32367764,  1.7907127 ],\r\n       [ 0.2987966 , -0.9820949 , -1.33291223, ..., -0.43975905,\r\n         2.28465498,  0.43231269],\r\n       [ 0.66635482,  0.74084712, -2.02589549, ...,  1.64077719,\r\n         2.84362149, -0.36572597]])\r\nCoordinates: (0)\r\nAttributes:\r\nplace : here\r\nlong_name : test\r\n\r\nda.rolling(time=5).mean(dim='time')\r\nxarray.DataArraytime: 100x: 30\r\narray([[        nan,         nan,         nan, ...,         nan,\r\n                nan,         nan],\r\n       [        nan,         nan,         nan, ...,         nan,\r\n                nan,         nan],\r\n       [        nan,         nan,         nan, ...,         nan,\r\n                nan,         nan],\r\n       ...,\r\n       [-0.56217953,  0.73100328,  0.03839124, ...,  0.60660493,\r\n        -0.22207041,  0.72327949],\r\n       [-0.31968275,  0.52925981,  0.00241698, ...,  0.70700785,\r\n         0.34605282,  0.69566641],\r\n       [-0.15442784,  0.78247162, -0.017953  , ...,  0.75334648,\r\n         1.03670267,  0.89595308]])\r\nCoordinates: (0)\r\nAttributes: (0)\r\n```\r\n\r\nAgain, this also happens when I include ```keep_attrs=True``` at both steps, rolling and mean. I think it should keep the name and attributes? \n",
  "hints_text": "",
  "created_at": "2020-10-14T23:12:16Z",
  "version": "0.12",
  "FAIL_TO_PASS": "[\"xarray/tests/test_dataarray.py::test_rolling_keep_attrs[reduce-argument0]\", \"xarray/tests/test_dataarray.py::test_rolling_keep_attrs[mean-argument1]\", \"xarray/tests/test_dataarray.py::test_rolling_keep_attrs[construct-argument2]\", \"xarray/tests/test_dataarray.py::test_rolling_keep_attrs[count-argument3]\", \"xarray/tests/test_dataarray.py::test_rolling_keep_attrs_deprecated\", \"xarray/tests/test_dataset.py::test_rolling_keep_attrs[reduce-argument0]\", \"xarray/tests/test_dataset.py::test_rolling_keep_attrs[mean-argument1]\", \"xarray/tests/test_dataset.py::test_rolling_keep_attrs[construct-argument2]\", \"xarray/tests/test_dataset.py::test_rolling_keep_attrs[count-argument3]\", \"xarray/tests/test_dataset.py::test_rolling_keep_attrs_deprecated\"]",
  "PASS_TO_PASS": "[\"xarray/tests/test_dataarray.py::TestDataArray::test_repr\", \"xarray/tests/test_dataarray.py::TestDataArray::test_repr_multiindex\", \"xarray/tests/test_dataarray.py::TestDataArray::test_repr_multiindex_long\", \"xarray/tests/test_dataarray.py::TestDataArray::test_properties\", \"xarray/tests/test_dataarray.py::TestDataArray::test_data_property\", \"xarray/tests/test_dataarray.py::TestDataArray::test_indexes\", \"xarray/tests/test_dataarray.py::TestDataArray::test_get_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_get_index_size_zero\", \"xarray/tests/test_dataarray.py::TestDataArray::test_struct_array_dims\", \"xarray/tests/test_dataarray.py::TestDataArray::test_name\", \"xarray/tests/test_dataarray.py::TestDataArray::test_dims\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sizes\", \"xarray/tests/test_dataarray.py::TestDataArray::test_encoding\", \"xarray/tests/test_dataarray.py::TestDataArray::test_constructor\", \"xarray/tests/test_dataarray.py::TestDataArray::test_constructor_invalid\", \"xarray/tests/test_dataarray.py::TestDataArray::test_constructor_from_self_described\", \"xarray/tests/test_dataarray.py::TestDataArray::test_constructor_from_0d\", \"xarray/tests/test_dataarray.py::TestDataArray::test_constructor_dask_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_equals_and_identical\", \"xarray/tests/test_dataarray.py::TestDataArray::test_equals_failures\", \"xarray/tests/test_dataarray.py::TestDataArray::test_broadcast_equals\", \"xarray/tests/test_dataarray.py::TestDataArray::test_getitem\", \"xarray/tests/test_dataarray.py::TestDataArray::test_getitem_dict\", \"xarray/tests/test_dataarray.py::TestDataArray::test_getitem_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_getitem_dataarray\", \"xarray/tests/test_dataarray.py::TestDataArray::test_getitem_empty_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_setitem\", \"xarray/tests/test_dataarray.py::TestDataArray::test_setitem_fancy\", \"xarray/tests/test_dataarray.py::TestDataArray::test_setitem_dataarray\", \"xarray/tests/test_dataarray.py::TestDataArray::test_contains\", \"xarray/tests/test_dataarray.py::TestDataArray::test_attr_sources_multiindex\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pickle\", \"xarray/tests/test_dataarray.py::TestDataArray::test_chunk\", \"xarray/tests/test_dataarray.py::TestDataArray::test_isel\", \"xarray/tests/test_dataarray.py::TestDataArray::test_isel_types\", \"xarray/tests/test_dataarray.py::TestDataArray::test_isel_fancy\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sel\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sel_dataarray\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sel_invalid_slice\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sel_dataarray_datetime_slice\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sel_float\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sel_no_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sel_method\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sel_drop\", \"xarray/tests/test_dataarray.py::TestDataArray::test_isel_drop\", \"xarray/tests/test_dataarray.py::TestDataArray::test_head\", \"xarray/tests/test_dataarray.py::TestDataArray::test_tail\", \"xarray/tests/test_dataarray.py::TestDataArray::test_thin\", \"xarray/tests/test_dataarray.py::TestDataArray::test_loc\", \"xarray/tests/test_dataarray.py::TestDataArray::test_loc_datetime64_value\", \"xarray/tests/test_dataarray.py::TestDataArray::test_loc_assign\", \"xarray/tests/test_dataarray.py::TestDataArray::test_loc_assign_dataarray\", \"xarray/tests/test_dataarray.py::TestDataArray::test_loc_single_boolean\", \"xarray/tests/test_dataarray.py::TestDataArray::test_selection_multiindex\", \"xarray/tests/test_dataarray.py::TestDataArray::test_selection_multiindex_remove_unused\", \"xarray/tests/test_dataarray.py::TestDataArray::test_selection_multiindex_from_level\", \"xarray/tests/test_dataarray.py::TestDataArray::test_stack_groupby_unsorted_coord\", \"xarray/tests/test_dataarray.py::TestDataArray::test_virtual_default_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_virtual_time_components\", \"xarray/tests/test_dataarray.py::TestDataArray::test_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_coords_to_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_coord_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reset_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_assign_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_coords_alignment\", \"xarray/tests/test_dataarray.py::TestDataArray::test_set_coords_update_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_coords_replacement_alignment\", \"xarray/tests/test_dataarray.py::TestDataArray::test_coords_non_string\", \"xarray/tests/test_dataarray.py::TestDataArray::test_coords_delitem_delete_indexes\", \"xarray/tests/test_dataarray.py::TestDataArray::test_broadcast_like\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reindex_like\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reindex_like_no_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reindex_regressions\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reindex_method\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reindex_fill_value[fill_value0]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reindex_fill_value[2]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reindex_fill_value[2.0]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reindex_fill_value[fill_value3]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_rename\", \"xarray/tests/test_dataarray.py::TestDataArray::test_init_value\", \"xarray/tests/test_dataarray.py::TestDataArray::test_swap_dims\", \"xarray/tests/test_dataarray.py::TestDataArray::test_expand_dims_error\", \"xarray/tests/test_dataarray.py::TestDataArray::test_expand_dims\", \"xarray/tests/test_dataarray.py::TestDataArray::test_expand_dims_with_scalar_coordinate\", \"xarray/tests/test_dataarray.py::TestDataArray::test_expand_dims_with_greater_dim_size\", \"xarray/tests/test_dataarray.py::TestDataArray::test_set_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reset_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reset_index_keep_attrs\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reorder_levels\", \"xarray/tests/test_dataarray.py::TestDataArray::test_dataset_getitem\", \"xarray/tests/test_dataarray.py::TestDataArray::test_array_interface\", \"xarray/tests/test_dataarray.py::TestDataArray::test_astype_attrs\", \"xarray/tests/test_dataarray.py::TestDataArray::test_astype_dtype\", \"xarray/tests/test_dataarray.py::TestDataArray::test_is_null\", \"xarray/tests/test_dataarray.py::TestDataArray::test_math\", \"xarray/tests/test_dataarray.py::TestDataArray::test_math_automatic_alignment\", \"xarray/tests/test_dataarray.py::TestDataArray::test_non_overlapping_dataarrays_return_empty_result\", \"xarray/tests/test_dataarray.py::TestDataArray::test_empty_dataarrays_return_empty_result\", \"xarray/tests/test_dataarray.py::TestDataArray::test_inplace_math_basics\", \"xarray/tests/test_dataarray.py::TestDataArray::test_inplace_math_automatic_alignment\", \"xarray/tests/test_dataarray.py::TestDataArray::test_math_name\", \"xarray/tests/test_dataarray.py::TestDataArray::test_math_with_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_index_math\", \"xarray/tests/test_dataarray.py::TestDataArray::test_dataset_math\", \"xarray/tests/test_dataarray.py::TestDataArray::test_stack_unstack\", \"xarray/tests/test_dataarray.py::TestDataArray::test_stack_unstack_decreasing_coordinate\", \"xarray/tests/test_dataarray.py::TestDataArray::test_unstack_pandas_consistency\", \"xarray/tests/test_dataarray.py::TestDataArray::test_stack_nonunique_consistency\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_unstacked_dataset_raises_value_error\", \"xarray/tests/test_dataarray.py::TestDataArray::test_transpose\", \"xarray/tests/test_dataarray.py::TestDataArray::test_squeeze\", \"xarray/tests/test_dataarray.py::TestDataArray::test_squeeze_drop\", \"xarray/tests/test_dataarray.py::TestDataArray::test_drop_coordinates\", \"xarray/tests/test_dataarray.py::TestDataArray::test_drop_index_labels\", \"xarray/tests/test_dataarray.py::TestDataArray::test_dropna\", \"xarray/tests/test_dataarray.py::TestDataArray::test_where\", \"xarray/tests/test_dataarray.py::TestDataArray::test_where_lambda\", \"xarray/tests/test_dataarray.py::TestDataArray::test_where_string\", \"xarray/tests/test_dataarray.py::TestDataArray::test_cumops\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reduce\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reduce_keepdims\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reduce_keepdims_bottleneck\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reduce_dtype\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reduce_out\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[None-None-0.25-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[None-None-0.25-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[None-None-q1-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[None-None-q1-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[None-None-q2-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[None-None-q2-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[0-x-0.25-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[0-x-0.25-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[0-x-q1-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[0-x-q1-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[0-x-q2-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[0-x-q2-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis2-dim2-0.25-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis2-dim2-0.25-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis2-dim2-q1-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis2-dim2-q1-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis2-dim2-q2-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis2-dim2-q2-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis3-dim3-0.25-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis3-dim3-0.25-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis3-dim3-q1-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis3-dim3-q1-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis3-dim3-q2-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_quantile[axis3-dim3-q2-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_reduce_keep_attrs\", \"xarray/tests/test_dataarray.py::TestDataArray::test_assign_attrs\", \"xarray/tests/test_dataarray.py::TestDataArray::test_propagate_attrs[<lambda>0]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_propagate_attrs[<lambda>1]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_propagate_attrs[absolute]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_propagate_attrs[abs]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_fillna\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_iter\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_properties\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_map_identity\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_sum\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_sum_default\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_count\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_map_center\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_map_ndarray\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_map_changes_metadata\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_math\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_math_not_aligned\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_restore_dim_order\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_restore_coord_dims\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_first_and_last\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_multidim\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_multidim_map\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_bins\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_bins_empty\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_bins_multidim\", \"xarray/tests/test_dataarray.py::TestDataArray::test_groupby_bins_sort\", \"xarray/tests/test_dataarray.py::TestDataArray::test_resample\", \"xarray/tests/test_dataarray.py::TestDataArray::test_da_resample_func_args\", \"xarray/tests/test_dataarray.py::TestDataArray::test_resample_first\", \"xarray/tests/test_dataarray.py::TestDataArray::test_resample_bad_resample_dim\", \"xarray/tests/test_dataarray.py::TestDataArray::test_resample_drop_nondim_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_resample_keep_attrs\", \"xarray/tests/test_dataarray.py::TestDataArray::test_resample_skipna\", \"xarray/tests/test_dataarray.py::TestDataArray::test_upsample\", \"xarray/tests/test_dataarray.py::TestDataArray::test_upsample_nd\", \"xarray/tests/test_dataarray.py::TestDataArray::test_upsample_tolerance\", \"xarray/tests/test_dataarray.py::TestDataArray::test_upsample_interpolate\", \"xarray/tests/test_dataarray.py::TestDataArray::test_upsample_interpolate_bug_2197\", \"xarray/tests/test_dataarray.py::TestDataArray::test_upsample_interpolate_regression_1605\", \"xarray/tests/test_dataarray.py::TestDataArray::test_upsample_interpolate_dask[True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_upsample_interpolate_dask[False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_dtype\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_copy\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_override\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_override_error[darrays0]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_override_error[darrays1]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_exclude\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_indexes\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_without_indexes_exclude\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_mixed_indexes\", \"xarray/tests/test_dataarray.py::TestDataArray::test_align_without_indexes_errors\", \"xarray/tests/test_dataarray.py::TestDataArray::test_broadcast_arrays\", \"xarray/tests/test_dataarray.py::TestDataArray::test_broadcast_arrays_misaligned\", \"xarray/tests/test_dataarray.py::TestDataArray::test_broadcast_arrays_nocopy\", \"xarray/tests/test_dataarray.py::TestDataArray::test_broadcast_arrays_exclude\", \"xarray/tests/test_dataarray.py::TestDataArray::test_broadcast_coordinates\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_pandas\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_dataframe\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_pandas_name_matches_coordinate\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_series\", \"xarray/tests/test_dataarray.py::TestDataArray::test_from_series_sparse\", \"xarray/tests/test_dataarray.py::TestDataArray::test_from_multiindex_series_sparse\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_empty_series\", \"xarray/tests/test_dataarray.py::TestDataArray::test_series_categorical_index\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict_with_time_dim\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_dict_with_nan_nat\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_dict_with_numpy_attrs\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_masked_array\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_cdms2_classic\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_and_from_cdms2_ugrid\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_dataset_whole\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_dataset_split\", \"xarray/tests/test_dataarray.py::TestDataArray::test_to_dataset_retains_keys\", \"xarray/tests/test_dataarray.py::TestDataArray::test__title_for_slice\", \"xarray/tests/test_dataarray.py::TestDataArray::test__title_for_slice_truncate\", \"xarray/tests/test_dataarray.py::TestDataArray::test_dataarray_diff_n1\", \"xarray/tests/test_dataarray.py::TestDataArray::test_coordinate_diff\", \"xarray/tests/test_dataarray.py::TestDataArray::test_shift[2-int--5]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_shift[2-int-0]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_shift[2-int-1]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_shift[2-int-2]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_shift[fill_value1-float--5]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_shift[fill_value1-float-0]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_shift[fill_value1-float-1]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_shift[fill_value1-float-2]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_roll_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_roll_no_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_roll_coords_none\", \"xarray/tests/test_dataarray.py::TestDataArray::test_copy_with_data\", \"xarray/tests/test_dataarray.py::TestDataArray::test_real_and_imag\", \"xarray/tests/test_dataarray.py::TestDataArray::test_setattr_raises\", \"xarray/tests/test_dataarray.py::TestDataArray::test_full_like\", \"xarray/tests/test_dataarray.py::TestDataArray::test_dot\", \"xarray/tests/test_dataarray.py::TestDataArray::test_dot_align_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_matmul\", \"xarray/tests/test_dataarray.py::TestDataArray::test_matmul_align_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_binary_op_propagate_indexes\", \"xarray/tests/test_dataarray.py::TestDataArray::test_binary_op_join_setting\", \"xarray/tests/test_dataarray.py::TestDataArray::test_combine_first\", \"xarray/tests/test_dataarray.py::TestDataArray::test_sortby\", \"xarray/tests/test_dataarray.py::TestDataArray::test_rank\", \"xarray/tests/test_dataarray.py::TestDataArray::test_polyfit[True-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_polyfit[True-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_polyfit[False-True]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_polyfit[False-False]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_constant\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_coords\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[None-minimum]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[None-maximum]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[None-mean]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[None-median]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[3-minimum]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[3-maximum]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[3-mean]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[3-median]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[stat_length2-minimum]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[stat_length2-maximum]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[stat_length2-mean]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[stat_length2-median]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[stat_length3-minimum]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[stat_length3-maximum]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[stat_length3-mean]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_stat_length[stat_length3-median]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_linear_ramp[None]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_linear_ramp[3]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_linear_ramp[end_values2]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_linear_ramp[end_values3]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_reflect[None-reflect]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_reflect[None-symmetric]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_reflect[even-reflect]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_reflect[even-symmetric]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_reflect[odd-reflect]\", \"xarray/tests/test_dataarray.py::TestDataArray::test_pad_reflect[odd-symmetric]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_min[x0-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_min[x1-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_min[x2-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_min[x3-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_min[x4-nan-nan-0]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_min[x5-0-1-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_max[x0-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_max[x1-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_max[x2-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_max[x3-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_max[x4-nan-nan-0]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_max[x5-0-1-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmin[x0-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmin[x1-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmin[x2-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmin[x3-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmin[x4-nan-nan-0]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmin[x5-0-1-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmax[x0-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmax[x1-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmax[x2-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmax[x3-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmax[x4-nan-nan-0]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmax[x5-0-1-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmin[True-x0-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmin[True-x1-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmin[True-x2-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmin[True-x3-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmin[True-x4-nan-nan-0]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmin[False-x0-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmin[False-x1-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmin[False-x2-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmin[False-x3-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmin[False-x4-nan-nan-0]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmin[False-x5-0-1-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmax[True-x0-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmax[True-x1-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmax[True-x2-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmax[True-x3-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmax[True-x4-nan-nan-0]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmax[False-x0-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmax[False-x1-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmax[False-x2-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmax[False-x3-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmax[False-x4-nan-nan-0]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_idxmax[False-x5-0-1-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmin_dim[x0-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmin_dim[x1-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmin_dim[x2-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmin_dim[x3-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmin_dim[x4-nan-nan-0]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmin_dim[x5-0-1-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmax_dim[x0-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmax_dim[x1-5-2-None]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmax_dim[x2-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmax_dim[x3-5-2-1]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmax_dim[x4-nan-nan-0]\", \"xarray/tests/test_dataarray.py::TestReduce1D::test_argmax_dim[x5-0-1-None]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_min[x0-minindex0-maxindex0-nanindex0]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_min[x1-minindex1-maxindex1-nanindex1]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_min[x2-minindex2-maxindex2-nanindex2]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_min[x3-minindex3-maxindex3-nanindex3]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_max[x0-minindex0-maxindex0-nanindex0]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_max[x1-minindex1-maxindex1-nanindex1]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_max[x2-minindex2-maxindex2-nanindex2]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_max[x3-minindex3-maxindex3-nanindex3]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_argmin[x0-minindex0-maxindex0-nanindex0]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_argmin[x1-minindex1-maxindex1-nanindex1]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_argmin[x2-minindex2-maxindex2-nanindex2]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_argmin[x3-minindex3-maxindex3-nanindex3]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_argmax[x0-minindex0-maxindex0-nanindex0]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_argmax[x1-minindex1-maxindex1-nanindex1]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_argmax[x2-minindex2-maxindex2-nanindex2]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_argmax[x3-minindex3-maxindex3-nanindex3]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[True-x0-minindex0-maxindex0-nanindex0]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[True-x1-minindex1-maxindex1-nanindex1]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[True-x2-minindex2-maxindex2-nanindex2]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[False-x0-minindex0-maxindex0-nanindex0]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[False-x1-minindex1-maxindex1-nanindex1]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[False-x2-minindex2-maxindex2-nanindex2]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmin[False-x3-minindex3-maxindex3-nanindex3]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[True-x0-minindex0-maxindex0-nanindex0]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[True-x1-minindex1-maxindex1-nanindex1]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[True-x2-minindex2-maxindex2-nanindex2]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[False-x0-minindex0-maxindex0-nanindex0]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[False-x1-minindex1-maxindex1-nanindex1]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[False-x2-minindex2-maxindex2-nanindex2]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_idxmax[False-x3-minindex3-maxindex3-nanindex3]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_argmin_dim[x0-minindex0-maxindex0-nanindex0]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_argmin_dim[x1-minindex1-maxindex1-nanindex1]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_argmin_dim[x2-minindex2-maxindex2-nanindex2]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_argmin_dim[x3-minindex3-maxindex3-nanindex3]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_argmax_dim[x0-minindex0-maxindex0-nanindex0]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_argmax_dim[x1-minindex1-maxindex1-nanindex1]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_argmax_dim[x2-minindex2-maxindex2-nanindex2]\", \"xarray/tests/test_dataarray.py::TestReduce2D::test_argmax_dim[x3-minindex3-maxindex3-nanindex3]\", \"xarray/tests/test_dataarray.py::TestReduce3D::test_argmin_dim[x0-minindices_x0-minindices_y0-minindices_z0-minindices_xy0-minindices_xz0-minindices_yz0-minindices_xyz0-maxindices_x0-maxindices_y0-maxindices_z0-maxindices_xy0-maxindices_xz0-maxindices_yz0-maxindices_xyz0-nanindices_x0-nanindices_y0-nanindices_z0-nanindices_xy0-nanindices_xz0-nanindices_yz0-nanindices_xyz0]\", \"xarray/tests/test_dataarray.py::TestReduce3D::test_argmin_dim[x1-minindices_x1-minindices_y1-minindices_z1-minindices_xy1-minindices_xz1-minindices_yz1-minindices_xyz1-maxindices_x1-maxindices_y1-maxindices_z1-maxindices_xy1-maxindices_xz1-maxindices_yz1-maxindices_xyz1-nanindices_x1-nanindices_y1-nanindices_z1-nanindices_xy1-nanindices_xz1-nanindices_yz1-nanindices_xyz1]\", \"xarray/tests/test_dataarray.py::TestReduce3D::test_argmin_dim[x2-minindices_x2-minindices_y2-minindices_z2-minindices_xy2-minindices_xz2-minindices_yz2-minindices_xyz2-maxindices_x2-maxindices_y2-maxindices_z2-maxindices_xy2-maxindices_xz2-maxindices_yz2-maxindices_xyz2-nanindices_x2-nanindices_y2-nanindices_z2-nanindices_xy2-nanindices_xz2-nanindices_yz2-nanindices_xyz2]\", \"xarray/tests/test_dataarray.py::TestReduce3D::test_argmin_dim[x3-minindices_x3-minindices_y3-minindices_z3-minindices_xy3-minindices_xz3-minindices_yz3-minindices_xyz3-maxindices_x3-maxindices_y3-maxindices_z3-maxindices_xy3-maxindices_xz3-maxindices_yz3-maxindices_xyz3-nanindices_x3-nanindices_y3-nanindices_z3-nanindices_xy3-nanindices_xz3-nanindices_yz3-nanindices_xyz3]\", \"xarray/tests/test_dataarray.py::TestReduce3D::test_argmax_dim[x0-minindices_x0-minindices_y0-minindices_z0-minindices_xy0-minindices_xz0-minindices_yz0-minindices_xyz0-maxindices_x0-maxindices_y0-maxindices_z0-maxindices_xy0-maxindices_xz0-maxindices_yz0-maxindices_xyz0-nanindices_x0-nanindices_y0-nanindices_z0-nanindices_xy0-nanindices_xz0-nanindices_yz0-nanindices_xyz0]\", \"xarray/tests/test_dataarray.py::TestReduce3D::test_argmax_dim[x1-minindices_x1-minindices_y1-minindices_z1-minindices_xy1-minindices_xz1-minindices_yz1-minindices_xyz1-maxindices_x1-maxindices_y1-maxindices_z1-maxindices_xy1-maxindices_xz1-maxindices_yz1-maxindices_xyz1-nanindices_x1-nanindices_y1-nanindices_z1-nanindices_xy1-nanindices_xz1-nanindices_yz1-nanindices_xyz1]\", \"xarray/tests/test_dataarray.py::TestReduce3D::test_argmax_dim[x2-minindices_x2-minindices_y2-minindices_z2-minindices_xy2-minindices_xz2-minindices_yz2-minindices_xyz2-maxindices_x2-maxindices_y2-maxindices_z2-maxindices_xy2-maxindices_xz2-maxindices_yz2-maxindices_xyz2-nanindices_x2-nanindices_y2-nanindices_z2-nanindices_xy2-nanindices_xz2-nanindices_yz2-nanindices_xyz2]\", \"xarray/tests/test_dataarray.py::TestReduce3D::test_argmax_dim[x3-minindices_x3-minindices_y3-minindices_z3-minindices_xy3-minindices_xz3-minindices_yz3-minindices_xyz3-maxindices_x3-maxindices_y3-maxindices_z3-maxindices_xy3-maxindices_xz3-maxindices_yz3-maxindices_xyz3-nanindices_x3-nanindices_y3-nanindices_z3-nanindices_xy3-nanindices_xz3-nanindices_yz3-nanindices_xyz3]\", \"xarray/tests/test_dataarray.py::TestReduceND::test_idxminmax_dask[3-idxmin]\", \"xarray/tests/test_dataarray.py::TestReduceND::test_idxminmax_dask[3-idxmax]\", \"xarray/tests/test_dataarray.py::TestReduceND::test_idxminmax_dask[5-idxmin]\", \"xarray/tests/test_dataarray.py::TestReduceND::test_idxminmax_dask[5-idxmax]\", \"xarray/tests/test_dataarray.py::test_isin[repeating_ints]\", \"xarray/tests/test_dataarray.py::test_coarsen_keep_attrs\", \"xarray/tests/test_dataarray.py::test_rolling_iter[1]\", \"xarray/tests/test_dataarray.py::test_rolling_iter[2]\", \"xarray/tests/test_dataarray.py::test_rolling_repr[1]\", \"xarray/tests/test_dataarray.py::test_rolling_doc[1]\", \"xarray/tests/test_dataarray.py::test_rolling_properties[1]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-True-sum]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-True-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-True-std]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-True-min]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-True-max]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-True-median]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-False-sum]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-False-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-False-std]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-False-min]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-False-max]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-False-median]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-None-sum]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-None-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-None-std]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-None-min]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-None-max]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-1-None-median]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-True-sum]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-True-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-True-std]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-True-min]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-True-max]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-True-median]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-False-sum]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-False-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-False-std]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-False-min]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-False-max]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-False-median]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-None-sum]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-None-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-None-std]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-None-min]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-None-max]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_bottleneck[1-None-None-median]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-1-True-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-1-True-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-1-False-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-1-False-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-1-None-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-1-None-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-None-True-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-None-True-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-None-False-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-None-False-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-None-None-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[7-None-None-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-1-True-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-1-True-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-1-False-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-1-False-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-1-None-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-1-None-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-None-True-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-None-True-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-None-False-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-None-False-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-None-None-mean]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask[8-None-None-count]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask_nochunk[True]\", \"xarray/tests/test_dataarray.py::test_rolling_wrapped_dask_nochunk[None]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[1-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[1-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[1-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[1-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[1-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[1-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[1-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[1-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[2-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[2-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[2-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[2-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[2-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[2-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[2-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[2-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[3-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[3-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[3-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[3-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[3-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[3-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[3-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[3-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[4-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[4-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[4-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[4-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[4-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[4-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[4-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_pandas_compat[4-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_construct[1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_construct[1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_construct[2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_construct[2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_construct[3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_construct[3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_construct[4-True]\", \"xarray/tests/test_dataarray.py::test_rolling_construct[4-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-1-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-2-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-3-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[sum-4-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-1-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-2-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-3-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[mean-4-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-1-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-2-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-3-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[std-4-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-1-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-2-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-3-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-None-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-None-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-None-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-None-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-1-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-1-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-1-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-1-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-2-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-2-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-2-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-2-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-3-True-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-3-True-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-3-False-1]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce[max-4-3-False-2]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-1-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-1-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-1-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-1-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-1-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-1-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-1-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-1-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-2-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-2-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-2-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-2-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-2-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-2-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-2-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-2-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-3-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-3-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-3-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-3-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-3-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-3-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-3-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-3-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-4-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-4-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-4-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-4-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-4-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-4-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-4-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[sum-4-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-1-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-1-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-1-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-1-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-1-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-1-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-1-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-1-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-2-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-2-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-2-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-2-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-2-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-2-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-2-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-2-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-3-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-3-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-3-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-3-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-3-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-3-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-3-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-3-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-4-None-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-4-None-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-4-1-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-4-1-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-4-2-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-4-2-False]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-4-3-True]\", \"xarray/tests/test_dataarray.py::test_rolling_reduce_nonnumeric[max-4-3-False]\", \"xarray/tests/test_dataarray.py::test_rolling_count_correct\", \"xarray/tests/test_dataarray.py::test_ndrolling_reduce[sum-None-True-1]\", \"xarray/tests/test_dataarray.py::test_ndrolling_reduce[sum-None-False-1]\", \"xarray/tests/test_dataarray.py::test_ndrolling_reduce[sum-1-True-1]\", \"xarray/tests/test_dataarray.py::test_ndrolling_reduce[sum-1-False-1]\", \"xarray/tests/test_dataarray.py::test_ndrolling_reduce[mean-None-True-1]\", \"xarray/tests/test_dataarray.py::test_ndrolling_reduce[mean-None-False-1]\", \"xarray/tests/test_dataarray.py::test_ndrolling_reduce[mean-1-True-1]\", \"xarray/tests/test_dataarray.py::test_ndrolling_reduce[mean-1-False-1]\", \"xarray/tests/test_dataarray.py::test_ndrolling_reduce[max-None-True-1]\", \"xarray/tests/test_dataarray.py::test_ndrolling_reduce[max-None-False-1]\", \"xarray/tests/test_dataarray.py::test_ndrolling_reduce[max-1-True-1]\", \"xarray/tests/test_dataarray.py::test_ndrolling_reduce[max-1-False-1]\", \"xarray/tests/test_dataarray.py::test_ndrolling_construct[nan-True]\", \"xarray/tests/test_dataarray.py::test_ndrolling_construct[nan-False]\", \"xarray/tests/test_dataarray.py::test_ndrolling_construct[nan-center2]\", \"xarray/tests/test_dataarray.py::test_ndrolling_construct[0.0-True]\", \"xarray/tests/test_dataarray.py::test_ndrolling_construct[0.0-False]\", \"xarray/tests/test_dataarray.py::test_ndrolling_construct[0.0-center2]\", \"xarray/tests/test_dataarray.py::test_raise_no_warning_for_nan_in_binary_ops\", \"xarray/tests/test_dataarray.py::test_no_warning_for_all_nan\", \"xarray/tests/test_dataarray.py::test_name_in_masking\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_to_and_from_iris\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_to_and_from_iris_dask\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_da_name_from_cube[var_name-height-Height-var_name-attrs0]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_da_name_from_cube[None-height-Height-height-attrs1]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_da_name_from_cube[None-None-Height-Height-attrs2]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_da_name_from_cube[None-None-None-None-attrs3]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_da_coord_name_from_cube[var_name-height-Height-var_name-attrs0]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_da_coord_name_from_cube[None-height-Height-height-attrs1]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_da_coord_name_from_cube[None-None-Height-Height-attrs2]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_da_coord_name_from_cube[None-None-None-unknown-attrs3]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_prevent_duplicate_coord_names\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_fallback_to_iris_AuxCoord[coord_values0]\", \"xarray/tests/test_dataarray.py::TestIrisConversion::test_fallback_to_iris_AuxCoord[coord_values1]\", \"xarray/tests/test_dataarray.py::test_rolling_exp[1-span-5-time]\", \"xarray/tests/test_dataarray.py::test_rolling_exp[1-span-5-x]\", \"xarray/tests/test_dataarray.py::test_rolling_exp[1-alpha-0.5-time]\", \"xarray/tests/test_dataarray.py::test_rolling_exp[1-alpha-0.5-x]\", \"xarray/tests/test_dataarray.py::test_rolling_exp[1-com-0.5-time]\", \"xarray/tests/test_dataarray.py::test_rolling_exp[1-com-0.5-x]\", \"xarray/tests/test_dataarray.py::test_rolling_exp[1-halflife-5-time]\", \"xarray/tests/test_dataarray.py::test_rolling_exp[1-halflife-5-x]\", \"xarray/tests/test_dataarray.py::test_no_dict\", \"xarray/tests/test_dataarray.py::test_subclass_slots\", \"xarray/tests/test_dataarray.py::test_weakref\", \"xarray/tests/test_dataarray.py::test_delete_coords\", \"xarray/tests/test_dataarray.py::test_deepcopy_obj_array\", \"xarray/tests/test_dataset.py::TestDataset::test_repr\", \"xarray/tests/test_dataset.py::TestDataset::test_repr_multiindex\", \"xarray/tests/test_dataset.py::TestDataset::test_repr_period_index\", \"xarray/tests/test_dataset.py::TestDataset::test_unicode_data\", \"xarray/tests/test_dataset.py::TestDataset::test_repr_nep18\", \"xarray/tests/test_dataset.py::TestDataset::test_info\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_invalid_dims\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_1d\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_0d\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_deprecated\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_auto_align\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_pandas_sequence\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_pandas_single\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_compat\", \"xarray/tests/test_dataset.py::TestDataset::test_constructor_with_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_properties\", \"xarray/tests/test_dataset.py::TestDataset::test_asarray\", \"xarray/tests/test_dataset.py::TestDataset::test_get_index\", \"xarray/tests/test_dataset.py::TestDataset::test_attr_access\", \"xarray/tests/test_dataset.py::TestDataset::test_variable\", \"xarray/tests/test_dataset.py::TestDataset::test_modify_inplace\", \"xarray/tests/test_dataset.py::TestDataset::test_coords_properties\", \"xarray/tests/test_dataset.py::TestDataset::test_coords_modify\", \"xarray/tests/test_dataset.py::TestDataset::test_update_index\", \"xarray/tests/test_dataset.py::TestDataset::test_coords_setitem_with_new_dimension\", \"xarray/tests/test_dataset.py::TestDataset::test_coords_setitem_multiindex\", \"xarray/tests/test_dataset.py::TestDataset::test_coords_set\", \"xarray/tests/test_dataset.py::TestDataset::test_coords_to_dataset\", \"xarray/tests/test_dataset.py::TestDataset::test_coords_merge\", \"xarray/tests/test_dataset.py::TestDataset::test_coords_merge_mismatched_shape\", \"xarray/tests/test_dataset.py::TestDataset::test_data_vars_properties\", \"xarray/tests/test_dataset.py::TestDataset::test_equals_and_identical\", \"xarray/tests/test_dataset.py::TestDataset::test_equals_failures\", \"xarray/tests/test_dataset.py::TestDataset::test_broadcast_equals\", \"xarray/tests/test_dataset.py::TestDataset::test_attrs\", \"xarray/tests/test_dataset.py::TestDataset::test_chunk\", \"xarray/tests/test_dataset.py::TestDataset::test_dask_is_lazy\", \"xarray/tests/test_dataset.py::TestDataset::test_isel\", \"xarray/tests/test_dataset.py::TestDataset::test_isel_fancy\", \"xarray/tests/test_dataset.py::TestDataset::test_isel_dataarray\", \"xarray/tests/test_dataset.py::TestDataset::test_sel\", \"xarray/tests/test_dataset.py::TestDataset::test_sel_dataarray\", \"xarray/tests/test_dataset.py::TestDataset::test_sel_dataarray_mindex\", \"xarray/tests/test_dataset.py::TestDataset::test_categorical_index\", \"xarray/tests/test_dataset.py::TestDataset::test_categorical_reindex\", \"xarray/tests/test_dataset.py::TestDataset::test_sel_drop\", \"xarray/tests/test_dataset.py::TestDataset::test_isel_drop\", \"xarray/tests/test_dataset.py::TestDataset::test_head\", \"xarray/tests/test_dataset.py::TestDataset::test_tail\", \"xarray/tests/test_dataset.py::TestDataset::test_thin\", \"xarray/tests/test_dataset.py::TestDataset::test_sel_fancy\", \"xarray/tests/test_dataset.py::TestDataset::test_sel_method\", \"xarray/tests/test_dataset.py::TestDataset::test_loc\", \"xarray/tests/test_dataset.py::TestDataset::test_selection_multiindex\", \"xarray/tests/test_dataset.py::TestDataset::test_broadcast_like\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_like\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_warning\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_variables_copied\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_method\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_fill_value[fill_value0]\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_fill_value[2]\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_fill_value[2.0]\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_fill_value[fill_value3]\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_like_fill_value[fill_value0]\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_like_fill_value[2]\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_like_fill_value[2.0]\", \"xarray/tests/test_dataset.py::TestDataset::test_reindex_like_fill_value[fill_value3]\", \"xarray/tests/test_dataset.py::TestDataset::test_align_fill_value[fill_value0]\", \"xarray/tests/test_dataset.py::TestDataset::test_align_fill_value[2]\", \"xarray/tests/test_dataset.py::TestDataset::test_align_fill_value[2.0]\", \"xarray/tests/test_dataset.py::TestDataset::test_align_fill_value[fill_value3]\", \"xarray/tests/test_dataset.py::TestDataset::test_align\", \"xarray/tests/test_dataset.py::TestDataset::test_align_exact\", \"xarray/tests/test_dataset.py::TestDataset::test_align_override\", \"xarray/tests/test_dataset.py::TestDataset::test_align_exclude\", \"xarray/tests/test_dataset.py::TestDataset::test_align_nocopy\", \"xarray/tests/test_dataset.py::TestDataset::test_align_indexes\", \"xarray/tests/test_dataset.py::TestDataset::test_align_non_unique\", \"xarray/tests/test_dataset.py::TestDataset::test_broadcast\", \"xarray/tests/test_dataset.py::TestDataset::test_broadcast_nocopy\", \"xarray/tests/test_dataset.py::TestDataset::test_broadcast_exclude\", \"xarray/tests/test_dataset.py::TestDataset::test_broadcast_misaligned\", \"xarray/tests/test_dataset.py::TestDataset::test_variable_indexing\", \"xarray/tests/test_dataset.py::TestDataset::test_drop_variables\", \"xarray/tests/test_dataset.py::TestDataset::test_drop_index_labels\", \"xarray/tests/test_dataset.py::TestDataset::test_drop_labels_by_keyword\", \"xarray/tests/test_dataset.py::TestDataset::test_drop_dims\", \"xarray/tests/test_dataset.py::TestDataset::test_copy\", \"xarray/tests/test_dataset.py::TestDataset::test_copy_with_data\", \"xarray/tests/test_dataset.py::TestDataset::test_copy_with_data_errors\", \"xarray/tests/test_dataset.py::TestDataset::test_rename\", \"xarray/tests/test_dataset.py::TestDataset::test_rename_old_name\", \"xarray/tests/test_dataset.py::TestDataset::test_rename_same_name\", \"xarray/tests/test_dataset.py::TestDataset::test_rename_dims\", \"xarray/tests/test_dataset.py::TestDataset::test_rename_vars\", \"xarray/tests/test_dataset.py::TestDataset::test_rename_multiindex\", \"xarray/tests/test_dataset.py::TestDataset::test_rename_does_not_change_CFTimeIndex_type\", \"xarray/tests/test_dataset.py::TestDataset::test_rename_does_not_change_DatetimeIndex_type\", \"xarray/tests/test_dataset.py::TestDataset::test_swap_dims\", \"xarray/tests/test_dataset.py::TestDataset::test_expand_dims_error\", \"xarray/tests/test_dataset.py::TestDataset::test_expand_dims_int\", \"xarray/tests/test_dataset.py::TestDataset::test_expand_dims_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_expand_dims_existing_scalar_coord\", \"xarray/tests/test_dataset.py::TestDataset::test_isel_expand_dims_roundtrip\", \"xarray/tests/test_dataset.py::TestDataset::test_expand_dims_mixed_int_and_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_expand_dims_kwargs_python36plus\", \"xarray/tests/test_dataset.py::TestDataset::test_set_index\", \"xarray/tests/test_dataset.py::TestDataset::test_reset_index\", \"xarray/tests/test_dataset.py::TestDataset::test_reset_index_keep_attrs\", \"xarray/tests/test_dataset.py::TestDataset::test_reorder_levels\", \"xarray/tests/test_dataset.py::TestDataset::test_stack\", \"xarray/tests/test_dataset.py::TestDataset::test_unstack\", \"xarray/tests/test_dataset.py::TestDataset::test_unstack_errors\", \"xarray/tests/test_dataset.py::TestDataset::test_unstack_fill_value\", \"xarray/tests/test_dataset.py::TestDataset::test_unstack_sparse\", \"xarray/tests/test_dataset.py::TestDataset::test_stack_unstack_fast\", \"xarray/tests/test_dataset.py::TestDataset::test_stack_unstack_slow\", \"xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_invalid_sample_dims\", \"xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_name\", \"xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_dtype_dims\", \"xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_to_unstacked_dataset\", \"xarray/tests/test_dataset.py::TestDataset::test_to_stacked_array_to_unstacked_dataset_different_dimension\", \"xarray/tests/test_dataset.py::TestDataset::test_update\", \"xarray/tests/test_dataset.py::TestDataset::test_update_overwrite_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_update_auto_align\", \"xarray/tests/test_dataset.py::TestDataset::test_getitem\", \"xarray/tests/test_dataset.py::TestDataset::test_getitem_hashable\", \"xarray/tests/test_dataset.py::TestDataset::test_virtual_variables_default_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_virtual_variables_time\", \"xarray/tests/test_dataset.py::TestDataset::test_virtual_variable_same_name\", \"xarray/tests/test_dataset.py::TestDataset::test_virtual_variable_multiindex\", \"xarray/tests/test_dataset.py::TestDataset::test_time_season\", \"xarray/tests/test_dataset.py::TestDataset::test_slice_virtual_variable\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem_pandas\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem_auto_align\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem_dimension_override\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem_with_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem_align_new_indexes\", \"xarray/tests/test_dataset.py::TestDataset::test_assign\", \"xarray/tests/test_dataset.py::TestDataset::test_assign_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_assign_attrs\", \"xarray/tests/test_dataset.py::TestDataset::test_assign_multiindex_level\", \"xarray/tests/test_dataset.py::TestDataset::test_merge_multiindex_level\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem_original_non_unique_index\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem_both_non_unique_index\", \"xarray/tests/test_dataset.py::TestDataset::test_setitem_multiindex_level\", \"xarray/tests/test_dataset.py::TestDataset::test_delitem\", \"xarray/tests/test_dataset.py::TestDataset::test_squeeze\", \"xarray/tests/test_dataset.py::TestDataset::test_squeeze_drop\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby_returns_new_type\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby_iter\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby_errors\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby_reduce\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby_math\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby_math_virtual\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby_nan\", \"xarray/tests/test_dataset.py::TestDataset::test_groupby_order\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_and_first\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_min_count\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_by_mean_with_keep_attrs\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_loffset\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_by_mean_discarding_attrs\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_by_last_discarding_attrs\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_drop_nondim_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_old_api\", \"xarray/tests/test_dataset.py::TestDataset::test_resample_ds_da_are_the_same\", \"xarray/tests/test_dataset.py::TestDataset::test_ds_resample_apply_func_args\", \"xarray/tests/test_dataset.py::TestDataset::test_to_array\", \"xarray/tests/test_dataset.py::TestDataset::test_to_and_from_dataframe\", \"xarray/tests/test_dataset.py::TestDataset::test_from_dataframe_sparse\", \"xarray/tests/test_dataset.py::TestDataset::test_to_and_from_empty_dataframe\", \"xarray/tests/test_dataset.py::TestDataset::test_from_dataframe_multiindex\", \"xarray/tests/test_dataset.py::TestDataset::test_from_dataframe_unsorted_levels\", \"xarray/tests/test_dataset.py::TestDataset::test_from_dataframe_non_unique_columns\", \"xarray/tests/test_dataset.py::TestDataset::test_convert_dataframe_with_many_types_and_multiindex\", \"xarray/tests/test_dataset.py::TestDataset::test_to_and_from_dict\", \"xarray/tests/test_dataset.py::TestDataset::test_to_and_from_dict_with_time_dim\", \"xarray/tests/test_dataset.py::TestDataset::test_to_and_from_dict_with_nan_nat\", \"xarray/tests/test_dataset.py::TestDataset::test_to_dict_with_numpy_attrs\", \"xarray/tests/test_dataset.py::TestDataset::test_pickle\", \"xarray/tests/test_dataset.py::TestDataset::test_lazy_load\", \"xarray/tests/test_dataset.py::TestDataset::test_dropna\", \"xarray/tests/test_dataset.py::TestDataset::test_fillna\", \"xarray/tests/test_dataset.py::TestDataset::test_propagate_attrs[<lambda>0]\", \"xarray/tests/test_dataset.py::TestDataset::test_propagate_attrs[<lambda>1]\", \"xarray/tests/test_dataset.py::TestDataset::test_propagate_attrs[absolute]\", \"xarray/tests/test_dataset.py::TestDataset::test_propagate_attrs[abs]\", \"xarray/tests/test_dataset.py::TestDataset::test_where\", \"xarray/tests/test_dataset.py::TestDataset::test_where_other\", \"xarray/tests/test_dataset.py::TestDataset::test_where_drop\", \"xarray/tests/test_dataset.py::TestDataset::test_where_drop_empty\", \"xarray/tests/test_dataset.py::TestDataset::test_where_drop_no_indexes\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_mean_uint_dtype\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_bad_dim\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_cumsum\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_cumsum_test_dims\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_non_numeric\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_strings\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_dtypes\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_keep_attrs\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_argmin\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_scalars\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_only_one_axis\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_no_axis\", \"xarray/tests/test_dataset.py::TestDataset::test_reduce_keepdims\", \"xarray/tests/test_dataset.py::TestDataset::test_quantile[0.25-True]\", \"xarray/tests/test_dataset.py::TestDataset::test_quantile[0.25-False]\", \"xarray/tests/test_dataset.py::TestDataset::test_quantile[q1-True]\", \"xarray/tests/test_dataset.py::TestDataset::test_quantile[q1-False]\", \"xarray/tests/test_dataset.py::TestDataset::test_quantile[q2-True]\", \"xarray/tests/test_dataset.py::TestDataset::test_quantile[q2-False]\", \"xarray/tests/test_dataset.py::TestDataset::test_quantile_skipna[True]\", \"xarray/tests/test_dataset.py::TestDataset::test_quantile_skipna[False]\", \"xarray/tests/test_dataset.py::TestDataset::test_rank\", \"xarray/tests/test_dataset.py::TestDataset::test_count\", \"xarray/tests/test_dataset.py::TestDataset::test_map\", \"xarray/tests/test_dataset.py::TestDataset::test_apply_pending_deprecated_map\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_number_math\", \"xarray/tests/test_dataset.py::TestDataset::test_unary_ops\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_array_math\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_dataset_math\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_math_auto_align\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_math_errors\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_transpose\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_ellipsis_transpose_different_ordered_vars\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_retains_period_index_on_transpose\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_n1_simple\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_n1_label\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_n1\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_n2\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_exception_n_neg\", \"xarray/tests/test_dataset.py::TestDataset::test_dataset_diff_exception_label_str\", \"xarray/tests/test_dataset.py::TestDataset::test_shift[fill_value0]\", \"xarray/tests/test_dataset.py::TestDataset::test_shift[2]\", \"xarray/tests/test_dataset.py::TestDataset::test_shift[2.0]\", \"xarray/tests/test_dataset.py::TestDataset::test_shift[fill_value3]\", \"xarray/tests/test_dataset.py::TestDataset::test_roll_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_roll_no_coords\", \"xarray/tests/test_dataset.py::TestDataset::test_roll_coords_none\", \"xarray/tests/test_dataset.py::TestDataset::test_roll_multidim\", \"xarray/tests/test_dataset.py::TestDataset::test_real_and_imag\", \"xarray/tests/test_dataset.py::TestDataset::test_setattr_raises\", \"xarray/tests/test_dataset.py::TestDataset::test_filter_by_attrs\", \"xarray/tests/test_dataset.py::TestDataset::test_binary_op_propagate_indexes\", \"xarray/tests/test_dataset.py::TestDataset::test_binary_op_join_setting\", \"xarray/tests/test_dataset.py::TestDataset::test_full_like\", \"xarray/tests/test_dataset.py::TestDataset::test_combine_first\", \"xarray/tests/test_dataset.py::TestDataset::test_sortby\", \"xarray/tests/test_dataset.py::TestDataset::test_attribute_access\", \"xarray/tests/test_dataset.py::TestDataset::test_ipython_key_completion\", \"xarray/tests/test_dataset.py::TestDataset::test_polyfit_output\", \"xarray/tests/test_dataset.py::TestDataset::test_pad\", \"xarray/tests/test_dataset.py::TestDataset::test_astype_attrs\", \"xarray/tests/test_dataset.py::test_isin[test_elements0]\", \"xarray/tests/test_dataset.py::test_isin[test_elements1]\", \"xarray/tests/test_dataset.py::test_isin[test_elements2]\", \"xarray/tests/test_dataset.py::test_isin_dask[test_elements0]\", \"xarray/tests/test_dataset.py::test_isin_dask[test_elements1]\", \"xarray/tests/test_dataset.py::test_isin_dask[test_elements2]\", \"xarray/tests/test_dataset.py::test_isin_dataset\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords0]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords1]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords2]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords3]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords4]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords5]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords6]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords7]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords8]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords0-unaligned_coords9]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords0]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords1]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords2]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords3]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords4]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords5]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords6]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords7]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords8]\", \"xarray/tests/test_dataset.py::test_dataset_constructor_aligns_to_explicit_coords[coords1-unaligned_coords9]\", \"xarray/tests/test_dataset.py::test_error_message_on_set_supplied\", \"xarray/tests/test_dataset.py::test_constructor_raises_with_invalid_coords[unaligned_coords0]\", \"xarray/tests/test_dataset.py::test_dir_expected_attrs[None]\", \"xarray/tests/test_dataset.py::test_dir_non_string[None]\", \"xarray/tests/test_dataset.py::test_dir_unicode[None]\", \"xarray/tests/test_dataset.py::test_coarsen_absent_dims_error[1]\", \"xarray/tests/test_dataset.py::test_coarsen[1-trim-left-True]\", \"xarray/tests/test_dataset.py::test_coarsen[1-trim-left-False]\", \"xarray/tests/test_dataset.py::test_coarsen[1-pad-right-True]\", \"xarray/tests/test_dataset.py::test_coarsen[1-pad-right-False]\", \"xarray/tests/test_dataset.py::test_coarsen_coords[1-True]\", \"xarray/tests/test_dataset.py::test_coarsen_coords[1-False]\", \"xarray/tests/test_dataset.py::test_coarsen_coords_cftime\", \"xarray/tests/test_dataset.py::test_coarsen_keep_attrs\", \"xarray/tests/test_dataset.py::test_rolling_properties[1]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-True-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-False-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-1-None-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-True-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-False-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z1-None-None-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-True-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-False-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-1-None-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-True-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-False-median]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-sum]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-mean]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-std]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-var]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-min]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-max]\", \"xarray/tests/test_dataset.py::test_rolling_wrapped_bottleneck[1-z2-None-None-median]\", \"xarray/tests/test_dataset.py::test_rolling_exp[1]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-None-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-None-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-1-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-1-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-2-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-2-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-3-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[1-3-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-None-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-None-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-1-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-1-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-2-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-2-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-3-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[2-3-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-None-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-None-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-1-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-1-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-2-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-2-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-3-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[3-3-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-None-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-None-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-1-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-1-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-2-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-2-False]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-3-True]\", \"xarray/tests/test_dataset.py::test_rolling_pandas_compat[4-3-False]\", \"xarray/tests/test_dataset.py::test_rolling_construct[1-True]\", \"xarray/tests/test_dataset.py::test_rolling_construct[1-False]\", \"xarray/tests/test_dataset.py::test_rolling_construct[2-True]\", \"xarray/tests/test_dataset.py::test_rolling_construct[2-False]\", \"xarray/tests/test_dataset.py::test_rolling_construct[3-True]\", \"xarray/tests/test_dataset.py::test_rolling_construct[3-False]\", \"xarray/tests/test_dataset.py::test_rolling_construct[4-True]\", \"xarray/tests/test_dataset.py::test_rolling_construct[4-False]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-1-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-2-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-3-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[sum-4-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-1-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-2-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-3-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[mean-4-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-2-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-3-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[std-4-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-1-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-2-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-3-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[var-4-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-1-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-2-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-3-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[min-4-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-1-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-2-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-3-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[max-4-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-1-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-2-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-3-3-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-None-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-None-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-None-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-None-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-1-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-1-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-1-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-1-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-2-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-2-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-2-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-2-False-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-3-True-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-3-True-2]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-3-False-1]\", \"xarray/tests/test_dataset.py::test_rolling_reduce[median-4-3-False-2]\", \"xarray/tests/test_dataset.py::test_ndrolling_reduce[True-sum-None-True-2]\", \"xarray/tests/test_dataset.py::test_ndrolling_reduce[True-sum-None-False-2]\", \"xarray/tests/test_dataset.py::test_ndrolling_reduce[True-sum-1-True-2]\", \"xarray/tests/test_dataset.py::test_ndrolling_reduce[True-sum-1-False-2]\", \"xarray/tests/test_dataset.py::test_ndrolling_reduce[True-max-None-True-2]\", \"xarray/tests/test_dataset.py::test_ndrolling_reduce[True-max-None-False-2]\", \"xarray/tests/test_dataset.py::test_ndrolling_reduce[True-max-1-True-2]\", \"xarray/tests/test_dataset.py::test_ndrolling_reduce[True-max-1-False-2]\", \"xarray/tests/test_dataset.py::test_ndrolling_reduce[False-sum-None-True-2]\", \"xarray/tests/test_dataset.py::test_ndrolling_reduce[False-sum-None-False-2]\", \"xarray/tests/test_dataset.py::test_ndrolling_reduce[False-sum-1-True-2]\", \"xarray/tests/test_dataset.py::test_ndrolling_reduce[False-sum-1-False-2]\", \"xarray/tests/test_dataset.py::test_ndrolling_reduce[False-max-None-True-2]\", \"xarray/tests/test_dataset.py::test_ndrolling_reduce[False-max-None-False-2]\", \"xarray/tests/test_dataset.py::test_ndrolling_reduce[False-max-1-True-2]\", \"xarray/tests/test_dataset.py::test_ndrolling_reduce[False-max-1-False-2]\", \"xarray/tests/test_dataset.py::test_ndrolling_construct[True-nan-True]\", \"xarray/tests/test_dataset.py::test_ndrolling_construct[True-nan-False]\", \"xarray/tests/test_dataset.py::test_ndrolling_construct[True-nan-center2]\", \"xarray/tests/test_dataset.py::test_ndrolling_construct[True-0.0-True]\", \"xarray/tests/test_dataset.py::test_ndrolling_construct[True-0.0-False]\", \"xarray/tests/test_dataset.py::test_ndrolling_construct[True-0.0-center2]\", \"xarray/tests/test_dataset.py::test_ndrolling_construct[False-nan-True]\", \"xarray/tests/test_dataset.py::test_ndrolling_construct[False-nan-False]\", \"xarray/tests/test_dataset.py::test_ndrolling_construct[False-nan-center2]\", \"xarray/tests/test_dataset.py::test_ndrolling_construct[False-0.0-True]\", \"xarray/tests/test_dataset.py::test_ndrolling_construct[False-0.0-False]\", \"xarray/tests/test_dataset.py::test_ndrolling_construct[False-0.0-center2]\", \"xarray/tests/test_dataset.py::test_raise_no_warning_for_nan_in_binary_ops\", \"xarray/tests/test_dataset.py::test_raise_no_warning_assert_close[2]\", \"xarray/tests/test_dataset.py::test_differentiate[1-False]\", \"xarray/tests/test_dataset.py::test_differentiate[2-False]\", \"xarray/tests/test_dataset.py::test_differentiate_datetime[False]\", \"xarray/tests/test_dataset.py::test_differentiate_cftime[False]\", \"xarray/tests/test_dataset.py::test_integrate[True]\", \"xarray/tests/test_dataset.py::test_integrate[False]\", \"xarray/tests/test_dataset.py::test_trapz_datetime[np-True]\", \"xarray/tests/test_dataset.py::test_trapz_datetime[np-False]\", \"xarray/tests/test_dataset.py::test_trapz_datetime[cftime-True]\", \"xarray/tests/test_dataset.py::test_trapz_datetime[cftime-False]\", \"xarray/tests/test_dataset.py::test_no_dict\", \"xarray/tests/test_dataset.py::test_subclass_slots\", \"xarray/tests/test_dataset.py::test_weakref\", \"xarray/tests/test_dataset.py::test_deepcopy_obj_array\"]",
  "environment_setup_commit": "1c198a191127c601d091213c4b3292a8bb3054e1",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.880221",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}