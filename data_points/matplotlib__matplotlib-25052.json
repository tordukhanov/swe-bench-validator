{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-25052",
  "base_commit": "c9d7bff6705cf51a249cfb1f2bbbc7f9bef3bdf9",
  "patch": "diff --git a/lib/matplotlib/table.py b/lib/matplotlib/table.py\n--- a/lib/matplotlib/table.py\n+++ b/lib/matplotlib/table.py\n@@ -285,7 +285,7 @@ def __init__(self, ax, loc=None, bbox=None, **kwargs):\n         loc : str\n             The position of the cell with respect to *ax*. This must be one of\n             the `~.Table.codes`.\n-        bbox : `.Bbox` or None\n+        bbox : `.Bbox` or [xmin, ymin, width, height], optional\n             A bounding box to draw the table into. If this is not *None*, this\n             overrides *loc*.\n \n@@ -595,7 +595,10 @@ def _update_positions(self, renderer):\n \n         if self._bbox is not None:\n             # Position according to bbox\n-            rl, rb, rw, rh = self._bbox\n+            if isinstance(self._bbox, Bbox):\n+                rl, rb, rw, rh = self._bbox.bounds\n+            else:\n+                rl, rb, rw, rh = self._bbox\n             self.scale(rw / w, rh / h)\n             ox = rl - l\n             oy = rb - b\n@@ -710,7 +713,7 @@ def table(ax,\n         The position of the cell with respect to *ax*. This must be one of\n         the `~.Table.codes`.\n \n-    bbox : `.Bbox`, optional\n+    bbox : `.Bbox` or [xmin, ymin, width, height], optional\n         A bounding box to draw the table into. If this is not *None*, this\n         overrides *loc*.\n \n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_table.py b/lib/matplotlib/tests/test_table.py\n--- a/lib/matplotlib/tests/test_table.py\n+++ b/lib/matplotlib/tests/test_table.py\n@@ -1,9 +1,10 @@\n import matplotlib.pyplot as plt\n import numpy as np\n-from matplotlib.testing.decorators import image_comparison\n+from matplotlib.testing.decorators import image_comparison, check_figures_equal\n \n from matplotlib.table import CustomCell, Table\n from matplotlib.path import Path\n+from matplotlib.transforms import Bbox\n \n \n def test_non_square():\n@@ -194,3 +195,30 @@ def test_table_cells():\n     # properties and setp\n     table.properties()\n     plt.setp(table)\n+\n+\n+@check_figures_equal(extensions=[\"png\"])\n+def test_table_bbox(fig_test, fig_ref):\n+    data = [[2, 3],\n+            [4, 5]]\n+\n+    col_labels = ('Foo', 'Bar')\n+    row_labels = ('Ada', 'Bob')\n+\n+    cell_text = [[f\"{x}\" for x in row] for row in data]\n+\n+    ax_list = fig_test.subplots()\n+    ax_list.table(cellText=cell_text,\n+                  rowLabels=row_labels,\n+                  colLabels=col_labels,\n+                  loc='center',\n+                  bbox=[0.1, 0.2, 0.8, 0.6]\n+                  )\n+\n+    ax_bbox = fig_ref.subplots()\n+    ax_bbox.table(cellText=cell_text,\n+                  rowLabels=row_labels,\n+                  colLabels=col_labels,\n+                  loc='center',\n+                  bbox=Bbox.from_extents(0.1, 0.2, 0.9, 0.8)\n+                  )\n",
  "problem_statement": "[Doc]: matplotlib.axes.Axes.table bbox parameter\n### Documentation Link\n\nhttps://matplotlib.org/stable/api/_as_gen/matplotlib.axes.Axes.table.html#matplotlib.axes.Axes.table\n\n### Problem\n\nThe documentation states that `bbox` should be an instance of `matplotlib.transforms.Bbox`.\r\n\r\nWhen I try to use it like this I obtain the following error traceback below using **matplotlib v3.6.2**, whereas it works if I define it as e.g. `bbox=[1, 1, 1, 1]` which I guess (but just because I tried empirically) is equivalent to the method `from_bounds()` of Bbox.\r\n\r\n```python\r\nTypeError                                 Traceback (most recent call last)\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/IPython/core/formatters.py:972, in MimeBundleFormatter.__call__(self, obj, include, exclude)\r\n    969     method = get_real_method(obj, self.print_method)\r\n    971     if method is not None:\r\n--> 972         return method(include=include, exclude=exclude)\r\n    973     return None\r\n    974 else:\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/ipympl/backend_nbagg.py:336, in Canvas._repr_mimebundle_(self, **kwargs)\r\n    333     plaintext = plaintext[:110] + 'â€¦'\r\n    335 buf = io.BytesIO()\r\n--> 336 self.figure.savefig(buf, format='png', dpi='figure')\r\n    338 base64_image = b64encode(buf.getvalue()).decode('utf-8')\r\n    339 self._data_url = f'[data:image/png;base64,{](data:image/png;base64,{base64_image)[base64_image](data:image/png;base64,{base64_image)}'\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/matplotlib/figure.py:3274, in Figure.savefig(self, fname, transparent, **kwargs)\r\n   3270     for ax in self.axes:\r\n   3271         stack.enter_context(\r\n   3272             ax.patch._cm_set(facecolor='none', edgecolor='none'))\r\n-> 3274 self.canvas.print_figure(fname, **kwargs)\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/matplotlib/backend_bases.py:2338, in FigureCanvasBase.print_figure(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, pad_inches, bbox_extra_artists, backend, **kwargs)\r\n   2334 try:\r\n   2335     # _get_renderer may change the figure dpi (as vector formats\r\n   2336     # force the figure dpi to 72), so we need to set it again here.\r\n   2337     with cbook._setattr_cm(self.figure, dpi=dpi):\r\n-> 2338         result = print_method(\r\n   2339             filename,\r\n   2340             facecolor=facecolor,\r\n   2341             edgecolor=edgecolor,\r\n   2342             orientation=orientation,\r\n   2343             bbox_inches_restore=_bbox_inches_restore,\r\n   2344             **kwargs)\r\n   2345 finally:\r\n   2346     if bbox_inches and restore_bbox:\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/matplotlib/backend_bases.py:2204, in FigureCanvasBase._switch_canvas_and_return_print_method.<locals>.<lambda>(*args, **kwargs)\r\n   2200     optional_kws = {  # Passed by print_figure for other renderers.\r\n   2201         \"dpi\", \"facecolor\", \"edgecolor\", \"orientation\",\r\n   2202         \"bbox_inches_restore\"}\r\n   2203     skip = optional_kws - {*inspect.signature(meth).parameters}\r\n-> 2204     print_method = functools.wraps(meth)(lambda *args, **kwargs: meth(\r\n   2205         *args, **{k: v for k, v in kwargs.items() if k not in skip}))\r\n   2206 else:  # Let third-parties do as they see fit.\r\n   2207     print_method = meth\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/matplotlib/_api/deprecation.py:410, in delete_parameter.<locals>.wrapper(*inner_args, **inner_kwargs)\r\n    400     deprecation_addendum = (\r\n    401         f\"If any parameter follows {name!r}, they should be passed as \"\r\n    402         f\"keyword, not positionally.\")\r\n    403     warn_deprecated(\r\n    404         since,\r\n    405         name=repr(name),\r\n   (...)\r\n    408                  else deprecation_addendum,\r\n    409         **kwargs)\r\n--> 410 return func(*inner_args, **inner_kwargs)\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/matplotlib/backends/backend_agg.py:517, in FigureCanvasAgg.print_png(self, filename_or_obj, metadata, pil_kwargs, *args)\r\n    468 @_api.delete_parameter(\"3.5\", \"args\")\r\n    469 def print_png(self, filename_or_obj, *args,\r\n    470               metadata=None, pil_kwargs=None):\r\n    471     \"\"\"\r\n    472     Write the figure to a PNG file.\r\n    473 \r\n   (...)\r\n    515         *metadata*, including the default 'Software' key.\r\n    516     \"\"\"\r\n--> 517     self._print_pil(filename_or_obj, \"png\", pil_kwargs, metadata)\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/matplotlib/backends/backend_agg.py:463, in FigureCanvasAgg._print_pil(self, filename_or_obj, fmt, pil_kwargs, metadata)\r\n    458 def _print_pil(self, filename_or_obj, fmt, pil_kwargs, metadata=None):\r\n    459     \"\"\"\r\n    460     Draw the canvas, then save it using `.image.imsave` (to which\r\n    461     *pil_kwargs* and *metadata* are forwarded).\r\n    462     \"\"\"\r\n--> 463     FigureCanvasAgg.draw(self)\r\n    464     mpl.image.imsave(\r\n    465         filename_or_obj, self.buffer_rgba(), format=fmt, origin=\"upper\",\r\n    466         dpi=self.figure.dpi, metadata=metadata, pil_kwargs=pil_kwargs)\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/matplotlib/backends/backend_agg.py:405, in FigureCanvasAgg.draw(self)\r\n    401 # Acquire a lock on the shared font cache.\r\n    402 with RendererAgg.lock, \\\r\n    403      (self.toolbar._wait_cursor_for_draw_cm() if self.toolbar\r\n    404       else nullcontext()):\r\n--> 405     self.figure.draw(self.renderer)\r\n    406     # A GUI class may be need to update a window using this draw, so\r\n    407     # don't forget to call the superclass.\r\n    408     super().draw()\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/matplotlib/artist.py:74, in _finalize_rasterization.<locals>.draw_wrapper(artist, renderer, *args, **kwargs)\r\n     72 @wraps(draw)\r\n     73 def draw_wrapper(artist, renderer, *args, **kwargs):\r\n---> 74     result = draw(artist, renderer, *args, **kwargs)\r\n     75     if renderer._rasterizing:\r\n     76         renderer.stop_rasterizing()\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/matplotlib/artist.py:51, in allow_rasterization.<locals>.draw_wrapper(artist, renderer)\r\n     48     if artist.get_agg_filter() is not None:\r\n     49         renderer.start_filter()\r\n---> 51     return draw(artist, renderer)\r\n     52 finally:\r\n     53     if artist.get_agg_filter() is not None:\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/matplotlib/figure.py:3071, in Figure.draw(self, renderer)\r\n   3068         # ValueError can occur when resizing a window.\r\n   3070 self.patch.draw(renderer)\r\n-> 3071 mimage._draw_list_compositing_images(\r\n   3072     renderer, self, artists, self.suppressComposite)\r\n   3074 for sfig in self.subfigs:\r\n   3075     sfig.draw(renderer)\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/matplotlib/image.py:131, in _draw_list_compositing_images(renderer, parent, artists, suppress_composite)\r\n    129 if not_composite or not has_images:\r\n    130     for a in artists:\r\n--> 131         a.draw(renderer)\r\n    132 else:\r\n    133     # Composite any adjacent images together\r\n    134     image_group = []\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/matplotlib/artist.py:51, in allow_rasterization.<locals>.draw_wrapper(artist, renderer)\r\n     48     if artist.get_agg_filter() is not None:\r\n     49         renderer.start_filter()\r\n---> 51     return draw(artist, renderer)\r\n     52 finally:\r\n     53     if artist.get_agg_filter() is not None:\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/matplotlib/axes/_base.py:3107, in _AxesBase.draw(self, renderer)\r\n   3104         a.draw(renderer)\r\n   3105     renderer.stop_rasterizing()\r\n-> 3107 mimage._draw_list_compositing_images(\r\n   3108     renderer, self, artists, self.figure.suppressComposite)\r\n   3110 renderer.close_group('axes')\r\n   3111 self.stale = False\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/matplotlib/image.py:131, in _draw_list_compositing_images(renderer, parent, artists, suppress_composite)\r\n    129 if not_composite or not has_images:\r\n    130     for a in artists:\r\n--> 131         a.draw(renderer)\r\n    132 else:\r\n    133     # Composite any adjacent images together\r\n    134     image_group = []\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/matplotlib/artist.py:51, in allow_rasterization.<locals>.draw_wrapper(artist, renderer)\r\n     48     if artist.get_agg_filter() is not None:\r\n     49         renderer.start_filter()\r\n---> 51     return draw(artist, renderer)\r\n     52 finally:\r\n     53     if artist.get_agg_filter() is not None:\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/matplotlib/table.py:409, in Table.draw(self, renderer)\r\n    407     return\r\n    408 renderer.open_group('table', gid=self.get_gid())\r\n--> 409 self._update_positions(renderer)\r\n    411 for key in sorted(self._cells):\r\n    412     self._cells[key].draw(renderer)\r\n\r\nFile ~/Applications/mambaforge/envs/swgo-plot/lib/python3.9/site-packages/matplotlib/table.py:598, in Table._update_positions(self, renderer)\r\n    594 l, b, w, h = bbox.bounds\r\n    596 if self._bbox is not None:\r\n    597     # Position according to bbox\r\n--> 598     rl, rb, rw, rh = self._bbox\r\n    599     self.scale(rw / w, rh / h)\r\n    600     ox = rl - l\r\n\r\nTypeError: cannot unpack non-iterable Bbox object\r\nCanvas(toolbar=Toolbar(toolitems=[('Home', 'Reset original view', 'home', 'home'), ('Back', 'Back to previous view', 'arrow-left', 'back'), ('Forward', 'Forward to next view', 'arrow-right', 'forward'), ('Pan', 'Left button pans, Right button zooms\\nx/y fixes axis, CTRL fixes aspect', 'arrows', 'pan'), ('Zoom', 'Zoom to rectangle\\nx/y fixes axis', 'square-o', 'zoom'), ('Download', 'Download plot', 'floppy-o', 'save_figure')]))\r\n```\n\n### Suggested improvement\n\nEither let the parameter be a proper BBox (my suggestion) or specify that the usage is that of `from_bounds()`\n",
  "hints_text": "Thanks for reporting this! The table module is quite scarcely maintained, but this should be possible to fix. I guess supporting both the doc and the existing behavior is the way to go.",
  "created_at": "2023-01-21T16:17:32Z",
  "version": "3.6",
  "FAIL_TO_PASS": "[\"lib/matplotlib/tests/test_table.py::test_table_bbox[png]\"]",
  "PASS_TO_PASS": "[\"lib/matplotlib/tests/test_table.py::test_non_square\", \"lib/matplotlib/tests/test_table.py::test_zorder[png]\", \"lib/matplotlib/tests/test_table.py::test_label_colours[png]\", \"lib/matplotlib/tests/test_table.py::test_diff_cell_table[png]\", \"lib/matplotlib/tests/test_table.py::test_customcell\", \"lib/matplotlib/tests/test_table.py::test_auto_column[png]\", \"lib/matplotlib/tests/test_table.py::test_table_cells\"]",
  "environment_setup_commit": "73909bcb408886a22e2b84581d6b9e6d9907c813",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.816611",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}