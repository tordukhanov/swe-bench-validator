{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-8020",
  "base_commit": "bb65ea7930205ff54986136cd519c32a83407087",
  "patch": "diff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -11,6 +11,7 @@\n import builtins\n import inspect\n import re\n+import sys\n import typing\n import warnings\n from inspect import Parameter\n@@ -134,6 +135,19 @@ def unparse(node: ast.AST) -> List[Node]:\n \n             return result\n         else:\n+            if sys.version_info >= (3, 6):\n+                if isinstance(node, ast.Constant):\n+                    if node.value is Ellipsis:\n+                        return [addnodes.desc_sig_punctuation('', \"...\")]\n+                    else:\n+                        return [nodes.Text(node.value)]\n+\n+            if sys.version_info < (3, 8):\n+                if isinstance(node, ast.Ellipsis):\n+                    return [addnodes.desc_sig_punctuation('', \"...\")]\n+                elif isinstance(node, ast.NameConstant):\n+                    return [nodes.Text(node.value)]\n+\n             raise SyntaxError  # unsupported syntax\n \n     if env is None:\n",
  "test_patch": "diff --git a/tests/test_domain_py.py b/tests/test_domain_py.py\n--- a/tests/test_domain_py.py\n+++ b/tests/test_domain_py.py\n@@ -262,6 +262,14 @@ def test_parse_annotation(app):\n                           [desc_sig_punctuation, \")\"],\n                           [desc_sig_punctuation, \"]\"]))\n \n+    doctree = _parse_annotation(\"Tuple[int, ...]\", app.env)\n+    assert_node(doctree, ([pending_xref, \"Tuple\"],\n+                          [desc_sig_punctuation, \"[\"],\n+                          [pending_xref, \"int\"],\n+                          [desc_sig_punctuation, \", \"],\n+                          [desc_sig_punctuation, \"...\"],\n+                          [desc_sig_punctuation, \"]\"]))\n+\n     doctree = _parse_annotation(\"Callable[[int, int], int]\", app.env)\n     assert_node(doctree, ([pending_xref, \"Callable\"],\n                           [desc_sig_punctuation, \"[\"],\n@@ -274,6 +282,12 @@ def test_parse_annotation(app):\n                           [pending_xref, \"int\"],\n                           [desc_sig_punctuation, \"]\"]))\n \n+    doctree = _parse_annotation(\"List[None]\", app.env)\n+    assert_node(doctree, ([pending_xref, \"List\"],\n+                          [desc_sig_punctuation, \"[\"],\n+                          [pending_xref, \"None\"],\n+                          [desc_sig_punctuation, \"]\"]))\n+\n     # None type makes an object-reference (not a class reference)\n     doctree = _parse_annotation(\"None\", app.env)\n     assert_node(doctree, ([pending_xref, \"None\"],))\n",
  "problem_statement": "3.1.2 introduces WARNING: py:class reference target not found: Callable[[...], Awaitable[None]]\n**Describe the bug**\r\n```python\r\n@decorator.decorator\r\ndef host(\r\n    func: typing.Callable[..., typing.Awaitable[None]],\r\n    timeout: float = 3,\r\n    *args,\r\n    **kwargs\r\n):\r\n```\r\n\r\nMy project, including the above function definition, builds cleanly with Sphinx 3.1.1 but with 3.1.2 I get the following warning.\r\n\r\n```\r\n/home/altendky/repos/preqtrio/qtrio/_pytest.py:docstring of qtrio.host:: WARNING: py:class reference target not found: Callable[[...], Awaitable[None]]\r\n```\r\n\r\nNote that the resulting parameter documentation does properly hyperlink `Callable` and `Awaitable` but `None` does not get a link.\r\n\r\nhttps://qtrio--105.org.readthedocs.build/en/105/testing.html#qtrio.host\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```bash\r\ngit clone https://github.com/altendky/qtrio\r\ncd qtrio\r\ngit checkout 38d8e6501b032429f2875e21779dfb67b2604d94\r\npython3 -m venv venv\r\nvenv/bin/pip install --upgrade pip setuptools wheel\r\nvenv/bin/pip install -e .[pyside2,docs]\r\nsource venv/bin/activate\r\ncd docs\r\n../venv/bin/pip install --upgrade sphinx==3.1.1\r\nrm -rf build; make html\r\n../venv/bin/pip install --upgrade sphinx==3.1.2\r\nrm -rf build; make html\r\n```\r\n\r\n**Expected behavior**\r\nThe error doesn't happen in either case and `Callable`, `Awaitable`, and `None` all get properly hyperlinked.\r\n\r\n**Your project**\r\nhttps://github.com/altendky/qtrio\r\n\r\n**Screenshots**\r\n![image](https://user-images.githubusercontent.com/543719/88496663-e5bd1780-cf8b-11ea-8fe5-a9c8e89f4184.png)\r\n\r\n**Environment info**\r\n- OS: Linux - Ubuntu 20.04\r\n- Python version: 3.8.3\r\n- Sphinx version: 3.1.2\r\n- Sphinx extensions:\r\n  - sphinx.ext.autodoc\r\n  - sphinx.ext.intersphinx\r\n  - sphinx.ext.coverage\r\n  - sphinx.ext.napoleon\r\n  - sphinx_autodoc_typehints\r\n  - sphinx_qt_documentation\r\n  - sphinxcontrib_trio\r\n\r\n**Additional context**\r\nhttps://github.com/altendky/qtrio/pull/105\n",
  "hints_text": "",
  "created_at": "2020-07-29T16:43:16Z",
  "version": "3.2",
  "FAIL_TO_PASS": "[\"tests/test_domain_py.py::test_parse_annotation\"]",
  "PASS_TO_PASS": "[\"tests/test_domain_py.py::test_function_signatures\", \"tests/test_domain_py.py::test_domain_py_xrefs\", \"tests/test_domain_py.py::test_domain_py_objects\", \"tests/test_domain_py.py::test_resolve_xref_for_properties\", \"tests/test_domain_py.py::test_domain_py_find_obj\", \"tests/test_domain_py.py::test_get_full_qualified_name\", \"tests/test_domain_py.py::test_pyfunction_signature\", \"tests/test_domain_py.py::test_pyfunction_signature_full\", \"tests/test_domain_py.py::test_pyfunction_signature_full_py38\", \"tests/test_domain_py.py::test_optional_pyfunction_signature\", \"tests/test_domain_py.py::test_pyexception_signature\", \"tests/test_domain_py.py::test_exceptions_module_is_ignored\", \"tests/test_domain_py.py::test_pydata_signature\", \"tests/test_domain_py.py::test_pydata_signature_old\", \"tests/test_domain_py.py::test_pyobject_prefix\", \"tests/test_domain_py.py::test_pydata\", \"tests/test_domain_py.py::test_pyfunction\", \"tests/test_domain_py.py::test_pyclass_options\", \"tests/test_domain_py.py::test_pymethod_options\", \"tests/test_domain_py.py::test_pyclassmethod\", \"tests/test_domain_py.py::test_pystaticmethod\", \"tests/test_domain_py.py::test_pyattribute\", \"tests/test_domain_py.py::test_pydecorator_signature\", \"tests/test_domain_py.py::test_pydecoratormethod_signature\", \"tests/test_domain_py.py::test_module_index\", \"tests/test_domain_py.py::test_module_index_submodule\", \"tests/test_domain_py.py::test_module_index_not_collapsed\", \"tests/test_domain_py.py::test_modindex_common_prefix\", \"tests/test_domain_py.py::test_noindexentry\"]",
  "environment_setup_commit": "f92fa6443fe6f457ab0c26d41eb229e825fda5e1",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.049980",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}