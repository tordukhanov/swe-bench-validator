{
  "repo": "pydata/xarray",
  "instance_id": "pydata__xarray-5362",
  "base_commit": "bc41eb20ba96c4d6a4b5bf12f1749523f34fa321",
  "patch": "diff --git a/xarray/core/weighted.py b/xarray/core/weighted.py\n--- a/xarray/core/weighted.py\n+++ b/xarray/core/weighted.py\n@@ -119,6 +119,19 @@ def _weight_check(w):\n         self.obj: T_DataWithCoords = obj\n         self.weights: \"DataArray\" = weights\n \n+    def _check_dim(self, dim: Optional[Union[Hashable, Iterable[Hashable]]]):\n+        \"\"\"raise an error if any dimension is missing\"\"\"\n+\n+        if isinstance(dim, str) or not isinstance(dim, Iterable):\n+            dims = [dim] if dim else []\n+        else:\n+            dims = list(dim)\n+        missing_dims = set(dims) - set(self.obj.dims) - set(self.weights.dims)\n+        if missing_dims:\n+            raise ValueError(\n+                f\"{self.__class__.__name__} does not contain the dimensions: {missing_dims}\"\n+            )\n+\n     @staticmethod\n     def _reduce(\n         da: \"DataArray\",\n@@ -236,6 +249,8 @@ def __repr__(self):\n class DataArrayWeighted(Weighted[\"DataArray\"]):\n     def _implementation(self, func, dim, **kwargs) -> \"DataArray\":\n \n+        self._check_dim(dim)\n+\n         dataset = self.obj._to_temp_dataset()\n         dataset = dataset.map(func, dim=dim, **kwargs)\n         return self.obj._from_temp_dataset(dataset)\n@@ -244,6 +259,8 @@ def _implementation(self, func, dim, **kwargs) -> \"DataArray\":\n class DatasetWeighted(Weighted[\"Dataset\"]):\n     def _implementation(self, func, dim, **kwargs) -> \"Dataset\":\n \n+        self._check_dim(dim)\n+\n         return self.obj.map(func, dim=dim, **kwargs)\n \n \n",
  "test_patch": "diff --git a/xarray/tests/test_weighted.py b/xarray/tests/test_weighted.py\n--- a/xarray/tests/test_weighted.py\n+++ b/xarray/tests/test_weighted.py\n@@ -368,3 +368,19 @@ def test_weighted_operations_keep_attr_da_in_ds(operation):\n     result = getattr(data.weighted(weights), operation)(keep_attrs=True)\n \n     assert data.a.attrs == result.a.attrs\n+\n+\n+@pytest.mark.parametrize(\"as_dataset\", (True, False))\n+def test_weighted_bad_dim(as_dataset):\n+\n+    data = DataArray(np.random.randn(2, 2))\n+    weights = xr.ones_like(data)\n+    if as_dataset:\n+        data = data.to_dataset(name=\"data\")\n+\n+    error_msg = (\n+        f\"{data.__class__.__name__}Weighted\"\n+        \" does not contain the dimensions: {'bad_dim'}\"\n+    )\n+    with pytest.raises(ValueError, match=error_msg):\n+        data.weighted(weights).mean(\"bad_dim\")\n",
  "problem_statement": "Should weighted operations raise an error when dimensions don't exist?\n<!-- Please include a self-contained copy-pastable example that generates the issue if possible.\r\n\r\nPlease be concise with code posted. See guidelines below on how to provide a good bug report:\r\n\r\n- Craft Minimal Bug Reports: http://matthewrocklin.com/blog/work/2018/02/28/minimal-bug-reports\r\n- Minimal Complete Verifiable Examples: https://stackoverflow.com/help/mcve\r\n\r\nBug reports that follow these guidelines are easier to diagnose, and so are often handled much more quickly.\r\n-->\r\n\r\n**What happened**:\r\nWeighted operations don't raise an error when the dimensions passed don't exist.\r\n\r\n**What you expected to happen**:\r\nThis is not really a bug, but I find it a bit confusing because it's not consistent with the same \"unweighted\" operation.\r\n\r\n**Minimal Complete Verifiable Example**:\r\n\r\n```python\r\nimport xarray as xr\r\nds = xr.tutorial.open_dataset(\"air_temperature\")\r\nds.weighted(xr.ones_like(ds[\"air\"])).mean(\"dummy\")\r\n```\r\n\r\n**Environment**:\r\n\r\n<details><summary>Output of <tt>xr.show_versions()</tt></summary>\r\n\r\n<!-- Paste the output here xr.show_versions() here -->\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit: None\r\npython: 3.9.4 | packaged by conda-forge | (default, May 10 2021, 22:13:33) \r\n[GCC 9.3.0]\r\npython-bits: 64\r\nOS: Linux\r\nOS-release: 3.10.0-1062.18.1.el7.x86_64\r\nmachine: x86_64\r\nprocessor: x86_64\r\nbyteorder: little\r\nLC_ALL: None\r\nLANG: en_GB.UTF-8\r\nLOCALE: ('en_GB', 'UTF-8')\r\nlibhdf5: 1.10.6\r\nlibnetcdf: 4.7.4\r\n\r\nxarray: 0.18.1.dev30+g2578fc3\r\npandas: 1.2.4\r\nnumpy: 1.20.2\r\nscipy: 1.6.3\r\nnetCDF4: 1.5.6\r\npydap: installed\r\nh5netcdf: 0.11.0\r\nh5py: 3.2.1\r\nNio: None\r\nzarr: 2.8.1\r\ncftime: 1.4.1\r\nnc_time_axis: 1.2.0\r\nPseudoNetCDF: None\r\nrasterio: 1.2.3\r\ncfgrib: 0.9.9.0\r\niris: None\r\nbottleneck: 1.3.2\r\ndask: 2021.05.0\r\ndistributed: 2021.05.0\r\nmatplotlib: 3.4.2\r\ncartopy: 0.19.0.post1\r\nseaborn: 0.11.1\r\nnumbagg: installed\r\npint: None\r\nsetuptools: 49.6.0.post20210108\r\npip: 21.1.1\r\nconda: None\r\npytest: None\r\nIPython: 7.23.1\r\nsphinx: None\r\n\r\n</details>\r\n\n",
  "hints_text": "Thanks â€” I think it would be reasonable to raise an error here.\n+1 this should absolutely raise an error! We try to follow the Zen of Python \"Errors should never pass silently.\"",
  "created_at": "2021-05-22T16:51:54Z",
  "version": "0.18",
  "FAIL_TO_PASS": "[\"xarray/tests/test_weighted.py::test_weighted_bad_dim[True]\", \"xarray/tests/test_weighted.py::test_weighted_bad_dim[False]\"]",
  "PASS_TO_PASS": "[\"xarray/tests/test_weighted.py::test_weighted_non_DataArray_weights[True]\", \"xarray/tests/test_weighted.py::test_weighted_non_DataArray_weights[False]\", \"xarray/tests/test_weighted.py::test_weighted_weights_nan_raises[weights0-True]\", \"xarray/tests/test_weighted.py::test_weighted_weights_nan_raises[weights0-False]\", \"xarray/tests/test_weighted.py::test_weighted_weights_nan_raises[weights1-True]\", \"xarray/tests/test_weighted.py::test_weighted_weights_nan_raises[weights1-False]\", \"xarray/tests/test_weighted.py::test_weighted_weights_nan_raises_dask[weights0-True]\", \"xarray/tests/test_weighted.py::test_weighted_weights_nan_raises_dask[weights0-False]\", \"xarray/tests/test_weighted.py::test_weighted_weights_nan_raises_dask[weights1-True]\", \"xarray/tests/test_weighted.py::test_weighted_weights_nan_raises_dask[weights1-False]\", \"xarray/tests/test_weighted.py::test_weighted_lazy_resample[1AS-1]\", \"xarray/tests/test_weighted.py::test_weighted_lazy_resample[1AS-5]\", \"xarray/tests/test_weighted.py::test_weighted_lazy_resample[5AS-1]\", \"xarray/tests/test_weighted.py::test_weighted_lazy_resample[5AS-5]\", \"xarray/tests/test_weighted.py::test_weighted_lazy_resample[10AS-1]\", \"xarray/tests/test_weighted.py::test_weighted_lazy_resample[10AS-5]\", \"xarray/tests/test_weighted.py::test_weighted_sum_of_weights_no_nan[weights0-3]\", \"xarray/tests/test_weighted.py::test_weighted_sum_of_weights_no_nan[weights1-2]\", \"xarray/tests/test_weighted.py::test_weighted_sum_of_weights_no_nan[weights2-nan]\", \"xarray/tests/test_weighted.py::test_weighted_sum_of_weights_no_nan[weights3-nan]\", \"xarray/tests/test_weighted.py::test_weighted_sum_of_weights_nan[weights0-2]\", \"xarray/tests/test_weighted.py::test_weighted_sum_of_weights_nan[weights1-nan]\", \"xarray/tests/test_weighted.py::test_weighted_sum_of_weights_nan[weights2-nan]\", \"xarray/tests/test_weighted.py::test_weighted_sum_of_weights_nan[weights3-1]\", \"xarray/tests/test_weighted.py::test_weighted_sum_of_weights_bool\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[True-0-da0]\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[True-0-da1]\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[True-0-da2]\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[True-1-da0]\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[True-1-da1]\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[True-1-da2]\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[True-3.14-da0]\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[True-3.14-da1]\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[True-3.14-da2]\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[False-0-da0]\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[False-0-da1]\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[False-0-da2]\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[False-1-da0]\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[False-1-da1]\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[False-1-da2]\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[False-3.14-da0]\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[False-3.14-da1]\", \"xarray/tests/test_weighted.py::test_weighted_sum_equal_weights[False-3.14-da2]\", \"xarray/tests/test_weighted.py::test_weighted_sum_no_nan[weights0-5]\", \"xarray/tests/test_weighted.py::test_weighted_sum_no_nan[weights1-4]\", \"xarray/tests/test_weighted.py::test_weighted_sum_no_nan[weights2-0]\", \"xarray/tests/test_weighted.py::test_weighted_sum_nan[True-weights0-4]\", \"xarray/tests/test_weighted.py::test_weighted_sum_nan[True-weights1-4]\", \"xarray/tests/test_weighted.py::test_weighted_sum_nan[True-weights2-0]\", \"xarray/tests/test_weighted.py::test_weighted_sum_nan[True-weights3-0]\", \"xarray/tests/test_weighted.py::test_weighted_sum_nan[False-weights0-4]\", \"xarray/tests/test_weighted.py::test_weighted_sum_nan[False-weights1-4]\", \"xarray/tests/test_weighted.py::test_weighted_sum_nan[False-weights2-0]\", \"xarray/tests/test_weighted.py::test_weighted_sum_nan[False-weights3-0]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[1-True-da0]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[1-True-da1]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[1-True-da2]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[1-False-da0]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[1-False-da1]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[1-False-da2]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[2-True-da0]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[2-True-da1]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[2-True-da2]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[2-False-da0]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[2-False-da1]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[2-False-da2]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[3.14-True-da0]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[3.14-True-da1]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[3.14-True-da2]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[3.14-False-da0]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[3.14-False-da1]\", \"xarray/tests/test_weighted.py::test_weighted_mean_equal_weights[3.14-False-da2]\", \"xarray/tests/test_weighted.py::test_weighted_mean_no_nan[weights0-1.6]\", \"xarray/tests/test_weighted.py::test_weighted_mean_no_nan[weights1-1.0]\", \"xarray/tests/test_weighted.py::test_weighted_mean_no_nan[weights2-nan]\", \"xarray/tests/test_weighted.py::test_weighted_mean_nan[True-weights0-2.0]\", \"xarray/tests/test_weighted.py::test_weighted_mean_nan[True-weights1-nan]\", \"xarray/tests/test_weighted.py::test_weighted_mean_nan[True-weights2-nan]\", \"xarray/tests/test_weighted.py::test_weighted_mean_nan[False-weights0-2.0]\", \"xarray/tests/test_weighted.py::test_weighted_mean_nan[False-weights1-nan]\", \"xarray/tests/test_weighted.py::test_weighted_mean_nan[False-weights2-nan]\", \"xarray/tests/test_weighted.py::test_weighted_mean_bool\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[None-True-a]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[None-True-b]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[None-True-c]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[None-True-dim3]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[None-True-dim4]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[None-True-None]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[None-False-a]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[None-False-b]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[None-False-c]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[None-False-dim3]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[None-False-dim4]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[None-False-None]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[True-True-a]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[True-True-b]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[True-True-c]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[True-True-dim3]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[True-True-dim4]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[True-True-None]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[True-False-a]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[True-False-b]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[True-False-c]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[True-False-dim3]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[True-False-dim4]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[True-False-None]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[False-True-a]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[False-True-b]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[False-True-c]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[False-True-dim3]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[False-True-dim4]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[False-True-None]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[False-False-a]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[False-False-b]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[False-False-c]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[False-False-dim3]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[False-False-dim4]\", \"xarray/tests/test_weighted.py::test_weighted_operations_3D[False-False-None]\", \"xarray/tests/test_weighted.py::test_weighted_operations_nonequal_coords\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights0-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights0-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights0-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights1-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights1-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights1-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-True-shape_weights2-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-False-shape_weights0-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-False-shape_weights0-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-False-shape_weights0-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-False-shape_weights1-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-False-shape_weights1-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-False-shape_weights1-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-False-shape_weights2-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-False-shape_weights2-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[None-False-shape_weights2-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights0-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights1-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights1-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights1-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights2-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights2-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-True-shape_weights2-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-False-shape_weights0-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-False-shape_weights0-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-False-shape_weights0-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-False-shape_weights1-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-False-shape_weights1-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-False-shape_weights1-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-False-shape_weights2-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-False-shape_weights2-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[True-False-shape_weights2-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-True-shape_weights0-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-True-shape_weights0-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-True-shape_weights0-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-True-shape_weights1-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-True-shape_weights1-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-True-shape_weights1-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-True-shape_weights2-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-True-shape_weights2-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-True-shape_weights2-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-False-shape_weights0-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-False-shape_weights0-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-False-shape_weights0-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-False-shape_weights1-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-False-shape_weights1-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-False-shape_weights1-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-False-shape_weights2-shape_data0]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-False-shape_weights2-shape_data1]\", \"xarray/tests/test_weighted.py::test_weighted_operations_different_shapes[False-False-shape_weights2-shape_data2]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[True-True-sum_of_weights]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[True-True-sum]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[True-True-mean]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[True-False-sum_of_weights]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[True-False-sum]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[True-False-mean]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[False-True-sum_of_weights]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[False-True-sum]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[False-True-mean]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[False-False-sum_of_weights]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[False-False-sum]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[False-False-mean]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[None-True-sum_of_weights]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[None-True-sum]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[None-True-mean]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[None-False-sum_of_weights]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[None-False-sum]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr[None-False-mean]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr_da_in_ds[sum]\", \"xarray/tests/test_weighted.py::test_weighted_operations_keep_attr_da_in_ds[mean]\"]",
  "environment_setup_commit": "4f1e2d37b662079e830c9672400fabc19b44a376",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.889552",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}