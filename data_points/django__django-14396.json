{
  "repo": "django/django",
  "instance_id": "django__django-14396",
  "base_commit": "e197dcca366cf0b7203123e4ba7f8962e1d69e72",
  "patch": "diff --git a/django/contrib/sitemaps/__init__.py b/django/contrib/sitemaps/__init__.py\n--- a/django/contrib/sitemaps/__init__.py\n+++ b/django/contrib/sitemaps/__init__.py\n@@ -1,3 +1,4 @@\n+import warnings\n from urllib.parse import urlencode\n from urllib.request import urlopen\n \n@@ -7,6 +8,7 @@\n from django.core.exceptions import ImproperlyConfigured\n from django.urls import NoReverseMatch, reverse\n from django.utils import translation\n+from django.utils.deprecation import RemovedInDjango50Warning\n \n PING_URL = \"https://www.google.com/webmasters/tools/ping\"\n \n@@ -122,6 +124,16 @@ def location(self, item):\n \n     def get_protocol(self, protocol=None):\n         # Determine protocol\n+        if self.protocol is None and protocol is None:\n+            warnings.warn(\n+                \"The default sitemap protocol will be changed from 'http' to \"\n+                \"'https' in Django 5.0. Set Sitemap.protocol to silence this \"\n+                \"warning.\",\n+                category=RemovedInDjango50Warning,\n+                stacklevel=2,\n+            )\n+        # RemovedInDjango50Warning: when the deprecation ends, replace 'http'\n+        # with 'https'.\n         return self.protocol or protocol or 'http'\n \n     def get_domain(self, site=None):\n",
  "test_patch": "diff --git a/tests/sitemaps_tests/test_generic.py b/tests/sitemaps_tests/test_generic.py\n--- a/tests/sitemaps_tests/test_generic.py\n+++ b/tests/sitemaps_tests/test_generic.py\n@@ -1,7 +1,8 @@\n from datetime import datetime\n \n from django.contrib.sitemaps import GenericSitemap\n-from django.test import override_settings\n+from django.test import ignore_warnings, override_settings\n+from django.utils.deprecation import RemovedInDjango50Warning\n \n from .base import SitemapTestsBase\n from .models import TestModel\n@@ -57,3 +58,30 @@ def test_generic_sitemap_lastmod(self):\n \"\"\" % (self.base_url, test_model.pk)\n         self.assertXMLEqual(response.content.decode(), expected_content)\n         self.assertEqual(response.headers['Last-Modified'], 'Wed, 13 Mar 2013 10:00:00 GMT')\n+\n+    def test_get_protocol_defined_in_constructor(self):\n+        for protocol in ['http', 'https']:\n+            with self.subTest(protocol=protocol):\n+                sitemap = GenericSitemap({'queryset': None}, protocol=protocol)\n+                self.assertEqual(sitemap.get_protocol(), protocol)\n+\n+    def test_get_protocol_passed_as_argument(self):\n+        sitemap = GenericSitemap({'queryset': None})\n+        for protocol in ['http', 'https']:\n+            with self.subTest(protocol=protocol):\n+                self.assertEqual(sitemap.get_protocol(protocol), protocol)\n+\n+    @ignore_warnings(category=RemovedInDjango50Warning)\n+    def test_get_protocol_default(self):\n+        sitemap = GenericSitemap({'queryset': None})\n+        self.assertEqual(sitemap.get_protocol(), 'http')\n+\n+    def test_get_protocol_default_warning(self):\n+        sitemap = GenericSitemap({'queryset': None})\n+        msg = (\n+            \"The default sitemap protocol will be changed from 'http' to \"\n+            \"'https' in Django 5.0. Set Sitemap.protocol to silence this \"\n+            \"warning.\"\n+        )\n+        with self.assertWarnsMessage(RemovedInDjango50Warning, msg):\n+            sitemap.get_protocol()\ndiff --git a/tests/sitemaps_tests/test_http.py b/tests/sitemaps_tests/test_http.py\n--- a/tests/sitemaps_tests/test_http.py\n+++ b/tests/sitemaps_tests/test_http.py\n@@ -4,8 +4,9 @@\n from django.contrib.sitemaps import Sitemap\n from django.contrib.sites.models import Site\n from django.core.exceptions import ImproperlyConfigured\n-from django.test import modify_settings, override_settings\n+from django.test import ignore_warnings, modify_settings, override_settings\n from django.utils import translation\n+from django.utils.deprecation import RemovedInDjango50Warning\n from django.utils.formats import localize\n \n from .base import SitemapTestsBase\n@@ -197,6 +198,7 @@ def test_requestsite_sitemap(self):\n \"\"\" % date.today()\n         self.assertXMLEqual(response.content.decode(), expected_content)\n \n+    @ignore_warnings(category=RemovedInDjango50Warning)\n     def test_sitemap_get_urls_no_site_1(self):\n         \"\"\"\n         Check we get ImproperlyConfigured if we don't pass a site object to\n@@ -207,6 +209,7 @@ def test_sitemap_get_urls_no_site_1(self):\n             Sitemap().get_urls()\n \n     @modify_settings(INSTALLED_APPS={'remove': 'django.contrib.sites'})\n+    @ignore_warnings(category=RemovedInDjango50Warning)\n     def test_sitemap_get_urls_no_site_2(self):\n         \"\"\"\n         Check we get ImproperlyConfigured when we don't pass a site object to\n@@ -216,6 +219,7 @@ def test_sitemap_get_urls_no_site_2(self):\n         with self.assertRaisesMessage(ImproperlyConfigured, self.use_sitemap_err_msg):\n             Sitemap().get_urls()\n \n+    @ignore_warnings(category=RemovedInDjango50Warning)\n     def test_sitemap_item(self):\n         \"\"\"\n         Check to make sure that the raw item is included with each\n",
  "problem_statement": "Make Sitemap's protocol default to \"https\".\nDescription\n\t\nI think it is time to change the default of Sitemap.protocol to https.\n​https://docs.djangoproject.com/en/3.1/ref/contrib/sitemaps/#django.contrib.sitemaps.Sitemap.protocol\nOf course slowly with a clear deprecation timeline.\nWhat do you think?\n",
  "hints_text": "Sounds reasonable. We can add a warning for changing the default and switch it when the deprecation ends (as in 9a30acad8a1996c914351bad981d937de4db29a4). Would you like to provide a patch?\n​PR",
  "created_at": "2021-05-14T10:18:56Z",
  "version": "4.0",
  "FAIL_TO_PASS": "[\"test_get_protocol_default_warning (sitemaps_tests.test_generic.GenericViewsSitemapTests)\"]",
  "PASS_TO_PASS": "[\"A minimal generic sitemap can be rendered\", \"test_generic_sitemap_attributes (sitemaps_tests.test_generic.GenericViewsSitemapTests)\", \"test_generic_sitemap_lastmod (sitemaps_tests.test_generic.GenericViewsSitemapTests)\", \"test_get_protocol_default (sitemaps_tests.test_generic.GenericViewsSitemapTests)\", \"test_get_protocol_defined_in_constructor (sitemaps_tests.test_generic.GenericViewsSitemapTests)\", \"test_get_protocol_passed_as_argument (sitemaps_tests.test_generic.GenericViewsSitemapTests)\", \"A i18n sitemap with alternate/hreflang links can be rendered.\", \"A i18n sitemap index with limited languages can be rendered.\", \"A i18n sitemap index with x-default can be rendered.\", \"A cached sitemap index can be rendered (#2713).\", \"test_empty_page (sitemaps_tests.test_http.HTTPSitemapTests)\", \"test_empty_sitemap (sitemaps_tests.test_http.HTTPSitemapTests)\", \"The priority value should not be localized.\", \"test_no_section (sitemaps_tests.test_http.HTTPSitemapTests)\", \"test_page_not_int (sitemaps_tests.test_http.HTTPSitemapTests)\", \"A sitemap may have multiple pages.\", \"test_requestsite_sitemap (sitemaps_tests.test_http.HTTPSitemapTests)\", \"A simple sitemap can be rendered with a custom template\", \"A simple i18n sitemap index can be rendered, without logging variable\", \"A simple sitemap can be rendered\", \"A simple sitemap index can be rendered with a custom template\", \"A simple sitemap index can be rendered\", \"A simple sitemap section can be rendered\", \"Check we get ImproperlyConfigured if we don't pass a site object to\", \"Check we get ImproperlyConfigured when we don't pass a site object to\", \"Check to make sure that the raw item is included with each\", \"Last-Modified header is set correctly\", \"The Last-Modified header should be support dates (without time).\", \"Last-Modified header is missing when sitemap has no lastmod\", \"Last-Modified header is omitted when lastmod not on all items\", \"The Last-Modified header should be converted from timezone aware dates\", \"A sitemap may not be callable.\", \"test_sitemap_without_entries (sitemaps_tests.test_http.HTTPSitemapTests)\", \"The Last-Modified header is set to the most recent sitemap lastmod.\", \"The Last-Modified header is omitted when lastmod isn't found in all\", \"test_x_robots_sitemap (sitemaps_tests.test_http.HTTPSitemapTests)\"]",
  "environment_setup_commit": "475cffd1d64c690cdad16ede4d5e81985738ceb4",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.690826",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}