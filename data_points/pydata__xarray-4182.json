{
  "repo": "pydata/xarray",
  "instance_id": "pydata__xarray-4182",
  "base_commit": "65ca92a5c0a4143d00dd7a822bcb1d49738717f1",
  "patch": "diff --git a/xarray/core/formatting_html.py b/xarray/core/formatting_html.py\n--- a/xarray/core/formatting_html.py\n+++ b/xarray/core/formatting_html.py\n@@ -184,7 +184,7 @@ def dim_section(obj):\n def array_section(obj):\n     # \"unique\" id to expand/collapse the section\n     data_id = \"section-\" + str(uuid.uuid4())\n-    collapsed = \"\"\n+    collapsed = \"checked\"\n     variable = getattr(obj, \"variable\", obj)\n     preview = escape(inline_variable_array_repr(variable, max_width=70))\n     data_repr = short_data_repr_html(obj)\n",
  "test_patch": "diff --git a/xarray/tests/test_formatting_html.py b/xarray/tests/test_formatting_html.py\n--- a/xarray/tests/test_formatting_html.py\n+++ b/xarray/tests/test_formatting_html.py\n@@ -108,8 +108,8 @@ def test_summarize_attrs_with_unsafe_attr_name_and_value():\n def test_repr_of_dataarray(dataarray):\n     formatted = fh.array_repr(dataarray)\n     assert \"dim_0\" in formatted\n-    # has an expandable data section\n-    assert formatted.count(\"class='xr-array-in' type='checkbox' >\") == 1\n+    # has an expanded data section\n+    assert formatted.count(\"class='xr-array-in' type='checkbox' checked>\") == 1\n     # coords and attrs don't have an items so they'll be be disabled and collapsed\n     assert (\n         formatted.count(\"class='xr-section-summary-in' type='checkbox' disabled >\") == 2\n",
  "problem_statement": "Pre-expand data and attributes in DataArray/Variable HTML repr?\n## Proposal\r\n\r\nGiven that a major purpose for plotting an array is to look at data or attributes, I wonder if we should expand these sections by default?\r\n- I worry that clicking on icons to expand sections may not be easy to discover\r\n- This would also be consistent with the text repr, which shows these sections by default (the Dataset repr is already consistent by default between text and HTML already)\r\n\r\n## Context\r\n\r\nCurrently the HTML repr for DataArray/Variable looks like this:\r\n![image](https://user-images.githubusercontent.com/1217238/85610183-9e014400-b60b-11ea-8be1-5f9196126acd.png)\r\n\r\nTo see array data, you have to click on the ![image](https://user-images.githubusercontent.com/1217238/85610286-b7a28b80-b60b-11ea-9496-a4f9d9b048ac.png) icon:\r\n![image](https://user-images.githubusercontent.com/1217238/85610262-b1acaa80-b60b-11ea-9621-17f0bcffb885.png)\r\n\r\n(thanks to @max-sixty for making this a little bit more manageably sized in https://github.com/pydata/xarray/pull/3905!)\r\n\r\nThere's also a really nice repr for nested dask arrays:\r\n![image](https://user-images.githubusercontent.com/1217238/85610598-fcc6bd80-b60b-11ea-8b1a-5cf950449dcb.png)\r\n\r\n\n",
  "hints_text": "@pydata/xarray any opinions here?\nLooks great to me.",
  "created_at": "2020-06-26T02:25:08Z",
  "version": "0.12",
  "FAIL_TO_PASS": "[\"xarray/tests/test_formatting_html.py::test_repr_of_dataarray\"]",
  "PASS_TO_PASS": "[\"xarray/tests/test_formatting_html.py::test_short_data_repr_html\", \"xarray/tests/test_formatting_html.py::test_short_data_repr_html_non_str_keys\", \"xarray/tests/test_formatting_html.py::test_short_data_repr_html_dask\", \"xarray/tests/test_formatting_html.py::test_format_dims_no_dims\", \"xarray/tests/test_formatting_html.py::test_format_dims_unsafe_dim_name\", \"xarray/tests/test_formatting_html.py::test_format_dims_non_index\", \"xarray/tests/test_formatting_html.py::test_format_dims_index\", \"xarray/tests/test_formatting_html.py::test_summarize_attrs_with_unsafe_attr_name_and_value\", \"xarray/tests/test_formatting_html.py::test_summary_of_multiindex_coord\", \"xarray/tests/test_formatting_html.py::test_repr_of_multiindex\", \"xarray/tests/test_formatting_html.py::test_repr_of_dataset\", \"xarray/tests/test_formatting_html.py::test_repr_text_fallback\", \"xarray/tests/test_formatting_html.py::test_variable_repr_html\"]",
  "environment_setup_commit": "1c198a191127c601d091213c4b3292a8bb3054e1",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.877339",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}