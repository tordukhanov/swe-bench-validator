{
  "repo": "pydata/xarray",
  "instance_id": "pydata__xarray-5187",
  "base_commit": "b2351cbe3f3e92f0e242312dae5791fc83a4467a",
  "patch": "diff --git a/xarray/core/dask_array_ops.py b/xarray/core/dask_array_ops.py\n--- a/xarray/core/dask_array_ops.py\n+++ b/xarray/core/dask_array_ops.py\n@@ -51,3 +51,24 @@ def least_squares(lhs, rhs, rcond=None, skipna=False):\n         # See issue dask/dask#6516\n         coeffs, residuals, _, _ = da.linalg.lstsq(lhs_da, rhs)\n     return coeffs, residuals\n+\n+\n+def push(array, n, axis):\n+    \"\"\"\n+    Dask-aware bottleneck.push\n+    \"\"\"\n+    from bottleneck import push\n+\n+    if len(array.chunks[axis]) > 1 and n is not None and n < array.shape[axis]:\n+        raise NotImplementedError(\n+            \"Cannot fill along a chunked axis when limit is not None.\"\n+            \"Either rechunk to a single chunk along this axis or call .compute() or .load() first.\"\n+        )\n+    if all(c == 1 for c in array.chunks[axis]):\n+        array = array.rechunk({axis: 2})\n+    pushed = array.map_blocks(push, axis=axis, n=n)\n+    if len(array.chunks[axis]) > 1:\n+        pushed = pushed.map_overlap(\n+            push, axis=axis, n=n, depth={axis: (1, 0)}, boundary=\"none\"\n+        )\n+    return pushed\ndiff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py\n--- a/xarray/core/dataarray.py\n+++ b/xarray/core/dataarray.py\n@@ -2515,7 +2515,8 @@ def ffill(self, dim: Hashable, limit: int = None) -> \"DataArray\":\n             The maximum number of consecutive NaN values to forward fill. In\n             other words, if there is a gap with more than this number of\n             consecutive NaNs, it will only be partially filled. Must be greater\n-            than 0 or None for no limit.\n+            than 0 or None for no limit. Must be None or greater than or equal\n+            to axis length if filling along chunked axes (dimensions).\n \n         Returns\n         -------\n@@ -2539,7 +2540,8 @@ def bfill(self, dim: Hashable, limit: int = None) -> \"DataArray\":\n             The maximum number of consecutive NaN values to backward fill. In\n             other words, if there is a gap with more than this number of\n             consecutive NaNs, it will only be partially filled. Must be greater\n-            than 0 or None for no limit.\n+            than 0 or None for no limit. Must be None or greater than or equal\n+            to axis length if filling along chunked axes (dimensions).\n \n         Returns\n         -------\ndiff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -4654,7 +4654,8 @@ def ffill(self, dim: Hashable, limit: int = None) -> \"Dataset\":\n             The maximum number of consecutive NaN values to forward fill. In\n             other words, if there is a gap with more than this number of\n             consecutive NaNs, it will only be partially filled. Must be greater\n-            than 0 or None for no limit.\n+            than 0 or None for no limit. Must be None or greater than or equal\n+            to axis length if filling along chunked axes (dimensions).\n \n         Returns\n         -------\n@@ -4679,7 +4680,8 @@ def bfill(self, dim: Hashable, limit: int = None) -> \"Dataset\":\n             The maximum number of consecutive NaN values to backward fill. In\n             other words, if there is a gap with more than this number of\n             consecutive NaNs, it will only be partially filled. Must be greater\n-            than 0 or None for no limit.\n+            than 0 or None for no limit. Must be None or greater than or equal\n+            to axis length if filling along chunked axes (dimensions).\n \n         Returns\n         -------\ndiff --git a/xarray/core/duck_array_ops.py b/xarray/core/duck_array_ops.py\n--- a/xarray/core/duck_array_ops.py\n+++ b/xarray/core/duck_array_ops.py\n@@ -631,3 +631,12 @@ def least_squares(lhs, rhs, rcond=None, skipna=False):\n         return dask_array_ops.least_squares(lhs, rhs, rcond=rcond, skipna=skipna)\n     else:\n         return nputils.least_squares(lhs, rhs, rcond=rcond, skipna=skipna)\n+\n+\n+def push(array, n, axis):\n+    from bottleneck import push\n+\n+    if is_duck_dask_array(array):\n+        return dask_array_ops.push(array, n, axis)\n+    else:\n+        return push(array, n, axis)\ndiff --git a/xarray/core/missing.py b/xarray/core/missing.py\n--- a/xarray/core/missing.py\n+++ b/xarray/core/missing.py\n@@ -11,7 +11,7 @@\n from . import utils\n from .common import _contains_datetime_like_objects, ones_like\n from .computation import apply_ufunc\n-from .duck_array_ops import datetime_to_numeric, timedelta_to_numeric\n+from .duck_array_ops import datetime_to_numeric, push, timedelta_to_numeric\n from .options import _get_keep_attrs\n from .pycompat import is_duck_dask_array\n from .utils import OrderedSet, is_scalar\n@@ -390,12 +390,10 @@ def func_interpolate_na(interpolator, y, x, **kwargs):\n \n def _bfill(arr, n=None, axis=-1):\n     \"\"\"inverse of ffill\"\"\"\n-    import bottleneck as bn\n-\n     arr = np.flip(arr, axis=axis)\n \n     # fill\n-    arr = bn.push(arr, axis=axis, n=n)\n+    arr = push(arr, axis=axis, n=n)\n \n     # reverse back to original\n     return np.flip(arr, axis=axis)\n@@ -403,17 +401,15 @@ def _bfill(arr, n=None, axis=-1):\n \n def ffill(arr, dim=None, limit=None):\n     \"\"\"forward fill missing values\"\"\"\n-    import bottleneck as bn\n-\n     axis = arr.get_axis_num(dim)\n \n     # work around for bottleneck 178\n     _limit = limit if limit is not None else arr.shape[axis]\n \n     return apply_ufunc(\n-        bn.push,\n+        push,\n         arr,\n-        dask=\"parallelized\",\n+        dask=\"allowed\",\n         keep_attrs=True,\n         output_dtypes=[arr.dtype],\n         kwargs=dict(n=_limit, axis=axis),\n@@ -430,7 +426,7 @@ def bfill(arr, dim=None, limit=None):\n     return apply_ufunc(\n         _bfill,\n         arr,\n-        dask=\"parallelized\",\n+        dask=\"allowed\",\n         keep_attrs=True,\n         output_dtypes=[arr.dtype],\n         kwargs=dict(n=_limit, axis=axis),\n",
  "test_patch": "diff --git a/xarray/tests/test_duck_array_ops.py b/xarray/tests/test_duck_array_ops.py\n--- a/xarray/tests/test_duck_array_ops.py\n+++ b/xarray/tests/test_duck_array_ops.py\n@@ -20,6 +20,7 @@\n     mean,\n     np_timedelta64_to_float,\n     pd_timedelta_to_float,\n+    push,\n     py_timedelta_to_float,\n     stack,\n     timedelta_to_numeric,\n@@ -34,6 +35,7 @@\n     has_dask,\n     has_scipy,\n     raise_if_dask_computes,\n+    requires_bottleneck,\n     requires_cftime,\n     requires_dask,\n )\n@@ -858,3 +860,26 @@ def test_least_squares(use_dask, skipna):\n \n     np.testing.assert_allclose(coeffs, [1.5, 1.25])\n     np.testing.assert_allclose(residuals, [2.0])\n+\n+\n+@requires_dask\n+@requires_bottleneck\n+def test_push_dask():\n+    import bottleneck\n+    import dask.array\n+\n+    array = np.array([np.nan, np.nan, np.nan, 1, 2, 3, np.nan, np.nan, 4, 5, np.nan, 6])\n+    expected = bottleneck.push(array, axis=0)\n+    for c in range(1, 11):\n+        with raise_if_dask_computes():\n+            actual = push(dask.array.from_array(array, chunks=c), axis=0, n=None)\n+        np.testing.assert_equal(actual, expected)\n+\n+    # some chunks of size-1 with NaN\n+    with raise_if_dask_computes():\n+        actual = push(\n+            dask.array.from_array(array, chunks=(1, 2, 3, 2, 2, 1, 1)),\n+            axis=0,\n+            n=None,\n+        )\n+    np.testing.assert_equal(actual, expected)\ndiff --git a/xarray/tests/test_missing.py b/xarray/tests/test_missing.py\n--- a/xarray/tests/test_missing.py\n+++ b/xarray/tests/test_missing.py\n@@ -17,6 +17,7 @@\n     assert_allclose,\n     assert_array_equal,\n     assert_equal,\n+    raise_if_dask_computes,\n     requires_bottleneck,\n     requires_cftime,\n     requires_dask,\n@@ -393,37 +394,39 @@ def test_ffill():\n \n @requires_bottleneck\n @requires_dask\n-def test_ffill_dask():\n+@pytest.mark.parametrize(\"method\", [\"ffill\", \"bfill\"])\n+def test_ffill_bfill_dask(method):\n     da, _ = make_interpolate_example_data((40, 40), 0.5)\n     da = da.chunk({\"x\": 5})\n-    actual = da.ffill(\"time\")\n-    expected = da.load().ffill(\"time\")\n-    assert isinstance(actual.data, dask_array_type)\n-    assert_equal(actual, expected)\n \n-    # with limit\n-    da = da.chunk({\"x\": 5})\n-    actual = da.ffill(\"time\", limit=3)\n-    expected = da.load().ffill(\"time\", limit=3)\n-    assert isinstance(actual.data, dask_array_type)\n+    dask_method = getattr(da, method)\n+    numpy_method = getattr(da.compute(), method)\n+    # unchunked axis\n+    with raise_if_dask_computes():\n+        actual = dask_method(\"time\")\n+    expected = numpy_method(\"time\")\n     assert_equal(actual, expected)\n \n-\n-@requires_bottleneck\n-@requires_dask\n-def test_bfill_dask():\n-    da, _ = make_interpolate_example_data((40, 40), 0.5)\n-    da = da.chunk({\"x\": 5})\n-    actual = da.bfill(\"time\")\n-    expected = da.load().bfill(\"time\")\n-    assert isinstance(actual.data, dask_array_type)\n+    # chunked axis\n+    with raise_if_dask_computes():\n+        actual = dask_method(\"x\")\n+    expected = numpy_method(\"x\")\n     assert_equal(actual, expected)\n \n     # with limit\n-    da = da.chunk({\"x\": 5})\n-    actual = da.bfill(\"time\", limit=3)\n-    expected = da.load().bfill(\"time\", limit=3)\n-    assert isinstance(actual.data, dask_array_type)\n+    with raise_if_dask_computes():\n+        actual = dask_method(\"time\", limit=3)\n+    expected = numpy_method(\"time\", limit=3)\n+    assert_equal(actual, expected)\n+\n+    # limit < axis size\n+    with pytest.raises(NotImplementedError):\n+        actual = dask_method(\"x\", limit=2)\n+\n+    # limit > axis size\n+    with raise_if_dask_computes():\n+        actual = dask_method(\"x\", limit=41)\n+    expected = numpy_method(\"x\", limit=41)\n     assert_equal(actual, expected)\n \n \n",
  "problem_statement": "bfill behavior dask arrays with small chunk size\n```python\r\ndata = np.random.rand(100)\r\ndata[25] = np.nan\r\nda = xr.DataArray(data)\r\n\r\n#unchunked \r\nprint('output : orig',da[25].values, ' backfill : ',da.bfill('dim_0')[25].values )\r\noutput : orig nan  backfill :  0.024710724099643477\r\n\r\n#small chunk\r\nda1 = da.chunk({'dim_0':1})\r\nprint('output chunks==1 : orig',da1[25].values, ' backfill : ',da1.bfill('dim_0')[25].values )\r\noutput chunks==1 : orig nan  backfill :  nan\r\n\r\n# medium chunk\r\nda1 = da.chunk({'dim_0':10})\r\nprint('output chunks==10 : orig',da1[25].values, ' backfill : ',da1.bfill('dim_0')[25].values )\r\noutput chunks==10 : orig nan  backfill :  0.024710724099643477\r\n```\r\n\r\n\r\n\r\n\r\n#### Problem description\r\nbfill methods seems to miss nans when dask array chunk size is small. Resulting array still has nan present  (see 'small chunk' section of code)\r\n\r\n\r\n#### Expected Output\r\nabsence of nans\r\n#### Output of ``xr.show_versions()``\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit: None\r\npython: 3.6.8.final.0\r\npython-bits: 64\r\nOS: Linux\r\nOS-release: 4.15.0-43-generic\r\nmachine: x86_64\r\nprocessor: x86_64\r\nbyteorder: little\r\nLC_ALL: None\r\nLANG: en_CA.UTF-8\r\nLOCALE: en_CA.UTF-8\r\nxarray: 0.11.0\r\npandas: 0.23.4\r\nnumpy: 1.15.4\r\nscipy: None\r\nnetCDF4: None\r\nh5netcdf: None\r\nh5py: None\r\nNio: None\r\nzarr: None\r\ncftime: None\r\nPseudonetCDF: None\r\nrasterio: None\r\niris: None\r\nbottleneck: 1.2.1\r\ncyordereddict: None\r\ndask: 1.0.0\r\ndistributed: 1.25.2\r\nmatplotlib: None\r\ncartopy: None\r\nseaborn: None\r\nsetuptools: 40.6.3\r\npip: 18.1\r\nconda: None\r\npytest: None\r\nIPython: None\r\nsphinx: None\r\n\r\n\n",
  "hints_text": "Thanks for the clear report. Indeed, this looks like a bug.\r\n\r\n`bfill()` and `ffill()` are implemented on dask arrays via `apply_ufunc`, but they're applied independently on each chunk -- there's no filling between chunks:\r\nhttps://github.com/pydata/xarray/blob/ddacf405fb256714ce01e1c4c464f829e1cc5058/xarray/core/missing.py#L262-L289\r\n\r\nInstead, I think we need a multi-step process for parallelizing `bottleneck.push`, e.g.,\r\n1. Forward fill each chunk independently.\r\n2. Slice out the *last element* of each chunk and forward fill these.\r\n3. Prepend filled last elements to the start of each chunk, and forward fill them again.\nI think this will work (though it needs more tests):\r\n```python\r\nimport bottleneck\r\nimport dask.array as da\r\nimport numpy as np\r\n\r\ndef _last_element(array, axis):\r\n  slices = [slice(None)] * array.ndim\r\n  slices[axis] = slice(-1, None)\r\n  return array[tuple(slices)]\r\n\r\ndef _concat_push_slice(last_elements, array, axis):\r\n  concatenated = np.concatenate([last_elements, array], axis=axis)\r\n  pushed = bottleneck.push(concatenated, axis=axis)\r\n  slices = [slice(None)] * array.ndim\r\n  slices[axis] = slice(1, None)\r\n  sliced = pushed[tuple(slices)]\r\n  return sliced\r\n\r\ndef push(array, axis):\r\n  if axis < 0:\r\n    axis += array.ndim\r\n  pushed = array.map_blocks(bottleneck.push, dtype=array.dtype, axis=axis)\r\n  new_chunks = list(array.chunks)\r\n  new_chunks[axis] = tuple(1 for _ in array.chunks[axis])\r\n  last_elements = pushed.map_blocks(\r\n      _last_element, dtype=array.dtype, chunks=tuple(new_chunks), axis=axis)\r\n  pushed_last_elements = (\r\n      last_elements.rechunk({axis: -1})\r\n      .map_blocks(bottleneck.push, dtype=array.dtype, axis=axis)\r\n      .rechunk({axis: 1})\r\n  )\r\n  nan_shape = tuple(1 if axis == a else s for a, s in enumerate(array.shape))\r\n  nan_chunks = tuple((1,) if axis == a else c for a, c in enumerate(array.chunks))\r\n  shifted_pushed_last_elements = da.concatenate(\r\n      [da.full(np.nan, shape=nan_shape, chunks=nan_chunks),\r\n       pushed_last_elements[(slice(None),) * axis + (slice(None, -1),)]],\r\n      axis=axis)\r\n  return da.map_blocks(\r\n      _concat_push_slice,\r\n      shifted_pushed_last_elements,\r\n      pushed,\r\n      dtype=array.dtype,\r\n      chunks=array.chunks,\r\n      axis=axis,\r\n  )\r\n\r\n# tests\r\narray = np.array([np.nan, np.nan, np.nan, 1, 2, 3,\r\n                  np.nan, np.nan, 4, 5, np.nan, 6])\r\nexpected = bottleneck.push(array, axis=0)\r\nfor c in range(1, 11):\r\n  actual = push(da.from_array(array, chunks=c), axis=0).compute()\r\n  np.testing.assert_equal(actual, expected)\r\n```\nI also recently encountered this bug and without user warnings it took me a while to identify its origin. I'll use this temporary fix. Thanks\nI encountered this bug a few days ago.\r\nI understand it isn't trivial to fix, but would it be possible to check and throw an exception? Still better than having it go unnoticed. Thanks",
  "created_at": "2021-04-18T17:00:51Z",
  "version": "0.12",
  "FAIL_TO_PASS": "[\"xarray/tests/test_duck_array_ops.py::TestOps::test_first\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_last\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_count\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_where_type_promotion\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_stack_type_promotion\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_concatenate_type_promotion\", \"xarray/tests/test_duck_array_ops.py::TestOps::test_all_nan_arrays\", \"xarray/tests/test_duck_array_ops.py::test_cumsum_1d\", \"xarray/tests/test_duck_array_ops.py::test_cumsum_2d\", \"xarray/tests/test_duck_array_ops.py::test_cumprod_2d\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_equal[arr10-arr20]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_equal[arr11-arr21]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_equal[arr12-arr22]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_some_not_equal\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_wrong_shape\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_types[val10-val20-val30-null0]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_types[1.0-2.0-3.0-nan]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_types[foo-bar-baz-None]\", \"xarray/tests/test_duck_array_ops.py::TestArrayNotNullEquiv::test_types[foo-bar-baz-nan]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-True-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-True-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-False-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max_error\", \"xarray/tests/test_duck_array_ops.py::test_isnull[array0]\", \"xarray/tests/test_duck_array_ops.py::test_isnull[array1]\", \"xarray/tests/test_duck_array_ops.py::test_isnull[array2]\", \"xarray/tests/test_duck_array_ops.py::test_isnull[array3]\", \"xarray/tests/test_duck_array_ops.py::test_isnull[array4]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[sum-False-float]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[sum-False-int]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[sum-False-float32]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[sum-False-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[prod-False-float]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[prod-False-int]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[prod-False-float32]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[prod-False-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[None-sum-False]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[None-prod-False]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[a-sum-False]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[a-prod-False]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[b-sum-False]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[b-prod-False]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_dataset[sum]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_dataset[prod]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-False-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-False-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-False-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-False-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-False-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-False-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-False-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-False-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-False-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-False-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-False-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-False-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-False-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-False-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-False-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-False-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_docs\", \"xarray/tests/test_duck_array_ops.py::test_datetime_to_numeric_datetime64\", \"xarray/tests/test_duck_array_ops.py::test_py_timedelta_to_float\", \"xarray/tests/test_duck_array_ops.py::test_np_timedelta64_to_float[td0-86400000000000.0]\", \"xarray/tests/test_duck_array_ops.py::test_np_timedelta64_to_float[td1-1.0]\", \"xarray/tests/test_duck_array_ops.py::test_pd_timedelta_to_float[td0-86400000000000.0]\", \"xarray/tests/test_duck_array_ops.py::test_pd_timedelta_to_float[td1-1.0]\", \"xarray/tests/test_duck_array_ops.py::test_timedelta_to_numeric[td0]\", \"xarray/tests/test_duck_array_ops.py::test_timedelta_to_numeric[td1]\", \"xarray/tests/test_duck_array_ops.py::test_timedelta_to_numeric[td2]\", \"xarray/tests/test_duck_array_ops.py::test_timedelta_to_numeric[1\", \"xarray/tests/test_duck_array_ops.py::test_least_squares[True-False]\", \"xarray/tests/test_duck_array_ops.py::test_least_squares[False-False]\"]",
  "PASS_TO_PASS": "[\"xarray/tests/test_duck_array_ops.py::test_cftime_datetime_mean\", \"xarray/tests/test_duck_array_ops.py::test_cftime_datetime_mean_long_time_period\", \"xarray/tests/test_duck_array_ops.py::test_cftime_datetime_mean_dask_error\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-min-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-max-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-mean-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-False-var-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-min-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-max-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-mean-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[None-True-var-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-min-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-max-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-mean-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-False-var-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-min-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-max-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-mean-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_reduce[x-True-var-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-min-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-False-max-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-True-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-min-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-str-1]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[x-True-max-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-min-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-False-max-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-min-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-True-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_argmin_max[y-True-max-True-False-str-2]\", \"xarray/tests/test_duck_array_ops.py::test_isnull_with_dask\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[1-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[1--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[1-1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[2-0]\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[2--1]\", \"xarray/tests/test_duck_array_ops.py::test_dask_gradient[2-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-None-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-True-x-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-None-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[True-False-x-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-None-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-True-x-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-None-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-sum-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-True-float-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-True-float-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-True-int-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-True-int-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-True-float32-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-True-float32-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-True-bool_-1]\", \"xarray/tests/test_duck_array_ops.py::test_min_count[False-False-x-prod-True-bool_-2]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[sum-True-float]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[sum-True-int]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[sum-True-float32]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[sum-True-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[prod-True-float]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[prod-True-int]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[prod-True-float32]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_nd[prod-True-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[None-sum-True]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[None-prod-True]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[a-sum-True]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[a-prod-True]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[b-sum-True]\", \"xarray/tests/test_duck_array_ops.py::test_min_count_specific[b-prod-True]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-True-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-True-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-True-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-False-True-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[sum-True-True-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-True-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-True-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-True-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-False-True-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-True-float]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-True-int]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-True-float32]\", \"xarray/tests/test_duck_array_ops.py::test_multiple_dims[prod-True-True-bool_]\", \"xarray/tests/test_duck_array_ops.py::test_datetime_to_numeric_cftime\", \"xarray/tests/test_duck_array_ops.py::test_datetime_to_numeric_potential_overflow\", \"xarray/tests/test_duck_array_ops.py::test_least_squares[True-True]\", \"xarray/tests/test_duck_array_ops.py::test_least_squares[False-True]\", \"xarray/tests/test_duck_array_ops.py::test_push_dask\", \"xarray/tests/test_missing.py::test_interpolate_pd_compat\", \"xarray/tests/test_missing.py::test_scipy_methods_function[barycentric]\", \"xarray/tests/test_missing.py::test_scipy_methods_function[krog]\", \"xarray/tests/test_missing.py::test_scipy_methods_function[pchip]\", \"xarray/tests/test_missing.py::test_scipy_methods_function[spline]\", \"xarray/tests/test_missing.py::test_scipy_methods_function[akima]\", \"xarray/tests/test_missing.py::test_interpolate_pd_compat_non_uniform_index\", \"xarray/tests/test_missing.py::test_interpolate_pd_compat_polynomial\", \"xarray/tests/test_missing.py::test_interpolate_unsorted_index_raises\", \"xarray/tests/test_missing.py::test_interpolate_no_dim_raises\", \"xarray/tests/test_missing.py::test_interpolate_invalid_interpolator_raises\", \"xarray/tests/test_missing.py::test_interpolate_duplicate_values_raises\", \"xarray/tests/test_missing.py::test_interpolate_multiindex_raises\", \"xarray/tests/test_missing.py::test_interpolate_2d_coord_raises\", \"xarray/tests/test_missing.py::test_interpolate_kwargs\", \"xarray/tests/test_missing.py::test_interpolate_keep_attrs\", \"xarray/tests/test_missing.py::test_interpolate\", \"xarray/tests/test_missing.py::test_interpolate_nonans\", \"xarray/tests/test_missing.py::test_interpolate_allnans\", \"xarray/tests/test_missing.py::test_interpolate_limits\", \"xarray/tests/test_missing.py::test_interpolate_methods\", \"xarray/tests/test_missing.py::test_interpolators\", \"xarray/tests/test_missing.py::test_interpolate_use_coordinate\", \"xarray/tests/test_missing.py::test_interpolate_dask\", \"xarray/tests/test_missing.py::test_interpolate_dask_raises_for_invalid_chunk_dim\", \"xarray/tests/test_missing.py::test_interpolate_dask_expected_dtype[int-linear]\", \"xarray/tests/test_missing.py::test_interpolate_dask_expected_dtype[int-nearest]\", \"xarray/tests/test_missing.py::test_ffill\", \"xarray/tests/test_missing.py::test_ffill_bfill_dask[ffill]\", \"xarray/tests/test_missing.py::test_ffill_bfill_dask[bfill]\", \"xarray/tests/test_missing.py::test_ffill_bfill_nonans\", \"xarray/tests/test_missing.py::test_ffill_bfill_allnans\", \"xarray/tests/test_missing.py::test_ffill_functions\", \"xarray/tests/test_missing.py::test_ffill_limit\", \"xarray/tests/test_missing.py::test_interpolate_dataset\", \"xarray/tests/test_missing.py::test_ffill_dataset\", \"xarray/tests/test_missing.py::test_bfill_dataset\", \"xarray/tests/test_missing.py::test_interpolate_na_nan_block_lengths[y0-lengths0]\", \"xarray/tests/test_missing.py::test_interpolate_na_nan_block_lengths[y1-lengths1]\", \"xarray/tests/test_missing.py::test_interpolate_na_nan_block_lengths[y2-lengths2]\", \"xarray/tests/test_missing.py::test_get_clean_interp_index_cf_calendar[365_day]\", \"xarray/tests/test_missing.py::test_get_clean_interp_index_cf_calendar[360_day]\", \"xarray/tests/test_missing.py::test_get_clean_interp_index_cf_calendar[julian]\", \"xarray/tests/test_missing.py::test_get_clean_interp_index_cf_calendar[all_leap]\", \"xarray/tests/test_missing.py::test_get_clean_interp_index_cf_calendar[366_day]\", \"xarray/tests/test_missing.py::test_get_clean_interp_index_cf_calendar[gregorian]\", \"xarray/tests/test_missing.py::test_get_clean_interp_index_cf_calendar[proleptic_gregorian]\", \"xarray/tests/test_missing.py::test_get_clean_interp_index_cf_calendar[standard]\", \"xarray/tests/test_missing.py::test_get_clean_interp_index_dt[gregorian-1D]\", \"xarray/tests/test_missing.py::test_get_clean_interp_index_dt[proleptic_gregorian-1M]\", \"xarray/tests/test_missing.py::test_get_clean_interp_index_potential_overflow\", \"xarray/tests/test_missing.py::test_get_clean_interp_index_strict[index0]\", \"xarray/tests/test_missing.py::test_get_clean_interp_index_strict[index1]\", \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_errors\", \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[3H-<lambda>0-date_range]\", \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[3H-<lambda>0-cftime_range]\", \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[3H-<lambda>1-date_range]\", \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[3H-<lambda>1-cftime_range]\", \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>0-date_range]\", \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>0-cftime_range]\", \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-date_range]\", \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap1-<lambda>1-cftime_range]\", \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap2-<lambda>0-date_range]\", \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap2-<lambda>0-cftime_range]\", \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap2-<lambda>1-date_range]\", \"xarray/tests/test_missing.py::test_interpolate_na_max_gap_time_specifier[max_gap2-<lambda>1-cftime_range]\", \"xarray/tests/test_missing.py::test_interpolate_na_2d[coords1]\"]",
  "environment_setup_commit": "1c198a191127c601d091213c4b3292a8bb3054e1",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.888287",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}