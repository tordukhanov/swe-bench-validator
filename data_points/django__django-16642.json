{
  "repo": "django/django",
  "instance_id": "django__django-16642",
  "base_commit": "fbe850106b2e4b85f838219cb9e1df95fba6c164",
  "patch": "diff --git a/django/http/response.py b/django/http/response.py\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -609,7 +609,9 @@ def set_headers(self, filelike):\n                 # Encoding isn't set to prevent browsers from automatically\n                 # uncompressing files.\n                 content_type = {\n+                    \"br\": \"application/x-brotli\",\n                     \"bzip2\": \"application/x-bzip\",\n+                    \"compress\": \"application/x-compress\",\n                     \"gzip\": \"application/gzip\",\n                     \"xz\": \"application/x-xz\",\n                 }.get(encoding, content_type)\n",
  "test_patch": "diff --git a/tests/responses/test_fileresponse.py b/tests/responses/test_fileresponse.py\n--- a/tests/responses/test_fileresponse.py\n+++ b/tests/responses/test_fileresponse.py\n@@ -253,8 +253,10 @@ def test_compressed_response(self):\n         \"\"\"\n         test_tuples = (\n             (\".tar.gz\", \"application/gzip\"),\n+            (\".tar.br\", \"application/x-brotli\"),\n             (\".tar.bz2\", \"application/x-bzip\"),\n             (\".tar.xz\", \"application/x-xz\"),\n+            (\".tar.Z\", \"application/x-compress\"),\n         )\n         for extension, mimetype in test_tuples:\n             with self.subTest(ext=extension):\n",
  "problem_statement": "Improper guessing of Mime Type for \"br\" and \"Z\" file types\nDescription\n\t\nBelow FileResponse will set the content type as text/html, even if the last file extension is \"Z' or \"br\".\nFileResponse(open('test.html.Z', 'rb'))\nFileResponse(open('test.html.br', 'rb'))\n",
  "hints_text": "Thanks for the report!",
  "created_at": "2023-03-11T07:38:47Z",
  "version": "5.0",
  "FAIL_TO_PASS": "[\"If compressed responses are served with the uncompressed Content-Type\"]",
  "PASS_TO_PASS": "[\"Headers are set correctly with a buffer when an absolute filename is\", \"test_content_disposition_buffer (responses.test_fileresponse.FileResponseTests.test_content_disposition_buffer)\", \"test_content_disposition_buffer_attachment (responses.test_fileresponse.FileResponseTests.test_content_disposition_buffer_attachment)\", \"test_content_disposition_buffer_explicit_filename (responses.test_fileresponse.FileResponseTests.test_content_disposition_buffer_explicit_filename)\", \"test_content_disposition_escaping (responses.test_fileresponse.FileResponseTests.test_content_disposition_escaping)\", \"test_content_disposition_file (responses.test_fileresponse.FileResponseTests.test_content_disposition_file)\", \"test_content_length_buffer (responses.test_fileresponse.FileResponseTests.test_content_length_buffer)\", \"test_content_length_file (responses.test_fileresponse.FileResponseTests.test_content_length_file)\", \"test_content_length_nonzero_starting_position_buffer (responses.test_fileresponse.FileResponseTests.test_content_length_nonzero_starting_position_buffer)\", \"test_content_length_nonzero_starting_position_file (responses.test_fileresponse.FileResponseTests.test_content_length_nonzero_starting_position_file)\", \"test_content_length_nonzero_starting_position_file_seekable_no_tell (responses.test_fileresponse.FileResponseTests.test_content_length_nonzero_starting_position_file_seekable_no_tell)\", \"test_content_type_buffer (responses.test_fileresponse.FileResponseTests.test_content_type_buffer)\", \"test_content_type_buffer_explicit (responses.test_fileresponse.FileResponseTests.test_content_type_buffer_explicit)\", \"test_content_type_buffer_explicit_default (responses.test_fileresponse.FileResponseTests.test_content_type_buffer_explicit_default)\", \"test_content_type_buffer_named (responses.test_fileresponse.FileResponseTests.test_content_type_buffer_named)\", \"test_content_type_file (responses.test_fileresponse.FileResponseTests.test_content_type_file)\", \"test_file_from_named_pipe_response (responses.test_fileresponse.FileResponseTests.test_file_from_named_pipe_response)\", \"test_repr (responses.test_fileresponse.FileResponseTests.test_repr)\", \"test_response_buffer (responses.test_fileresponse.FileResponseTests.test_response_buffer)\", \"test_response_nonzero_starting_position (responses.test_fileresponse.FileResponseTests.test_response_nonzero_starting_position)\", \"test_unicode_attachment (responses.test_fileresponse.FileResponseTests.test_unicode_attachment)\"]",
  "environment_setup_commit": "4a72da71001f154ea60906a2f74898d32b7322a7",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.766050",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}