{
  "repo": "django/django",
  "instance_id": "django__django-11695",
  "base_commit": "691def10a0197d83d2d108bd9043b0916d0f09b4",
  "patch": "diff --git a/django/contrib/admin/widgets.py b/django/contrib/admin/widgets.py\n--- a/django/contrib/admin/widgets.py\n+++ b/django/contrib/admin/widgets.py\n@@ -410,6 +410,7 @@ def build_attrs(self, base_attrs, extra_attrs=None):\n         attrs.setdefault('class', '')\n         attrs.update({\n             'data-ajax--cache': 'true',\n+            'data-ajax--delay': 250,\n             'data-ajax--type': 'GET',\n             'data-ajax--url': self.get_url(),\n             'data-theme': 'admin-autocomplete',\n",
  "test_patch": "diff --git a/tests/admin_views/test_autocomplete_view.py b/tests/admin_views/test_autocomplete_view.py\n--- a/tests/admin_views/test_autocomplete_view.py\n+++ b/tests/admin_views/test_autocomplete_view.py\n@@ -1,4 +1,5 @@\n import json\n+import time\n \n from django.contrib import admin\n from django.contrib.admin.tests import AdminSeleniumTestCase\n@@ -189,6 +190,12 @@ def test_select(self):\n         self.assertEqual(len(results), PAGINATOR_SIZE + 11)\n         # Limit the results with the search field.\n         search.send_keys('Who')\n+        # Ajax request is delayed.\n+        self.assertTrue(result_container.is_displayed())\n+        results = result_container.find_elements_by_css_selector('.select2-results__option')\n+        self.assertEqual(len(results), PAGINATOR_SIZE + 12)\n+        # Wait for ajax delay.\n+        time.sleep(0.25)\n         self.assertTrue(result_container.is_displayed())\n         results = result_container.find_elements_by_css_selector('.select2-results__option')\n         self.assertEqual(len(results), 1)\n@@ -223,6 +230,12 @@ def test_select_multiple(self):\n         self.assertEqual(len(results), 31)\n         # Limit the results with the search field.\n         search.send_keys('Who')\n+        # Ajax request is delayed.\n+        self.assertTrue(result_container.is_displayed())\n+        results = result_container.find_elements_by_css_selector('.select2-results__option')\n+        self.assertEqual(len(results), 32)\n+        # Wait for ajax delay.\n+        time.sleep(0.25)\n         self.assertTrue(result_container.is_displayed())\n         results = result_container.find_elements_by_css_selector('.select2-results__option')\n         self.assertEqual(len(results), 1)\ndiff --git a/tests/admin_widgets/test_autocomplete_widget.py b/tests/admin_widgets/test_autocomplete_widget.py\n--- a/tests/admin_widgets/test_autocomplete_widget.py\n+++ b/tests/admin_widgets/test_autocomplete_widget.py\n@@ -52,6 +52,7 @@ def test_build_attrs(self):\n         self.assertEqual(attrs, {\n             'class': 'my-class admin-autocomplete',\n             'data-ajax--cache': 'true',\n+            'data-ajax--delay': 250,\n             'data-ajax--type': 'GET',\n             'data-ajax--url': '/admin_widgets/band/autocomplete/',\n             'data-theme': 'admin-autocomplete',\n",
  "problem_statement": "Rate-limit autocomplete widgets Ajax requests\nDescription\n\t \n\t\t(last modified by Federico Jaramillo Martínez)\n\t \nThe current implementation of the Ajax autocomplete widget using Select2 in Django triggers a request for every key-press. This creates unnecessary load on servers.\nThis patch rate-limit the requests by adding a delay using the ajax.delay option provided by Select2.\n​https://github.com/django/django/pull/11695\n",
  "hints_text": "Multiple consecutive request\nRequests with a delay until user stops typing\nInclude link to PR\nI cannot say for sure 500 is the good value, but some delay is definitely an improvement.",
  "created_at": "2019-08-21T16:39:32Z",
  "version": "3.0",
  "FAIL_TO_PASS": "[\"test_build_attrs (admin_widgets.test_autocomplete_widget.AutocompleteMixinTests)\"]",
  "PASS_TO_PASS": "[\"test_build_attrs_no_custom_class (admin_widgets.test_autocomplete_widget.AutocompleteMixinTests)\", \"test_build_attrs_not_required_field (admin_widgets.test_autocomplete_widget.AutocompleteMixinTests)\", \"test_build_attrs_required_field (admin_widgets.test_autocomplete_widget.AutocompleteMixinTests)\", \"test_get_url (admin_widgets.test_autocomplete_widget.AutocompleteMixinTests)\", \"test_media (admin_widgets.test_autocomplete_widget.AutocompleteMixinTests)\", \"test_render_options (admin_widgets.test_autocomplete_widget.AutocompleteMixinTests)\", \"Empty option isn't present if the field isn't required.\", \"Empty option is present if the field isn't required.\", \"Search results are paginated.\", \"test_has_view_or_change_permission_required (admin_views.test_autocomplete_view.AutocompleteJsonViewTests)\", \"test_missing_search_fields (admin_views.test_autocomplete_view.AutocompleteJsonViewTests)\", \"test_must_be_logged_in (admin_views.test_autocomplete_view.AutocompleteJsonViewTests)\", \"test_search_use_distinct (admin_views.test_autocomplete_view.AutocompleteJsonViewTests)\", \"test_success (admin_views.test_autocomplete_view.AutocompleteJsonViewTests)\"]",
  "environment_setup_commit": "419a78300f7cd27611196e1e464d50fd0385ff27",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.580874",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}