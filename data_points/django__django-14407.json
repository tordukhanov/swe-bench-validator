{
  "repo": "django/django",
  "instance_id": "django__django-14407",
  "base_commit": "7e51893911237dfca9294e3ca12163ff813fb656",
  "patch": "diff --git a/django/template/autoreload.py b/django/template/autoreload.py\n--- a/django/template/autoreload.py\n+++ b/django/template/autoreload.py\n@@ -1,6 +1,9 @@\n+from pathlib import Path\n+\n from django.dispatch import receiver\n from django.template import engines\n from django.template.backends.django import DjangoTemplates\n+from django.utils._os import to_path\n from django.utils.autoreload import (\n     autoreload_started, file_changed, is_django_path,\n )\n@@ -15,13 +18,13 @@ def get_template_directories():\n         if not isinstance(backend, DjangoTemplates):\n             continue\n \n-        items.update(backend.engine.dirs)\n+        items.update(Path.cwd() / to_path(dir) for dir in backend.engine.dirs)\n \n         for loader in backend.engine.template_loaders:\n             if not hasattr(loader, 'get_dirs'):\n                 continue\n             items.update(\n-                directory\n+                Path.cwd() / to_path(directory)\n                 for directory in loader.get_dirs()\n                 if not is_django_path(directory)\n             )\n",
  "test_patch": "diff --git a/tests/template_tests/test_autoreloader.py b/tests/template_tests/test_autoreloader.py\n--- a/tests/template_tests/test_autoreloader.py\n+++ b/tests/template_tests/test_autoreloader.py\n@@ -64,6 +64,26 @@ def test_reset_all_loaders(self, mock_reset):\n         autoreload.reset_loaders()\n         self.assertEqual(mock_reset.call_count, 2)\n \n+    @override_settings(\n+        TEMPLATES=[{\n+            'DIRS': [\n+                str(ROOT) + '/absolute_str',\n+                'template_tests/relative_str',\n+                Path('template_tests/relative_path'),\n+            ],\n+            'BACKEND': 'django.template.backends.django.DjangoTemplates',\n+        }]\n+    )\n+    def test_template_dirs_normalized_to_paths(self):\n+        self.assertSetEqual(\n+            autoreload.get_template_directories(),\n+            {\n+                ROOT / 'absolute_str',\n+                Path.cwd() / 'template_tests/relative_str',\n+                Path.cwd() / 'template_tests/relative_path',\n+            }\n+        )\n+\n \n @require_jinja2\n @override_settings(INSTALLED_APPS=['template_tests'])\n",
  "problem_statement": "Template changes cause dev server to reload\nDescription\n\t\nDjango 3.2 has changed the autoreload behavior of the dev server, and it now reloads on template file changes. Reverting to 3.1 fixes the issue. I believe this is related to #25791 and â€‹https://github.com/django/django/pull/12928\nTemplate settings:\nDEBUG = True\nTEMPLATES = [\n\t{\n\t\t\"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n\t\t\"DIRS\": [os.path.join(BASE_DIR, \"templates\")],\n\t\t\"APP_DIRS\": True,\n\t\t\"OPTIONS\": {\n\t\t\t\"debug\": DEBUG,\n\t\t\t\"context_processors\": [\n\t\t\t\t\"django.template.context_processors.debug\",\n\t\t\t\t\"django.template.context_processors.request\",\n\t\t\t\t\"django.contrib.auth.context_processors.auth\",\n\t\t\t\t\"django.contrib.messages.context_processors.messages\",\n\t\t\t],\n\t\t},\n\t},\n]\nGiven that it can take several seconds for the dev server to reload, this change can be disruptive to template authoring.\n",
  "hints_text": "Hey Ryan ðŸ‘‹ Thanks for the report. I'm need more detail, as I'm struggling to reproduce. Testing running with Django 3.2.3, both with Django's built-in runserver and Channels' ASGI based one too. I'm not seeing the auto-reload behaviour on template saves. My TEMPLATES looks almost identical to yours. Obviously something is going on, but there must be more to itâ€¦ Watching for file changes with StatReloader What reloader are you using? ðŸ¤”\nHaving seen the duplicate #32745 in the timeline, I've tried again here (double checking). It's still not reproducing with a fresh project so, still more info... ðŸ¤” I'll upload a sample project with just a single view and template. Observed: startproject, startapp, then app template and view. runserver, edit the template. Not reload. Clearly you're seeing something, but what? Thanks.\nBarest project NOT reproducing editing the hello.html file whilst running the dev server.\nHi Carlton, long time :) Figured out how to reproduce the issue: Ensure TEMPLATES[\"DIRS\"] contains a directory path that's a string instead of a Path object. Add a template to that directory, point a view to that template. Modify/save the template, observe reload Specifically, the failure is occurring in the â€‹template_changed handler's if template_dir in file_path.parents check. As template_dir is a string, it fails the comparison to the parent Paths. While the failure occurs here, I'm guessing that loader.get_dirs should normalize its directories to Paths. Also, you'd only hit this issue when upgrading an older settings module. New projects are setup to use Paths, while old projects would be building paths with os.path.join().\nThanks for extra details, I'm was able to reproduce this issue with 'DIRS': ['template_dir'], 'DIRS': [Path('template_dir')], and 'DIRS': ['/full/path/to/template_dir']. I think we should normalize directories to resolved Paths, e.g. diff --git a/django/template/autoreload.py b/django/template/autoreload.py index 36952ef9aa..6a648ce0c3 100644 --- a/django/template/autoreload.py +++ b/django/template/autoreload.py @@ -4,6 +4,7 @@ from django.template.backends.django import DjangoTemplates from django.utils.autoreload import ( autoreload_started, file_changed, is_django_path, ) +from django.utils._os import to_path def get_template_directories(): @@ -15,13 +16,13 @@ def get_template_directories(): if not isinstance(backend, DjangoTemplates): continue - items.update(backend.engine.dirs) + items.update(to_path(dir).resolve() for dir in backend.engine.dirs) for loader in backend.engine.template_loaders: if not hasattr(loader, 'get_dirs'): continue items.update( - directory + to_path(directory).resolve() for directory in loader.get_dirs() if not is_django_path(directory) ) Regression in 658bcc16f1b814b3a063d3fa16fabaea8b471863.",
  "created_at": "2021-05-17T19:57:18Z",
  "version": "4.0",
  "FAIL_TO_PASS": "[\"test_template_dirs_normalized_to_paths (template_tests.test_autoreloader.TemplateReloadTests)\"]",
  "PASS_TO_PASS": "[\"test_get_template_directories (template_tests.test_autoreloader.Jinja2TemplateReloadTests)\", \"test_reset_all_loaders (template_tests.test_autoreloader.Jinja2TemplateReloadTests)\", \"test_watch_for_template_changes (template_tests.test_autoreloader.Jinja2TemplateReloadTests)\", \"test_get_template_directories (template_tests.test_autoreloader.TemplateReloadTests)\", \"test_non_template_changed (template_tests.test_autoreloader.TemplateReloadTests)\", \"test_reset_all_loaders (template_tests.test_autoreloader.TemplateReloadTests)\", \"test_template_changed (template_tests.test_autoreloader.TemplateReloadTests)\", \"test_watch_for_template_changes (template_tests.test_autoreloader.TemplateReloadTests)\"]",
  "environment_setup_commit": "475cffd1d64c690cdad16ede4d5e81985738ceb4",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.691309",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}