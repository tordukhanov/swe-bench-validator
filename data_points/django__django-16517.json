{
  "repo": "django/django",
  "instance_id": "django__django-16517",
  "base_commit": "c626173833784c86920b448793ac45005af4c058",
  "patch": "diff --git a/django/contrib/admindocs/utils.py b/django/contrib/admindocs/utils.py\n--- a/django/contrib/admindocs/utils.py\n+++ b/django/contrib/admindocs/utils.py\n@@ -101,6 +101,9 @@ def parse_rst(text, default_reference_context, thing_being_parsed=None):\n \n \n def create_reference_role(rolename, urlbase):\n+    # Views and template names are case-sensitive.\n+    is_case_sensitive = rolename in [\"template\", \"view\"]\n+\n     def _role(name, rawtext, text, lineno, inliner, options=None, content=None):\n         if options is None:\n             options = {}\n@@ -111,7 +114,7 @@ def _role(name, rawtext, text, lineno, inliner, options=None, content=None):\n                 urlbase\n                 % (\n                     inliner.document.settings.link_base,\n-                    text.lower(),\n+                    text if is_case_sensitive else text.lower(),\n                 )\n             ),\n             **options,\n",
  "test_patch": "diff --git a/tests/admin_docs/test_utils.py b/tests/admin_docs/test_utils.py\n--- a/tests/admin_docs/test_utils.py\n+++ b/tests/admin_docs/test_utils.py\n@@ -104,6 +104,22 @@ def test_parse_rst_with_docstring_no_leading_line_feed(self):\n             self.assertEqual(parse_rst(body, \"\"), \"<p>second line</p>\\n\")\n         self.assertEqual(stderr.getvalue(), \"\")\n \n+    def test_parse_rst_view_case_sensitive(self):\n+        source = \":view:`myapp.views.Index`\"\n+        rendered = (\n+            '<p><a class=\"reference external\" '\n+            'href=\"/admindocs/views/myapp.views.Index/\">myapp.views.Index</a></p>'\n+        )\n+        self.assertHTMLEqual(parse_rst(source, \"view\"), rendered)\n+\n+    def test_parse_rst_template_case_sensitive(self):\n+        source = \":template:`Index.html`\"\n+        rendered = (\n+            '<p><a class=\"reference external\" href=\"/admindocs/templates/Index.html/\">'\n+            \"Index.html</a></p>\"\n+        )\n+        self.assertHTMLEqual(parse_rst(source, \"template\"), rendered)\n+\n     def test_publish_parts(self):\n         \"\"\"\n         Django shouldn't break the default role for interpreted text\n",
  "problem_statement": "Mixed-case views/templates names causes 404 on :view:/:template: directive.\nDescription\n\t\n​https://github.com/django/django/blob/main/django/contrib/admindocs/views.py#L168\nUsing a class based view, \nclass OrderSearch(LoginRequiredMixin, UserPassesTestMixin, ListView):\nadd a doc comment such as\n:view:orders.views.Orders\ncauses a 404 when you click on the link in the docs\nPage not found (404)\nRequest Method:\t\tGET\nRequest URL:\t\t​http://localhost:8000/admin/doc/views/orders.views.orders/\nRaised by:\t\tdjango.contrib.admindocs.views.ViewDetailView\nI'm not sure exactly where orders becomes lowercase, but I thought it might have something to do with the _get_view_func\n",
  "hints_text": "Thanks for the ticket. It was originally reported in the #27409 among other issues \"For views you can use generic class based views, in there by naming conventions can be capital letters. Class based views are classes and not methods and the naming of the view can be like BlogView or BlogEdit. But if generating link using the directives according to documentation it will not work since it will try to find view by name of blogview instead of BlogView. It will automatically put it to lowercase and may make it not working.\" but I think it deserves a separate ticket.\ngonna look\nReplying to Rahmat Faisal: gonna look Yeah if u have views for example class About(Views): ... and in the docs you write :view:`app_label.views.About` and if u acces, and the url gonna change to localhost:8000/admin/docs/app_label.views.about and return 404. the url should be localhost:8000/admin/docs/app_label.views.About\nthe problem from admindocs utils function ​https://github.com/django/django/blob/main/django/contrib/admindocs/utils.py#L59, that convert into lowercase",
  "created_at": "2023-02-01T10:26:17Z",
  "version": "5.0",
  "FAIL_TO_PASS": "[\"test_parse_rst_template_case_sensitive (admin_docs.test_utils.TestUtils.test_parse_rst_template_case_sensitive)\", \"test_parse_rst_view_case_sensitive (admin_docs.test_utils.TestUtils.test_parse_rst_view_case_sensitive)\"]",
  "PASS_TO_PASS": "[\"test_description_output (admin_docs.test_utils.TestUtils.test_description_output)\", \"test_initial_header_level (admin_docs.test_utils.TestUtils.test_initial_header_level)\", \"test_parse_docstring (admin_docs.test_utils.TestUtils.test_parse_docstring)\", \"parse_rst() should use `cmsreference` as the default role.\", \"test_parse_rst_with_docstring_no_leading_line_feed (admin_docs.test_utils.TestUtils.test_parse_rst_with_docstring_no_leading_line_feed)\", \"Django shouldn't break the default role for interpreted text\", \"test_title_output (admin_docs.test_utils.TestUtils.test_title_output)\"]",
  "environment_setup_commit": "4a72da71001f154ea60906a2f74898d32b7322a7",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.761082",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}