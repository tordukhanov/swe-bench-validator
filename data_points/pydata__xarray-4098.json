{
  "repo": "pydata/xarray",
  "instance_id": "pydata__xarray-4098",
  "base_commit": "e5cc19cd8f8a69e0743f230f5bf51b7778a0ff96",
  "patch": "diff --git a/xarray/core/groupby.py b/xarray/core/groupby.py\n--- a/xarray/core/groupby.py\n+++ b/xarray/core/groupby.py\n@@ -321,7 +321,7 @@ def __init__(\n                 group = _DummyGroup(obj, group.name, group.coords)\n \n         if getattr(group, \"name\", None) is None:\n-            raise ValueError(\"`group` must have a name\")\n+            group.name = \"group\"\n \n         group, obj, stacked_dim, inserted_dims = _ensure_1d(group, obj)\n         (group_dim,) = group.dims\n",
  "test_patch": "diff --git a/xarray/tests/test_groupby.py b/xarray/tests/test_groupby.py\n--- a/xarray/tests/test_groupby.py\n+++ b/xarray/tests/test_groupby.py\n@@ -538,4 +538,16 @@ def test_groupby_bins_timeseries():\n     assert_identical(actual, expected)\n \n \n+def test_groupby_none_group_name():\n+    # GH158\n+    # xarray should not fail if a DataArray's name attribute is None\n+\n+    data = np.arange(10) + 10\n+    da = xr.DataArray(data)  # da.name = None\n+    key = xr.DataArray(np.floor_divide(data, 2))\n+\n+    mean = da.groupby(key).mean()\n+    assert \"group\" in mean.dims\n+\n+\n # TODO: move other groupby tests from test_dataset and test_dataarray over here\n",
  "problem_statement": "groupby should work with name=None\n\n",
  "hints_text": "Why won't this be fixed?\n\nI think some clarification in the documentation would be useful. Currently they say:\n\n> xarray supports “group by” operations with the same API as pandas \n> [and that the required parameter for Dataset/DataArray.groupby is an]\n> Array whose unique values should be used to group this array.\n\nHowever, pandas supports grouping by a function or by _any_ array (e.g. it can be a pandas object or a numpy array). The xarray API is narrower than pandas, and has an undocumented requirement of a _**named** DataArray_ (contrasting xarray behaviour of creating default names like \"dim_0\" elsewhere). \n\n``` python\nimport numpy as np\ndata = np.arange(10) + 10 # test data\nf = lambda x: np.floor_divide(x,2) # grouping key\n\nimport pandas as pd\nfor key in f, f(data), pd.Series(f(data)):\n    print pd.Series(data).groupby(key).mean().values\n    print pd.DataFrame({'thing':data}).groupby(key).mean().thing.values\n# these pandas examples are all equivalent\n\nimport xarray as xr\nda = xr.DataArray(data)\nkey = xr.DataArray(f(data))\nkey2 = xr.DataArray(f(data), name='key')\nprint da.groupby(key2).mean().values # this line works\nprint da.groupby(key).mean().values # broken: ValueError: `group` must have a name\n```\n\nThis issue dates to very early in the days of xarray, before we even had a direct `DataArray` constructor. I have no idea exactly what I was thinking here.\n\nI agree, it would be more consistent and user friendly to pick a default name for the group (maybe `'group'`). Any interest in putting together a PR?\n",
  "created_at": "2020-05-27T05:50:39Z",
  "version": "0.12",
  "FAIL_TO_PASS": "[\"xarray/tests/test_groupby.py::test_groupby_none_group_name\"]",
  "PASS_TO_PASS": "[\"xarray/tests/test_groupby.py::test_consolidate_slices\", \"xarray/tests/test_groupby.py::test_groupby_dims_property\", \"xarray/tests/test_groupby.py::test_multi_index_groupby_map\", \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\", \"xarray/tests/test_groupby.py::test_groupby_da_datetime\", \"xarray/tests/test_groupby.py::test_groupby_duplicate_coordinate_labels\", \"xarray/tests/test_groupby.py::test_groupby_input_mutation\", \"xarray/tests/test_groupby.py::test_groupby_map_shrink_groups[obj0]\", \"xarray/tests/test_groupby.py::test_groupby_map_shrink_groups[obj1]\", \"xarray/tests/test_groupby.py::test_groupby_map_change_group_size[obj0]\", \"xarray/tests/test_groupby.py::test_groupby_map_change_group_size[obj1]\", \"xarray/tests/test_groupby.py::test_da_groupby_map_func_args\", \"xarray/tests/test_groupby.py::test_ds_groupby_map_func_args\", \"xarray/tests/test_groupby.py::test_da_groupby_empty\", \"xarray/tests/test_groupby.py::test_da_groupby_quantile\", \"xarray/tests/test_groupby.py::test_ds_groupby_quantile\", \"xarray/tests/test_groupby.py::test_da_groupby_assign_coords\", \"xarray/tests/test_groupby.py::test_groupby_repr[obj0-z]\", \"xarray/tests/test_groupby.py::test_groupby_repr[obj1-z]\", \"xarray/tests/test_groupby.py::test_groupby_drops_nans\", \"xarray/tests/test_groupby.py::test_groupby_grouping_errors\", \"xarray/tests/test_groupby.py::test_groupby_reduce_dimension_error\", \"xarray/tests/test_groupby.py::test_groupby_multiple_string_args\", \"xarray/tests/test_groupby.py::test_groupby_bins_timeseries\"]",
  "environment_setup_commit": "1c198a191127c601d091213c4b3292a8bb3054e1",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.877037",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}