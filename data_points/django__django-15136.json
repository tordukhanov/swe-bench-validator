{
  "repo": "django/django",
  "instance_id": "django__django-15136",
  "base_commit": "ed2018037d152eef7e68f339b4562f8aadc2b7a0",
  "patch": "diff --git a/django/contrib/admin/widgets.py b/django/contrib/admin/widgets.py\n--- a/django/contrib/admin/widgets.py\n+++ b/django/contrib/admin/widgets.py\n@@ -8,7 +8,7 @@\n from django.conf import settings\n from django.core.exceptions import ValidationError\n from django.core.validators import URLValidator\n-from django.db.models import CASCADE\n+from django.db.models import CASCADE, UUIDField\n from django.urls import reverse\n from django.urls.exceptions import NoReverseMatch\n from django.utils.html import smart_urlquote\n@@ -149,7 +149,10 @@ def get_context(self, name, value, attrs):\n             context['related_url'] = related_url\n             context['link_title'] = _('Lookup')\n             # The JavaScript code looks for this class.\n-            context['widget']['attrs'].setdefault('class', 'vForeignKeyRawIdAdminField')\n+            css_class = 'vForeignKeyRawIdAdminField'\n+            if isinstance(self.rel.get_related_field(), UUIDField):\n+                css_class += ' vUUIDField'\n+            context['widget']['attrs'].setdefault('class', css_class)\n         else:\n             context['related_url'] = None\n         if context['widget']['value']:\n",
  "test_patch": "diff --git a/tests/admin_widgets/tests.py b/tests/admin_widgets/tests.py\n--- a/tests/admin_widgets/tests.py\n+++ b/tests/admin_widgets/tests.py\n@@ -26,7 +26,7 @@\n \n from .models import (\n     Advisor, Album, Band, Bee, Car, Company, Event, Honeycomb, Individual,\n-    Inventory, Member, MyFileField, Profile, School, Student,\n+    Inventory, Member, MyFileField, Profile, ReleaseEvent, School, Student,\n     UnsafeLimitChoicesTo, VideoStream,\n )\n from .widgetadmin import site as widget_admin_site\n@@ -538,19 +538,27 @@ def test_render(self):\n         band.album_set.create(\n             name='Hybrid Theory', cover_art=r'albums\\hybrid_theory.jpg'\n         )\n-        rel = Album._meta.get_field('band').remote_field\n-\n-        w = widgets.ForeignKeyRawIdWidget(rel, widget_admin_site)\n+        rel_uuid = Album._meta.get_field('band').remote_field\n+        w = widgets.ForeignKeyRawIdWidget(rel_uuid, widget_admin_site)\n         self.assertHTMLEqual(\n             w.render('test', band.uuid, attrs={}),\n             '<input type=\"text\" name=\"test\" value=\"%(banduuid)s\" '\n-            'class=\"vForeignKeyRawIdAdminField\">'\n+            'class=\"vForeignKeyRawIdAdminField vUUIDField\">'\n             '<a href=\"/admin_widgets/band/?_to_field=uuid\" class=\"related-lookup\" '\n             'id=\"lookup_id_test\" title=\"Lookup\"></a>&nbsp;<strong>'\n             '<a href=\"/admin_widgets/band/%(bandpk)s/change/\">Linkin Park</a>'\n             '</strong>' % {'banduuid': band.uuid, 'bandpk': band.pk}\n         )\n \n+        rel_id = ReleaseEvent._meta.get_field('album').remote_field\n+        w = widgets.ForeignKeyRawIdWidget(rel_id, widget_admin_site)\n+        self.assertHTMLEqual(\n+            w.render('test', None, attrs={}),\n+            '<input type=\"text\" name=\"test\" class=\"vForeignKeyRawIdAdminField\">'\n+            '<a href=\"/admin_widgets/album/?_to_field=id\" class=\"related-lookup\" '\n+            'id=\"lookup_id_test\" title=\"Lookup\"></a>',\n+        )\n+\n     def test_relations_to_non_primary_key(self):\n         # ForeignKeyRawIdWidget works with fields which aren't related to\n         # the model's primary key.\n",
  "problem_statement": "Admin foreign key raw inputs are too small when referring to a UUID field\nDescription\n\t\nPR: â€‹https://github.com/django/django/pull/12926\n",
  "hints_text": "",
  "created_at": "2021-11-28T06:59:22Z",
  "version": "4.1",
  "FAIL_TO_PASS": "[\"test_render (admin_widgets.tests.ForeignKeyRawIdWidgetTest)\"]",
  "PASS_TO_PASS": "[\"test_CharField (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"test_DateField (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"test_DateTimeField (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"test_EmailField (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"test_FileField (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"test_ForeignKey (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"test_IntegerField (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"test_TextField (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"test_TimeField (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"test_URLField (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"test_choices_with_radio_fields (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"test_field_with_choices (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"test_filtered_many_to_many (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"test_formfield_overrides (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"formfield_overrides works for a custom field class.\", \"Overriding the widget for DateTimeField doesn't overrides the default\", \"The autocomplete_fields, raw_id_fields, filter_vertical, and\", \"Widget instances in formfield_overrides are not shared between\", \"test_inheritance (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"m2m fields help text as it applies to admin app (#9321).\", \"test_many_to_many (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"test_radio_fields_ForeignKey (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"test_raw_id_ForeignKey (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"test_raw_id_many_to_many (admin_widgets.tests.AdminFormfieldForDBFieldTests)\", \"test_attrs (admin_widgets.tests.AdminUUIDWidgetTests)\", \"test_render (admin_widgets.tests.FilteredSelectMultipleWidgetTest)\", \"test_stacked_render (admin_widgets.tests.FilteredSelectMultipleWidgetTest)\", \"test_attrs (admin_widgets.tests.AdminTimeWidgetTest)\", \"test_attrs (admin_widgets.tests.AdminDateWidgetTest)\", \"test_get_context_validates_url (admin_widgets.tests.AdminURLWidgetTest)\", \"test_render (admin_widgets.tests.AdminURLWidgetTest)\", \"test_render_idn (admin_widgets.tests.AdminURLWidgetTest)\", \"WARNING: This test doesn't use assertHTMLEqual since it will get rid\", \"test_localization (admin_widgets.tests.AdminSplitDateTimeWidgetTest)\", \"test_render (admin_widgets.tests.AdminSplitDateTimeWidgetTest)\", \"test_custom_widget_render (admin_widgets.tests.RelatedFieldWidgetWrapperTests)\", \"test_no_can_add_related (admin_widgets.tests.RelatedFieldWidgetWrapperTests)\", \"test_on_delete_cascade_rel_cant_delete_related (admin_widgets.tests.RelatedFieldWidgetWrapperTests)\", \"test_select_multiple_widget_cant_change_delete_related (admin_widgets.tests.RelatedFieldWidgetWrapperTests)\", \"test_widget_delegates_value_omitted_from_data (admin_widgets.tests.RelatedFieldWidgetWrapperTests)\", \"test_widget_is_hidden (admin_widgets.tests.RelatedFieldWidgetWrapperTests)\", \"test_widget_is_not_hidden (admin_widgets.tests.RelatedFieldWidgetWrapperTests)\", \"test_m2m_related_model_not_in_admin (admin_widgets.tests.ManyToManyRawIdWidgetTest)\", \"test_render (admin_widgets.tests.ManyToManyRawIdWidgetTest)\", \"test_fk_related_model_not_in_admin (admin_widgets.tests.ForeignKeyRawIdWidgetTest)\", \"test_fk_to_self_model_not_in_admin (admin_widgets.tests.ForeignKeyRawIdWidgetTest)\", \"test_proper_manager_for_label_lookup (admin_widgets.tests.ForeignKeyRawIdWidgetTest)\", \"test_relations_to_non_primary_key (admin_widgets.tests.ForeignKeyRawIdWidgetTest)\", \"test_render_fk_as_pk_model (admin_widgets.tests.ForeignKeyRawIdWidgetTest)\", \"test_render_unsafe_limit_choices_to (admin_widgets.tests.ForeignKeyRawIdWidgetTest)\", \"Ensure the user can only see their own cars in the foreign key dropdown.\", \"test_changelist_ForeignKey (admin_widgets.tests.AdminForeignKeyWidgetChangeList)\", \"File widgets should render as a link when they're marked \\\"read only.\\\"\", \"test_render (admin_widgets.tests.AdminFileWidgetTests)\", \"test_render_disabled (admin_widgets.tests.AdminFileWidgetTests)\", \"test_render_required (admin_widgets.tests.AdminFileWidgetTests)\", \"test_invalid_target_id (admin_widgets.tests.AdminForeignKeyRawIdWidget)\", \"test_label_and_url_for_value_invalid_uuid (admin_widgets.tests.AdminForeignKeyRawIdWidget)\", \"test_nonexistent_target_id (admin_widgets.tests.AdminForeignKeyRawIdWidget)\", \"test_url_params_from_lookup_dict_any_iterable (admin_widgets.tests.AdminForeignKeyRawIdWidget)\", \"test_url_params_from_lookup_dict_callable (admin_widgets.tests.AdminForeignKeyRawIdWidget)\"]",
  "environment_setup_commit": "647480166bfe7532e8c471fef0146e3a17e6c0c9",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.719574",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}