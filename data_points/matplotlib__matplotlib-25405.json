{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-25405",
  "base_commit": "84e5f0251cea920d02b631646bd8832bc0e489e5",
  "patch": "diff --git a/lib/matplotlib/ticker.py b/lib/matplotlib/ticker.py\n--- a/lib/matplotlib/ticker.py\n+++ b/lib/matplotlib/ticker.py\n@@ -2386,7 +2386,7 @@ def tick_values(self, vmin, vmax):\n         # Get decades between major ticks.\n         stride = (max(math.ceil(numdec / (numticks - 1)), 1)\n                   if mpl.rcParams['_internal.classic_mode'] else\n-                  (numdec + 1) // numticks + 1)\n+                  numdec // numticks + 1)\n \n         # if we have decided that the stride is as big or bigger than\n         # the range, clip the stride back to the available range - 1\n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_ticker.py b/lib/matplotlib/tests/test_ticker.py\n--- a/lib/matplotlib/tests/test_ticker.py\n+++ b/lib/matplotlib/tests/test_ticker.py\n@@ -239,6 +239,26 @@ def test_set_params(self):\n         assert loc._base == 4\n         assert list(loc._subs) == [2.0]\n \n+    def test_tick_values_correct(self):\n+        ll = mticker.LogLocator(subs=(1, 2, 5))\n+        test_value = np.array([1.e-01, 2.e-01, 5.e-01, 1.e+00, 2.e+00, 5.e+00,\n+                               1.e+01, 2.e+01, 5.e+01, 1.e+02, 2.e+02, 5.e+02,\n+                               1.e+03, 2.e+03, 5.e+03, 1.e+04, 2.e+04, 5.e+04,\n+                               1.e+05, 2.e+05, 5.e+05, 1.e+06, 2.e+06, 5.e+06,\n+                               1.e+07, 2.e+07, 5.e+07, 1.e+08, 2.e+08, 5.e+08])\n+        assert_almost_equal(ll.tick_values(1, 1e7), test_value)\n+\n+    def test_tick_values_not_empty(self):\n+        mpl.rcParams['_internal.classic_mode'] = False\n+        ll = mticker.LogLocator(subs=(1, 2, 5))\n+        test_value = np.array([1.e-01, 2.e-01, 5.e-01, 1.e+00, 2.e+00, 5.e+00,\n+                               1.e+01, 2.e+01, 5.e+01, 1.e+02, 2.e+02, 5.e+02,\n+                               1.e+03, 2.e+03, 5.e+03, 1.e+04, 2.e+04, 5.e+04,\n+                               1.e+05, 2.e+05, 5.e+05, 1.e+06, 2.e+06, 5.e+06,\n+                               1.e+07, 2.e+07, 5.e+07, 1.e+08, 2.e+08, 5.e+08,\n+                               1.e+09, 2.e+09, 5.e+09])\n+        assert_almost_equal(ll.tick_values(1, 1e8), test_value)\n+\n \n class TestNullLocator:\n     def test_set_params(self):\n",
  "problem_statement": "[Bug]: LogLocator with subs argument fragile.\n### Bug summary\r\n\r\nLogarithmic tick markers do not appear if the y-axis scales a sufficient range, with the `subs` keyword argument of `ticker.LogLocator` set to non-trivial values.\r\n\r\n\r\n### Code for reproduction\r\n\r\n```python\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib.ticker\r\nimport numpy as np\r\n\r\nll = matplotlib.ticker.LogLocator(subs=(1, 2, 5))\r\n\r\n### The following code produces a plot with y-axis ticks at the expected locations.\r\n\r\nfig, ax = plt.subplots()\r\nx = np.arange(8)\r\nplt.semilogy(x, 10 ** x)\r\nax.yaxis.set_major_locator(ll)\r\nax.yaxis.set_minor_locator(ll)\r\nplt.title(\"Good Plot\")\r\nplt.show()\r\n\r\n### The following code produces a plot with no y-axis ticks, which is unexpected and undesired.\r\n\r\nfig, ax = plt.subplots()\r\nx = np.arange(9)  # The only change is this line\r\nplt.semilogy(x, 10 ** x)\r\nax.yaxis.set_major_locator(ll)\r\nax.yaxis.set_minor_locator(ll)\r\nplt.title(\"Bad Plot\")\r\nplt.show()\r\n\r\n### The problem is isolated to here, which returns correct values in the first case, but np.array([]) in the second case:\r\nprint(ll.tick_values(1, 1e7))\r\nprint(ll.tick_values(1, 1e8))\r\n```\r\n\r\n\r\n### Actual outcome\r\n\r\n![image](https://user-images.githubusercontent.com/6295985/193890350-8914dcd1-af5a-4466-9e43-b21396352a56.png)\r\n\r\n![image](https://user-images.githubusercontent.com/6295985/193890374-0f9c1f65-e89a-40b1-a095-2367b68a39fd.png)\r\n\r\n\r\n\r\n### Expected outcome\r\n\r\nI expect to see ticks in both cases, as appears in the \"Good Plot\".\r\n\r\n### Additional information\r\n\r\nThe problem is isolated to `ticker.LogLocator.tick_values()`. This returns correct values in the first case (e.g., `np.array([1.e-01 2.e-01 5.e-01 1.e+00 2.e+00 5.e+00 1.e+01 2.e+01 5.e+01 1.e+02\r\n 2.e+02 5.e+02])`), but `np.array([])` in the second case.\r\n\r\n### Operating system\r\n\r\nWindows\r\n\r\n### Matplotlib Version\r\n\r\n3.5.2\r\n\r\n### Matplotlib Backend\r\n\r\nmodule://backend_interagg\r\n\r\n### Python version\r\n\r\n3.9.13\r\n\r\n### Jupyter version\r\n\r\n_No response_\r\n\r\n### Installation\r\n\r\nconda\n[Bug]: LogLocator with subs argument fragile.\n### Bug summary\r\n\r\nLogarithmic tick markers do not appear if the y-axis scales a sufficient range, with the `subs` keyword argument of `ticker.LogLocator` set to non-trivial values.\r\n\r\n\r\n### Code for reproduction\r\n\r\n```python\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib.ticker\r\nimport numpy as np\r\n\r\nll = matplotlib.ticker.LogLocator(subs=(1, 2, 5))\r\n\r\n### The following code produces a plot with y-axis ticks at the expected locations.\r\n\r\nfig, ax = plt.subplots()\r\nx = np.arange(8)\r\nplt.semilogy(x, 10 ** x)\r\nax.yaxis.set_major_locator(ll)\r\nax.yaxis.set_minor_locator(ll)\r\nplt.title(\"Good Plot\")\r\nplt.show()\r\n\r\n### The following code produces a plot with no y-axis ticks, which is unexpected and undesired.\r\n\r\nfig, ax = plt.subplots()\r\nx = np.arange(9)  # The only change is this line\r\nplt.semilogy(x, 10 ** x)\r\nax.yaxis.set_major_locator(ll)\r\nax.yaxis.set_minor_locator(ll)\r\nplt.title(\"Bad Plot\")\r\nplt.show()\r\n\r\n### The problem is isolated to here, which returns correct values in the first case, but np.array([]) in the second case:\r\nprint(ll.tick_values(1, 1e7))\r\nprint(ll.tick_values(1, 1e8))\r\n```\r\n\r\n\r\n### Actual outcome\r\n\r\n![image](https://user-images.githubusercontent.com/6295985/193890350-8914dcd1-af5a-4466-9e43-b21396352a56.png)\r\n\r\n![image](https://user-images.githubusercontent.com/6295985/193890374-0f9c1f65-e89a-40b1-a095-2367b68a39fd.png)\r\n\r\n\r\n\r\n### Expected outcome\r\n\r\nI expect to see ticks in both cases, as appears in the \"Good Plot\".\r\n\r\n### Additional information\r\n\r\nThe problem is isolated to `ticker.LogLocator.tick_values()`. This returns correct values in the first case (e.g., `np.array([1.e-01 2.e-01 5.e-01 1.e+00 2.e+00 5.e+00 1.e+01 2.e+01 5.e+01 1.e+02\r\n 2.e+02 5.e+02])`), but `np.array([])` in the second case.\r\n\r\n### Operating system\r\n\r\nWindows\r\n\r\n### Matplotlib Version\r\n\r\n3.5.2\r\n\r\n### Matplotlib Backend\r\n\r\nmodule://backend_interagg\r\n\r\n### Python version\r\n\r\n3.9.13\r\n\r\n### Jupyter version\r\n\r\n_No response_\r\n\r\n### Installation\r\n\r\nconda\n",
  "hints_text": "Hi all, any thoughts on this? This is causing breaking behavior in a downstream application, and it'd be helpful to know whether Matplotlib maintainers think a fix will be quick, or if I should invest resources in working around this.\nI think we would accept a fix if one were forthcoming.  I suspect the is in the range where we tick every two decades and that is clashing with subs. \nIf you pan the \"bad\" example up or down you can make the ticks show up.  They seem to alternate in and out based on the limits (not just the range) if you zoom out further they never appear.\r\n\r\nThere is clearly something very wrong in the logic of what `sub` does, but looking at the code I can not quickly understand it...\r\n\r\nI'm labeling this as \"good first issue\" as I think the bug is clear (we should never not have tick labels!) but \"hard\" because the logic in the tick_values method is a bit convoluted (for a bunch of reasons, some historical, some because we are using the same code for major and minor ticks, some because people have very strong views about what log tick \"should\" be that are very conditional on the values involved).  Any changes will have to be very careful about unintended consequences and understanding why the code was the way it was (likely will require some git/github archaeology)  and adding a bunch more tests.\r\n\r\n\nAlso milestoning for 3.7 as we need to fix this, but I doubt (but we should check) that this is a regression in 3.6 and expect the fix to be somewhat high-risk so we should not backport it.  If I am wrong about either of those, then we can re-milestone and backport.\nIn `ticker.py`, as the difference between vmin and vmax increases, numdec increases and thus makes stride to be greater than 1 (in the else condition).\r\n> \r\n            stride = (max(math.ceil(numdec / (numticks - 1)), 1)\r\n                  if mpl.rcParams['_internal.classic_mode'] else\r\n                  (numdec + 1) // numticks + 1)\r\n\r\nIn the case of stride > 1, ticklocs gets assigned a blank array which I believe to be the root of the problem.\r\n> \r\n        if hasattr(self, '_transform'):\r\n            ticklocs = self._transform.inverted().transform(decades)\r\n            if have_subs:\r\n                if stride == 1:\r\n                    ticklocs = np.ravel(np.outer(subs, ticklocs))\r\n                else:\r\n                    # No ticklocs if we have >1 decade between major ticks.\r\n                    ticklocs = np.array([])\r\n\r\n\r\nThe ticks appearing upon panning may be explained by `numticks` increasing due to staggering and thus stride being reduced to 1 again, as upon plotting the bad plot for `x = np.arange(10)` even panning does not make the ticks appear.\r\n\r\nHope this helps. I would be glad to help fix this if you could guide me a little. Thanks\nI would like to tackle this. Does matplotlib assign issues or is it open for anyone to attempt to fix and submit pull requests?\n@Abitamim we do not typically assign issues (sometimes core maintainers will self-assign as a reminder to themselves)\r\n\r\nFor more info see https://matplotlib.org/stable/devel/contributing.html#issues-for-new-contributors\nHi all, any thoughts on this? This is causing breaking behavior in a downstream application, and it'd be helpful to know whether Matplotlib maintainers think a fix will be quick, or if I should invest resources in working around this.\nI think we would accept a fix if one were forthcoming.  I suspect the is in the range where we tick every two decades and that is clashing with subs. \nIf you pan the \"bad\" example up or down you can make the ticks show up.  They seem to alternate in and out based on the limits (not just the range) if you zoom out further they never appear.\r\n\r\nThere is clearly something very wrong in the logic of what `sub` does, but looking at the code I can not quickly understand it...\r\n\r\nI'm labeling this as \"good first issue\" as I think the bug is clear (we should never not have tick labels!) but \"hard\" because the logic in the tick_values method is a bit convoluted (for a bunch of reasons, some historical, some because we are using the same code for major and minor ticks, some because people have very strong views about what log tick \"should\" be that are very conditional on the values involved).  Any changes will have to be very careful about unintended consequences and understanding why the code was the way it was (likely will require some git/github archaeology)  and adding a bunch more tests.\r\n\r\n\nAlso milestoning for 3.7 as we need to fix this, but I doubt (but we should check) that this is a regression in 3.6 and expect the fix to be somewhat high-risk so we should not backport it.  If I am wrong about either of those, then we can re-milestone and backport.\nIn `ticker.py`, as the difference between vmin and vmax increases, numdec increases and thus makes stride to be greater than 1 (in the else condition).\r\n> \r\n            stride = (max(math.ceil(numdec / (numticks - 1)), 1)\r\n                  if mpl.rcParams['_internal.classic_mode'] else\r\n                  (numdec + 1) // numticks + 1)\r\n\r\nIn the case of stride > 1, ticklocs gets assigned a blank array which I believe to be the root of the problem.\r\n> \r\n        if hasattr(self, '_transform'):\r\n            ticklocs = self._transform.inverted().transform(decades)\r\n            if have_subs:\r\n                if stride == 1:\r\n                    ticklocs = np.ravel(np.outer(subs, ticklocs))\r\n                else:\r\n                    # No ticklocs if we have >1 decade between major ticks.\r\n                    ticklocs = np.array([])\r\n\r\n\r\nThe ticks appearing upon panning may be explained by `numticks` increasing due to staggering and thus stride being reduced to 1 again, as upon plotting the bad plot for `x = np.arange(10)` even panning does not make the ticks appear.\r\n\r\nHope this helps. I would be glad to help fix this if you could guide me a little. Thanks\nI would like to tackle this. Does matplotlib assign issues or is it open for anyone to attempt to fix and submit pull requests?\n@Abitamim we do not typically assign issues (sometimes core maintainers will self-assign as a reminder to themselves)\r\n\r\nFor more info see https://matplotlib.org/stable/devel/contributing.html#issues-for-new-contributors",
  "created_at": "2023-03-07T11:18:36Z",
  "version": "3.7",
  "FAIL_TO_PASS": "[\"lib/matplotlib/tests/test_ticker.py::TestLogLocator::test_tick_values_not_empty\"]",
  "PASS_TO_PASS": "[\"lib/matplotlib/tests/test_ticker.py::TestMaxNLocator::test_basic[20-100-expected0]\", \"lib/matplotlib/tests/test_ticker.py::TestMaxNLocator::test_basic[0.001-0.0001-expected1]\", \"lib/matplotlib/tests/test_ticker.py::TestMaxNLocator::test_basic[-1000000000000000.0-1000000000000000.0-expected2]\", \"lib/matplotlib/tests/test_ticker.py::TestMaxNLocator::test_basic[0-8.5e-51-expected3]\", \"lib/matplotlib/tests/test_ticker.py::TestMaxNLocator::test_basic[-8.5e-51-0-expected4]\", \"lib/matplotlib/tests/test_ticker.py::TestMaxNLocator::test_integer[-0.1-1.1-None-expected0]\", \"lib/matplotlib/tests/test_ticker.py::TestMaxNLocator::test_integer[-0.1-0.95-None-expected1]\", \"lib/matplotlib/tests/test_ticker.py::TestMaxNLocator::test_integer[1-55-steps2-expected2]\", \"lib/matplotlib/tests/test_ticker.py::TestLinearLocator::test_basic\", \"lib/matplotlib/tests/test_ticker.py::TestLinearLocator::test_set_params\", \"lib/matplotlib/tests/test_ticker.py::TestMultipleLocator::test_basic\", \"lib/matplotlib/tests/test_ticker.py::TestMultipleLocator::test_view_limits\", \"lib/matplotlib/tests/test_ticker.py::TestMultipleLocator::test_view_limits_round_numbers\", \"lib/matplotlib/tests/test_ticker.py::TestMultipleLocator::test_set_params\", \"lib/matplotlib/tests/test_ticker.py::TestAutoMinorLocator::test_basic\", \"lib/matplotlib/tests/test_ticker.py::TestAutoMinorLocator::test_low_number_of_majorticks[0-0]\", \"lib/matplotlib/tests/test_ticker.py::TestAutoMinorLocator::test_low_number_of_majorticks[1-0]\", \"lib/matplotlib/tests/test_ticker.py::TestAutoMinorLocator::test_using_all_default_major_steps\", \"lib/matplotlib/tests/test_ticker.py::TestAutoMinorLocator::test_number_of_minor_ticks[1-5]\", \"lib/matplotlib/tests/test_ticker.py::TestAutoMinorLocator::test_number_of_minor_ticks[2-4]\", \"lib/matplotlib/tests/test_ticker.py::TestAutoMinorLocator::test_number_of_minor_ticks[2.5-5]\", \"lib/matplotlib/tests/test_ticker.py::TestAutoMinorLocator::test_number_of_minor_ticks[5-5]\", \"lib/matplotlib/tests/test_ticker.py::TestAutoMinorLocator::test_number_of_minor_ticks[10-5]\", \"lib/matplotlib/tests/test_ticker.py::TestAutoMinorLocator::test_additional[lim0-ref0]\", \"lib/matplotlib/tests/test_ticker.py::TestAutoMinorLocator::test_additional[lim1-ref1]\", \"lib/matplotlib/tests/test_ticker.py::TestAutoMinorLocator::test_additional[lim2-ref2]\", \"lib/matplotlib/tests/test_ticker.py::TestAutoMinorLocator::test_additional[lim3-ref3]\", \"lib/matplotlib/tests/test_ticker.py::TestAutoMinorLocator::test_additional[lim4-ref4]\", \"lib/matplotlib/tests/test_ticker.py::TestAutoMinorLocator::test_additional[lim5-ref5]\", \"lib/matplotlib/tests/test_ticker.py::TestAutoMinorLocator::test_additional[lim6-ref6]\", \"lib/matplotlib/tests/test_ticker.py::TestAutoMinorLocator::test_additional[lim7-ref7]\", \"lib/matplotlib/tests/test_ticker.py::TestLogLocator::test_basic\", \"lib/matplotlib/tests/test_ticker.py::TestLogLocator::test_polar_axes\", \"lib/matplotlib/tests/test_ticker.py::TestLogLocator::test_switch_to_autolocator\", \"lib/matplotlib/tests/test_ticker.py::TestLogLocator::test_set_params\", \"lib/matplotlib/tests/test_ticker.py::TestLogLocator::test_tick_values_correct\", \"lib/matplotlib/tests/test_ticker.py::TestNullLocator::test_set_params\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_basic_major[lims0-expected_low_ticks0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_basic_major[lims1-expected_low_ticks1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_basic_major[lims2-expected_low_ticks2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_basic_major[lims3-expected_low_ticks3]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_basic_major[lims4-expected_low_ticks4]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_basic_major[lims5-expected_low_ticks5]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_basic_major[lims6-expected_low_ticks6]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_basic_major[lims7-expected_low_ticks7]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_maxn_major[lims0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_maxn_major[lims1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_maxn_major[lims2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nbins_major[lims0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nbins_major[lims1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nbins_major[lims2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nbins_major[lims3]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nbins_major[lims4]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nbins_major[lims5]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nbins_major[lims6]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nbins_major[lims7]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nbins_major[lims8]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nbins_major[lims9]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nbins_major[lims10]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_minor[lims0-expected_low_ticks0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_minor[lims1-expected_low_ticks1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_minor[lims2-expected_low_ticks2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_minor[lims3-expected_low_ticks3]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_minor[lims4-expected_low_ticks4]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_minor[lims5-expected_low_ticks5]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_minor[lims6-expected_low_ticks6]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_minor[lims7-expected_low_ticks7]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_minor_attr\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims3]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims4]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims5]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims6]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims7]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims8]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims9]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims10]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims11]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims12]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims13]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims14]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims15]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims16]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims17]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims18]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims19]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims20]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims21]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims22]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims23]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims24]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims25]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims26]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims27]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims28]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_ok[lims29]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_nok[0.064]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_nok[0.16]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_nok[0.39999999999999997]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_nok[0.9359999999999999]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_nok[0.84]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitLocator::test_nonsingular_nok[0.6000000000000001]\", \"lib/matplotlib/tests/test_ticker.py::TestFixedLocator::test_set_params\", \"lib/matplotlib/tests/test_ticker.py::TestIndexLocator::test_set_params\", \"lib/matplotlib/tests/test_ticker.py::TestSymmetricalLogLocator::test_set_params\", \"lib/matplotlib/tests/test_ticker.py::TestAsinhLocator::test_init\", \"lib/matplotlib/tests/test_ticker.py::TestAsinhLocator::test_set_params\", \"lib/matplotlib/tests/test_ticker.py::TestAsinhLocator::test_linear_values\", \"lib/matplotlib/tests/test_ticker.py::TestAsinhLocator::test_wide_values\", \"lib/matplotlib/tests/test_ticker.py::TestAsinhLocator::test_near_zero\", \"lib/matplotlib/tests/test_ticker.py::TestAsinhLocator::test_fallback\", \"lib/matplotlib/tests/test_ticker.py::TestAsinhLocator::test_symmetrizing\", \"lib/matplotlib/tests/test_ticker.py::TestAsinhLocator::test_base_rounding\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_unicode_minus[True-\\\\u22121]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_unicode_minus[False--1]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[123-189-0]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[-189--123-0]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[12341-12349-12340]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[-12349--12341--12340]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[99999.5-100010.5-100000]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[-100010.5--99999.5--100000]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[99990.5-100000.5-100000]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[-100000.5--99990.5--100000]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[1233999-1234001-1234000]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[-1234001--1233999--1234000]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[1-1-1]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[123-123-0]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[0.4538-0.4578-0.45]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[3789.12-3783.1-3780]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[45124.3-45831.75-45000]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[0.000721-0.0007243-0.00072]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[12592.82-12591.43-12590]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[9.0-12.0-0]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[900.0-1200.0-0]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[1900.0-1200.0-0]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[0.99-1.01-1]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[9.99-10.01-10]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[99.99-100.01-100]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[5.99-6.01-6]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[15.99-16.01-16]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[-0.452-0.492-0]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[-0.492-0.492-0]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[12331.4-12350.5-12300]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_offset_value[-12335.3-12335.3-0]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_use_offset[True]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_use_offset[False]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_useMathText[True]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_useMathText[False]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_set_use_offset_float\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_use_locale\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_scilimits[False-scilimits0-lim0-0-False]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_scilimits[True-scilimits1-lim1-0-False]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_scilimits[True-scilimits2-lim2-0-False]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_scilimits[True-scilimits3-lim3-2-False]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_scilimits[True-scilimits4-lim4-2-False]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_scilimits[True-scilimits5-lim5--3-False]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_scilimits[True-scilimits6-lim6-9-True]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_scilimits[True-scilimits7-lim7-5-False]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_scilimits[True-scilimits8-lim8-6-False]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_format_data[0.1-1e-1]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_format_data[0.11-1.1e-1]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_format_data[100000000.0-1e8]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_format_data[110000000.0-1.1e8]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_cursor_precision[0.0-0.000]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_cursor_precision[0.0123-0.012]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_cursor_precision[0.123-0.123]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_cursor_precision[1.23-1.230]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_cursor_precision[12.3-12.300]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_cursor_dummy_axis[0.0-0.000]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_cursor_dummy_axis[0.0123-0.012]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_cursor_dummy_axis[0.123-0.123]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_cursor_dummy_axis[1.23-1.230]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_cursor_dummy_axis[12.3-12.300]\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_cmr10_substitutions\", \"lib/matplotlib/tests/test_ticker.py::TestScalarFormatter::test_empty_locs\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterExponent::test_basic[2.0-True-4-locs0-positions0-expected0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterExponent::test_basic[2.0-False-10-locs1-positions1-expected1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterExponent::test_basic[2.0-False-50-locs2-positions2-expected2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterExponent::test_basic[5.0-True-4-locs0-positions0-expected0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterExponent::test_basic[5.0-False-10-locs1-positions1-expected1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterExponent::test_basic[5.0-False-50-locs2-positions2-expected2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterExponent::test_basic[10.0-True-4-locs0-positions0-expected0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterExponent::test_basic[10.0-False-10-locs1-positions1-expected1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterExponent::test_basic[10.0-False-50-locs2-positions2-expected2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterExponent::test_basic[3.141592653589793-True-4-locs0-positions0-expected0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterExponent::test_basic[3.141592653589793-False-10-locs1-positions1-expected1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterExponent::test_basic[3.141592653589793-False-50-locs2-positions2-expected2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterExponent::test_basic[2.718281828459045-True-4-locs0-positions0-expected0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterExponent::test_basic[2.718281828459045-False-10-locs1-positions1-expected1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterExponent::test_basic[2.718281828459045-False-50-locs2-positions2-expected2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterExponent::test_blank\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterMathtext::test_min_exponent[0-1-$\\\\\\\\mathdefault{10^{0}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterMathtext::test_min_exponent[0-0.01-$\\\\\\\\mathdefault{10^{-2}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterMathtext::test_min_exponent[0-100.0-$\\\\\\\\mathdefault{10^{2}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterMathtext::test_min_exponent[3-1-$\\\\\\\\mathdefault{1}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterMathtext::test_min_exponent[3-0.01-$\\\\\\\\mathdefault{0.01}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterMathtext::test_min_exponent[3-100.0-$\\\\\\\\mathdefault{100}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterMathtext::test_min_exponent[3-0.001-$\\\\\\\\mathdefault{10^{-3}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterMathtext::test_min_exponent[3-1000.0-$\\\\\\\\mathdefault{10^{3}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterSciNotation::test_basic[2-0.03125-$\\\\\\\\mathdefault{2^{-5}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterSciNotation::test_basic[2-1-$\\\\\\\\mathdefault{2^{0}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterSciNotation::test_basic[2-32-$\\\\\\\\mathdefault{2^{5}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterSciNotation::test_basic[2-0.0375-$\\\\\\\\mathdefault{1.2\\\\\\\\times2^{-5}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterSciNotation::test_basic[2-1.2-$\\\\\\\\mathdefault{1.2\\\\\\\\times2^{0}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterSciNotation::test_basic[2-38.4-$\\\\\\\\mathdefault{1.2\\\\\\\\times2^{5}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterSciNotation::test_basic[10--1-$\\\\\\\\mathdefault{-10^{0}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterSciNotation::test_basic[10-1e-05-$\\\\\\\\mathdefault{10^{-5}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterSciNotation::test_basic[10-1-$\\\\\\\\mathdefault{10^{0}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterSciNotation::test_basic[10-100000-$\\\\\\\\mathdefault{10^{5}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterSciNotation::test_basic[10-2e-05-$\\\\\\\\mathdefault{2\\\\\\\\times10^{-5}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterSciNotation::test_basic[10-2-$\\\\\\\\mathdefault{2\\\\\\\\times10^{0}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterSciNotation::test_basic[10-200000-$\\\\\\\\mathdefault{2\\\\\\\\times10^{5}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterSciNotation::test_basic[10-5e-05-$\\\\\\\\mathdefault{5\\\\\\\\times10^{-5}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterSciNotation::test_basic[10-5-$\\\\\\\\mathdefault{5\\\\\\\\times10^{0}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatterSciNotation::test_basic[10-500000-$\\\\\\\\mathdefault{5\\\\\\\\times10^{5}}$]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3.141592654e-05-0.001-3.142e-5]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.0003141592654-0.001-3.142e-4]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.003141592654-0.001-3.142e-3]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.03141592654-0.001-3.142e-2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.3141592654-0.001-3.142e-1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3.141592654-0.001-3.142]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[31.41592654-0.001-3.142e1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[314.1592654-0.001-3.142e2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3141.592654-0.001-3.142e3]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[31415.92654-0.001-3.142e4]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[314159.2654-0.001-3.142e5]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1e-05-0.001-1e-5]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.0001-0.001-1e-4]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.001-0.001-1e-3]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.01-0.001-1e-2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.1-0.001-1e-1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1-0.001-1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[10-0.001-10]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[100-0.001-100]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1000-0.001-1000]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[10000-0.001-1e4]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[100000-0.001-1e5]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3.141592654e-05-0.015-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.0003141592654-0.015-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.003141592654-0.015-0.003]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.03141592654-0.015-0.031]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.3141592654-0.015-0.314]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3.141592654-0.015-3.142]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[31.41592654-0.015-31.416]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[314.1592654-0.015-314.159]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3141.592654-0.015-3141.593]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[31415.92654-0.015-31415.927]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[314159.2654-0.015-314159.265]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1e-05-0.015-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.0001-0.015-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.001-0.015-0.001]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.01-0.015-0.01]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.1-0.015-0.1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1-0.015-1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[10-0.015-10]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[100-0.015-100]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1000-0.015-1000]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[10000-0.015-10000]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[100000-0.015-100000]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3.141592654e-05-0.5-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.0003141592654-0.5-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.003141592654-0.5-0.003]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.03141592654-0.5-0.031]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.3141592654-0.5-0.314]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3.141592654-0.5-3.142]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[31.41592654-0.5-31.416]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[314.1592654-0.5-314.159]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3141.592654-0.5-3141.593]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[31415.92654-0.5-31415.927]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[314159.2654-0.5-314159.265]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1e-05-0.5-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.0001-0.5-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.001-0.5-0.001]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.01-0.5-0.01]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.1-0.5-0.1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1-0.5-1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[10-0.5-10]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[100-0.5-100]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1000-0.5-1000]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[10000-0.5-10000]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[100000-0.5-100000]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3.141592654e-05-5-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.0003141592654-5-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.003141592654-5-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.03141592654-5-0.03]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.3141592654-5-0.31]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3.141592654-5-3.14]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[31.41592654-5-31.42]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[314.1592654-5-314.16]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3141.592654-5-3141.59]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[31415.92654-5-31415.93]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[314159.2654-5-314159.27]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1e-05-5-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.0001-5-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.001-5-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.01-5-0.01]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.1-5-0.1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1-5-1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[10-5-10]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[100-5-100]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1000-5-1000]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[10000-5-10000]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[100000-5-100000]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3.141592654e-05-100-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.0003141592654-100-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.003141592654-100-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.03141592654-100-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.3141592654-100-0.3]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3.141592654-100-3.1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[31.41592654-100-31.4]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[314.1592654-100-314.2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3141.592654-100-3141.6]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[31415.92654-100-31415.9]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[314159.2654-100-314159.3]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1e-05-100-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.0001-100-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.001-100-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.01-100-0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.1-100-0.1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1-100-1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[10-100-10]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[100-100-100]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1000-100-1000]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[10000-100-10000]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[100000-100-100000]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3.141592654e-05-1000000.0-3.1e-5]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.0003141592654-1000000.0-3.1e-4]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.003141592654-1000000.0-3.1e-3]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.03141592654-1000000.0-3.1e-2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.3141592654-1000000.0-3.1e-1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3.141592654-1000000.0-3.1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[31.41592654-1000000.0-3.1e1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[314.1592654-1000000.0-3.1e2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[3141.592654-1000000.0-3.1e3]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[31415.92654-1000000.0-3.1e4]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[314159.2654-1000000.0-3.1e5]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1e-05-1000000.0-1e-5]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.0001-1000000.0-1e-4]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.001-1000000.0-1e-3]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.01-1000000.0-1e-2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[0.1-1000000.0-1e-1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1-1000000.0-1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[10-1000000.0-10]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[100-1000000.0-100]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[1000-1000000.0-1000]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[10000-1000000.0-1e4]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_pprint[100000-1000000.0-1e5]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_sublabel\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_LogFormatter_call[1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_LogFormatter_call[10]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_LogFormatter_call[100]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_LogFormatter_call[1000]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_LogFormatter_call_tiny[1e-323]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_LogFormatter_call_tiny[2e-323]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_LogFormatter_call_tiny[1e-322]\", \"lib/matplotlib/tests/test_ticker.py::TestLogFormatter::test_LogFormatter_call_tiny[1.1e-322]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_logit_deformater[STUFF0.41OTHERSTUFF-0.41]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_logit_deformater[STUFF1.41\\\\\\\\cdot10^{-2}OTHERSTUFF-0.0141]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_logit_deformater[STUFF1-0.41OTHERSTUFF-0.5900000000000001]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_logit_deformater[STUFF1-1.41\\\\\\\\cdot10^{-2}OTHERSTUFF-0.9859]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_logit_deformater[STUFF-None]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_logit_deformater[STUFF12.4e-3OTHERSTUFF-None]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[1e-09]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[1e-08]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[1e-07]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[1e-06]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[1e-05]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[0.0001]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[0.001]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[0.01]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[0.1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[0.5]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[0.9]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[0.99]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[0.999]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[0.9999]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[0.99999]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[0.999999]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[0.9999999]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[0.99999999]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_basic[0.999999999]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_invalid[-1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_invalid[-0.5]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_invalid[-0.1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_invalid[1.1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_invalid[1.5]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_invalid[2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_variablelength[0.0009110511944006454]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_variablelength[0.0043016552930929]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_variablelength[0.02005753653785041]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_variablelength[0.08839967720705845]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_variablelength[0.3147990233346844]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_variablelength[0.6852009766653157]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_variablelength[0.9116003227929417]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_variablelength[0.9799424634621495]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_variablelength[0.9956983447069072]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_variablelength[0.9990889488055994]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_minor_vs_major[True-lims0-cases0]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_minor_vs_major[True-lims1-cases1]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_minor_vs_major[True-lims2-cases2]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_minor_vs_major[False-lims3-cases3]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_minor_number\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_use_overline\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_one_half\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_format_data_short[100]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_format_data_short[253]\", \"lib/matplotlib/tests/test_ticker.py::TestLogitFormatter::test_format_data_short[754]\", \"lib/matplotlib/tests/test_ticker.py::TestFormatStrFormatter::test_basic\", \"lib/matplotlib/tests/test_ticker.py::TestStrMethodFormatter::test_basic[{x:05d}-input0-00002]\", \"lib/matplotlib/tests/test_ticker.py::TestStrMethodFormatter::test_basic[{x:03d}-{pos:02d}-input1-002-01]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[False--1234.56789-expected0]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True--1234.56789-expected1]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[False--1.23456789-expected2]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True--1.23456789-expected3]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[False--0.123456789-expected4]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True--0.123456789-expected5]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[False--0.00123456789-expected6]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True--0.00123456789-expected7]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True--0.0-expected8]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True-0-expected9]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True-0-expected10]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True-1.23456789e-06-expected11]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True-0.123456789-expected12]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True-0.1-expected13]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True-1-expected14]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True-1.23456789-expected15]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True-999.9-expected16]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True-999.9999-expected17]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[False--999.9999-expected18]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True--999.9999-expected19]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True-1000-expected20]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True-1001-expected21]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True-100001-expected22]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True-987654.321-expected23]\", \"lib/matplotlib/tests/test_ticker.py::TestEngFormatter::test_params[True-1.23e+33-expected24]\", \"lib/matplotlib/tests/test_ticker.py::test_engformatter_usetex_useMathText\", \"lib/matplotlib/tests/test_ticker.py::TestPercentFormatter::test_basic[decimals=0,\", \"lib/matplotlib/tests/test_ticker.py::TestPercentFormatter::test_basic[decimals=1,\", \"lib/matplotlib/tests/test_ticker.py::TestPercentFormatter::test_basic[autodecimal,\", \"lib/matplotlib/tests/test_ticker.py::TestPercentFormatter::test_basic[None\", \"lib/matplotlib/tests/test_ticker.py::TestPercentFormatter::test_basic[Empty\", \"lib/matplotlib/tests/test_ticker.py::TestPercentFormatter::test_basic[Custom\", \"lib/matplotlib/tests/test_ticker.py::TestPercentFormatter::test_latex[False-False-50\\\\\\\\{t}%]\", \"lib/matplotlib/tests/test_ticker.py::TestPercentFormatter::test_latex[False-True-50\\\\\\\\\\\\\\\\\\\\\\\\{t\\\\\\\\}\\\\\\\\%]\", \"lib/matplotlib/tests/test_ticker.py::TestPercentFormatter::test_latex[True-False-50\\\\\\\\{t}%]\", \"lib/matplotlib/tests/test_ticker.py::TestPercentFormatter::test_latex[True-True-50\\\\\\\\{t}%]\", \"lib/matplotlib/tests/test_ticker.py::test_majformatter_type\", \"lib/matplotlib/tests/test_ticker.py::test_minformatter_type\", \"lib/matplotlib/tests/test_ticker.py::test_majlocator_type\", \"lib/matplotlib/tests/test_ticker.py::test_minlocator_type\", \"lib/matplotlib/tests/test_ticker.py::test_minorticks_rc\", \"lib/matplotlib/tests/test_ticker.py::test_remove_overlap[True-6]\", \"lib/matplotlib/tests/test_ticker.py::test_remove_overlap[None-6]\", \"lib/matplotlib/tests/test_ticker.py::test_remove_overlap[False-9]\", \"lib/matplotlib/tests/test_ticker.py::test_bad_locator_subs[sub0]\", \"lib/matplotlib/tests/test_ticker.py::test_bad_locator_subs[sub1]\", \"lib/matplotlib/tests/test_ticker.py::test_small_range_loglocator[1]\", \"lib/matplotlib/tests/test_ticker.py::test_small_range_loglocator[2]\", \"lib/matplotlib/tests/test_ticker.py::test_small_range_loglocator[3]\", \"lib/matplotlib/tests/test_ticker.py::test_small_range_loglocator[9]\", \"lib/matplotlib/tests/test_ticker.py::test_NullFormatter\", \"lib/matplotlib/tests/test_ticker.py::test_set_offset_string[formatter0]\", \"lib/matplotlib/tests/test_ticker.py::test_set_offset_string[formatter1]\"]",
  "environment_setup_commit": "0849036fd992a2dd133a0cffc3f84f58ccf1840f",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.820551",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}