{
  "repo": "scikit-learn/scikit-learn",
  "instance_id": "scikit-learn__scikit-learn-13974",
  "base_commit": "0bdd92036dcc3daac5ab5fb8cd668d54eab43390",
  "patch": "diff --git a/sklearn/impute/_base.py b/sklearn/impute/_base.py\n--- a/sklearn/impute/_base.py\n+++ b/sklearn/impute/_base.py\n@@ -269,7 +269,7 @@ def fit(self, X, y=None):\n \n         if self.add_indicator:\n             self.indicator_ = MissingIndicator(\n-                missing_values=self.missing_values)\n+                missing_values=self.missing_values, error_on_new=False)\n             self.indicator_.fit(X)\n         else:\n             self.indicator_ = None\ndiff --git a/sklearn/impute/_iterative.py b/sklearn/impute/_iterative.py\n--- a/sklearn/impute/_iterative.py\n+++ b/sklearn/impute/_iterative.py\n@@ -520,7 +520,7 @@ def fit_transform(self, X, y=None):\n \n         if self.add_indicator:\n             self.indicator_ = MissingIndicator(\n-                missing_values=self.missing_values)\n+                missing_values=self.missing_values, error_on_new=False)\n             X_trans_indicator = self.indicator_.fit_transform(X)\n         else:\n             self.indicator_ = None\n",
  "test_patch": "diff --git a/sklearn/impute/tests/test_impute.py b/sklearn/impute/tests/test_impute.py\n--- a/sklearn/impute/tests/test_impute.py\n+++ b/sklearn/impute/tests/test_impute.py\n@@ -445,6 +445,16 @@ def test_imputation_constant_pandas(dtype):\n     assert_array_equal(X_trans, X_true)\n \n \n+@pytest.mark.parametrize('Imputer', (SimpleImputer, IterativeImputer))\n+def test_imputation_missing_value_in_test_array(Imputer):\n+    # [Non Regression Test for issue #13968] Missing value in test set should\n+    # not throw an error and return a finite dataset\n+    train = [[1], [2]]\n+    test = [[3], [np.nan]]\n+    imputer = Imputer(add_indicator=True)\n+    imputer.fit(train).transform(test)\n+\n+\n def test_imputation_pipeline_grid_search():\n     # Test imputation within a pipeline + gridsearch.\n     X = sparse_random_matrix(100, 100, density=0.10)\n",
  "problem_statement": "Design of add_indicator in SimpleImputer may fail when running cross validation\n<!--\r\nIf your issue is a usage question, submit it here instead:\r\n- StackOverflow with the scikit-learn tag: https://stackoverflow.com/questions/tagged/scikit-learn\r\n- Mailing List: https://mail.python.org/mailman/listinfo/scikit-learn\r\nFor more information, see User Questions: http://scikit-learn.org/stable/support.html#user-questions\r\n-->\r\n\r\n<!-- Instructions For Filing a Bug: https://github.com/scikit-learn/scikit-learn/blob/master/CONTRIBUTING.md#filing-bugs -->\r\n\r\n#### Description\r\n<!-- Example: Joblib Error thrown when calling fit on LatentDirichletAllocation with evaluate_every > 0-->\r\nThe design of `add_indicator` depends on missing values exist in the training data. This will break cross validation.\r\n\r\n#### Steps/Code to Reproduce\r\n<!--\r\nExample:\r\n```python\r\nfrom sklearn.feature_extraction.text import CountVectorizer\r\nfrom sklearn.decomposition import LatentDirichletAllocation\r\n\r\ndocs = [\"Help I have a bug\" for i in range(1000)]\r\n\r\nvectorizer = CountVectorizer(input=docs, analyzer='word')\r\nlda_features = vectorizer.fit_transform(docs)\r\n\r\nlda_model = LatentDirichletAllocation(\r\n    n_topics=10,\r\n    learning_method='online',\r\n    evaluate_every=10,\r\n    n_jobs=4,\r\n)\r\nmodel = lda_model.fit(lda_features)\r\n```\r\nIf the code is too long, feel free to put it in a public gist and link\r\nit in the issue: https://gist.github.com\r\n-->\r\n```py\r\nimport numpy as np\r\nfrom sklearn.impute import SimpleImputer\r\nfrom sklearn.linear_model import LogisticRegression\r\nfrom sklearn.model_selection import PredefinedSplit\r\nfrom sklearn.model_selection import cross_val_score\r\nfrom sklearn.pipeline import make_pipeline\r\n\r\nX = np.array([[1, 2, 3, np.nan]]).T\r\ny = np.array([0, 0, 1, 1])\r\ntest_fold = np.array([0, 1, 0, 1])\r\n\r\nps = PredefinedSplit(test_fold)\r\npipe1 = make_pipeline(SimpleImputer(add_indicator=True), \r\n                      LogisticRegression(solver='lbfgs'))\r\n\r\ncross_val_score(pipe1, X, y, cv=ps)\r\n```\r\n\r\n#### Expected Results\r\n<!-- Example: No error is thrown. Please paste or describe the expected results.-->\r\nNo error is thrown.\r\n\r\n#### Actual Results\r\n<!-- Please paste or specifically describe the actual output or traceback. -->\r\n```\r\nValueError: The features [0] have missing values in transform \r\nbut have no missing values in fit.\r\n```\r\n\r\n#### Thoughts\r\n\r\nThe original design was adopted because, if the training data has no missing value, there will be a column with all zeros. This type of error will appear when we try to do grid search over the `add_indicator` parameter. One way to work around this is to split the data in such a way that missing values are available (for each column that has a missing value) in both the training set and test set.\r\n\r\n<!-- Thanks for contributing! -->\n",
  "hints_text": "Is that MissingIndicator failing? Shouldn't it be silent if a feature has\nnan in test but is not one of the features or provides indicators for?\n\nIf we set `MissingIndicator`'s `error_on_new=False`, then it will be silent. Currently, there is not a way to directly set this from `SimpleImputer`'s API.\nWe should have error_on_new=False by default for add_indicator.\n",
  "created_at": "2019-05-29T01:34:39Z",
  "version": "0.22",
  "FAIL_TO_PASS": "[\"sklearn/impute/tests/test_impute.py::test_imputation_missing_value_in_test_array[SimpleImputer]\", \"sklearn/impute/tests/test_impute.py::test_imputation_missing_value_in_test_array[IterativeImputer]\"]",
  "PASS_TO_PASS": "[\"sklearn/impute/tests/test_impute.py::test_imputation_shape\", \"sklearn/impute/tests/test_impute.py::test_imputation_error_invalid_strategy[const]\", \"sklearn/impute/tests/test_impute.py::test_imputation_error_invalid_strategy[101]\", \"sklearn/impute/tests/test_impute.py::test_imputation_error_invalid_strategy[None]\", \"sklearn/impute/tests/test_impute.py::test_imputation_deletion_warning[mean]\", \"sklearn/impute/tests/test_impute.py::test_imputation_deletion_warning[median]\", \"sklearn/impute/tests/test_impute.py::test_imputation_deletion_warning[most_frequent]\", \"sklearn/impute/tests/test_impute.py::test_imputation_error_sparse_0[mean]\", \"sklearn/impute/tests/test_impute.py::test_imputation_error_sparse_0[median]\", \"sklearn/impute/tests/test_impute.py::test_imputation_error_sparse_0[most_frequent]\", \"sklearn/impute/tests/test_impute.py::test_imputation_error_sparse_0[constant]\", \"sklearn/impute/tests/test_impute.py::test_imputation_mean_median\", \"sklearn/impute/tests/test_impute.py::test_imputation_median_special_cases\", \"sklearn/impute/tests/test_impute.py::test_imputation_mean_median_error_invalid_type[None-mean]\", \"sklearn/impute/tests/test_impute.py::test_imputation_mean_median_error_invalid_type[None-median]\", \"sklearn/impute/tests/test_impute.py::test_imputation_mean_median_error_invalid_type[object-mean]\", \"sklearn/impute/tests/test_impute.py::test_imputation_mean_median_error_invalid_type[object-median]\", \"sklearn/impute/tests/test_impute.py::test_imputation_mean_median_error_invalid_type[str-mean]\", \"sklearn/impute/tests/test_impute.py::test_imputation_mean_median_error_invalid_type[str-median]\", \"sklearn/impute/tests/test_impute.py::test_imputation_const_mostf_error_invalid_types[str-constant]\", \"sklearn/impute/tests/test_impute.py::test_imputation_const_mostf_error_invalid_types[str-most_frequent]\", \"sklearn/impute/tests/test_impute.py::test_imputation_const_mostf_error_invalid_types[dtype1-constant]\", \"sklearn/impute/tests/test_impute.py::test_imputation_const_mostf_error_invalid_types[dtype1-most_frequent]\", \"sklearn/impute/tests/test_impute.py::test_imputation_const_mostf_error_invalid_types[dtype2-constant]\", \"sklearn/impute/tests/test_impute.py::test_imputation_const_mostf_error_invalid_types[dtype2-most_frequent]\", \"sklearn/impute/tests/test_impute.py::test_imputation_most_frequent\", \"sklearn/impute/tests/test_impute.py::test_imputation_most_frequent_objects[None]\", \"sklearn/impute/tests/test_impute.py::test_imputation_most_frequent_objects[nan]\", \"sklearn/impute/tests/test_impute.py::test_imputation_most_frequent_objects[NAN]\", \"sklearn/impute/tests/test_impute.py::test_imputation_most_frequent_objects[]\", \"sklearn/impute/tests/test_impute.py::test_imputation_most_frequent_objects[0]\", \"sklearn/impute/tests/test_impute.py::test_imputation_most_frequent_pandas[object]\", \"sklearn/impute/tests/test_impute.py::test_imputation_most_frequent_pandas[category]\", \"sklearn/impute/tests/test_impute.py::test_imputation_constant_error_invalid_type[1-0]\", \"sklearn/impute/tests/test_impute.py::test_imputation_constant_error_invalid_type[1.0-nan]\", \"sklearn/impute/tests/test_impute.py::test_imputation_constant_integer\", \"sklearn/impute/tests/test_impute.py::test_imputation_constant_float[csr_matrix]\", \"sklearn/impute/tests/test_impute.py::test_imputation_constant_float[asarray]\", \"sklearn/impute/tests/test_impute.py::test_imputation_constant_object[None]\", \"sklearn/impute/tests/test_impute.py::test_imputation_constant_object[nan]\", \"sklearn/impute/tests/test_impute.py::test_imputation_constant_object[NAN]\", \"sklearn/impute/tests/test_impute.py::test_imputation_constant_object[]\", \"sklearn/impute/tests/test_impute.py::test_imputation_constant_object[0]\", \"sklearn/impute/tests/test_impute.py::test_imputation_constant_pandas[object]\", \"sklearn/impute/tests/test_impute.py::test_imputation_constant_pandas[category]\", \"sklearn/impute/tests/test_impute.py::test_imputation_pipeline_grid_search\", \"sklearn/impute/tests/test_impute.py::test_imputation_copy\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_zero_iters\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_verbose\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_all_missing\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_imputation_order[random]\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_imputation_order[roman]\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_imputation_order[ascending]\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_imputation_order[descending]\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_imputation_order[arabic]\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_estimators[None]\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_estimators[estimator1]\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_estimators[estimator2]\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_estimators[estimator3]\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_estimators[estimator4]\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_clip\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_clip_truncnorm\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_truncated_normal_posterior\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_missing_at_transform[mean]\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_missing_at_transform[median]\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_missing_at_transform[most_frequent]\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_transform_stochasticity\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_no_missing\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_rank_one\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_transform_recovery[3]\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_transform_recovery[5]\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_additive_matrix\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_error_param[-1-0.001-ValueError-should\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_error_param[1--0.001-ValueError-should\", \"sklearn/impute/tests/test_impute.py::test_iterative_imputer_early_stopping\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_error[X_fit0-X_trans0-params0-have\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_error[X_fit1-X_trans1-params1-'features'\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_error[X_fit2-X_trans2-params2-'sparse'\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_error[X_fit3-X_trans3-params3-MissingIndicator\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[missing-only-3-features_indices0-nan-float64-array]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[missing-only-3-features_indices0-0-int32-array]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[missing-only-3-features_indices0--1-int32-array]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[missing-only-3-features_indices0-nan-float64-csc_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[missing-only-3-features_indices0--1-int32-csc_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[missing-only-3-features_indices0-nan-float64-csr_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[missing-only-3-features_indices0--1-int32-csr_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[missing-only-3-features_indices0-nan-float64-coo_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[missing-only-3-features_indices0--1-int32-coo_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[missing-only-3-features_indices0-nan-float64-lil_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[missing-only-3-features_indices0--1-int32-lil_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[missing-only-3-features_indices0-nan-float64-bsr_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[missing-only-3-features_indices0--1-int32-bsr_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[all-3-features_indices1-nan-float64-array]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[all-3-features_indices1-0-int32-array]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[all-3-features_indices1--1-int32-array]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[all-3-features_indices1-nan-float64-csc_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[all-3-features_indices1--1-int32-csc_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[all-3-features_indices1-nan-float64-csr_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[all-3-features_indices1--1-int32-csr_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[all-3-features_indices1-nan-float64-coo_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[all-3-features_indices1--1-int32-coo_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[all-3-features_indices1-nan-float64-lil_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[all-3-features_indices1--1-int32-lil_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[all-3-features_indices1-nan-float64-bsr_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_new[all-3-features_indices1--1-int32-bsr_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_raise_on_sparse_with_missing_0[csc_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_raise_on_sparse_with_missing_0[csr_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_raise_on_sparse_with_missing_0[coo_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_raise_on_sparse_with_missing_0[lil_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_raise_on_sparse_with_missing_0[bsr_matrix]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[nan-array-True]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[nan-array-False]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[nan-array-auto]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[0-array-True]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[0-array-False]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[0-array-auto]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[nan-csc_matrix-True]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[nan-csc_matrix-False]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[nan-csc_matrix-auto]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[nan-csr_matrix-True]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[nan-csr_matrix-False]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[nan-csr_matrix-auto]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[nan-coo_matrix-True]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[nan-coo_matrix-False]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[nan-coo_matrix-auto]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[nan-lil_matrix-True]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[nan-lil_matrix-False]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_param[nan-lil_matrix-auto]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_string\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_with_imputer[X0-a-X_trans_exp0]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_with_imputer[X1-nan-X_trans_exp1]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_with_imputer[X2-nan-X_trans_exp2]\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_with_imputer[X3-None-X_trans_exp3]\", \"sklearn/impute/tests/test_impute.py::test_inconsistent_dtype_X_missing_values[NaN-nan-Input\", \"sklearn/impute/tests/test_impute.py::test_inconsistent_dtype_X_missing_values[-1--1-types\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_no_missing\", \"sklearn/impute/tests/test_impute.py::test_missing_indicator_sparse_no_explicit_zeros\", \"sklearn/impute/tests/test_impute.py::test_imputers_add_indicator[SimpleImputer-nan]\", \"sklearn/impute/tests/test_impute.py::test_imputers_add_indicator[SimpleImputer--1]\", \"sklearn/impute/tests/test_impute.py::test_imputers_add_indicator[SimpleImputer-0]\", \"sklearn/impute/tests/test_impute.py::test_imputers_add_indicator[IterativeImputer-nan]\", \"sklearn/impute/tests/test_impute.py::test_imputers_add_indicator[IterativeImputer--1]\", \"sklearn/impute/tests/test_impute.py::test_imputers_add_indicator[IterativeImputer-0]\", \"sklearn/impute/tests/test_impute.py::test_imputer_without_indicator[SimpleImputer]\", \"sklearn/impute/tests/test_impute.py::test_imputer_without_indicator[IterativeImputer]\", \"sklearn/impute/tests/test_impute.py::test_simple_imputation_add_indicator_sparse_matrix[csc_matrix]\", \"sklearn/impute/tests/test_impute.py::test_simple_imputation_add_indicator_sparse_matrix[csr_matrix]\", \"sklearn/impute/tests/test_impute.py::test_simple_imputation_add_indicator_sparse_matrix[coo_matrix]\", \"sklearn/impute/tests/test_impute.py::test_simple_imputation_add_indicator_sparse_matrix[lil_matrix]\", \"sklearn/impute/tests/test_impute.py::test_simple_imputation_add_indicator_sparse_matrix[bsr_matrix]\"]",
  "environment_setup_commit": "7e85a6d1f038bbb932b36f18d75df6be937ed00d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.000770",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}