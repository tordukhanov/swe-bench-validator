{
  "repo": "django/django",
  "instance_id": "django__django-14291",
  "base_commit": "5c73fbb6a93ee214678f02ba4027f18dff49337b",
  "patch": "diff --git a/django/core/checks/caches.py b/django/core/checks/caches.py\n--- a/django/core/checks/caches.py\n+++ b/django/core/checks/caches.py\n@@ -27,10 +27,11 @@ def check_cache_location_not_exposed(app_configs, **kwargs):\n         if not setting:\n             continue\n         if name == 'STATICFILES_DIRS':\n-            paths = {\n-                pathlib.Path(staticfiles_dir).resolve()\n-                for staticfiles_dir in setting\n-            }\n+            paths = set()\n+            for staticfiles_dir in setting:\n+                if isinstance(staticfiles_dir, (list, tuple)):\n+                    _, staticfiles_dir = staticfiles_dir\n+                paths.add(pathlib.Path(staticfiles_dir).resolve())\n         else:\n             paths = {pathlib.Path(setting).resolve()}\n         for alias in settings.CACHES:\n",
  "test_patch": "diff --git a/tests/check_framework/test_caches.py b/tests/check_framework/test_caches.py\n--- a/tests/check_framework/test_caches.py\n+++ b/tests/check_framework/test_caches.py\n@@ -91,6 +91,35 @@ def test_cache_path_not_conflict(self):\n             with self.subTest(setting=setting), self.settings(**settings):\n                 self.assertEqual(check_cache_location_not_exposed(None), [])\n \n+    def test_staticfiles_dirs_prefix(self):\n+        root = pathlib.Path.cwd()\n+        tests = [\n+            (root, root, 'matches'),\n+            (root / 'cache', root, 'is inside'),\n+            (root, root / 'other', 'contains'),\n+        ]\n+        for cache_path, setting_path, msg in tests:\n+            settings = self.get_settings(\n+                'STATICFILES_DIRS',\n+                cache_path,\n+                ('prefix', setting_path),\n+            )\n+            with self.subTest(path=setting_path), self.settings(**settings):\n+                msg = self.warning_message % (msg, 'STATICFILES_DIRS')\n+                self.assertEqual(check_cache_location_not_exposed(None), [\n+                    Warning(msg, id='caches.W002'),\n+                ])\n+\n+    def test_staticfiles_dirs_prefix_not_conflict(self):\n+        root = pathlib.Path.cwd()\n+        settings = self.get_settings(\n+            'STATICFILES_DIRS',\n+            root / 'cache',\n+            ('prefix', root / 'other'),\n+        )\n+        with self.settings(**settings):\n+            self.assertEqual(check_cache_location_not_exposed(None), [])\n+\n \n class CheckCacheAbsolutePath(SimpleTestCase):\n     def test_absolute_path(self):\n",
  "problem_statement": "caches.W002 check does not support tuples in STATICFILES_DIRS\nDescription\n\t\nThe caches.W002 check defined here:\n​https://github.com/django/django/blob/76c0b32f826469320c59709d31e2f2126dd7c505/django/core/checks/caches.py#L22-L55\ninspects the values of each entry in STATICFILES_DIRS here:\n​https://github.com/django/django/blob/76c0b32f826469320c59709d31e2f2126dd7c505/django/core/checks/caches.py#L30-L33\nand passes them to pathlib.Path(staticfiles_dir) which expects a string, however according to the documentation each entry in STATICFILES_DIRS may be either a string or a tuple:\n​https://docs.djangoproject.com/en/3.2/ref/settings/#prefixes-optional\nIf a STATICFILES_DIRS entry is provided as a tuple, this check fails with:\nTypeError: expected str, bytes or os.PathLike object, not tuple\nin python3.9/pathlib.py in _parse_args at line 680\n",
  "hints_text": "Thanks for the report. Regression in c36075ac1dddfa986340b1a5e15fe48833322372. Reproduced at 413c15ef2e3d3958fb641a023bc1e2d15fb2b228.\nRegression tests.",
  "created_at": "2021-04-21T05:40:18Z",
  "version": "4.0",
  "FAIL_TO_PASS": "[\"test_staticfiles_dirs_prefix (check_framework.test_caches.CheckCacheLocationTest)\", \"test_staticfiles_dirs_prefix_not_conflict (check_framework.test_caches.CheckCacheLocationTest)\"]",
  "PASS_TO_PASS": "[\"Don't error if 'default' is present in CACHES setting.\", \"Error if 'default' not present in CACHES setting.\", \"test_absolute_path (check_framework.test_caches.CheckCacheAbsolutePath)\", \"test_relative_path (check_framework.test_caches.CheckCacheAbsolutePath)\", \"test_cache_path_contains_media_static_setting (check_framework.test_caches.CheckCacheLocationTest)\", \"test_cache_path_inside_media_static_setting (check_framework.test_caches.CheckCacheLocationTest)\", \"test_cache_path_matches_media_static_setting (check_framework.test_caches.CheckCacheLocationTest)\", \"test_cache_path_not_conflict (check_framework.test_caches.CheckCacheLocationTest)\"]",
  "environment_setup_commit": "475cffd1d64c690cdad16ede4d5e81985738ceb4",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.686023",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}