{
  "repo": "astropy/astropy",
  "instance_id": "astropy__astropy-8519",
  "base_commit": "0e1d299f8f7084b8cb6286caed92e3169317027f",
  "patch": "diff --git a/astropy/units/function/core.py b/astropy/units/function/core.py\n--- a/astropy/units/function/core.py\n+++ b/astropy/units/function/core.py\n@@ -6,7 +6,7 @@\n \n import numpy as np\n \n-from astropy.units import (Unit, UnitBase, UnitsError, UnitTypeError,\n+from astropy.units import (Unit, UnitBase, UnitsError, UnitTypeError, UnitConversionError,\n                            dimensionless_unscaled, Quantity)\n \n __all__ = ['FunctionUnitBase', 'FunctionQuantity']\n@@ -252,9 +252,19 @@ def to(self, other, value=1., equivalencies=[]):\n             return self.function_unit.to(other_function_unit, value)\n \n         else:\n-            # when other is not a function unit\n-            return self.physical_unit.to(other, self.to_physical(value),\n-                                         equivalencies)\n+            try:\n+                # when other is not a function unit\n+                return self.physical_unit.to(other, self.to_physical(value),\n+                                             equivalencies)\n+            except UnitConversionError as e:\n+                if self.function_unit == Unit('mag'):\n+                    # One can get to raw magnitudes via math that strips the dimensions off.\n+                    # Include extra information in the exception to remind users of this.\n+                    msg = \"Did you perhaps subtract magnitudes so the unit got lost?\"\n+                    e.args += (msg,)\n+                    raise e\n+                else:\n+                    raise\n \n     def is_unity(self):\n         return False\n",
  "test_patch": "diff --git a/astropy/units/tests/test_logarithmic.py b/astropy/units/tests/test_logarithmic.py\n--- a/astropy/units/tests/test_logarithmic.py\n+++ b/astropy/units/tests/test_logarithmic.py\n@@ -235,6 +235,14 @@ def test_unit_multiple_possible_equivalencies(self):\n         lu = u.mag(u.Jy)\n         assert lu.is_equivalent(pu_sample)\n \n+    def test_magnitude_conversion_fails_message(self):\n+        \"\"\"Check that \"dimensionless\" magnitude units include a message in their\n+        exception text suggesting a possible cause of the problem.\n+        \"\"\"\n+        with pytest.raises(u.UnitConversionError) as excinfo:\n+            (10*u.ABmag - 2*u.ABmag).to(u.nJy)\n+        assert \"Did you perhaps subtract magnitudes so the unit got lost?\" in str(excinfo.value)\n+\n \n class TestLogUnitArithmetic:\n     def test_multiplication_division(self):\n",
  "problem_statement": "Adding/subtracting ABmag Quantities loses the \"type\" of magnitude\nThe following code raises a `UnitConversionError`, because it appears the math operation lost track of the \"type\" of magnitude. `fluxMag` and `color` are both `ABmag`, so I would expect their difference to also be an ABmag.\r\n\r\n```python\r\nimport numpy as np\r\nimport astropy.units as u\r\n\r\n# color = np.random.random(5)*u.ABmag\r\ncolor = 10*u.ABmag\r\nflux = 10000\r\nfluxMag = (flux*u.nJy).to(u.ABmag)\r\ndiff = fluxMag - color\r\nprint(color, fluxMag, diff)\r\nprint(diff.to(u.nJy))\r\n```\r\nprints the following, and then raises:\r\n```\r\n10.0 mag(AB) 21.4 mag(AB) 11.399999999999999 mag\r\n...\r\nastropy.units.core.UnitConversionError: '' (dimensionless) and 'nJy' (spectral flux density) are not convertible\r\n```\r\n\r\nIf the `-` is changed to `+`, the exception is different:\r\n\r\n```\r\n10.0 mag(AB) 21.4 mag(AB) 31.4 mag(AB2)\r\n...\r\nastropy.units.core.UnitConversionError: 'AB2' and 'nJy' (spectral flux density) are not convertible\r\n```\n",
  "hints_text": "For the record, what are the Python, Astropy, and Numpy versions used?\nSorry about that!\r\n\r\npython 3.6.6\r\nnumpy 1.14.5\r\nastropy 3.0.3\n@mhvk ?\n@parejkoj - this behaviour is as expected: if you add two magnitudes with a unit, you are effectively multiplying the physical quantities and thus their units, while if you substract, you are dividing them. So, for the subtraction, the result is dimensionless and hence you get a regular `mag` output; similarly, if you look carefully at the addition, you'll see that the result has units of `mag(AB2)`, i.e., it is a magnitude of a quantity that has units of AB**2.\r\n\r\nSee also the section on [arithmetic](http://docs.astropy.org/en/latest/units/logarithmic_units.html#arithmetic-and-photometric-applications) in the documentation.\r\n\r\nHope this helps!\nYes, I'm an idiot. Classic PEBCAK. In my case, `color` is a dimension less magnitude (duh!), so the code should have read:\r\n\r\n```\r\ncolor = 10*u.mag\r\nflux = 10000\r\nfluxMag = (flux*u.nJy).to(u.ABmag)\r\ndiff = fluxMag - color\r\nprint(color, fluxMag, diff)\r\nprint(diff.to(u.nJy))\r\n```\r\n\r\nI don't normally think of magnitudes as having units, but AB magnitudes absolutely do. I wonder if the resulting error message could make this more obvious for the slower among us (like me)?\nOK, no worries - I've certainly done similarly...\r\n\r\nOn the error message: I guess you are right, within the `Magnitude` (or perhaps `LogQuantity` class) error path we could special-case the dimensionless magnitude to a regular unit case, and add something like \"Did you perhaps subtract magnitudes so the unit got lost?\". But I'm not quite sure what exactly it would be - PR very welcome!!\nI looked into this a little bit during the coworking hour this morning, but I can't figure out where such a customized exception would live. I would suggest appending your text above to the end of the regular exception message.\nPossibly would make most sense as a `try/except` around the trial to convert to a regular unit: https://github.com/astropy/astropy/blob/master/astropy/units/function/core.py#L256",
  "created_at": "2019-03-21T17:59:36Z",
  "version": "3.1",
  "FAIL_TO_PASS": "[\"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_magnitude_conversion_fails_message\"]",
  "PASS_TO_PASS": "[\"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_logarithmic_units\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_callable_units[lu_unit0-DexUnit]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_callable_units[lu_unit1-MagUnit]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_callable_units[lu_unit2-DecibelUnit]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_equality_to_normal_unit_for_dimensionless[lu_unit0]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_equality_to_normal_unit_for_dimensionless[lu_unit1]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_equality_to_normal_unit_for_dimensionless[lu_unit2]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_call_units[lu_unit0-physical_unit0]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_call_units[lu_unit1-physical_unit1]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_call_units[lu_unit2-physical_unit2]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_call_units[lu_unit3-physical_unit3]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_call_units[lu_unit4-physical_unit4]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_call_units[lu_unit5-physical_unit5]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_call_units[lu_unit6-physical_unit6]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_call_units[lu_unit7-physical_unit7]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_call_units[lu_unit8-physical_unit8]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_call_units[lu_unit9-physical_unit9]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_call_units[lu_unit10-physical_unit10]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_call_units[lu_unit11-physical_unit11]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_call_invalid_unit\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_subclass_creation[DexUnit-physical_unit0]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_subclass_creation[DexUnit-physical_unit1]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_subclass_creation[DexUnit-physical_unit2]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_subclass_creation[DexUnit-physical_unit3]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_subclass_creation[MagUnit-physical_unit4]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_subclass_creation[MagUnit-physical_unit5]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_subclass_creation[MagUnit-physical_unit6]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_subclass_creation[MagUnit-physical_unit7]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_subclass_creation[DecibelUnit-physical_unit8]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_subclass_creation[DecibelUnit-physical_unit9]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_subclass_creation[DecibelUnit-physical_unit10]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_subclass_creation[DecibelUnit-physical_unit11]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_subclass_creation[LogUnit-physical_unit12]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_subclass_creation[LogUnit-physical_unit13]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_subclass_creation[LogUnit-physical_unit14]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitCreation::test_subclass_creation[LogUnit-physical_unit15]\", \"astropy/units/tests/test_logarithmic.py::test_predefined_magnitudes\", \"astropy/units/tests/test_logarithmic.py::test_predefined_reinitialisation\", \"astropy/units/tests/test_logarithmic.py::test_predefined_string_roundtrip\", \"astropy/units/tests/test_logarithmic.py::test_inequality\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitStrings::test_str\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_physical_unit_conversion[lu_unit0-physical_unit0]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_physical_unit_conversion[lu_unit1-physical_unit1]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_physical_unit_conversion[lu_unit2-physical_unit2]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_physical_unit_conversion[lu_unit3-physical_unit3]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_physical_unit_conversion[lu_unit4-physical_unit4]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_physical_unit_conversion[lu_unit5-physical_unit5]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_physical_unit_conversion[lu_unit6-physical_unit6]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_physical_unit_conversion[lu_unit7-physical_unit7]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_physical_unit_conversion[lu_unit8-physical_unit8]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_physical_unit_conversion[lu_unit9-physical_unit9]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_physical_unit_conversion[lu_unit10-physical_unit10]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_physical_unit_conversion[lu_unit11-physical_unit11]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_container_unit_conversion[lu_unit0]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_container_unit_conversion[lu_unit1]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_container_unit_conversion[lu_unit2]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit0-tlu_unit0-physical_unit0]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit1-tlu_unit1-physical_unit1]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit2-tlu_unit2-physical_unit2]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit3-tlu_unit3-physical_unit3]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit4-tlu_unit4-physical_unit4]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit5-tlu_unit5-physical_unit5]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit6-tlu_unit6-physical_unit6]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit7-tlu_unit7-physical_unit7]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit8-tlu_unit8-physical_unit8]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit9-tlu_unit9-physical_unit9]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit10-tlu_unit10-physical_unit10]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit11-tlu_unit11-physical_unit11]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit12-tlu_unit12-physical_unit12]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit13-tlu_unit13-physical_unit13]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit14-tlu_unit14-physical_unit14]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit15-tlu_unit15-physical_unit15]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit16-tlu_unit16-physical_unit16]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit17-tlu_unit17-physical_unit17]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit18-tlu_unit18-physical_unit18]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit19-tlu_unit19-physical_unit19]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit20-tlu_unit20-physical_unit20]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit21-tlu_unit21-physical_unit21]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit22-tlu_unit22-physical_unit22]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit23-tlu_unit23-physical_unit23]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit24-tlu_unit24-physical_unit24]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit25-tlu_unit25-physical_unit25]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit26-tlu_unit26-physical_unit26]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit27-tlu_unit27-physical_unit27]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit28-tlu_unit28-physical_unit28]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit29-tlu_unit29-physical_unit29]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit30-tlu_unit30-physical_unit30]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit31-tlu_unit31-physical_unit31]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit32-tlu_unit32-physical_unit32]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit33-tlu_unit33-physical_unit33]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit34-tlu_unit34-physical_unit34]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_subclass_conversion[flu_unit35-tlu_unit35-physical_unit35]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_unit_decomposition\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitConversion::test_unit_multiple_possible_equivalencies\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_multiplication_division\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_raise_to_power[2]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_raise_to_power[0.5]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_raise_to_power[1]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_raise_to_power[0]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_addition_subtraction_to_normal_units_fails[other0]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_addition_subtraction_to_normal_units_fails[other1]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_addition_subtraction_to_normal_units_fails[other2]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_addition_subtraction_to_normal_units_fails[other3]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_addition_subtraction_to_non_units_fails\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_addition_subtraction[other0]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_addition_subtraction[other1]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_addition_subtraction[other2]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_addition_subtraction[other3]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_addition_subtraction[other4]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_addition_subtraction[other5]\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_complicated_addition_subtraction\", \"astropy/units/tests/test_logarithmic.py::TestLogUnitArithmetic::test_neg_pos\", \"astropy/units/tests/test_logarithmic.py::test_pickle\", \"astropy/units/tests/test_logarithmic.py::test_hashable\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_logarithmic_quantities[Dex-DexUnit]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_logarithmic_quantities[Magnitude-MagUnit]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_logarithmic_quantities[Decibel-DecibelUnit]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_logarithmic_quantities[LogQuantity-LogUnit]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_subclass_creation[Dex-physical_unit0]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_subclass_creation[Dex-physical_unit1]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_subclass_creation[Dex-physical_unit2]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_subclass_creation[Dex-physical_unit3]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_subclass_creation[Magnitude-physical_unit4]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_subclass_creation[Magnitude-physical_unit5]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_subclass_creation[Magnitude-physical_unit6]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_subclass_creation[Magnitude-physical_unit7]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_subclass_creation[Decibel-physical_unit8]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_subclass_creation[Decibel-physical_unit9]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_subclass_creation[Decibel-physical_unit10]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_subclass_creation[Decibel-physical_unit11]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_different_units[unit0]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_different_units[unit1]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_different_units[unit2]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_different_units[unit3]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_different_units[unit4]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_different_units[unit5]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_different_units[unit6]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_different_units[unit7]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_function_values[value0-None]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_function_values[value1-None]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_function_values[value2-unit2]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_function_values[value3-unit3]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_indirect_creation[unit0]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_indirect_creation[unit1]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_indirect_creation[unit2]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_indirect_creation[unit3]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_indirect_creation[unit4]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_indirect_creation[unit5]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_from_view\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityCreation::test_using_quantity_class\", \"astropy/units/tests/test_logarithmic.py::test_conversion_to_and_from_physical_quantities\", \"astropy/units/tests/test_logarithmic.py::test_quantity_decomposition\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityViews::test_value_view\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityViews::test_function_view\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityViews::test_quantity_view\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantitySlicing::test_item_get_and_set\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantitySlicing::test_slice_get_and_set\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_multiplication_division\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_raise_to_power[2]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_raise_to_power[0.5]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_raise_to_power[1]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_raise_to_power[0]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_error_on_lq_as_power\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_addition_subtraction_to_normal_units_fails[other0]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_addition_subtraction_to_normal_units_fails[other1]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_addition_subtraction_to_normal_units_fails[other2]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_addition_subtraction_to_normal_units_fails[other3]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_addition_subtraction[other0]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_addition_subtraction[other1]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_addition_subtraction[other2]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_addition_subtraction[other3]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_addition_subtraction[other4]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_addition_subtraction[other5]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_inplace_addition_subtraction_unit_checks[other0]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_inplace_addition_subtraction_unit_checks[other1]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_inplace_addition_subtraction_unit_checks[other2]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_inplace_addition_subtraction_unit_checks[other3]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_inplace_addition_subtraction[other0]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_inplace_addition_subtraction[other1]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_inplace_addition_subtraction[other2]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_inplace_addition_subtraction[other3]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_inplace_addition_subtraction[other4]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_inplace_addition_subtraction[other5]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityArithmetic::test_complicated_addition_subtraction\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityComparisons::test_comparison_to_non_quantities_fails\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityComparisons::test_comparison\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityMethods::test_always_ok[mean]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityMethods::test_always_ok[min]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityMethods::test_always_ok[max]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityMethods::test_always_ok[round]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityMethods::test_always_ok[trace]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityMethods::test_always_ok[std]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityMethods::test_always_ok[var]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityMethods::test_always_ok[ptp]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityMethods::test_always_ok[diff]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityMethods::test_always_ok[ediff1d]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityMethods::test_clip\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityMethods::test_only_ok_if_dimensionless[sum]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityMethods::test_only_ok_if_dimensionless[cumsum]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityMethods::test_only_ok_if_dimensionless[nansum]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityMethods::test_dot\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityMethods::test_never_ok[prod]\", \"astropy/units/tests/test_logarithmic.py::TestLogQuantityMethods::test_never_ok[cumprod]\"]",
  "environment_setup_commit": "2e89d074b3b2abc2da80e437c93b1d5516a0ca57",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.548083",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}