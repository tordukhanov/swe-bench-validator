{
  "repo": "astropy/astropy",
  "instance_id": "astropy__astropy-14163",
  "base_commit": "d083189bbc188807c3d62bd419ea5bbf38cf7d56",
  "patch": "diff --git a/astropy/units/quantity_helper/function_helpers.py b/astropy/units/quantity_helper/function_helpers.py\n--- a/astropy/units/quantity_helper/function_helpers.py\n+++ b/astropy/units/quantity_helper/function_helpers.py\n@@ -40,7 +40,12 @@\n import numpy as np\n from numpy.lib import recfunctions as rfn\n \n-from astropy.units.core import UnitsError, UnitTypeError, dimensionless_unscaled\n+from astropy.units.core import (\n+    UnitConversionError,\n+    UnitsError,\n+    UnitTypeError,\n+    dimensionless_unscaled,\n+)\n from astropy.utils import isiterable\n from astropy.utils.compat import NUMPY_LT_1_23\n \n@@ -561,16 +566,22 @@ def close(a, b, rtol=1e-05, atol=1e-08, *args, **kwargs):\n     return (a, b, rtol, atol) + args, kwargs, None, None\n \n \n-@function_helper\n+@dispatched_function\n def array_equal(a1, a2, equal_nan=False):\n-    args, unit = _quantities2arrays(a1, a2)\n-    return args, dict(equal_nan=equal_nan), None, None\n+    try:\n+        args, unit = _quantities2arrays(a1, a2)\n+    except UnitConversionError:\n+        return False, None, None\n+    return np.array_equal(*args, equal_nan=equal_nan), None, None\n \n \n-@function_helper\n+@dispatched_function\n def array_equiv(a1, a2):\n-    args, unit = _quantities2arrays(a1, a2)\n-    return args, {}, None, None\n+    try:\n+        args, unit = _quantities2arrays(a1, a2)\n+    except UnitConversionError:\n+        return False, None, None\n+    return np.array_equiv(*args), None, None\n \n \n @function_helper(helps={np.dot, np.outer})\n",
  "test_patch": "diff --git a/astropy/units/tests/test_quantity_non_ufuncs.py b/astropy/units/tests/test_quantity_non_ufuncs.py\n--- a/astropy/units/tests/test_quantity_non_ufuncs.py\n+++ b/astropy/units/tests/test_quantity_non_ufuncs.py\n@@ -932,6 +932,9 @@ def test_array_equal_nan(self, equal_nan):\n         result = np.array_equal(q1, q2, equal_nan=equal_nan)\n         assert result == equal_nan\n \n+    def test_array_equal_incompatible_units(self):\n+        assert not np.array_equal([1, 2] * u.m, [1, 2] * u.s)\n+\n     @needs_array_function\n     def test_array_equiv(self):\n         q1 = np.array([[0.0, 1.0, 2.0]] * 3) * u.m\n@@ -940,6 +943,9 @@ def test_array_equiv(self):\n         q3 = q1[0].value * u.cm\n         assert not np.array_equiv(q1, q3)\n \n+    def test_array_equiv_incompatible_units(self):\n+        assert not np.array_equiv([1, 1] * u.m, [1] * u.s)\n+\n \n class TestNanFunctions(InvariantUnitTestSetup):\n     def setup_method(self):\n",
  "problem_statement": "Should calling `np.array_equal()` on `astropy.units.Quantity` instances with incompatible units return `False`?\n<!-- This comments are hidden when you submit the issue,\r\nso you do not need to remove them! -->\r\n\r\n<!-- Please be sure to check out our contributing guidelines,\r\nhttps://github.com/astropy/astropy/blob/main/CONTRIBUTING.md .\r\nPlease be sure to check out our code of conduct,\r\nhttps://github.com/astropy/astropy/blob/main/CODE_OF_CONDUCT.md . -->\r\n\r\n<!-- Please have a search on our GitHub repository to see if a similar\r\nissue has already been posted.\r\nIf a similar issue is closed, have a quick look to see if you are satisfied\r\nby the resolution.\r\nIf not please go ahead and open an issue! -->\r\n\r\n<!-- Please check that the development version still produces the same bug.\r\nYou can install development version with\r\npip install git+https://github.com/astropy/astropy\r\ncommand. -->\r\n\r\n### Description\r\nUsing `np.array_equal()` on `Quantity` instances with incompatible units raises a `UnitConversionError`.\r\n\r\n### Expected behavior\r\nI would've expected this function just to return `False` in this case. Do we think it's really necessary to halt if the units are incompatible?\r\n\r\n### Actual behavior\r\n<!-- What actually happened. -->\r\nAn `astropy.core.UnitsConversionError` exception was raised.\r\n\r\n### Steps to Reproduce\r\n<!-- Ideally a code example could be provided so we can run it ourselves. -->\r\n<!-- If you are pasting code, use triple backticks (```) around\r\nyour code snippet. -->\r\n<!-- If necessary, sanitize your screen output to be pasted so you do not\r\nreveal secrets like tokens and passwords. -->\r\n\r\n```python\r\n>>> np.array_equal([1, 2, 3] * u.mm, [1, 2, 3] * u.s)\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\royts\\Kankelborg-Group\\astropy\\astropy\\units\\quantity.py\", line 980, in to_value\r\n    scale = self.unit._to(unit)\r\n  File \"C:\\Users\\royts\\Kankelborg-Group\\astropy\\astropy\\units\\core.py\", line 1129, in _to\r\n    raise UnitConversionError(f\"'{self!r}' is not a scaled version of '{other!r}'\")\r\nastropy.units.core.UnitConversionError: 'Unit(\"s\")' is not a scaled version of 'Unit(\"mm\")'\r\nDuring handling of the above exception, another exception occurred:\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\royts\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\IPython\\core\\interactiveshell.py\", line 3378, in run_code\r\n    exec(code_obj, self.user_global_ns, self.user_ns)\r\n  File \"<ipython-input-13-4e788b1e0c5a>\", line 1, in <module>\r\n    np.array_equal([1, 2, 3] * u.mm, [1, 2, 3] * u.s)\r\n  File \"<__array_function__ internals>\", line 180, in array_equal\r\n  File \"C:\\Users\\royts\\Kankelborg-Group\\astropy\\astropy\\units\\quantity.py\", line 1844, in __array_function__\r\n    args, kwargs, unit, out = function_helper(*args, **kwargs)\r\n  File \"C:\\Users\\royts\\Kankelborg-Group\\astropy\\astropy\\units\\quantity_helper\\function_helpers.py\", line 566, in array_equal\r\n    args, unit = _quantities2arrays(a1, a2)\r\n  File \"C:\\Users\\royts\\Kankelborg-Group\\astropy\\astropy\\units\\quantity_helper\\function_helpers.py\", line 351, in _quantities2arrays\r\n    arrays = tuple((q._to_own_unit(arg)) for arg in args)\r\n  File \"C:\\Users\\royts\\Kankelborg-Group\\astropy\\astropy\\units\\quantity_helper\\function_helpers.py\", line 351, in <genexpr>\r\n    arrays = tuple((q._to_own_unit(arg)) for arg in args)\r\n  File \"C:\\Users\\royts\\Kankelborg-Group\\astropy\\astropy\\units\\quantity.py\", line 1652, in _to_own_unit\r\n    _value = value.to_value(unit)\r\n  File \"C:\\Users\\royts\\Kankelborg-Group\\astropy\\astropy\\units\\quantity.py\", line 983, in to_value\r\n    value = self._to_value(unit, equivalencies)\r\n  File \"C:\\Users\\royts\\Kankelborg-Group\\astropy\\astropy\\units\\quantity.py\", line 889, in _to_value\r\n    return self.unit.to(\r\n  File \"C:\\Users\\royts\\Kankelborg-Group\\astropy\\astropy\\units\\core.py\", line 1165, in to\r\n    return self._get_converter(Unit(other), equivalencies)(value)\r\n  File \"C:\\Users\\royts\\Kankelborg-Group\\astropy\\astropy\\units\\core.py\", line 1094, in _get_converter\r\n    raise exc\r\n  File \"C:\\Users\\royts\\Kankelborg-Group\\astropy\\astropy\\units\\core.py\", line 1077, in _get_converter\r\n    return self._apply_equivalencies(\r\n  File \"C:\\Users\\royts\\Kankelborg-Group\\astropy\\astropy\\units\\core.py\", line 1054, in _apply_equivalencies\r\n    raise UnitConversionError(f\"{unit_str} and {other_str} are not convertible\")\r\nastropy.units.core.UnitConversionError: 's' (time) and 'mm' (length) are not convertible\r\n```\r\n\r\n### System Details\r\n<!-- Even if you do not think this is necessary, it is useful information for the maintainers.\r\nPlease run the following snippet and paste the output below:\r\nimport platform; print(platform.platform())\r\nimport sys; print(\"Python\", sys.version)\r\nimport numpy; print(\"Numpy\", numpy.__version__)\r\nimport erfa; print(\"pyerfa\", erfa.__version__)\r\nimport astropy; print(\"astropy\", astropy.__version__)\r\nimport scipy; print(\"Scipy\", scipy.__version__)\r\nimport matplotlib; print(\"Matplotlib\", matplotlib.__version__)\r\n-->\r\n```\r\nWindows-10-10.0.19045-SP0\r\nPython 3.10.8 (tags/v3.10.8:aaaf517, Oct 11 2022, 16:50:30) [MSC v.1933 64 bit (AMD64)]\r\nNumpy 1.23.5\r\npyerfa 2.0.0.1\r\nastropy 5.3.dev89+g4989e530b\r\nScipy 1.9.1\r\nMatplotlib 3.6.0\r\n```\r\n\n",
  "hints_text": "Hmm, there certainly is precedent for `np.array_equal` to just return `False` for comparisons of strings and integers., and similarly something like `1*u.m == 1*u.s` returns `False`. So, yes, I guess. It would mean making it a `dispatched_function` and having a `try/except NotImplementedError` around `_quantities2arrays`. My tendency would be not to backport this, as it is a bit of an API change too.\nOk, sounds good, I'll open a PR with your design. Do you think we should do the same with `numpy.array_equiv()`? There is the same behavior with that function as well.\nYes, I agree `np.array_equiv` should behave similarly. Thanks for checking how the functions actually behave!\nNo problem! Since I am developing a duck `Quantity` with my [named_arrays](https://github.com/Kankelborg-Group/named_arrays) package I get to explore every corner case in gory detail.\nExcellent! You'll almost certainly find other problems -- but it will be good for everyone!",
  "created_at": "2022-12-10T03:40:34Z",
  "version": "5.1",
  "FAIL_TO_PASS": "[\"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_array_equal_incompatible_units\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_array_equiv_incompatible_units\"]",
  "PASS_TO_PASS": "[\"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeInformation::test_shape\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeInformation::test_size\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeInformation::test_ndim\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_reshape\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_ravel\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_moveaxis\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_rollaxis\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_swapaxes\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_transpose\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_atleast_1d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_atleast_2d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_atleast_3d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_expand_dims\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_squeeze\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_flip\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_fliplr\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_flipud\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_rot90\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_broadcast_to\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestShapeManipulation::test_broadcast_arrays\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_argmin\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_argmax\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_argsort\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_lexsort\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_searchsorted\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_nonzero\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_argwhere\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_argpartition\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestArgFunctions::test_flatnonzero\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAlongAxis::test_take_along_axis\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAlongAxis::test_put_along_axis\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAlongAxis::test_apply_along_axis[0]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAlongAxis::test_apply_along_axis[1]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAlongAxis::test_apply_over_axes[axes0]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAlongAxis::test_apply_over_axes[axes1]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAlongAxis::test_apply_over_axes[axes2]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestIndicesFrom::test_diag_indices_from\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestIndicesFrom::test_triu_indices_from\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestIndicesFrom::test_tril_indices_from\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRealImag::test_real\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRealImag::test_imag\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestCopyAndCreation::test_copy\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestCopyAndCreation::test_asfarray\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestCopyAndCreation::test_empty_like\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestCopyAndCreation::test_zeros_like\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestCopyAndCreation::test_ones_like\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestCopyAndCreation::test_full_like\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_diag\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_diag_1d_input\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_diagonal\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_diagflat\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_compress\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_extract\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_delete\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_trim_zeros\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_roll\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestAccessingParts::test_take\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSettingParts::test_put\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSettingParts::test_putmask\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSettingParts::test_place\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSettingParts::test_copyto\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSettingParts::test_fill_diagonal\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRepeat::test_tile\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRepeat::test_repeat\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRepeat::test_resize\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_concatenate\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_stack\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_column_stack\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_hstack\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_vstack\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_dstack\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_block\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_append\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_insert\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestConcatenate::test_pad\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSplit::test_split\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSplit::test_array_split\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSplit::test_hsplit\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSplit::test_vsplit\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSplit::test_dsplit\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncReductions::test_amax\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncReductions::test_amin\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncReductions::test_sum\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncReductions::test_cumsum\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncReductions::test_any\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncReductions::test_all\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncReductions::test_prod\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncReductions::test_cumprod\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_ptp\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_around\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_fix\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_angle\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_i0\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_clip\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_sinc\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_where\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_choose\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_select\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_real_if_close\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_tril\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_triu\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_unwrap\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_nan_to_num\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLike::test_nan_to_num_complex\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLikeTests::test_isposinf\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLikeTests::test_isneginf\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLikeTests::test_isreal\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLikeTests::test_iscomplex\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLikeTests::test_isclose\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestUfuncLikeTests::test_allclose_atol_default_unit\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_average\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_mean\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_std\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_var\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_median\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_quantile\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_percentile\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_trace\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_count_nonzero\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_allclose\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_allclose_atol_default_unit\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_allclose_failures\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_array_equal\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_array_equal_nan[False]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_array_equal_nan[True]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestReductionLikeFunctions::test_array_equiv\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanmax\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanmin\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanargmin\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanargmax\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanmean\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanmedian\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nansum\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nancumsum\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanstd\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanvar\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanprod\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nancumprod\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanquantile\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestNanFunctions::test_nanpercentile\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_cross\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_outer\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_inner\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_dot\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_vdot\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_tensordot\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_kron\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_einsum\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestVariousProductFunctions::test_einsum_path\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestIntDiffFunctions::test_trapz\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestIntDiffFunctions::test_diff\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestIntDiffFunctions::test_diff_prepend_append\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestIntDiffFunctions::test_gradient\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestIntDiffFunctions::test_gradient_spacing\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSpaceFunctions::test_linspace\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSpaceFunctions::test_logspace\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSpaceFunctions::test_geomspace\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestInterpolationFunctions::test_interp\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestInterpolationFunctions::test_piecewise\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestBincountDigitize::test_bincount\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestBincountDigitize::test_digitize\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogram\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogram_bin_edges\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogram2d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_histogramdd\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_correlate\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_convolve\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_cov\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestHistogramFunctions::test_corrcoef\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSortFunctions::test_sort\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSortFunctions::test_sort_axis\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSortFunctions::test_sort_complex\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSortFunctions::test_partition\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestStringFunctions::test_array2string\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestStringFunctions::test_array_repr\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestStringFunctions::test_array_str\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestBitAndIndexFunctions::test_packbits\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestBitAndIndexFunctions::test_unpackbits\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestBitAndIndexFunctions::test_unravel_index\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestBitAndIndexFunctions::test_ravel_multi_index\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestBitAndIndexFunctions::test_ix_\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDtypeFunctions::test_common_type\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDtypeFunctions::test_result_type\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDtypeFunctions::test_can_cast\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDtypeFunctions::test_min_scalar_type\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDtypeFunctions::test_iscomplexobj\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDtypeFunctions::test_isrealobj\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestMeshGrid::test_meshgrid\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestMemoryFunctions::test_shares_memory\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestMemoryFunctions::test_may_share_memory\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_unique[kwargs0]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_unique[kwargs1]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_unique[kwargs2]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_unique_more_complex[kwargs0]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_unique_more_complex[kwargs1]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_unique_more_complex[kwargs2]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_intersect1d[kwargs0]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_intersect1d[kwargs1]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_setxor1d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_union1d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_setdiff1d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_in1d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_isin\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestSetOpsFcuntions::test_ediff1d\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDatetimeFunctions::test_busday_count\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDatetimeFunctions::test_busday_offset\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDatetimeFunctions::test_datetime_as_string\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestDatetimeFunctions::test_is_busday\", \"astropy/units/tests/test_quantity_non_ufuncs.py::test_fft_frequencies[fftfreq]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::test_fft_frequencies[rfftfreq]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_fft\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_ifft\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_rfft\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_irfft\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_fft2\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_ifft2\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_rfft2\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_irfft2\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_fftn\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_ifftn\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_rfftn\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_irfftn\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_hfft\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_ihfft\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_fftshift\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFFT::test_ifftshift\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_cond\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_matrix_rank\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_matrix_rank_with_tol\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_matrix_power\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_matrix_inv_power\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_multi_dot\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_inv\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_pinv\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_tensorinv\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_det\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_slogdet\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_solve\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_tensorsolve\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_lstsq\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_norm\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_cholesky\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_eigvals\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestLinAlg::test_eigvalsh\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_structured_to_unstructured\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_unstructured_to_structured\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_arrays_repeat_dtypes\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_arrays[True]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_arrays[False]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_array_nested_structure\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_arrays_flatten_nested_structure\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_arrays_asrecarray\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_arrays_usemask\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_arrays_str[True]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestRecFunctions::test_merge_arrays_str[False]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFunctionHelpersCompleteness::test_no_duplicates[one0-two0]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFunctionHelpersCompleteness::test_no_duplicates[one1-two1]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFunctionHelpersCompleteness::test_no_duplicates[one2-two2]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFunctionHelpersCompleteness::test_no_duplicates[one3-two3]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFunctionHelpersCompleteness::test_no_duplicates[one4-two4]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFunctionHelpersCompleteness::test_no_duplicates[one5-two5]\", \"astropy/units/tests/test_quantity_non_ufuncs.py::TestFunctionHelpersCompleteness::test_ignored_are_untested\"]",
  "environment_setup_commit": "5f74eacbcc7fff707a44d8eb58adaa514cb7dcb5",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.536396",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}