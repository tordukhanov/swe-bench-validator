{
  "repo": "scikit-learn/scikit-learn",
  "instance_id": "scikit-learn__scikit-learn-25694",
  "base_commit": "7b595569b26f4aa65a74a971ef428f4f071f48c4",
  "patch": "diff --git a/sklearn/neural_network/_multilayer_perceptron.py b/sklearn/neural_network/_multilayer_perceptron.py\n--- a/sklearn/neural_network/_multilayer_perceptron.py\n+++ b/sklearn/neural_network/_multilayer_perceptron.py\n@@ -575,7 +575,9 @@ def _fit_stochastic(\n                 )\n \n         # early_stopping in partial_fit doesn't make sense\n-        early_stopping = self.early_stopping and not incremental\n+        if self.early_stopping and incremental:\n+            raise ValueError(\"partial_fit does not support early_stopping=True\")\n+        early_stopping = self.early_stopping\n         if early_stopping:\n             # don't stratify in multilabel classification\n             should_stratify = is_classifier(self) and self.n_outputs_ == 1\n",
  "test_patch": "diff --git a/sklearn/neural_network/tests/test_mlp.py b/sklearn/neural_network/tests/test_mlp.py\n--- a/sklearn/neural_network/tests/test_mlp.py\n+++ b/sklearn/neural_network/tests/test_mlp.py\n@@ -948,3 +948,16 @@ def test_mlp_warm_start_no_convergence(MLPEstimator, solver):\n     with pytest.warns(ConvergenceWarning):\n         model.fit(X_iris, y_iris)\n     assert model.n_iter_ == 20\n+\n+\n+@pytest.mark.parametrize(\"MLPEstimator\", [MLPClassifier, MLPRegressor])\n+def test_mlp_partial_fit_after_fit(MLPEstimator):\n+    \"\"\"Check partial fit does not fail after fit when early_stopping=True.\n+\n+    Non-regression test for gh-25693.\n+    \"\"\"\n+    mlp = MLPEstimator(early_stopping=True, random_state=0).fit(X_iris, y_iris)\n+\n+    msg = \"partial_fit does not support early_stopping=True\"\n+    with pytest.raises(ValueError, match=msg):\n+        mlp.partial_fit(X_iris, y_iris)\n",
  "problem_statement": "MLPRegressor.partial_fit produces an error when early_stopping is True\n### Describe the bug\n\nWIth `sklearn = 1.2.1`, when using `early_stopping = True`, `fit` works fine, but partial fit produces the following error:\r\n\r\nI think this is related to this change: https://github.com/scikit-learn/scikit-learn/pull/24683.\n\n### Steps/Code to Reproduce\n\n```\r\nimport numpy.random\r\nfrom sklearn.neural_network import MLPRegressor\r\n\r\nif __name__ == '__main__':\r\n    x = numpy.random.normal(size=(200, 4))\r\n    y = x[:, 0] * 2 + x[:, 1] * 3 + x[:, 3] + numpy.random.normal(size=(200,))\r\n\r\n    algo = MLPRegressor(early_stopping=True).fit(x, y)\r\n    algo.partial_fit(x, y)\r\n```\n\n### Expected Results\n\nIf early stopping is not supported for partial fit, it should handle this gracefully. If this is a bug - it should be fixed.\n\n### Actual Results\n\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/ilyastolyarov/Repos/new/clpu/examples/usecases/script.py\", line 12, in <module>\r\n    algo.partial_fit(x, y)\r\n  File \"/Users/ilyastolyarov/Repos/new/clpu/.venv/lib/python3.8/site-packages/sklearn/neural_network/_multilayer_perceptron.py\", line 1640, in partial_fit\r\n    return self._fit(X, y, incremental=True)\r\n  File \"/Users/ilyastolyarov/Repos/new/clpu/.venv/lib/python3.8/site-packages/sklearn/neural_network/_multilayer_perceptron.py\", line 471, in _fit\r\n    self._fit_stochastic(\r\n  File \"/Users/ilyastolyarov/Repos/new/clpu/.venv/lib/python3.8/site-packages/sklearn/neural_network/_multilayer_perceptron.py\", line 653, in _fit_stochastic\r\n    self._update_no_improvement_count(early_stopping, X_val, y_val)\r\n  File \"/Users/ilyastolyarov/Repos/new/clpu/.venv/lib/python3.8/site-packages/sklearn/neural_network/_multilayer_perceptron.py\", line 721, in _update_no_improvement_count\r\n    if self.loss_curve_[-1] > self.best_loss_ - self.tol:\r\nTypeError: unsupported operand type(s) for -: 'NoneType' and 'float'\r\n```\n\n### Versions\n\n```shell\nSystem:\r\n    python: 3.8.12 (default, May 16 2022, 17:58:21)  [Clang 13.0.0 (clang-1300.0.29.30)]\r\nexecutable: /Users/ilyastolyarov/Repos/new/clpu/.venv/bin/python\r\n   machine: macOS-11.6-x86_64-i386-64bit\r\nPython dependencies:\r\n      sklearn: 1.2.1\r\n          pip: 22.3.1\r\n   setuptools: 64.0.2\r\n        numpy: 1.23.5\r\n        scipy: 1.9.3\r\n       Cython: 0.29.33\r\n       pandas: 1.5.3\r\n   matplotlib: 3.7.0\r\n       joblib: 1.2.0\r\nthreadpoolctl: 3.1.0\r\nBuilt with OpenMP: True\r\nthreadpoolctl info:\r\n       user_api: blas\r\n   internal_api: openblas\r\n         prefix: libopenblas\r\n       filepath: /Users/ilyastolyarov/Repos/new/clpu/.venv/lib/python3.8/site-packages/numpy/.dylibs/libopenblas64_.0.dylib\r\n        version: 0.3.20\r\nthreading_layer: pthreads\r\n   architecture: Nehalem\r\n    num_threads: 8\r\n       user_api: openmp\r\n   internal_api: openmp\r\n         prefix: libomp\r\n       filepath: /Users/ilyastolyarov/Repos/new/clpu/.venv/lib/python3.8/site-packages/sklearn/.dylibs/libomp.dylib\r\n        version: None\r\n    num_threads: 8\r\n       user_api: blas\r\n   internal_api: openblas\r\n         prefix: libopenblas\r\n       filepath: /Users/ilyastolyarov/Repos/new/clpu/.venv/lib/python3.8/site-packages/scipy/.dylibs/libopenblas.0.dylib\r\n        version: 0.3.18\r\nthreading_layer: pthreads\r\n   architecture: Nehalem\r\n    num_threads: 8\r\n```\n```\n\n",
  "hints_text": "",
  "created_at": "2023-02-24T18:22:16Z",
  "version": "1.3",
  "FAIL_TO_PASS": "[\"sklearn/neural_network/tests/test_mlp.py::test_mlp_partial_fit_after_fit[MLPClassifier]\", \"sklearn/neural_network/tests/test_mlp.py::test_mlp_partial_fit_after_fit[MLPRegressor]\"]",
  "PASS_TO_PASS": "[\"sklearn/neural_network/tests/test_mlp.py::test_alpha\", \"sklearn/neural_network/tests/test_mlp.py::test_fit\", \"sklearn/neural_network/tests/test_mlp.py::test_gradient\", \"sklearn/neural_network/tests/test_mlp.py::test_lbfgs_classification[X0-y0]\", \"sklearn/neural_network/tests/test_mlp.py::test_lbfgs_classification[X1-y1]\", \"sklearn/neural_network/tests/test_mlp.py::test_lbfgs_regression[X0-y0]\", \"sklearn/neural_network/tests/test_mlp.py::test_lbfgs_classification_maxfun[X0-y0]\", \"sklearn/neural_network/tests/test_mlp.py::test_lbfgs_classification_maxfun[X1-y1]\", \"sklearn/neural_network/tests/test_mlp.py::test_lbfgs_regression_maxfun[X0-y0]\", \"sklearn/neural_network/tests/test_mlp.py::test_learning_rate_warmstart\", \"sklearn/neural_network/tests/test_mlp.py::test_multilabel_classification\", \"sklearn/neural_network/tests/test_mlp.py::test_multioutput_regression\", \"sklearn/neural_network/tests/test_mlp.py::test_partial_fit_classes_error\", \"sklearn/neural_network/tests/test_mlp.py::test_partial_fit_classification\", \"sklearn/neural_network/tests/test_mlp.py::test_partial_fit_unseen_classes\", \"sklearn/neural_network/tests/test_mlp.py::test_partial_fit_regression\", \"sklearn/neural_network/tests/test_mlp.py::test_partial_fit_errors\", \"sklearn/neural_network/tests/test_mlp.py::test_nonfinite_params\", \"sklearn/neural_network/tests/test_mlp.py::test_predict_proba_binary\", \"sklearn/neural_network/tests/test_mlp.py::test_predict_proba_multiclass\", \"sklearn/neural_network/tests/test_mlp.py::test_predict_proba_multilabel\", \"sklearn/neural_network/tests/test_mlp.py::test_shuffle\", \"sklearn/neural_network/tests/test_mlp.py::test_sparse_matrices\", \"sklearn/neural_network/tests/test_mlp.py::test_tolerance\", \"sklearn/neural_network/tests/test_mlp.py::test_verbose_sgd\", \"sklearn/neural_network/tests/test_mlp.py::test_early_stopping[MLPClassifier]\", \"sklearn/neural_network/tests/test_mlp.py::test_early_stopping[MLPRegressor]\", \"sklearn/neural_network/tests/test_mlp.py::test_adaptive_learning_rate\", \"sklearn/neural_network/tests/test_mlp.py::test_warm_start\", \"sklearn/neural_network/tests/test_mlp.py::test_warm_start_full_iteration[MLPClassifier]\", \"sklearn/neural_network/tests/test_mlp.py::test_warm_start_full_iteration[MLPRegressor]\", \"sklearn/neural_network/tests/test_mlp.py::test_n_iter_no_change\", \"sklearn/neural_network/tests/test_mlp.py::test_n_iter_no_change_inf\", \"sklearn/neural_network/tests/test_mlp.py::test_early_stopping_stratified\", \"sklearn/neural_network/tests/test_mlp.py::test_mlp_classifier_dtypes_casting\", \"sklearn/neural_network/tests/test_mlp.py::test_mlp_regressor_dtypes_casting\", \"sklearn/neural_network/tests/test_mlp.py::test_mlp_param_dtypes[MLPClassifier-float32]\", \"sklearn/neural_network/tests/test_mlp.py::test_mlp_param_dtypes[MLPClassifier-float64]\", \"sklearn/neural_network/tests/test_mlp.py::test_mlp_param_dtypes[MLPRegressor-float32]\", \"sklearn/neural_network/tests/test_mlp.py::test_mlp_param_dtypes[MLPRegressor-float64]\", \"sklearn/neural_network/tests/test_mlp.py::test_mlp_loading_from_joblib_partial_fit\", \"sklearn/neural_network/tests/test_mlp.py::test_preserve_feature_names[MLPClassifier]\", \"sklearn/neural_network/tests/test_mlp.py::test_preserve_feature_names[MLPRegressor]\", \"sklearn/neural_network/tests/test_mlp.py::test_mlp_warm_start_with_early_stopping[MLPClassifier]\", \"sklearn/neural_network/tests/test_mlp.py::test_mlp_warm_start_with_early_stopping[MLPRegressor]\", \"sklearn/neural_network/tests/test_mlp.py::test_mlp_warm_start_no_convergence[sgd-MLPClassifier]\", \"sklearn/neural_network/tests/test_mlp.py::test_mlp_warm_start_no_convergence[sgd-MLPRegressor]\", \"sklearn/neural_network/tests/test_mlp.py::test_mlp_warm_start_no_convergence[adam-MLPClassifier]\", \"sklearn/neural_network/tests/test_mlp.py::test_mlp_warm_start_no_convergence[adam-MLPRegressor]\", \"sklearn/neural_network/tests/test_mlp.py::test_mlp_warm_start_no_convergence[lbfgs-MLPClassifier]\", \"sklearn/neural_network/tests/test_mlp.py::test_mlp_warm_start_no_convergence[lbfgs-MLPRegressor]\"]",
  "environment_setup_commit": "1e8a5b833d1b58f3ab84099c4582239af854b23a",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.021667",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}