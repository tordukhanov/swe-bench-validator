{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-18908",
  "base_commit": "5b92c4497fcc6f1df4aac23b9c001ff323ffb421",
  "patch": "diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py\n--- a/sympy/printing/pycode.py\n+++ b/sympy/printing/pycode.py\n@@ -970,6 +970,26 @@ def _print_fresnelc(self, expr):\n                 self._module_format(\"scipy.special.fresnel\"),\n                 self._print(expr.args[0]))\n \n+    def _print_airyai(self, expr):\n+        return \"{0}({1})[0]\".format(\n+                self._module_format(\"scipy.special.airy\"),\n+                self._print(expr.args[0]))\n+\n+    def _print_airyaiprime(self, expr):\n+        return \"{0}({1})[1]\".format(\n+                self._module_format(\"scipy.special.airy\"),\n+                self._print(expr.args[0]))\n+\n+    def _print_airybi(self, expr):\n+        return \"{0}({1})[2]\".format(\n+                self._module_format(\"scipy.special.airy\"),\n+                self._print(expr.args[0]))\n+\n+    def _print_airybiprime(self, expr):\n+        return \"{0}({1})[3]\".format(\n+                self._module_format(\"scipy.special.airy\"),\n+                self._print(expr.args[0]))\n+\n \n for k in SciPyPrinter._kf:\n     setattr(SciPyPrinter, '_print_%s' % k, _print_known_func)\n",
  "test_patch": "diff --git a/sympy/printing/tests/test_pycode.py b/sympy/printing/tests/test_pycode.py\n--- a/sympy/printing/tests/test_pycode.py\n+++ b/sympy/printing/tests/test_pycode.py\n@@ -284,3 +284,39 @@ def test_beta():\n \n     prntr = MpmathPrinter()\n     assert prntr.doprint(expr) ==  'mpmath.beta(x, y)'\n+\n+def test_airy():\n+    from sympy import airyai, airybi\n+\n+    expr1 = airyai(x)\n+    expr2 = airybi(x)\n+\n+    prntr = SciPyPrinter()\n+    assert prntr.doprint(expr1) == 'scipy.special.airy(x)[0]'\n+    assert prntr.doprint(expr2) == 'scipy.special.airy(x)[2]'\n+\n+    prntr = NumPyPrinter()\n+    assert prntr.doprint(expr1) == '  # Not supported in Python with NumPy:\\n  # airyai\\nairyai(x)'\n+    assert prntr.doprint(expr2) == '  # Not supported in Python with NumPy:\\n  # airybi\\nairybi(x)'\n+\n+    prntr = PythonCodePrinter()\n+    assert prntr.doprint(expr1) == '  # Not supported in Python:\\n  # airyai\\nairyai(x)'\n+    assert prntr.doprint(expr2) == '  # Not supported in Python:\\n  # airybi\\nairybi(x)'\n+\n+def test_airy_prime():\n+    from sympy import airyaiprime, airybiprime\n+\n+    expr1 = airyaiprime(x)\n+    expr2 = airybiprime(x)\n+\n+    prntr = SciPyPrinter()\n+    assert prntr.doprint(expr1) == 'scipy.special.airy(x)[1]'\n+    assert prntr.doprint(expr2) == 'scipy.special.airy(x)[3]'\n+\n+    prntr = NumPyPrinter()\n+    assert prntr.doprint(expr1) == '  # Not supported in Python with NumPy:\\n  # airyaiprime\\nairyaiprime(x)'\n+    assert prntr.doprint(expr2) == '  # Not supported in Python with NumPy:\\n  # airybiprime\\nairybiprime(x)'\n+\n+    prntr = PythonCodePrinter()\n+    assert prntr.doprint(expr1) == '  # Not supported in Python:\\n  # airyaiprime\\nairyaiprime(x)'\n+    assert prntr.doprint(expr2) == '  # Not supported in Python:\\n  # airybiprime\\nairybiprime(x)'\n",
  "problem_statement": "Add more SciPy functions to code printer\nHere is a list of special functions supported in SciPy: https://docs.scipy.org/doc/scipy/reference/special.html\r\n\r\nMany of them are not supported in the SciPyPrinter and should be added.\n",
  "hints_text": "For each we also need to make sure to check that the functions are defined in the same way. Sometimes one function will be normalized and the other won't, or the argument order may be different. \nIt also makes sense both to test the text output and the function of the lambdified version (numerical results). See e.g. #17394 for an example of what the code may look like (note that there is a dictionary if it is just a matter of function names and the arguments are in the same direction etc), and what tests may look like, both using `print` and `lambdify`.\nI would like to work on this issue, please guide me through this!\nI would like to work on this issue\n@mitanshu001 you can use my PR as a tutorial :) Plus I haven't had time to add tests yet, but I'll do it soon.\nYou should take a look at `pycode.py` and `SciPyPrinter`.\nCan I work on this issue?\ni would like to work on it . Though i am completely beginner i believe trying is better than doing nothing.\r\ncan somebody guide me ?  and what does module_format implies ? i see it a lot of time as self._module_format('scipy.sparse.coo_matrix')\nYou should look for the definition of the function https://github.com/sympy/sympy/blob/9fa2d4aa4683d24937f42d96f7fba4333ee6067a/sympy/printing/pycode.py#L122\r\n\r\nIt looks like it is related to a printer setting which controls whether it is printed as scipy.sparse.coo_matrix or just coo_matrix.\nAs I mentioned, I believe that [the PR I've done](https://github.com/sympy/sympy/pull/18185/files) is pretty much self-explanatory in terms of what you need to do.\n<!--\n/* Font Definitions */\n@font-face\n\t{font-family:Mangal;\n\tpanose-1:2 4 5 3 5 2 3 3 2 2;}\n@font-face\n\t{font-family:\"Cambria Math\";\n\tpanose-1:2 4 5 3 5 4 6 3 2 4;}\n@font-face\n\t{font-family:Calibri;\n\tpanose-1:2 15 5 2 2 2 4 3 2 4;}\n@font-face\n\t{font-family:\"Calibri Light\";\n\tpanose-1:2 15 3 2 2 2 4 3 2 4;}\n/* Style Definitions */\np.MsoNormal, li.MsoNormal, div.MsoNormal\n\t{margin:0cm;\n\tmargin-bottom:.0001pt;\n\tfont-size:11.0pt;\n\tfont-family:\"Calibri\",sans-serif;}\na:link, span.MsoHyperlink\n\t{mso-style-priority:99;\n\tcolor:blue;\n\ttext-decoration:underline;}\n.MsoChpDefault\n\t{mso-style-type:export-only;}\n@page WordSection1\n\t{size:612.0pt 792.0pt;\n\tmargin:72.0pt 72.0pt 72.0pt 72.0pt;}\ndiv.WordSection1\n\t{page:WordSection1;}\n-->Thank you for guiding me . shubham From: Michal GrňoSent: 07 March 2020 03:20 AMTo: sympy/sympyCc: SHUBHAM KHANTWAL; CommentSubject: Re: [sympy/sympy] Add more SciPy functions to code printer (#17396) As I mentioned, I believe that the PR I've done is pretty much self-explanatory in terms of what you need to do.—You are receiving this because you commented.Reply to this email directly, view it on GitHub, or unsubscribe. ",
  "created_at": "2020-03-18T23:58:55Z",
  "version": "1.6",
  "FAIL_TO_PASS": "[\"test_airy\"]",
  "PASS_TO_PASS": "[\"test_PythonCodePrinter\", \"test_PythonCodePrinter_standard\", \"test_MpmathPrinter\", \"test_NumPyPrinter\", \"test_SciPyPrinter\", \"test_pycode_reserved_words\", \"test_sqrt\", \"test_printmethod\", \"test_codegen_ast_nodes\", \"test_issue_14283\", \"test_NumPyPrinter_print_seq\", \"test_issue_16535_16536\", \"test_fresnel_integrals\", \"test_beta\"]",
  "environment_setup_commit": "28b41c73c12b70d6ad9f6e45109a80649c4456da",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.128507",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}