{
  "repo": "pytest-dev/pytest",
  "instance_id": "pytest-dev__pytest-9066",
  "base_commit": "20863c3a0c92501e7f55d747a33797f23e56c818",
  "patch": "diff --git a/src/_pytest/nodes.py b/src/_pytest/nodes.py\n--- a/src/_pytest/nodes.py\n+++ b/src/_pytest/nodes.py\n@@ -123,7 +123,7 @@ def __call__(self, *k, **kw):\n             \"See \"\n             \"https://docs.pytest.org/en/stable/deprecations.html#node-construction-changed-to-node-from-parent\"\n             \" for more details.\"\n-        ).format(name=self.__name__)\n+        ).format(name=f\"{self.__module__}.{self.__name__}\")\n         fail(msg, pytrace=False)\n \n     def _create(self, *k, **kw):\n",
  "test_patch": "diff --git a/testing/test_nodes.py b/testing/test_nodes.py\n--- a/testing/test_nodes.py\n+++ b/testing/test_nodes.py\n@@ -6,6 +6,7 @@\n import pytest\n from _pytest import nodes\n from _pytest.compat import legacy_path\n+from _pytest.outcomes import OutcomeException\n from _pytest.pytester import Pytester\n from _pytest.warning_types import PytestWarning\n \n@@ -40,6 +41,19 @@ def test_node_from_parent_disallowed_arguments() -> None:\n         nodes.Node.from_parent(None, config=None)  # type: ignore[arg-type]\n \n \n+def test_node_direct_construction_deprecated() -> None:\n+    with pytest.raises(\n+        OutcomeException,\n+        match=(\n+            \"Direct construction of _pytest.nodes.Node has been deprecated, please \"\n+            \"use _pytest.nodes.Node.from_parent.\\nSee \"\n+            \"https://docs.pytest.org/en/stable/deprecations.html#node-construction-changed-to-node-from-parent\"\n+            \" for more details.\"\n+        ),\n+    ):\n+        nodes.Node(None, session=None)  # type: ignore[arg-type]\n+\n+\n def test_subclassing_both_item_and_collector_deprecated(\n     request, tmp_path: Path\n ) -> None:\n",
  "problem_statement": "Show full qualified name on direct Node construction warning\nIn https://github.com/ESSS/pytest-regressions/issues/64, running pytest with many plugins installed gives this error:\r\n\r\n```\r\nDirect construction of SpecModule has been deprecated, please use SpecModule.from_parent.\r\nSee https://docs.pytest.org/en/stable/deprecations.html#node-construction-changed-to-node-from-parent for more details.\r\n```\r\n\r\nAnd is not clear which plugin is the culprit, I had to look at the source code of `pytest-relaxed` to figure it out.\r\n\r\nWe might consider at least show the full qualified name of the offending class in that message, so users would see `pytest_relaxed.plugin.SpecModule`, which is a nudge in the right direction.\r\n\r\n_Originally posted by @nicoddemus in https://github.com/pytest-dev/pytest/issues/8993#issuecomment-895130488_\n",
  "hints_text": "Hi! I would like to work in this issue :)\r\n\n@eamanu thanks for volunteering! Please go ahead and let us know if you encounter any problems. üëç \nHi can I work on this as well ? \nHi, @wassafshahzad sure!! I looked into the pytest code to identify where that message is write. That is here [0], I spend several time trying to found where the name  is \"loaded\" into a class that use the NodeMeta. But I cannot found nothing yet. So, I'm trying to access to the Node class [1]  variables from NodeMeta, and I guess that we'll need to use  `inspect` to get the \"path\" to the bad initialize class. \r\n\r\n[0] https://github.com/pytest-dev/pytest/blob/6247a956010855f227181ba6167c89bb500e9480/src/_pytest/nodes.py#L122\r\n[1] https://github.com/pytest-dev/pytest/blob/6247a956010855f227181ba6167c89bb500e9480/src/_pytest/nodes.py#L146\nHi @eamanu @wassafshahzad,\r\n\r\nClasses have a `__module__` attribute which contain exactly the string we need:\r\n\r\n```python\r\n>>> from _pytest.nodes import File\r\n>>> File.__module__\r\n'_pytest.nodes'\r\n``` \r\n\r\nSo unless I'm missing something it is just a matter of changing:\r\n\r\nhttps://github.com/pytest-dev/pytest/blob/6247a956010855f227181ba6167c89bb500e9480/src/_pytest/nodes.py#L126\r\n\r\nTo:\r\n\r\n```python\r\n).format(name=f\"{self.__module__}.{self.__name__}\")\r\n```\n> Hi @eamanu @wassafshahzad,\r\n> \r\n> Classes have a `__module__` attribute which contain exactly the string we need:\r\n> \r\n> ```python\r\n> >>> from _pytest.nodes import File\r\n> >>> File.__module__\r\n> '_pytest.nodes'\r\n> ```\r\n> \r\n> So unless I'm missing something it is just a matter of changing:\r\n> \r\n> https://github.com/pytest-dev/pytest/blob/6247a956010855f227181ba6167c89bb500e9480/src/_pytest/nodes.py#L126\r\n> \r\n> To:\r\n> \r\n> ```python\r\n> ).format(name=f\"{self.__module__}.{self.__name__}\")\r\n> ```\r\n\r\nso should we create a PR with this change ? \nYes pretty much. üòÅ \r\n\r\nMake sure to add/update an existing test for the new behavior too.",
  "created_at": "2021-09-01T19:16:29Z",
  "version": "7.0",
  "FAIL_TO_PASS": "[\"testing/test_nodes.py::test_node_direct_construction_deprecated\"]",
  "PASS_TO_PASS": "[\"testing/test_nodes.py::test_iterparentnodeids[-expected0]\", \"testing/test_nodes.py::test_iterparentnodeids[a-expected1]\", \"testing/test_nodes.py::test_iterparentnodeids[aa/b-expected2]\", \"testing/test_nodes.py::test_iterparentnodeids[a/b/c-expected3]\", \"testing/test_nodes.py::test_iterparentnodeids[a/bbb/c::D-expected4]\", \"testing/test_nodes.py::test_iterparentnodeids[a/b/c::D::eee-expected5]\", \"testing/test_nodes.py::test_iterparentnodeids[::xx-expected6]\", \"testing/test_nodes.py::test_iterparentnodeids[a/b/c::D/d::e-expected7]\", \"testing/test_nodes.py::test_iterparentnodeids[a/b::D:e:f::g-expected8]\", \"testing/test_nodes.py::test_iterparentnodeids[a/b::c/d::e[/test]-expected9]\", \"testing/test_nodes.py::test_node_from_parent_disallowed_arguments\", \"testing/test_nodes.py::test_subclassing_both_item_and_collector_deprecated\", \"testing/test_nodes.py::test__check_initialpaths_for_relpath\", \"testing/test_nodes.py::test_node_warn_is_no_longer_only_pytest_warnings[DeprecationWarning-deprecated]\", \"testing/test_nodes.py::test_node_warn_is_no_longer_only_pytest_warnings[PytestWarning-pytest]\", \"testing/test_nodes.py::test_node_warning_enforces_warning_types\", \"testing/test_nodes.py::test_failure_with_changed_cwd\"]",
  "environment_setup_commit": "e2ee3144ed6e241dea8d96215fcdca18b3892551",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.945694",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}