{
  "repo": "sympy/sympy",
  "instance_id": "sympy__sympy-17251",
  "base_commit": "8ca4a683d58ac1f61cfd2e4dacf7f58b9c0fefab",
  "patch": "diff --git a/sympy/functions/elementary/exponential.py b/sympy/functions/elementary/exponential.py\n--- a/sympy/functions/elementary/exponential.py\n+++ b/sympy/functions/elementary/exponential.py\n@@ -250,18 +250,23 @@ def eval(cls, arg):\n         elif isinstance(arg, SetExpr):\n             return arg._eval_func(cls)\n         elif arg.is_Mul:\n-            if arg.is_number or arg.is_Symbol:\n-                coeff = arg.coeff(S.Pi*S.ImaginaryUnit)\n-                if coeff:\n-                    if ask(Q.integer(2*coeff)):\n-                        if ask(Q.even(coeff)):\n-                            return S.One\n-                        elif ask(Q.odd(coeff)):\n-                            return S.NegativeOne\n-                        elif ask(Q.even(coeff + S.Half)):\n-                            return -S.ImaginaryUnit\n-                        elif ask(Q.odd(coeff + S.Half)):\n-                            return S.ImaginaryUnit\n+            coeff = arg.as_coefficient(S.Pi*S.ImaginaryUnit)\n+            if coeff:\n+                if (2*coeff).is_integer:\n+                    if coeff.is_even:\n+                        return S.One\n+                    elif coeff.is_odd:\n+                        return S.NegativeOne\n+                    elif (coeff + S.Half).is_even:\n+                        return -S.ImaginaryUnit\n+                    elif (coeff + S.Half).is_odd:\n+                        return S.ImaginaryUnit\n+                elif coeff.is_Rational:\n+                    ncoeff = coeff % 2 # restrict to [0, 2pi)\n+                    if ncoeff > 1: # restrict to (-pi, pi]\n+                        ncoeff -= 2\n+                    if ncoeff != coeff:\n+                        return cls(ncoeff*S.Pi*S.ImaginaryUnit)\n \n             # Warning: code in risch.py will be very sensitive to changes\n             # in this (see DifferentialExtension).\n@@ -292,16 +297,21 @@ def eval(cls, arg):\n         elif arg.is_Add:\n             out = []\n             add = []\n+            argchanged = False\n             for a in arg.args:\n                 if a is S.One:\n                     add.append(a)\n                     continue\n                 newa = cls(a)\n                 if isinstance(newa, cls):\n-                    add.append(a)\n+                    if newa.args[0] != a:\n+                        add.append(newa.args[0])\n+                        argchanged = True\n+                    else:\n+                        add.append(a)\n                 else:\n                     out.append(newa)\n-            if out:\n+            if out or argchanged:\n                 return Mul(*out)*cls(Add(*add), evaluate=False)\n \n         elif isinstance(arg, MatrixBase):\ndiff --git a/sympy/physics/matrices.py b/sympy/physics/matrices.py\n--- a/sympy/physics/matrices.py\n+++ b/sympy/physics/matrices.py\n@@ -171,8 +171,8 @@ def mdft(n):\n     >>> mdft(3)\n     Matrix([\n     [sqrt(3)/3,                sqrt(3)/3,                sqrt(3)/3],\n-    [sqrt(3)/3, sqrt(3)*exp(-2*I*pi/3)/3, sqrt(3)*exp(-4*I*pi/3)/3],\n-    [sqrt(3)/3, sqrt(3)*exp(-4*I*pi/3)/3, sqrt(3)*exp(-8*I*pi/3)/3]])\n+    [sqrt(3)/3, sqrt(3)*exp(-2*I*pi/3)/3,  sqrt(3)*exp(2*I*pi/3)/3],\n+    [sqrt(3)/3,  sqrt(3)*exp(2*I*pi/3)/3, sqrt(3)*exp(-2*I*pi/3)/3]])\n     \"\"\"\n     mat = [[None for x in range(n)] for y in range(n)]\n     base = exp(-2*pi*I/n)\n",
  "test_patch": "diff --git a/sympy/functions/elementary/tests/test_exponential.py b/sympy/functions/elementary/tests/test_exponential.py\n--- a/sympy/functions/elementary/tests/test_exponential.py\n+++ b/sympy/functions/elementary/tests/test_exponential.py\n@@ -48,6 +48,25 @@ def test_exp_values():\n     assert exp(oo, evaluate=False).is_finite is False\n \n \n+def test_exp_period():\n+    assert exp(9*I*pi/4) == exp(I*pi/4)\n+    assert exp(46*I*pi/18) == exp(5*I*pi/9)\n+    assert exp(25*I*pi/7) == exp(-3*I*pi/7)\n+    assert exp(-19*I*pi/3) == exp(-I*pi/3)\n+    assert exp(37*I*pi/8) - exp(-11*I*pi/8) == 0\n+    assert exp(-5*I*pi/3) / exp(11*I*pi/5) * exp(148*I*pi/15) == 1\n+\n+    assert exp(2 - 17*I*pi/5) == exp(2 + 3*I*pi/5)\n+    assert exp(log(3) + 29*I*pi/9) == 3 * exp(-7*I*pi/9)\n+\n+    n = Symbol('n', integer=True)\n+    e = Symbol('e', even=True)\n+    assert exp(e*I*pi) == 1\n+    assert exp((e + 1)*I*pi) == -1\n+    assert exp((1 + 4*n)*I*pi/2) == I\n+    assert exp((-1 + 4*n)*I*pi/2) == -I\n+\n+\n def test_exp_log():\n     x = Symbol(\"x\", real=True)\n     assert log(exp(x)) == x\n",
  "problem_statement": "exp doesn't simplify based on its periodicity\nIn current master, `exp` doesn't use its periodicity to automatically reduce its argument, not even for purely imaginary arguments:\r\n```\r\n>>> exp(9*I*pi/4)\r\n 9⋅ⅈ⋅π\r\n ─────\r\n   4\r\nℯ\r\n>>> simplify(exp(9*I*pi/4))\r\n 9⋅ⅈ⋅π\r\n ─────\r\n   4\r\nℯ\r\n>>> a = exp(9*I*pi/4) - exp(I*pi/4); a\r\n   ⅈ⋅π    9⋅ⅈ⋅π\r\n   ───    ─────\r\n    4       4\r\n- ℯ    + ℯ\r\n>>> simplify(a)\r\n            9⋅ⅈ⋅π\r\n            ─────\r\n  4 ____      4\r\n- ╲╱ -1  + ℯ\r\n>>> expand_complex(a)\r\n0\r\n```\n",
  "hints_text": "",
  "created_at": "2019-07-24T14:49:45Z",
  "version": "1.5",
  "FAIL_TO_PASS": "[\"test_exp_period\"]",
  "PASS_TO_PASS": "[\"test_exp_values\", \"test_exp_log\", \"test_exp_expand\", \"test_exp__as_base_exp\", \"test_exp_infinity\", \"test_exp_subs\", \"test_exp_conjugate\", \"test_exp_rewrite\", \"test_exp_leading_term\", \"test_exp_taylor_term\", \"test_exp_MatrixSymbol\", \"test_exp_fdiff\", \"test_log_values\", \"test_log_base\", \"test_log_symbolic\", \"test_exp_assumptions\", \"test_exp_AccumBounds\", \"test_log_assumptions\", \"test_log_hashing\", \"test_log_sign\", \"test_log_expand_complex\", \"test_log_apply_evalf\", \"test_log_expand\", \"test_log_simplify\", \"test_log_AccumBounds\", \"test_lambertw\", \"test_issue_5673\", \"test_log_fdiff\", \"test_log_taylor_term\", \"test_exp_expand_NC\", \"test_as_numer_denom\", \"test_polar\", \"test_log_product\", \"test_issue_8866\"]",
  "environment_setup_commit": "70381f282f2d9d039da860e391fe51649df2779d",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.115021",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}