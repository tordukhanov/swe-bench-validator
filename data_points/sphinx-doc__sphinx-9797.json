{
  "repo": "sphinx-doc/sphinx",
  "instance_id": "sphinx-doc__sphinx-9797",
  "base_commit": "4c91c038b220d07bbdfe0c1680af42fe897f342c",
  "patch": "diff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -866,7 +866,9 @@ def getdoc(obj: Any, attrgetter: Callable = safe_getattr,\n         for basecls in getmro(cls):\n             meth = basecls.__dict__.get(name)\n             if meth and hasattr(meth, '__func__'):\n-                return getdoc(meth.__func__)\n+                doc = getdoc(meth.__func__)\n+                if doc is not None or not allow_inherited:\n+                    return doc\n \n     doc = attrgetter(obj, '__doc__', None)\n     if ispartial(obj) and doc == obj.__class__.__doc__:\n",
  "test_patch": "diff --git a/tests/test_util_inspect.py b/tests/test_util_inspect.py\n--- a/tests/test_util_inspect.py\n+++ b/tests/test_util_inspect.py\n@@ -677,6 +677,25 @@ def func1(a, b, c):\n     assert inspect.unpartial(func3) is func1\n \n \n+def test_getdoc_inherited_classmethod():\n+    class Foo:\n+        @classmethod\n+        def meth(self):\n+            \"\"\"\n+            docstring\n+                indented text\n+            \"\"\"\n+\n+    class Bar(Foo):\n+        @classmethod\n+        def meth(self):\n+            # inherited classmethod\n+            pass\n+\n+    assert inspect.getdoc(Bar.meth, getattr, False, Bar, \"meth\") is None\n+    assert inspect.getdoc(Bar.meth, getattr, True, Bar, \"meth\") == Foo.meth.__doc__\n+\n+\n def test_getdoc_inherited_decorated_method():\n     class Foo:\n         def meth(self):\n",
  "problem_statement": "Overridden classmethod documentation not inherited with autodoc\n### Describe the bug\r\n\r\nThe documentation for a classmethod in a parent class is not inherited by the method re-defined (without documentation) in a child class\r\n\r\n### How to Reproduce\r\n\r\nModule `src/spam.py`:\r\n```python\r\nclass Parent:\r\n    @classmethod\r\n    def method(cls) -> int:\r\n        \"\"\"Return an integer.\"\"\"\r\n        return 17\r\n\r\n\r\nclass Child(Parent):\r\n    @classmethod\r\n    def method(cls):\r\n        return 42\r\n```\r\n\r\nSphinx configuration `docs/conf.py`:\r\n```python\r\nproject = \"spam\"\r\nextensions = [\"sphinx.ext.autodoc\"]\r\n```\r\n\r\nDocumentation index `docs/index.rst`:\r\n```rst\r\nspam\r\n====\r\n\r\n.. automodule:: spam\r\n   :members:\r\n   :undoc-members:\r\n```\r\n\r\nBuild:\r\n```shell\r\nPYTHONPATH=src sphinx-build docs/ build\r\n```\r\n\r\n### Expected behavior\r\n\r\nOverridden classmethod to inherit documentation from parent class\r\n\r\n### Your project\r\n\r\nhttps://github.com/EpicWink/python-swf-typed\r\n\r\n### Screenshots\r\n\r\n![Screenshot from 2021-10-21 20-13-39](https://user-images.githubusercontent.com/25142085/138257992-3e1f06b2-d5b1-4195-bfe8-451e09a4828a.png)\r\n\r\n\r\n### OS\r\n\r\nUbuntu 20.04\r\n\r\n### Python version\r\n\r\n3.8\r\n\r\n### Sphinx version\r\n\r\n4.2.0\r\n\r\n### Sphinx extensions\r\n\r\nsphinx.ext.autodoc\r\n\r\n### Additional context\r\n\r\n`inspect.getdoc(Child.method)` returns the expected value\n",
  "hints_text": "By default, autodoc searches the docstring from the parent class. Please disable `autodoc_inherit_docstrings`.\r\nhttps://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html#confval-autodoc_inherit_docstrings\nSetting `autodoc_inherit_docstrings = False` didn't fix it. As a matter of fact, it (as the name suggests) disabled inheritance of docstrings for all methods, not just classmethods. Also, explicitly setting  `autodoc_inherit_docstrings = True` didn't fix it\r\n\r\nThis to me seems like a bug specific to classmethods\n@tk0miya I don't think this issue is resolved\nOkay, I'll take a look.\nSorry, I misunderstand your report. Reproduced the error on my local.",
  "created_at": "2021-10-29T17:02:29Z",
  "version": "4.3",
  "FAIL_TO_PASS": "[\"tests/test_util_inspect.py::test_getdoc_inherited_classmethod\"]",
  "PASS_TO_PASS": "[\"tests/test_util_inspect.py::test_TypeAliasNamespace\", \"tests/test_util_inspect.py::test_signature\", \"tests/test_util_inspect.py::test_signature_partial\", \"tests/test_util_inspect.py::test_signature_methods\", \"tests/test_util_inspect.py::test_signature_partialmethod\", \"tests/test_util_inspect.py::test_signature_annotations\", \"tests/test_util_inspect.py::test_signature_annotations_py38\", \"tests/test_util_inspect.py::test_signature_from_str_basic\", \"tests/test_util_inspect.py::test_signature_from_str_default_values\", \"tests/test_util_inspect.py::test_signature_from_str_annotations\", \"tests/test_util_inspect.py::test_signature_from_str_complex_annotations\", \"tests/test_util_inspect.py::test_signature_from_str_kwonly_args\", \"tests/test_util_inspect.py::test_signature_from_str_positionaly_only_args\", \"tests/test_util_inspect.py::test_signature_from_str_invalid\", \"tests/test_util_inspect.py::test_signature_from_ast\", \"tests/test_util_inspect.py::test_safe_getattr_with_default\", \"tests/test_util_inspect.py::test_safe_getattr_with_exception\", \"tests/test_util_inspect.py::test_safe_getattr_with_property_exception\", \"tests/test_util_inspect.py::test_safe_getattr_with___dict___override\", \"tests/test_util_inspect.py::test_dictionary_sorting\", \"tests/test_util_inspect.py::test_set_sorting\", \"tests/test_util_inspect.py::test_set_sorting_fallback\", \"tests/test_util_inspect.py::test_frozenset_sorting\", \"tests/test_util_inspect.py::test_frozenset_sorting_fallback\", \"tests/test_util_inspect.py::test_dict_customtype\", \"tests/test_util_inspect.py::test_object_description_enum\", \"tests/test_util_inspect.py::test_getslots\", \"tests/test_util_inspect.py::test_isclassmethod\", \"tests/test_util_inspect.py::test_isstaticmethod\", \"tests/test_util_inspect.py::test_iscoroutinefunction\", \"tests/test_util_inspect.py::test_isfunction\", \"tests/test_util_inspect.py::test_isbuiltin\", \"tests/test_util_inspect.py::test_isdescriptor\", \"tests/test_util_inspect.py::test_isattributedescriptor\", \"tests/test_util_inspect.py::test_isproperty\", \"tests/test_util_inspect.py::test_isgenericalias\", \"tests/test_util_inspect.py::test_unpartial\", \"tests/test_util_inspect.py::test_getdoc_inherited_decorated_method\", \"tests/test_util_inspect.py::test_is_builtin_class_method\"]",
  "environment_setup_commit": "6c6cc8a6f50b18331cb818160d168d7bb9c03e55",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:31.069346",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}