{
  "repo": "django/django",
  "instance_id": "django__django-14861",
  "base_commit": "1bb8200f2f900a0cb200adfb0b0e11ec6f69fdd2",
  "patch": "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py\n--- a/django/contrib/admin/options.py\n+++ b/django/contrib/admin/options.py\n@@ -1585,12 +1585,16 @@ def _changeform_view(self, request, object_id, form_url, extra_context):\n         )\n         if request.method == 'POST':\n             form = ModelForm(request.POST, request.FILES, instance=obj)\n+            formsets, inline_instances = self._create_formsets(\n+                request,\n+                form.instance if add else obj,\n+                change=not add,\n+            )\n             form_validated = form.is_valid()\n             if form_validated:\n                 new_object = self.save_form(request, form, change=not add)\n             else:\n                 new_object = form.instance\n-            formsets, inline_instances = self._create_formsets(request, new_object, change=not add)\n             if all_valid(formsets) and form_validated:\n                 self.save_model(request, new_object, form, not add)\n                 self.save_related(request, form, formsets, not add)\n",
  "test_patch": "diff --git a/tests/admin_inlines/admin.py b/tests/admin_inlines/admin.py\n--- a/tests/admin_inlines/admin.py\n+++ b/tests/admin_inlines/admin.py\n@@ -11,8 +11,9 @@\n     Inner4Tabular, Inner5Stacked, Inner5Tabular, NonAutoPKBook,\n     NonAutoPKBookChild, Novel, NovelReadonlyChapter, OutfitItem,\n     ParentModelWithCustomPk, Person, Poll, Profile, ProfileCollection,\n-    Question, ReadOnlyInline, ShoppingWeakness, Sighting, SomeChildModel,\n-    SomeParentModel, SottoCapo, Teacher, Title, TitleCollection,\n+    Question, ReadOnlyInline, ShoppingWeakness, ShowInlineChild,\n+    ShowInlineParent, Sighting, SomeChildModel, SomeParentModel, SottoCapo,\n+    Teacher, Title, TitleCollection,\n )\n \n site = admin.AdminSite(name=\"admin\")\n@@ -371,6 +372,17 @@ class ChildHiddenFieldOnSingleLineStackedInline(admin.StackedInline):\n     fields = ('name', 'position')\n \n \n+class ShowInlineChildInline(admin.StackedInline):\n+    model = ShowInlineChild\n+\n+\n+class ShowInlineParentAdmin(admin.ModelAdmin):\n+    def get_inlines(self, request, obj):\n+        if obj is not None and obj.show_inlines:\n+            return [ShowInlineChildInline]\n+        return []\n+\n+\n site.register(TitleCollection, inlines=[TitleInline])\n # Test bug #12561 and #12778\n # only ModelAdmin media\n@@ -402,6 +414,7 @@ class ChildHiddenFieldOnSingleLineStackedInline(admin.StackedInline):\n site.register(CourseProxy, ClassAdminStackedVertical)\n site.register(CourseProxy1, ClassAdminTabularVertical)\n site.register(CourseProxy2, ClassAdminTabularHorizontal)\n+site.register(ShowInlineParent, ShowInlineParentAdmin)\n # Used to test hidden fields in tabular and stacked inlines.\n site2 = admin.AdminSite(name='tabular_inline_hidden_field_admin')\n site2.register(SomeParentModel, inlines=[ChildHiddenFieldTabularInline])\ndiff --git a/tests/admin_inlines/models.py b/tests/admin_inlines/models.py\n--- a/tests/admin_inlines/models.py\n+++ b/tests/admin_inlines/models.py\n@@ -327,6 +327,12 @@ class Meta:\n \n \n # Other models\n+class ShowInlineParent(models.Model):\n+    show_inlines = models.BooleanField(default=False)\n+\n+\n+class ShowInlineChild(models.Model):\n+    parent = models.ForeignKey(ShowInlineParent, on_delete=models.CASCADE)\n \n \n class ProfileCollection(models.Model):\ndiff --git a/tests/admin_inlines/tests.py b/tests/admin_inlines/tests.py\n--- a/tests/admin_inlines/tests.py\n+++ b/tests/admin_inlines/tests.py\n@@ -12,8 +12,8 @@\n     ChildModel1, ChildModel2, Fashionista, FootNote, Holder, Holder2, Holder3,\n     Holder4, Inner, Inner2, Inner3, Inner4Stacked, Inner4Tabular, Novel,\n     OutfitItem, Parent, ParentModelWithCustomPk, Person, Poll, Profile,\n-    ProfileCollection, Question, Sighting, SomeChildModel, SomeParentModel,\n-    Teacher, VerboseNamePluralProfile, VerboseNameProfile,\n+    ProfileCollection, Question, ShowInlineParent, Sighting, SomeChildModel,\n+    SomeParentModel, Teacher, VerboseNamePluralProfile, VerboseNameProfile,\n )\n \n INLINE_CHANGELINK_HTML = 'class=\"inlinechangelink\">Change</a>'\n@@ -618,6 +618,21 @@ def test_inlines_singular_heading_one_to_one(self):\n         self.assertContains(response, '<h2>Author</h2>', html=True)  # Tabular.\n         self.assertContains(response, '<h2>Fashionista</h2>', html=True)  # Stacked.\n \n+    def test_inlines_based_on_model_state(self):\n+        parent = ShowInlineParent.objects.create(show_inlines=False)\n+        data = {\n+            'show_inlines': 'on',\n+            '_save': 'Save',\n+        }\n+        change_url = reverse(\n+            'admin:admin_inlines_showinlineparent_change',\n+            args=(parent.id,),\n+        )\n+        response = self.client.post(change_url, data)\n+        self.assertEqual(response.status_code, 302)\n+        parent.refresh_from_db()\n+        self.assertIs(parent.show_inlines, True)\n+\n \n @override_settings(ROOT_URLCONF='admin_inlines.urls')\n class TestInlineMedia(TestDataMixin, TestCase):\n",
  "problem_statement": "Conditionally changing ModelAdmin inlines based on object's field breaks when changing object and new inlines should appear.\nDescription\n\t\nMinimal example:\n# models.py\nclass Parent(models.Model):\n\tshow_inlines = models.BooleanField(default=False)\nclass Child(models.Model):\n\tparent = models.ForeignKey(Parent, on_delete=models.CASCADE)\n# admin.py\nclass ChildInline(admin.StackedInline):\n\tmodel = Child\n@admin.register(Parent)\nclass ParentAdmin(admin.ModelAdmin):\n\tdef get_inlines(self, request, obj):\n\t\tif obj is not None and obj.show_inlines:\n\t\t\treturn [ChildInline]\n\t\treturn []\nCreate Parent objects in either initial state and it works as you'd expect, where ChildInline is rendered when show_inlines is True.\nWhen show_inlines is True, you can also set it to False from the admin site, and the ChildInline disappears as expected.\nBut when show_inlines is False, you cannot re-enable it. Saving the object fails due to a validation error in the new ChildInline that didn't exist before saving:\n(Hidden field TOTAL_FORMS) This field is required.\n(Hidden field INITIAL_FORMS) This field is required.\nManagementForm data is missing or has been tampered with. Missing fields: child_set-TOTAL_FORMS, child_set-INITIAL_FORMS. You may need to file a bug report if the issue persists.\n",
  "hints_text": "Thanks for the report. I was able to fix this issue by passing an old instance to the get_inlines() ðŸ¤”: diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py index 1e5fab917e..7b2b893c10 100644 --- a/django/contrib/admin/options.py +++ b/django/contrib/admin/options.py @@ -1585,12 +1585,16 @@ class ModelAdmin(BaseModelAdmin): ) if request.method == 'POST': form = ModelForm(request.POST, request.FILES, instance=obj) + formsets, inline_instances = self._create_formsets( + request, + form.instance if add else obj, + change=not add, + ) form_validated = form.is_valid() if form_validated: new_object = self.save_form(request, form, change=not add) else: new_object = form.instance - formsets, inline_instances = self._create_formsets(request, new_object, change=not add) if all_valid(formsets) and form_validated: self.save_model(request, new_object, form, not add) self.save_related(request, form, formsets, not add)",
  "created_at": "2021-09-16T08:35:47Z",
  "version": "4.1",
  "FAIL_TO_PASS": "[\"test_inlines_based_on_model_state (admin_inlines.tests.TestInline)\"]",
  "PASS_TO_PASS": "[\"Regression for #9362\", \"test_deleting_inline_with_protected_delete_does_not_validate (admin_inlines.tests.TestInlineProtectedOnDelete)\", \"test_all_inline_media (admin_inlines.tests.TestInlineMedia)\", \"test_inline_media_only_base (admin_inlines.tests.TestInlineMedia)\", \"test_inline_media_only_inline (admin_inlines.tests.TestInlineMedia)\", \"test_both_verbose_names_inline (admin_inlines.tests.TestVerboseNameInlineForms)\", \"test_verbose_name_inline (admin_inlines.tests.TestVerboseNameInlineForms)\", \"test_verbose_name_plural_inline (admin_inlines.tests.TestVerboseNameInlineForms)\", \"test_add_url_not_allowed (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)\", \"test_extra_inlines_are_not_shown (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)\", \"test_get_to_change_url_is_allowed (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)\", \"test_inline_delete_buttons_are_not_shown (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)\", \"test_inlines_are_rendered_as_read_only (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)\", \"test_main_model_is_rendered_as_read_only (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)\", \"test_post_to_change_url_not_allowed (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)\", \"test_submit_line_shows_only_close_button (admin_inlines.tests.TestReadOnlyChangeViewInlinePermissions)\", \"test_inline_add_fk_add_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_add_fk_noperm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_add_m2m_add_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_add_m2m_noperm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_add_m2m_view_only_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_fk_add_change_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_fk_add_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_fk_all_perms (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_fk_change_del_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_fk_change_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_fk_noperm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_m2m_add_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_m2m_change_perm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_m2m_noperm (admin_inlines.tests.TestInlinePermissions)\", \"test_inline_change_m2m_view_only_perm (admin_inlines.tests.TestInlinePermissions)\", \"Admin inline should invoke local callable when its name is listed in readonly_fields\", \"can_delete should be passed to inlineformset factory.\", \"An object can be created with inlines when it inherits another class.\", \"test_custom_form_tabular_inline_extra_field_label (admin_inlines.tests.TestInline)\", \"A model form with a form field specified (TitleForm.title1) should have\", \"SomeChildModelForm.__init__() overrides the label of a form field.\", \"test_custom_get_extra_form (admin_inlines.tests.TestInline)\", \"test_custom_min_num (admin_inlines.tests.TestInline)\", \"The \\\"View on Site\\\" link is correct for models with a custom primary key\", \"The inlines' model field help texts are displayed when using both the\", \"test_inline_editable_pk (admin_inlines.tests.TestInline)\", \"#18263 -- Make sure hidden fields don't get a column in tabular inlines\", \"test_inline_nonauto_noneditable_inherited_pk (admin_inlines.tests.TestInline)\", \"test_inline_nonauto_noneditable_pk (admin_inlines.tests.TestInline)\", \"test_inline_primary (admin_inlines.tests.TestInline)\", \"test_inlines_plural_heading_foreign_key (admin_inlines.tests.TestInline)\", \"Inlines `show_change_link` for registered models when enabled.\", \"Inlines `show_change_link` disabled for unregistered models.\", \"test_inlines_singular_heading_one_to_one (admin_inlines.tests.TestInline)\", \"The \\\"View on Site\\\" link is correct for locales that use thousand\", \"Autogenerated many-to-many inlines are displayed correctly (#13407)\", \"min_num and extra determine number of forms.\", \"Admin inline `readonly_field` shouldn't invoke parent ModelAdmin callable\", \"test_non_editable_custom_form_tabular_inline_extra_field_label (admin_inlines.tests.TestInline)\", \"Multiple inlines with related_name='+' have correct form prefixes.\", \"Inlines without change permission shows field inputs on add form.\", \"Bug #13174.\", \"test_stacked_inline_edit_form_contains_has_original_class (admin_inlines.tests.TestInline)\", \"Content of hidden field is not visible in stacked inline when user has\", \"Field names are included in the context to output a field-specific\", \"Content of hidden field is not visible in tabular inline when user has\", \"Inlines `show_change_link` disabled by default.\", \"In tabular inlines, when a form has non-field errors, those errors\", \"Tabular inlines use ModelForm.Meta.help_texts and labels for read-only\", \"non_field_errors are displayed correctly, including the correct value\"]",
  "environment_setup_commit": "647480166bfe7532e8c471fef0146e3a17e6c0c9",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.705777",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}