{
  "repo": "matplotlib/matplotlib",
  "instance_id": "matplotlib__matplotlib-21443",
  "base_commit": "d448de31b7deaec8310caaf8bba787e097bf9211",
  "patch": "diff --git a/lib/matplotlib/pyplot.py b/lib/matplotlib/pyplot.py\n--- a/lib/matplotlib/pyplot.py\n+++ b/lib/matplotlib/pyplot.py\n@@ -1059,8 +1059,12 @@ def axes(arg=None, **kwargs):\n         plt.axes((left, bottom, width, height), facecolor='w')\n     \"\"\"\n     fig = gcf()\n+    pos = kwargs.pop('position', None)\n     if arg is None:\n-        return fig.add_subplot(**kwargs)\n+        if pos is None:\n+            return fig.add_subplot(**kwargs)\n+        else:\n+            return fig.add_axes(pos, **kwargs)\n     else:\n         return fig.add_axes(arg, **kwargs)\n \n",
  "test_patch": "diff --git a/lib/matplotlib/tests/test_pyplot.py b/lib/matplotlib/tests/test_pyplot.py\n--- a/lib/matplotlib/tests/test_pyplot.py\n+++ b/lib/matplotlib/tests/test_pyplot.py\n@@ -1,4 +1,5 @@\n import difflib\n+import numpy as np\n import subprocess\n import sys\n from pathlib import Path\n@@ -320,3 +321,17 @@ def test_polar_second_call():\n     ln2, = plt.polar(1.57, .5, 'bo')\n     assert isinstance(ln2, mpl.lines.Line2D)\n     assert ln1.axes is ln2.axes\n+\n+\n+def test_fallback_position():\n+    # check that position kwarg works if rect not supplied\n+    axref = plt.axes([0.2, 0.2, 0.5, 0.5])\n+    axtest = plt.axes(position=[0.2, 0.2, 0.5, 0.5])\n+    np.testing.assert_allclose(axtest.bbox.get_points(),\n+                               axref.bbox.get_points())\n+\n+    # check that position kwarg ignored if rect is supplied\n+    axref = plt.axes([0.2, 0.2, 0.5, 0.5])\n+    axtest = plt.axes([0.2, 0.2, 0.5, 0.5], position=[0.1, 0.1, 0.8, 0.8])\n+    np.testing.assert_allclose(axtest.bbox.get_points(),\n+                               axref.bbox.get_points())\n",
  "problem_statement": "[Bug]: axes(position = [...]) behavior\n### Bug summary\n\nwhen setting axes position with `ax = plt.axes(position = [...])` the position data is not being incorporated.\n\n### Code for reproduction\n\n```python\nimport matplotlib.pyplot as plt\r\n\r\nfig = plt.figure()\r\n\r\npos1 = [0.1, 0.1, 0.3, 0.8]\r\npos2 = [0.5, 0.1, 0.4, 0.6]\r\n\r\nax1 = plt.axes(position = pos1)\r\nax1.plot([0,1], [0, 1], color = 'r', linewidth = 3)\r\n\r\nax2 = plt.axes(position = pos2)\r\nax2.plot([1, 0], [0, 1], color = 'b', linestyle = '--')\n```\n\n\n### Actual outcome\n\nThe two axes completely overlap\r\n![test1](https://user-images.githubusercontent.com/11670408/138557633-5a375766-ac87-4fd0-9305-7c0ca7c5121c.png)\r\n\n\n### Expected outcome\n\nWould expect two separate axes (these were created by adding\r\n`ax1.set_axes(pos1)` and `ax2.set_axes(pos2)`, which should not be necessary)\r\n![test2](https://user-images.githubusercontent.com/11670408/138557661-690221c9-8cb1-4496-8316-72c5bcbe9764.png)\r\n\r\n\n\n### Operating system\n\nWindows\n\n### Matplotlib Version\n\n3.4.2\n\n### Matplotlib Backend\n\nQt5Agg\n\n### Python version\n\n3.8.8\n\n### Jupyter version\n\n_No response_\n\n### Other libraries\n\n_No response_\n\n### Installation\n\nconda\n\n### Conda channel\n\n_No response_\n",
  "hints_text": "Tried updating to 3.4.3 and got the same plotting result.\r\n\r\n```\r\nThe following NEW packages will be INSTALLED:\r\n\r\n  charls             pkgs/main/win-64::charls-2.2.0-h6c2663c_0\r\n  giflib             pkgs/main/win-64::giflib-5.2.1-h62dcd97_0\r\n  imagecodecs        pkgs/main/win-64::imagecodecs-2021.6.8-py38he57d016_1\r\n  lcms2              pkgs/main/win-64::lcms2-2.12-h83e58a3_0\r\n  lerc               pkgs/main/win-64::lerc-2.2.1-hd77b12b_0\r\n  libaec             pkgs/main/win-64::libaec-1.0.4-h33f27b4_1\r\n  libdeflate         pkgs/main/win-64::libdeflate-1.8-h2bbff1b_5\r\n  libwebp            pkgs/main/win-64::libwebp-1.2.0-h2bbff1b_0\r\n  libzopfli          pkgs/main/win-64::libzopfli-1.0.3-ha925a31_0\r\n  zfp                pkgs/main/win-64::zfp-0.5.5-hd77b12b_6\r\n\r\nThe following packages will be UPDATED:\r\n\r\n  certifi                          2021.5.30-py38haa95532_0 --> 2021.10.8-py38haa95532_0\r\n  cryptography                         3.4.7-py38h71e12ea_0 --> 3.4.8-py38h71e12ea_0\r\n  dask                                2021.8.1-pyhd3eb1b0_0 --> 2021.9.1-pyhd3eb1b0_0\r\n  dask-core                           2021.8.1-pyhd3eb1b0_0 --> 2021.9.1-pyhd3eb1b0_0\r\n  decorator                              5.0.9-pyhd3eb1b0_0 --> 5.1.0-pyhd3eb1b0_0\r\n  distributed                       2021.8.1-py38haa95532_0 --> 2021.9.1-py38haa95532_0\r\n  ipykernel                            6.2.0-py38haa95532_1 --> 6.4.1-py38haa95532_1\r\n  ipywidgets                             7.6.3-pyhd3eb1b0_1 --> 7.6.5-pyhd3eb1b0_1\r\n  jupyter_core                         4.7.1-py38haa95532_0 --> 4.8.1-py38haa95532_0\r\n  jupyterlab_server                      2.8.1-pyhd3eb1b0_0 --> 2.8.2-pyhd3eb1b0_0\r\n  libblas                           3.9.0-1_h8933c1f_netlib --> 3.9.0-12_win64_mkl\r\n  libcblas                          3.9.0-5_hd5c7e75_netlib --> 3.9.0-12_win64_mkl\r\n  liblapack                         3.9.0-5_hd5c7e75_netlib --> 3.9.0-12_win64_mkl\r\n  llvmlite                            0.36.0-py38h34b8924_4 --> 0.37.0-py38h23ce68f_1\r\n  matplotlib                           3.4.2-py38haa95532_0 --> 3.4.3-py38haa95532_0\r\n  matplotlib-base                      3.4.2-py38h49ac443_0 --> 3.4.3-py38h49ac443_0\r\n  mkl                  pkgs/main::mkl-2021.3.0-haa95532_524 --> conda-forge::mkl-2021.4.0-h0e2418a_729\r\n  mkl_fft                              1.3.0-py38h277e83a_2 --> 1.3.1-py38h277e83a_0\r\n  networkx                               2.6.2-pyhd3eb1b0_0 --> 2.6.3-pyhd3eb1b0_0\r\n  nltk                                   3.6.2-pyhd3eb1b0_0 --> 3.6.5-pyhd3eb1b0_0\r\n  numba              pkgs/main::numba-0.53.1-py38hf11a4ad_0 --> conda-forge::numba-0.54.1-py38h5858985_0\r\n  openpyxl                               3.0.7-pyhd3eb1b0_0 --> 3.0.9-pyhd3eb1b0_0\r\n  pandas                               1.3.2-py38h6214cd6_0 --> 1.3.3-py38h6214cd6_0\r\n  patsy                                        0.5.1-py38_0 --> 0.5.2-py38haa95532_0\r\n  pillow                               8.3.1-py38h4fa10fc_0 --> 8.4.0-py38hd45dc43_0\r\n  prompt-toolkit                        3.0.17-pyhca03da5_0 --> 3.0.20-pyhd3eb1b0_0\r\n  prompt_toolkit                          3.0.17-hd3eb1b0_0 --> 3.0.20-hd3eb1b0_0\r\n  pycurl                            7.43.0.6-py38h7a1dbc1_0 --> 7.44.1-py38hcd4344a_1\r\n  pytz                                  2021.1-pyhd3eb1b0_0 --> 2021.3-pyhd3eb1b0_0\r\n  qtconsole                              5.1.0-pyhd3eb1b0_0 --> 5.1.1-pyhd3eb1b0_0\r\n  tbb                                     2020.3-h74a9793_0 --> 2021.4.0-h59b6b97_0\r\n  tifffile           pkgs/main/win-64::tifffile-2020.10.1-~ --> pkgs/main/noarch::tifffile-2021.7.2-pyhd3eb1b0_2\r\n  tk                                      8.6.10-he774522_0 --> 8.6.11-h2bbff1b_0\r\n  traitlets                              5.0.5-pyhd3eb1b0_0 --> 5.1.0-pyhd3eb1b0_0\r\n  urllib3                               1.26.6-pyhd3eb1b0_1 --> 1.26.7-pyhd3eb1b0_0\r\n  wincertstore                                   0.2-py38_0 --> 0.2-py38haa95532_2\r\n  zipp                                   3.5.0-pyhd3eb1b0_0 --> 3.6.0-pyhd3eb1b0_0\r\n\r\nThe following packages will be DOWNGRADED:\r\n\r\n  fiona                         1.8.13.post1-py38hd760492_0 --> 1.8.13.post1-py38h758c064_0\r\n  shapely                              1.7.1-py38h210f175_0 --> 1.7.1-py38h06580b3_0\r\n```\nThe [docstring for `plt.axes`](https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.axes.html) reads:\r\n\r\n```\r\nAdd an axes to the current figure and make it the current axes.\r\n\r\nCall signatures::\r\n\r\n    plt.axes()\r\n    plt.axes(rect, projection=None, polar=False, **kwargs)\r\n    plt.axes(ax)\r\n\r\nParameters\r\n----------\r\narg : None or 4-tuple\r\n    The exact behavior of this function depends on the type:\r\n\r\n    - *None*: A new full window axes is added using\r\n      ``subplot(**kwargs)``.\r\n    - 4-tuple of floats *rect* = ``[left, bottom, width, height]``.\r\n      A new axes is added with dimensions *rect* in normalized\r\n      (0, 1) units using `~.Figure.add_axes` on the current figure.\r\n...\r\n```\r\n\r\nThe `mpl.axes.Axes` constructor accepts a `position` parameter and so it shows it up in list of additional keyword arguments, but it's overridden by the handling of  `arg=None` in this interface function.\r\n\r\nAll *you* need to do is change your code to `plt.axes(pos)`, etc.\r\n\r\n`plt.axes()` should probably at least warn that it's ignoring `position=` in this case.\nThank you. Is this a change in behavior? Writing the code as I had it above in Google Colab gives the behavior I had expected.\nIt's definitely a change. Whether it was on purpose or not I'm not quite sure. \nThe default version on Colab is older (3.2.2) and does indeed work differently, but the documentation for the parameters is the same.\nThe changed in 261f7062860d   https://github.com/matplotlib/matplotlib/pull/18564  While I agree that one need not pass `position=rect`, I guess we shouldn't have broken this, and we should definitely not document this as something that is possible.  ",
  "created_at": "2021-10-23T18:27:39Z",
  "version": "3.4",
  "FAIL_TO_PASS": "[\"lib/matplotlib/tests/test_pyplot.py::test_fallback_position\"]",
  "PASS_TO_PASS": "[\"lib/matplotlib/tests/test_pyplot.py::test_pyplot_up_to_date\", \"lib/matplotlib/tests/test_pyplot.py::test_copy_docstring_and_deprecators\", \"lib/matplotlib/tests/test_pyplot.py::test_pyplot_box\", \"lib/matplotlib/tests/test_pyplot.py::test_stackplot_smoke\", \"lib/matplotlib/tests/test_pyplot.py::test_nrows_error\", \"lib/matplotlib/tests/test_pyplot.py::test_ioff\", \"lib/matplotlib/tests/test_pyplot.py::test_ion\", \"lib/matplotlib/tests/test_pyplot.py::test_nested_ion_ioff\", \"lib/matplotlib/tests/test_pyplot.py::test_close\", \"lib/matplotlib/tests/test_pyplot.py::test_subplot_reuse\", \"lib/matplotlib/tests/test_pyplot.py::test_axes_kwargs\", \"lib/matplotlib/tests/test_pyplot.py::test_subplot_replace_projection\", \"lib/matplotlib/tests/test_pyplot.py::test_subplot_kwarg_collision\", \"lib/matplotlib/tests/test_pyplot.py::test_gca_kwargs\", \"lib/matplotlib/tests/test_pyplot.py::test_subplot_projection_reuse\", \"lib/matplotlib/tests/test_pyplot.py::test_subplot_polar_normalization\", \"lib/matplotlib/tests/test_pyplot.py::test_subplot_change_projection\", \"lib/matplotlib/tests/test_pyplot.py::test_polar_second_call\"]",
  "environment_setup_commit": "f93c0a3dcb82feed0262d758626c90d4002685f3",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.792739",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}