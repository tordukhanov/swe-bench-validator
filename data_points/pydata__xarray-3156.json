{
  "repo": "pydata/xarray",
  "instance_id": "pydata__xarray-3156",
  "base_commit": "118f4d996e7711c9aced916e6049af9f28d5ec66",
  "patch": "diff --git a/xarray/core/groupby.py b/xarray/core/groupby.py\n--- a/xarray/core/groupby.py\n+++ b/xarray/core/groupby.py\n@@ -232,6 +232,9 @@ def __init__(self, obj, group, squeeze=False, grouper=None, bins=None,\n                 raise TypeError('`group` must be an xarray.DataArray or the '\n                                 'name of an xarray variable or dimension')\n             group = obj[group]\n+            if len(group) == 0:\n+                raise ValueError(\"{} must not be empty\".format(group.name))\n+\n             if group.name not in obj.coords and group.name in obj.dims:\n                 # DummyGroups should not appear on groupby results\n                 group = _DummyGroup(obj, group.name, group.coords)\n",
  "test_patch": "diff --git a/xarray/tests/test_groupby.py b/xarray/tests/test_groupby.py\n--- a/xarray/tests/test_groupby.py\n+++ b/xarray/tests/test_groupby.py\n@@ -105,6 +105,14 @@ def func(arg1, arg2, arg3=0):\n     assert_identical(expected, actual)\n \n \n+def test_da_groupby_empty():\n+\n+    empty_array = xr.DataArray([], dims='dim')\n+\n+    with pytest.raises(ValueError):\n+        empty_array.groupby('dim')\n+\n+\n def test_da_groupby_quantile():\n \n     array = xr.DataArray([1, 2, 3, 4, 5, 6],\n",
  "problem_statement": "groupby on empty DataArray raises StopIteration\nThis seems similar to #1764 and #2240 so apologies if it is a duplicate, but I have a minimal example where it happens on an empty DataArray:\r\n\r\n#### Code Sample\r\n\r\n```python\r\nimport xarray as xr\r\nxr.DataArray([], dims='dim').groupby('dim').mean()  # raises StopIteration\r\n\r\n```\r\n\r\n#### Problem Description\r\n\r\nUsing groupby on an empty DataArray or Dataset raises `StopIteration`. It should raise a more meaningful error.\r\n\r\nIn particular, I had this issue in a function I was calling inside of a generator, so the StopIteration just broke out of the generator and it took some digging to figure out what was going wrong in my code.\r\n\r\n#### Output of ``xr.show_versions()``\r\n\r\n<details>\r\n\r\nINSTALLED VERSIONS\r\n------------------\r\ncommit: None\r\npython: 3.6.5.final.0\r\npython-bits: 64\r\nOS: Linux\r\nOS-release: 3.10.0-862.14.4.el7.x86_64\r\nmachine: x86_64\r\nprocessor: x86_64\r\nbyteorder: little\r\nLC_ALL: None\r\nLANG: en_US.utf8\r\nLOCALE: en_US.UTF-8\r\n\r\nxarray: 0.10.7\r\npandas: 0.23.0\r\nnumpy: 1.14.3\r\nscipy: 1.1.0\r\nnetCDF4: 1.4.0\r\nh5netcdf: 0.6.1\r\nh5py: 2.7.1\r\nNio: None\r\nzarr: None\r\nbottleneck: 1.2.1\r\ncyordereddict: None\r\ndask: 0.17.5\r\ndistributed: 1.21.8\r\nmatplotlib: 2.2.2\r\ncartopy: None\r\nseaborn: 0.8.1\r\nsetuptools: 39.1.0\r\npip: 10.0.1\r\nconda: None\r\npytest: 3.5.1\r\nIPython: 6.4.0\r\nsphinx: 1.7.4\r\n</details>\r\n\n",
  "hints_text": "Agreed, this is definitely a bug. I'm not sure if we can define meaningful behavior for this case, but at the least we should raise a better error.\n@shoyer I would like to work on this issue (hopefully my first contribution). \r\n\r\nI believe the error should indicate that we cannot groupby an empty group. This would be consistent with the documentation:\r\n\r\n```\r\nDataArray.groupby(group, squeeze: bool = True, restore_coord_dims: Optional[bool] = None)\r\nParameters\r\ngroupstr, DataArray or IndexVariable\r\nArray whose unique values should be used to group this array. If a string, must be the name of a variable contained in this dataset.\r\n````\r\n\r\nFor the groupby class, we can raise an error in case the groupby object instantiation does not specify values to be grouped by. In the case above:\r\n\r\n```\r\nValueError: variable to groupby must not be empty\r\n\r\n```\r\n\r\nIf you find such a solution acceptable, I would create a pull request.\r\n\r\nThank you in advance",
  "created_at": "2019-07-21T11:27:25Z",
  "version": "0.12",
  "FAIL_TO_PASS": "[\"xarray/tests/test_groupby.py::test_da_groupby_empty\"]",
  "PASS_TO_PASS": "[\"xarray/tests/test_groupby.py::test_consolidate_slices\", \"xarray/tests/test_groupby.py::test_multi_index_groupby_apply\", \"xarray/tests/test_groupby.py::test_multi_index_groupby_sum\", \"xarray/tests/test_groupby.py::test_groupby_da_datetime\", \"xarray/tests/test_groupby.py::test_groupby_duplicate_coordinate_labels\", \"xarray/tests/test_groupby.py::test_groupby_input_mutation\", \"xarray/tests/test_groupby.py::test_da_groupby_apply_func_args\", \"xarray/tests/test_groupby.py::test_ds_groupby_apply_func_args\", \"xarray/tests/test_groupby.py::test_da_groupby_quantile\"]",
  "environment_setup_commit": "1c198a191127c601d091213c4b3292a8bb3054e1",
  "_download_metadata": {
    "downloaded_at": "2025-10-07T21:23:30.868658",
    "dataset_name": "swe-bench",
    "split": "test",
    "downloader_version": "0.1.0"
  }
}